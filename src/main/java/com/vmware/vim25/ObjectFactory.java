package com.vmware.vim25;

import com.vmware.vim25.AbandonHciWorkflowRequestType;
import com.vmware.vim25.AbandonHciWorkflowResponse;
import com.vmware.vim25.AbdicateDomOwnershipRequestType;
import com.vmware.vim25.AbdicateDomOwnershipResponse;
import com.vmware.vim25.AbortCustomizationRequestType;
import com.vmware.vim25.AbortCustomizationTaskResponse;
import com.vmware.vim25.AboutInfo;
import com.vmware.vim25.AccountCreatedEvent;
import com.vmware.vim25.AccountRemovedEvent;
import com.vmware.vim25.AccountUpdatedEvent;
import com.vmware.vim25.AcknowledgeAlarmRequestType;
import com.vmware.vim25.AcknowledgeAlarmResponse;
import com.vmware.vim25.AcquireCimServicesTicketRequestType;
import com.vmware.vim25.AcquireCimServicesTicketResponse;
import com.vmware.vim25.AcquireCloneTicketRequestType;
import com.vmware.vim25.AcquireCloneTicketResponse;
import com.vmware.vim25.AcquireCredentialsInGuestRequestType;
import com.vmware.vim25.AcquireCredentialsInGuestResponse;
import com.vmware.vim25.AcquireGenericServiceTicketRequestType;
import com.vmware.vim25.AcquireGenericServiceTicketResponse;
import com.vmware.vim25.AcquireLocalTicketRequestType;
import com.vmware.vim25.AcquireLocalTicketResponse;
import com.vmware.vim25.AcquireMksTicketRequestType;
import com.vmware.vim25.AcquireMksTicketResponse;
import com.vmware.vim25.AcquireTicketRequestType;
import com.vmware.vim25.AcquireTicketResponse;
import com.vmware.vim25.Action;
import com.vmware.vim25.ActiveDirectoryFault;
import com.vmware.vim25.ActiveDirectoryProfile;
import com.vmware.vim25.ActiveVMsBlockingEVC;
import com.vmware.vim25.AddAuthorizationRoleRequestType;
import com.vmware.vim25.AddAuthorizationRoleResponse;
import com.vmware.vim25.AddCustomFieldDefRequestType;
import com.vmware.vim25.AddCustomFieldDefResponse;
import com.vmware.vim25.AddDVPortgroupRequestType;
import com.vmware.vim25.AddDVPortgroupTaskResponse;
import com.vmware.vim25.AddDisksRequestType;
import com.vmware.vim25.AddDisksTaskResponse;
import com.vmware.vim25.AddFilterEntitiesRequestType;
import com.vmware.vim25.AddFilterEntitiesResponse;
import com.vmware.vim25.AddFilterRequestType;
import com.vmware.vim25.AddFilterResponse;
import com.vmware.vim25.AddGuestAliasRequestType;
import com.vmware.vim25.AddGuestAliasResponse;
import com.vmware.vim25.AddHostRequestType;
import com.vmware.vim25.AddHostTaskResponse;
import com.vmware.vim25.AddInternetScsiSendTargetsRequestType;
import com.vmware.vim25.AddInternetScsiSendTargetsResponse;
import com.vmware.vim25.AddInternetScsiStaticTargetsRequestType;
import com.vmware.vim25.AddInternetScsiStaticTargetsResponse;
import com.vmware.vim25.AddKeyRequestType;
import com.vmware.vim25.AddKeyResponse;
import com.vmware.vim25.AddKeysRequestType;
import com.vmware.vim25.AddKeysResponse;
import com.vmware.vim25.AddLicenseRequestType;
import com.vmware.vim25.AddLicenseResponse;
import com.vmware.vim25.AddMonitoredEntitiesRequestType;
import com.vmware.vim25.AddMonitoredEntitiesResponse;
import com.vmware.vim25.AddNetworkResourcePoolRequestType;
import com.vmware.vim25.AddNetworkResourcePoolResponse;
import com.vmware.vim25.AddPortGroupRequestType;
import com.vmware.vim25.AddPortGroupResponse;
import com.vmware.vim25.AddServiceConsoleVirtualNicRequestType;
import com.vmware.vim25.AddServiceConsoleVirtualNicResponse;
import com.vmware.vim25.AddStandaloneHostRequestType;
import com.vmware.vim25.AddStandaloneHostTaskResponse;
import com.vmware.vim25.AddVirtualNicRequestType;
import com.vmware.vim25.AddVirtualNicResponse;
import com.vmware.vim25.AddVirtualSwitchRequestType;
import com.vmware.vim25.AddVirtualSwitchResponse;
import com.vmware.vim25.AdminDisabled;
import com.vmware.vim25.AdminNotDisabled;
import com.vmware.vim25.AdminPasswordNotChangedEvent;
import com.vmware.vim25.AffinityConfigured;
import com.vmware.vim25.AfterStartupTaskScheduler;
import com.vmware.vim25.AgentInstallFailed;
import com.vmware.vim25.AlarmAcknowledgedEvent;
import com.vmware.vim25.AlarmAction;
import com.vmware.vim25.AlarmActionTriggeredEvent;
import com.vmware.vim25.AlarmClearedEvent;
import com.vmware.vim25.AlarmCreatedEvent;
import com.vmware.vim25.AlarmDescription;
import com.vmware.vim25.AlarmEmailCompletedEvent;
import com.vmware.vim25.AlarmEmailFailedEvent;
import com.vmware.vim25.AlarmEvent;
import com.vmware.vim25.AlarmEventArgument;
import com.vmware.vim25.AlarmExpression;
import com.vmware.vim25.AlarmFilterSpec;
import com.vmware.vim25.AlarmInfo;
import com.vmware.vim25.AlarmReconfiguredEvent;
import com.vmware.vim25.AlarmRemovedEvent;
import com.vmware.vim25.AlarmScriptCompleteEvent;
import com.vmware.vim25.AlarmScriptFailedEvent;
import com.vmware.vim25.AlarmSetting;
import com.vmware.vim25.AlarmSnmpCompletedEvent;
import com.vmware.vim25.AlarmSnmpFailedEvent;
import com.vmware.vim25.AlarmSpec;
import com.vmware.vim25.AlarmState;
import com.vmware.vim25.AlarmStatusChangedEvent;
import com.vmware.vim25.AlarmTriggeringAction;
import com.vmware.vim25.AlarmTriggeringActionTransitionSpec;
import com.vmware.vim25.AllVirtualMachinesLicensedEvent;
import com.vmware.vim25.AllocateIpv4AddressRequestType;
import com.vmware.vim25.AllocateIpv4AddressResponse;
import com.vmware.vim25.AllocateIpv6AddressRequestType;
import com.vmware.vim25.AllocateIpv6AddressResponse;
import com.vmware.vim25.AlreadyAuthenticatedSessionEvent;
import com.vmware.vim25.AlreadyBeingManaged;
import com.vmware.vim25.AlreadyConnected;
import com.vmware.vim25.AlreadyExists;
import com.vmware.vim25.AlreadyUpgraded;
import com.vmware.vim25.AndAlarmExpression;
import com.vmware.vim25.AnswerFile;
import com.vmware.vim25.AnswerFileCreateSpec;
import com.vmware.vim25.AnswerFileOptionsCreateSpec;
import com.vmware.vim25.AnswerFileSerializedCreateSpec;
import com.vmware.vim25.AnswerFileStatusError;
import com.vmware.vim25.AnswerFileStatusResult;
import com.vmware.vim25.AnswerFileUpdateFailed;
import com.vmware.vim25.AnswerFileUpdateFailure;
import com.vmware.vim25.AnswerVMRequestType;
import com.vmware.vim25.AnswerVMResponse;
import com.vmware.vim25.ApplicationQuiesceFault;
import com.vmware.vim25.ApplyEntitiesConfigRequestType;
import com.vmware.vim25.ApplyEntitiesConfigTaskResponse;
import com.vmware.vim25.ApplyEvcModeVMRequestType;
import com.vmware.vim25.ApplyEvcModeVMTaskResponse;
import com.vmware.vim25.ApplyHostConfigRequestType;
import com.vmware.vim25.ApplyHostConfigTaskResponse;
import com.vmware.vim25.ApplyHostProfileConfigurationResult;
import com.vmware.vim25.ApplyHostProfileConfigurationSpec;
import com.vmware.vim25.ApplyProfile;
import com.vmware.vim25.ApplyRecommendationRequestType;
import com.vmware.vim25.ApplyRecommendationResponse;
import com.vmware.vim25.ApplyStorageDrsRecommendationRequestType;
import com.vmware.vim25.ApplyStorageDrsRecommendationTaskResponse;
import com.vmware.vim25.ApplyStorageDrsRecommendationToPodRequestType;
import com.vmware.vim25.ApplyStorageDrsRecommendationToPodTaskResponse;
import com.vmware.vim25.ApplyStorageRecommendationResult;
import com.vmware.vim25.AreAlarmActionsEnabledRequestType;
import com.vmware.vim25.AreAlarmActionsEnabledResponse;
import com.vmware.vim25.ArrayOfAlarmAction;
import com.vmware.vim25.ArrayOfAlarmExpression;
import com.vmware.vim25.ArrayOfAlarmState;
import com.vmware.vim25.ArrayOfAlarmTriggeringActionTransitionSpec;
import com.vmware.vim25.ArrayOfAnswerFileStatusError;
import com.vmware.vim25.ArrayOfAnswerFileStatusResult;
import com.vmware.vim25.ArrayOfAnswerFileUpdateFailure;
import com.vmware.vim25.ArrayOfAnyType;
import com.vmware.vim25.ArrayOfAnyURI;
import com.vmware.vim25.ArrayOfApplyHostProfileConfigurationResult;
import com.vmware.vim25.ArrayOfApplyHostProfileConfigurationSpec;
import com.vmware.vim25.ArrayOfApplyProfile;
import com.vmware.vim25.ArrayOfAuthorizationPrivilege;
import com.vmware.vim25.ArrayOfAuthorizationRole;
import com.vmware.vim25.ArrayOfAutoStartPowerInfo;
import com.vmware.vim25.ArrayOfBase64Binary;
import com.vmware.vim25.ArrayOfBoolean;
import com.vmware.vim25.ArrayOfByte;
import com.vmware.vim25.ArrayOfChangesInfoEventArgument;
import com.vmware.vim25.ArrayOfCheckResult;
import com.vmware.vim25.ArrayOfClusterAction;
import com.vmware.vim25.ArrayOfClusterActionHistory;
import com.vmware.vim25.ArrayOfClusterAttemptedVmInfo;
import com.vmware.vim25.ArrayOfClusterComputeResourceDVSSetting;
import com.vmware.vim25.ArrayOfClusterComputeResourceDVSSettingDVPortgroupToServiceMapping;
import com.vmware.vim25.ArrayOfClusterComputeResourceDvsProfile;
import com.vmware.vim25.ArrayOfClusterComputeResourceDvsProfileDVPortgroupSpecToServiceMapping;
import com.vmware.vim25.ArrayOfClusterComputeResourceHostConfigurationInput;
import com.vmware.vim25.ArrayOfClusterComputeResourceHostVmkNicInfo;
import com.vmware.vim25.ArrayOfClusterComputeResourceValidationResultBase;
import com.vmware.vim25.ArrayOfClusterDasAamNodeState;
import com.vmware.vim25.ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots;
import com.vmware.vim25.ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots;
import com.vmware.vim25.ArrayOfClusterDasVmConfigInfo;
import com.vmware.vim25.ArrayOfClusterDasVmConfigSpec;
import com.vmware.vim25.ArrayOfClusterDpmHostConfigInfo;
import com.vmware.vim25.ArrayOfClusterDpmHostConfigSpec;
import com.vmware.vim25.ArrayOfClusterDrsFaults;
import com.vmware.vim25.ArrayOfClusterDrsFaultsFaultsByVm;
import com.vmware.vim25.ArrayOfClusterDrsMigration;
import com.vmware.vim25.ArrayOfClusterDrsRecommendation;
import com.vmware.vim25.ArrayOfClusterDrsVmConfigInfo;
import com.vmware.vim25.ArrayOfClusterDrsVmConfigSpec;
import com.vmware.vim25.ArrayOfClusterEVCManagerCheckResult;
import com.vmware.vim25.ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus;
import com.vmware.vim25.ArrayOfClusterGroupInfo;
import com.vmware.vim25.ArrayOfClusterGroupSpec;
import com.vmware.vim25.ArrayOfClusterHostRecommendation;
import com.vmware.vim25.ArrayOfClusterIoFilterInfo;
import com.vmware.vim25.ArrayOfClusterNotAttemptedVmInfo;
import com.vmware.vim25.ArrayOfClusterRecommendation;
import com.vmware.vim25.ArrayOfClusterRuleInfo;
import com.vmware.vim25.ArrayOfClusterRuleSpec;
import com.vmware.vim25.ArrayOfClusterVmOrchestrationInfo;
import com.vmware.vim25.ArrayOfClusterVmOrchestrationSpec;
import com.vmware.vim25.ArrayOfComplianceFailure;
import com.vmware.vim25.ArrayOfComplianceFailureComplianceFailureValues;
import com.vmware.vim25.ArrayOfComplianceLocator;
import com.vmware.vim25.ArrayOfComplianceResult;
import com.vmware.vim25.ArrayOfComputeResourceHostSPBMLicenseInfo;
import com.vmware.vim25.ArrayOfConflictingConfigurationConfig;
import com.vmware.vim25.ArrayOfCryptoKeyId;
import com.vmware.vim25.ArrayOfCryptoKeyPlain;
import com.vmware.vim25.ArrayOfCryptoKeyResult;
import com.vmware.vim25.ArrayOfCryptoManagerKmipClusterStatus;
import com.vmware.vim25.ArrayOfCryptoManagerKmipCryptoKeyStatus;
import com.vmware.vim25.ArrayOfCryptoManagerKmipServerStatus;
import com.vmware.vim25.ArrayOfCustomFieldDef;
import com.vmware.vim25.ArrayOfCustomFieldValue;
import com.vmware.vim25.ArrayOfCustomizationAdapterMapping;
import com.vmware.vim25.ArrayOfCustomizationIpV6Generator;
import com.vmware.vim25.ArrayOfCustomizationSpecInfo;
import com.vmware.vim25.ArrayOfDVPortConfigSpec;
import com.vmware.vim25.ArrayOfDVPortgroupConfigSpec;
import com.vmware.vim25.ArrayOfDVSHealthCheckConfig;
import com.vmware.vim25.ArrayOfDVSNetworkResourcePool;
import com.vmware.vim25.ArrayOfDVSNetworkResourcePoolConfigSpec;
import com.vmware.vim25.ArrayOfDVSVmVnicNetworkResourcePool;
import com.vmware.vim25.ArrayOfDasHeartbeatDatastoreInfo;
import com.vmware.vim25.ArrayOfDatacenterBasicConnectInfo;
import com.vmware.vim25.ArrayOfDatacenterMismatchArgument;
import com.vmware.vim25.ArrayOfDatastoreHostMount;
import com.vmware.vim25.ArrayOfDatastoreMountPathDatastorePair;
import com.vmware.vim25.ArrayOfDatastoreVVolContainerFailoverPair;
import com.vmware.vim25.ArrayOfDiagnosticManagerBundleInfo;
import com.vmware.vim25.ArrayOfDiagnosticManagerLogDescriptor;
import com.vmware.vim25.ArrayOfDiskChangeExtent;
import com.vmware.vim25.ArrayOfDistributedVirtualPort;
import com.vmware.vim25.ArrayOfDistributedVirtualPortgroupInfo;
import com.vmware.vim25.ArrayOfDistributedVirtualPortgroupProblem;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchHostMember;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchHostMemberConfigSpec;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchHostMemberPnicSpec;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchHostMemberTransportZoneInfo;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchHostProductSpec;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchInfo;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchManagerCompatibilityResult;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchManagerHostDvsFilterSpec;
import com.vmware.vim25.ArrayOfDistributedVirtualSwitchProductSpec;
import com.vmware.vim25.ArrayOfDouble;
import com.vmware.vim25.ArrayOfDvsApplyOperationFaultFaultOnObject;
import com.vmware.vim25.ArrayOfDvsFilterConfig;
import com.vmware.vim25.ArrayOfDvsHostInfrastructureTrafficResource;
import com.vmware.vim25.ArrayOfDvsHostVNicProfile;
import com.vmware.vim25.ArrayOfDvsNetworkRuleQualifier;
import com.vmware.vim25.ArrayOfDvsOperationBulkFaultFaultOnHost;
import com.vmware.vim25.ArrayOfDvsOutOfSyncHostArgument;
import com.vmware.vim25.ArrayOfDvsProfile;
import com.vmware.vim25.ArrayOfDvsServiceConsoleVNicProfile;
import com.vmware.vim25.ArrayOfDvsTrafficRule;
import com.vmware.vim25.ArrayOfDvsVmVnicNetworkResourcePoolRuntimeInfo;
import com.vmware.vim25.ArrayOfDvsVmVnicResourcePoolConfigSpec;
import com.vmware.vim25.ArrayOfDvsVnicAllocatedResource;
import com.vmware.vim25.ArrayOfDynamicProperty;
import com.vmware.vim25.ArrayOfEVCMode;
import com.vmware.vim25.ArrayOfElementDescription;
import com.vmware.vim25.ArrayOfEntityBackupConfig;
import com.vmware.vim25.ArrayOfEntityPrivilege;
import com.vmware.vim25.ArrayOfEnumDescription;
import com.vmware.vim25.ArrayOfEvent;
import com.vmware.vim25.ArrayOfEventAlarmExpressionComparison;
import com.vmware.vim25.ArrayOfEventArgDesc;
import com.vmware.vim25.ArrayOfEventDescriptionEventDetail;
import com.vmware.vim25.ArrayOfExtManagedEntityInfo;
import com.vmware.vim25.ArrayOfExtSolutionManagerInfoTabInfo;
import com.vmware.vim25.ArrayOfExtendedEventPair;
import com.vmware.vim25.ArrayOfExtension;
import com.vmware.vim25.ArrayOfExtensionClientInfo;
import com.vmware.vim25.ArrayOfExtensionEventTypeInfo;
import com.vmware.vim25.ArrayOfExtensionFaultTypeInfo;
import com.vmware.vim25.ArrayOfExtensionManagerIpAllocationUsage;
import com.vmware.vim25.ArrayOfExtensionPrivilegeInfo;
import com.vmware.vim25.ArrayOfExtensionResourceInfo;
import com.vmware.vim25.ArrayOfExtensionServerInfo;
import com.vmware.vim25.ArrayOfExtensionTaskTypeInfo;
import com.vmware.vim25.ArrayOfFaultToleranceDiskSpec;
import com.vmware.vim25.ArrayOfFaultsByHost;
import com.vmware.vim25.ArrayOfFaultsByVM;
import com.vmware.vim25.ArrayOfFcoeConfigVlanRange;
import com.vmware.vim25.ArrayOfFileInfo;
import com.vmware.vim25.ArrayOfFileQuery;
import com.vmware.vim25.ArrayOfFirewallProfileRulesetProfile;
import com.vmware.vim25.ArrayOfFolderFailedHostResult;
import com.vmware.vim25.ArrayOfFolderNewHostSpec;
import com.vmware.vim25.ArrayOfGuestAliases;
import com.vmware.vim25.ArrayOfGuestAuthAliasInfo;
import com.vmware.vim25.ArrayOfGuestAuthSubject;
import com.vmware.vim25.ArrayOfGuestDiskInfo;
import com.vmware.vim25.ArrayOfGuestFileInfo;
import com.vmware.vim25.ArrayOfGuestInfoNamespaceGenerationInfo;
import com.vmware.vim25.ArrayOfGuestInfoVirtualDiskMapping;
import com.vmware.vim25.ArrayOfGuestMappedAliases;
import com.vmware.vim25.ArrayOfGuestNicInfo;
import com.vmware.vim25.ArrayOfGuestOsDescriptor;
import com.vmware.vim25.ArrayOfGuestProcessInfo;
import com.vmware.vim25.ArrayOfGuestRegKeyRecordSpec;
import com.vmware.vim25.ArrayOfGuestRegValueSpec;
import com.vmware.vim25.ArrayOfGuestStackInfo;
import com.vmware.vim25.ArrayOfHbrManagerVmReplicationCapability;
import com.vmware.vim25.ArrayOfHealthUpdate;
import com.vmware.vim25.ArrayOfHealthUpdateInfo;
import com.vmware.vim25.ArrayOfHostAccessControlEntry;
import com.vmware.vim25.ArrayOfHostAccountSpec;
import com.vmware.vim25.ArrayOfHostActiveDirectory;
import com.vmware.vim25.ArrayOfHostAssignableHardwareBinding;
import com.vmware.vim25.ArrayOfHostAssignableHardwareConfigAttributeOverride;
import com.vmware.vim25.ArrayOfHostAuthenticationStoreInfo;
import com.vmware.vim25.ArrayOfHostBootDevice;
import com.vmware.vim25.ArrayOfHostCacheConfigurationInfo;
import com.vmware.vim25.ArrayOfHostConnectInfoNetworkInfo;
import com.vmware.vim25.ArrayOfHostConnectSpec;
import com.vmware.vim25.ArrayOfHostCpuIdInfo;
import com.vmware.vim25.ArrayOfHostCpuPackage;
import com.vmware.vim25.ArrayOfHostDatastoreBrowserSearchResults;
import com.vmware.vim25.ArrayOfHostDatastoreConnectInfo;
import com.vmware.vim25.ArrayOfHostDatastoreSystemDatastoreResult;
import com.vmware.vim25.ArrayOfHostDateTimeSystemTimeZone;
import com.vmware.vim25.ArrayOfHostDhcpService;
import com.vmware.vim25.ArrayOfHostDhcpServiceConfig;
import com.vmware.vim25.ArrayOfHostDiagnosticPartition;
import com.vmware.vim25.ArrayOfHostDiagnosticPartitionCreateOption;
import com.vmware.vim25.ArrayOfHostDiskConfigurationResult;
import com.vmware.vim25.ArrayOfHostDiskMappingPartitionOption;
import com.vmware.vim25.ArrayOfHostDiskPartitionAttributes;
import com.vmware.vim25.ArrayOfHostDiskPartitionBlockRange;
import com.vmware.vim25.ArrayOfHostDiskPartitionInfo;
import com.vmware.vim25.ArrayOfHostEventArgument;
import com.vmware.vim25.ArrayOfHostFeatureCapability;
import com.vmware.vim25.ArrayOfHostFeatureMask;
import com.vmware.vim25.ArrayOfHostFeatureVersionInfo;
import com.vmware.vim25.ArrayOfHostFileSystemMountInfo;
import com.vmware.vim25.ArrayOfHostFirewallConfigRuleSetConfig;
import com.vmware.vim25.ArrayOfHostFirewallRule;
import com.vmware.vim25.ArrayOfHostFirewallRuleset;
import com.vmware.vim25.ArrayOfHostFirewallRulesetIpNetwork;
import com.vmware.vim25.ArrayOfHostGraphicsConfigDeviceType;
import com.vmware.vim25.ArrayOfHostGraphicsInfo;
import com.vmware.vim25.ArrayOfHostHardwareElementInfo;
import com.vmware.vim25.ArrayOfHostHostBusAdapter;
import com.vmware.vim25.ArrayOfHostInternetScsiHbaIscsiIpv6Address;
import com.vmware.vim25.ArrayOfHostInternetScsiHbaParamValue;
import com.vmware.vim25.ArrayOfHostInternetScsiHbaSendTarget;
import com.vmware.vim25.ArrayOfHostInternetScsiHbaStaticTarget;
import com.vmware.vim25.ArrayOfHostIoFilterInfo;
import com.vmware.vim25.ArrayOfHostIpConfigIpV6Address;
import com.vmware.vim25.ArrayOfHostIpRouteEntry;
import com.vmware.vim25.ArrayOfHostIpRouteOp;
import com.vmware.vim25.ArrayOfHostLowLevelProvisioningManagerDiskLayoutSpec;
import com.vmware.vim25.ArrayOfHostLowLevelProvisioningManagerFileDeleteResult;
import com.vmware.vim25.ArrayOfHostLowLevelProvisioningManagerFileDeleteSpec;
import com.vmware.vim25.ArrayOfHostLowLevelProvisioningManagerFileReserveResult;
import com.vmware.vim25.ArrayOfHostLowLevelProvisioningManagerFileReserveSpec;
import com.vmware.vim25.ArrayOfHostLowLevelProvisioningManagerSnapshotLayoutSpec;
import com.vmware.vim25.ArrayOfHostMemberHealthCheckResult;
import com.vmware.vim25.ArrayOfHostMemberRuntimeInfo;
import com.vmware.vim25.ArrayOfHostMultipathInfoLogicalUnit;
import com.vmware.vim25.ArrayOfHostMultipathInfoPath;
import com.vmware.vim25.ArrayOfHostMultipathStateInfoPath;
import com.vmware.vim25.ArrayOfHostNasVolumeConfig;
import com.vmware.vim25.ArrayOfHostNatService;
import com.vmware.vim25.ArrayOfHostNatServiceConfig;
import com.vmware.vim25.ArrayOfHostNatServicePortForwardSpec;
import com.vmware.vim25.ArrayOfHostNetStackInstance;
import com.vmware.vim25.ArrayOfHostNetworkConfigNetStackSpec;
import com.vmware.vim25.ArrayOfHostNumaNode;
import com.vmware.vim25.ArrayOfHostNumericSensorInfo;
import com.vmware.vim25.ArrayOfHostNvmeController;
import com.vmware.vim25.ArrayOfHostNvmeDiscoveryLogEntry;
import com.vmware.vim25.ArrayOfHostNvmeNamespace;
import com.vmware.vim25.ArrayOfHostNvmeTopologyInterface;
import com.vmware.vim25.ArrayOfHostOpaqueNetworkInfo;
import com.vmware.vim25.ArrayOfHostOpaqueSwitch;
import com.vmware.vim25.ArrayOfHostOpaqueSwitchPhysicalNicZone;
import com.vmware.vim25.ArrayOfHostPatchManagerStatus;
import com.vmware.vim25.ArrayOfHostPatchManagerStatusPrerequisitePatch;
import com.vmware.vim25.ArrayOfHostPathSelectionPolicyOption;
import com.vmware.vim25.ArrayOfHostPciDevice;
import com.vmware.vim25.ArrayOfHostPciPassthruConfig;
import com.vmware.vim25.ArrayOfHostPciPassthruInfo;
import com.vmware.vim25.ArrayOfHostPlacedVirtualNicIdentifier;
import com.vmware.vim25.ArrayOfHostPlugStoreTopologyAdapter;
import com.vmware.vim25.ArrayOfHostPlugStoreTopologyDevice;
import com.vmware.vim25.ArrayOfHostPlugStoreTopologyPath;
import com.vmware.vim25.ArrayOfHostPlugStoreTopologyPlugin;
import com.vmware.vim25.ArrayOfHostPlugStoreTopologyTarget;
import com.vmware.vim25.ArrayOfHostPnicNetworkResourceInfo;
import com.vmware.vim25.ArrayOfHostPortGroup;
import com.vmware.vim25.ArrayOfHostPortGroupConfig;
import com.vmware.vim25.ArrayOfHostPortGroupPort;
import com.vmware.vim25.ArrayOfHostPortGroupProfile;
import com.vmware.vim25.ArrayOfHostPowerPolicy;
import com.vmware.vim25.ArrayOfHostProfileManagerCompositionResultResultElement;
import com.vmware.vim25.ArrayOfHostProfileManagerCompositionValidationResultResultElement;
import com.vmware.vim25.ArrayOfHostProfileManagerHostToConfigSpecMap;
import com.vmware.vim25.ArrayOfHostProfilesEntityCustomizations;
import com.vmware.vim25.ArrayOfHostProtocolEndpoint;
import com.vmware.vim25.ArrayOfHostProxySwitch;
import com.vmware.vim25.ArrayOfHostProxySwitchConfig;
import com.vmware.vim25.ArrayOfHostProxySwitchHostLagConfig;
import com.vmware.vim25.ArrayOfHostRdmaDevice;
import com.vmware.vim25.ArrayOfHostRuntimeInfoNetStackInstanceRuntimeInfo;
import com.vmware.vim25.ArrayOfHostScsiDisk;
import com.vmware.vim25.ArrayOfHostScsiDiskPartition;
import com.vmware.vim25.ArrayOfHostScsiTopologyInterface;
import com.vmware.vim25.ArrayOfHostScsiTopologyLun;
import com.vmware.vim25.ArrayOfHostScsiTopologyTarget;
import com.vmware.vim25.ArrayOfHostService;
import com.vmware.vim25.ArrayOfHostServiceConfig;
import com.vmware.vim25.ArrayOfHostSharedGpuCapabilities;
import com.vmware.vim25.ArrayOfHostSnmpDestination;
import com.vmware.vim25.ArrayOfHostSriovDevicePoolInfo;
import com.vmware.vim25.ArrayOfHostSslThumbprintInfo;
import com.vmware.vim25.ArrayOfHostStorageArrayTypePolicyOption;
import com.vmware.vim25.ArrayOfHostStorageElementInfo;
import com.vmware.vim25.ArrayOfHostStorageOperationalInfo;
import com.vmware.vim25.ArrayOfHostStorageSystemDiskLocatorLedResult;
import com.vmware.vim25.ArrayOfHostStorageSystemScsiLunResult;
import com.vmware.vim25.ArrayOfHostStorageSystemVmfsVolumeResult;
import com.vmware.vim25.ArrayOfHostSubSpecification;
import com.vmware.vim25.ArrayOfHostSystemIdentificationInfo;
import com.vmware.vim25.ArrayOfHostSystemResourceInfo;
import com.vmware.vim25.ArrayOfHostSystemSwapConfigurationSystemSwapOption;
import com.vmware.vim25.ArrayOfHostTpmDigestInfo;
import com.vmware.vim25.ArrayOfHostTpmEventLogEntry;
import com.vmware.vim25.ArrayOfHostUnresolvedVmfsExtent;
import com.vmware.vim25.ArrayOfHostUnresolvedVmfsResolutionResult;
import com.vmware.vim25.ArrayOfHostUnresolvedVmfsResolutionSpec;
import com.vmware.vim25.ArrayOfHostUnresolvedVmfsVolume;
import com.vmware.vim25.ArrayOfHostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption;
import com.vmware.vim25.ArrayOfHostVMotionCompatibility;
import com.vmware.vim25.ArrayOfHostVirtualNic;
import com.vmware.vim25.ArrayOfHostVirtualNicConfig;
import com.vmware.vim25.ArrayOfHostVirtualNicManagerNicTypeSelection;
import com.vmware.vim25.ArrayOfHostVirtualSwitch;
import com.vmware.vim25.ArrayOfHostVirtualSwitchConfig;
import com.vmware.vim25.ArrayOfHostVmciAccessManagerAccessSpec;
import com.vmware.vim25.ArrayOfHostVmfsRescanResult;
import com.vmware.vim25.ArrayOfHostVsanInternalSystemCmmdsQuery;
import com.vmware.vim25.ArrayOfHostVsanInternalSystemDeleteVsanObjectsResult;
import com.vmware.vim25.ArrayOfHostVsanInternalSystemVsanObjectOperationResult;
import com.vmware.vim25.ArrayOfHostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult;
import com.vmware.vim25.ArrayOfHttpNfcLeaseDatastoreLeaseInfo;
import com.vmware.vim25.ArrayOfHttpNfcLeaseDeviceUrl;
import com.vmware.vim25.ArrayOfHttpNfcLeaseHostInfo;
import com.vmware.vim25.ArrayOfHttpNfcLeaseManifestEntry;
import com.vmware.vim25.ArrayOfHttpNfcLeaseSourceFile;
import com.vmware.vim25.ArrayOfID;
import com.vmware.vim25.ArrayOfImportOperationBulkFaultFaultOnImport;
import com.vmware.vim25.ArrayOfImportSpec;
import com.vmware.vim25.ArrayOfInt;
import com.vmware.vim25.ArrayOfIoFilterHostIssue;
import com.vmware.vim25.ArrayOfIpPool;
import com.vmware.vim25.ArrayOfIpPoolAssociation;
import com.vmware.vim25.ArrayOfIpPoolManagerIpAllocation;
import com.vmware.vim25.ArrayOfIscsiDependencyEntity;
import com.vmware.vim25.ArrayOfIscsiPortInfo;
import com.vmware.vim25.ArrayOfKernelModuleInfo;
import com.vmware.vim25.ArrayOfKeyAnyValue;
import com.vmware.vim25.ArrayOfKeyValue;
import com.vmware.vim25.ArrayOfKmipClusterInfo;
import com.vmware.vim25.ArrayOfKmipServerInfo;
import com.vmware.vim25.ArrayOfLicenseAssignmentManagerLicenseAssignment;
import com.vmware.vim25.ArrayOfLicenseAvailabilityInfo;
import com.vmware.vim25.ArrayOfLicenseFeatureInfo;
import com.vmware.vim25.ArrayOfLicenseManagerLicenseInfo;
import com.vmware.vim25.ArrayOfLicenseReservationInfo;
import com.vmware.vim25.ArrayOfLocalizableMessage;
import com.vmware.vim25.ArrayOfLocalizationManagerMessageCatalog;
import com.vmware.vim25.ArrayOfLong;
import com.vmware.vim25.ArrayOfManagedEntityStatus;
import com.vmware.vim25.ArrayOfManagedObjectReference;
import com.vmware.vim25.ArrayOfMethodActionArgument;
import com.vmware.vim25.ArrayOfMethodFault;
import com.vmware.vim25.ArrayOfMissingObject;
import com.vmware.vim25.ArrayOfMissingProperty;
import com.vmware.vim25.ArrayOfMultipleCertificatesVerifyFaultThumbprintData;
import com.vmware.vim25.ArrayOfNasStorageProfile;
import com.vmware.vim25.ArrayOfNetIpConfigInfoIpAddress;
import com.vmware.vim25.ArrayOfNetIpConfigSpecIpAddressSpec;
import com.vmware.vim25.ArrayOfNetIpRouteConfigInfoIpRoute;
import com.vmware.vim25.ArrayOfNetIpRouteConfigSpecIpRouteSpec;
import com.vmware.vim25.ArrayOfNetIpStackInfoDefaultRouter;
import com.vmware.vim25.ArrayOfNetIpStackInfoNetToMedia;
import com.vmware.vim25.ArrayOfNetStackInstanceProfile;
import com.vmware.vim25.ArrayOfNsxHostVNicProfile;
import com.vmware.vim25.ArrayOfNumericRange;
import com.vmware.vim25.ArrayOfNvdimmDimmInfo;
import com.vmware.vim25.ArrayOfNvdimmGuid;
import com.vmware.vim25.ArrayOfNvdimmInterleaveSetInfo;
import com.vmware.vim25.ArrayOfNvdimmNamespaceDetails;
import com.vmware.vim25.ArrayOfNvdimmNamespaceInfo;
import com.vmware.vim25.ArrayOfNvdimmRegionInfo;
import com.vmware.vim25.ArrayOfObjectContent;
import com.vmware.vim25.ArrayOfObjectSpec;
import com.vmware.vim25.ArrayOfObjectUpdate;
import com.vmware.vim25.ArrayOfOpaqueNetworkTargetInfo;
import com.vmware.vim25.ArrayOfOptionDef;
import com.vmware.vim25.ArrayOfOptionProfile;
import com.vmware.vim25.ArrayOfOptionValue;
import com.vmware.vim25.ArrayOfOvfConsumerOstNode;
import com.vmware.vim25.ArrayOfOvfConsumerOvfSection;
import com.vmware.vim25.ArrayOfOvfDeploymentOption;
import com.vmware.vim25.ArrayOfOvfFile;
import com.vmware.vim25.ArrayOfOvfFileItem;
import com.vmware.vim25.ArrayOfOvfNetworkInfo;
import com.vmware.vim25.ArrayOfOvfNetworkMapping;
import com.vmware.vim25.ArrayOfOvfOptionInfo;
import com.vmware.vim25.ArrayOfOvfResourceMap;
import com.vmware.vim25.ArrayOfPerfCounterInfo;
import com.vmware.vim25.ArrayOfPerfEntityMetricBase;
import com.vmware.vim25.ArrayOfPerfInterval;
import com.vmware.vim25.ArrayOfPerfMetricId;
import com.vmware.vim25.ArrayOfPerfMetricSeries;
import com.vmware.vim25.ArrayOfPerfMetricSeriesCSV;
import com.vmware.vim25.ArrayOfPerfQuerySpec;
import com.vmware.vim25.ArrayOfPerfSampleInfo;
import com.vmware.vim25.ArrayOfPerformanceManagerCounterLevelMapping;
import com.vmware.vim25.ArrayOfPermission;
import com.vmware.vim25.ArrayOfPermissionProfile;
import com.vmware.vim25.ArrayOfPhysicalNic;
import com.vmware.vim25.ArrayOfPhysicalNicConfig;
import com.vmware.vim25.ArrayOfPhysicalNicHintInfo;
import com.vmware.vim25.ArrayOfPhysicalNicIpHint;
import com.vmware.vim25.ArrayOfPhysicalNicLinkInfo;
import com.vmware.vim25.ArrayOfPhysicalNicNameHint;
import com.vmware.vim25.ArrayOfPhysicalNicProfile;
import com.vmware.vim25.ArrayOfPlacementAffinityRule;
import com.vmware.vim25.ArrayOfPlacementSpec;
import com.vmware.vim25.ArrayOfPnicUplinkProfile;
import com.vmware.vim25.ArrayOfPodDiskLocator;
import com.vmware.vim25.ArrayOfPolicyOption;
import com.vmware.vim25.ArrayOfPrivilegeAvailability;
import com.vmware.vim25.ArrayOfProductComponentInfo;
import com.vmware.vim25.ArrayOfProfileApplyProfileProperty;
import com.vmware.vim25.ArrayOfProfileDeferredPolicyOptionParameter;
import com.vmware.vim25.ArrayOfProfileDescriptionSection;
import com.vmware.vim25.ArrayOfProfileExecuteError;
import com.vmware.vim25.ArrayOfProfileExpression;
import com.vmware.vim25.ArrayOfProfileExpressionMetadata;
import com.vmware.vim25.ArrayOfProfileMetadata;
import com.vmware.vim25.ArrayOfProfileMetadataProfileOperationMessage;
import com.vmware.vim25.ArrayOfProfileMetadataProfileSortSpec;
import com.vmware.vim25.ArrayOfProfileParameterMetadata;
import com.vmware.vim25.ArrayOfProfileParameterMetadataParameterRelationMetadata;
import com.vmware.vim25.ArrayOfProfilePolicy;
import com.vmware.vim25.ArrayOfProfilePolicyMetadata;
import com.vmware.vim25.ArrayOfProfilePolicyOptionMetadata;
import com.vmware.vim25.ArrayOfProfileProfileStructureProperty;
import com.vmware.vim25.ArrayOfProfilePropertyPath;
import com.vmware.vim25.ArrayOfProfileUpdateFailedUpdateFailure;
import com.vmware.vim25.ArrayOfPropertyChange;
import com.vmware.vim25.ArrayOfPropertyFilterSpec;
import com.vmware.vim25.ArrayOfPropertyFilterUpdate;
import com.vmware.vim25.ArrayOfPropertySpec;
import com.vmware.vim25.ArrayOfRelation;
import com.vmware.vim25.ArrayOfReplicationInfoDiskSettings;
import com.vmware.vim25.ArrayOfResourceConfigSpec;
import com.vmware.vim25.ArrayOfRetrieveVStorageObjSpec;
import com.vmware.vim25.ArrayOfScheduledTaskDetail;
import com.vmware.vim25.ArrayOfScsiLun;
import com.vmware.vim25.ArrayOfScsiLunDescriptor;
import com.vmware.vim25.ArrayOfScsiLunDurableName;
import com.vmware.vim25.ArrayOfSelectionSet;
import com.vmware.vim25.ArrayOfSelectionSpec;
import com.vmware.vim25.ArrayOfServiceConsolePortGroupProfile;
import com.vmware.vim25.ArrayOfServiceLocator;
import com.vmware.vim25.ArrayOfServiceManagerServiceInfo;
import com.vmware.vim25.ArrayOfServiceProfile;
import com.vmware.vim25.ArrayOfShort;
import com.vmware.vim25.ArrayOfSoftwarePackage;
import com.vmware.vim25.ArrayOfStaticRouteProfile;
import com.vmware.vim25.ArrayOfStorageDrsOptionSpec;
import com.vmware.vim25.ArrayOfStorageDrsPlacementRankVmSpec;
import com.vmware.vim25.ArrayOfStorageDrsVmConfigInfo;
import com.vmware.vim25.ArrayOfStorageDrsVmConfigSpec;
import com.vmware.vim25.ArrayOfStoragePerformanceSummary;
import com.vmware.vim25.ArrayOfStorageRequirement;
import com.vmware.vim25.ArrayOfString;
import com.vmware.vim25.ArrayOfStructuredCustomizations;
import com.vmware.vim25.ArrayOfSystemEventInfo;
import com.vmware.vim25.ArrayOfTag;
import com.vmware.vim25.ArrayOfTaskInfo;
import com.vmware.vim25.ArrayOfTaskInfoState;
import com.vmware.vim25.ArrayOfTypeDescription;
import com.vmware.vim25.ArrayOfUpdateVirtualMachineFilesResultFailedVmFileInfo;
import com.vmware.vim25.ArrayOfUri;
import com.vmware.vim25.ArrayOfUsbScanCodeSpecKeyEvent;
import com.vmware.vim25.ArrayOfUserGroupProfile;
import com.vmware.vim25.ArrayOfUserPrivilegeResult;
import com.vmware.vim25.ArrayOfUserProfile;
import com.vmware.vim25.ArrayOfUserSearchResult;
import com.vmware.vim25.ArrayOfUserSession;
import com.vmware.vim25.ArrayOfVASAStorageArray;
import com.vmware.vim25.ArrayOfVAppCloneSpecNetworkMappingPair;
import com.vmware.vim25.ArrayOfVAppCloneSpecResourceMap;
import com.vmware.vim25.ArrayOfVAppEntityConfigInfo;
import com.vmware.vim25.ArrayOfVAppOvfSectionInfo;
import com.vmware.vim25.ArrayOfVAppOvfSectionSpec;
import com.vmware.vim25.ArrayOfVAppProductInfo;
import com.vmware.vim25.ArrayOfVAppProductSpec;
import com.vmware.vim25.ArrayOfVAppPropertyInfo;
import com.vmware.vim25.ArrayOfVAppPropertySpec;
import com.vmware.vim25.ArrayOfVMwareDVSPvlanConfigSpec;
import com.vmware.vim25.ArrayOfVMwareDVSPvlanMapEntry;
import com.vmware.vim25.ArrayOfVMwareDVSVspanConfigSpec;
import com.vmware.vim25.ArrayOfVMwareDvsLacpGroupConfig;
import com.vmware.vim25.ArrayOfVMwareDvsLacpGroupSpec;
import com.vmware.vim25.ArrayOfVMwareVspanSession;
import com.vmware.vim25.ArrayOfVStorageObjectAssociations;
import com.vmware.vim25.ArrayOfVStorageObjectAssociationsVmDiskAssociations;
import com.vmware.vim25.ArrayOfVStorageObjectSnapshotInfoVStorageObjectSnapshot;
import com.vmware.vim25.ArrayOfVVolHostPE;
import com.vmware.vim25.ArrayOfVVolVmConfigFileUpdateResultFailedVmConfigFileInfo;
import com.vmware.vim25.ArrayOfVchaNodeRuntimeInfo;
import com.vmware.vim25.ArrayOfVimVasaProviderInfo;
import com.vmware.vim25.ArrayOfVimVasaProviderStatePerArray;
import com.vmware.vim25.ArrayOfVirtualAppLinkInfo;
import com.vmware.vim25.ArrayOfVirtualDevice;
import com.vmware.vim25.ArrayOfVirtualDeviceBackingOption;
import com.vmware.vim25.ArrayOfVirtualDeviceConfigSpec;
import com.vmware.vim25.ArrayOfVirtualDeviceOption;
import com.vmware.vim25.ArrayOfVirtualDisk;
import com.vmware.vim25.ArrayOfVirtualDiskDeltaDiskFormatsSupported;
import com.vmware.vim25.ArrayOfVirtualDiskId;
import com.vmware.vim25.ArrayOfVirtualDiskRuleSpec;
import com.vmware.vim25.ArrayOfVirtualMachineBootOptionsBootableDevice;
import com.vmware.vim25.ArrayOfVirtualMachineCdromInfo;
import com.vmware.vim25.ArrayOfVirtualMachineConfigInfoDatastoreUrlPair;
import com.vmware.vim25.ArrayOfVirtualMachineConfigOptionDescriptor;
import com.vmware.vim25.ArrayOfVirtualMachineConfigSpec;
import com.vmware.vim25.ArrayOfVirtualMachineCpuIdInfoSpec;
import com.vmware.vim25.ArrayOfVirtualMachineDatastoreInfo;
import com.vmware.vim25.ArrayOfVirtualMachineDatastoreVolumeOption;
import com.vmware.vim25.ArrayOfVirtualMachineDeviceRuntimeInfo;
import com.vmware.vim25.ArrayOfVirtualMachineDisplayTopology;
import com.vmware.vim25.ArrayOfVirtualMachineDynamicPassthroughInfo;
import com.vmware.vim25.ArrayOfVirtualMachineFeatureRequirement;
import com.vmware.vim25.ArrayOfVirtualMachineFileLayoutDiskLayout;
import com.vmware.vim25.ArrayOfVirtualMachineFileLayoutExDiskLayout;
import com.vmware.vim25.ArrayOfVirtualMachineFileLayoutExDiskUnit;
import com.vmware.vim25.ArrayOfVirtualMachineFileLayoutExFileInfo;
import com.vmware.vim25.ArrayOfVirtualMachineFileLayoutExSnapshotLayout;
import com.vmware.vim25.ArrayOfVirtualMachineFileLayoutSnapshotLayout;
import com.vmware.vim25.ArrayOfVirtualMachineFloppyInfo;
import com.vmware.vim25.ArrayOfVirtualMachineIdeDiskDeviceInfo;
import com.vmware.vim25.ArrayOfVirtualMachineIdeDiskDevicePartitionInfo;
import com.vmware.vim25.ArrayOfVirtualMachineLegacyNetworkSwitchInfo;
import com.vmware.vim25.ArrayOfVirtualMachineMessage;
import com.vmware.vim25.ArrayOfVirtualMachineMetadataManagerVmMetadataInput;
import com.vmware.vim25.ArrayOfVirtualMachineMetadataManagerVmMetadataResult;
import com.vmware.vim25.ArrayOfVirtualMachineNetworkInfo;
import com.vmware.vim25.ArrayOfVirtualMachineParallelInfo;
import com.vmware.vim25.ArrayOfVirtualMachinePciPassthroughInfo;
import com.vmware.vim25.ArrayOfVirtualMachinePciSharedGpuPassthroughInfo;
import com.vmware.vim25.ArrayOfVirtualMachinePrecisionClockInfo;
import com.vmware.vim25.ArrayOfVirtualMachineProfileDetailsDiskProfileDetails;
import com.vmware.vim25.ArrayOfVirtualMachineProfileSpec;
import com.vmware.vim25.ArrayOfVirtualMachinePropertyRelation;
import com.vmware.vim25.ArrayOfVirtualMachineRelocateSpecDiskLocator;
import com.vmware.vim25.ArrayOfVirtualMachineScsiDiskDeviceInfo;
import com.vmware.vim25.ArrayOfVirtualMachineScsiPassthroughInfo;
import com.vmware.vim25.ArrayOfVirtualMachineSerialInfo;
import com.vmware.vim25.ArrayOfVirtualMachineSnapshotTree;
import com.vmware.vim25.ArrayOfVirtualMachineSoundInfo;
import com.vmware.vim25.ArrayOfVirtualMachineSriovInfo;
import com.vmware.vim25.ArrayOfVirtualMachineSummary;
import com.vmware.vim25.ArrayOfVirtualMachineUsageOnDatastore;
import com.vmware.vim25.ArrayOfVirtualMachineUsbInfo;
import com.vmware.vim25.ArrayOfVirtualMachineVFlashModuleInfo;
import com.vmware.vim25.ArrayOfVirtualMachineVMCIDeviceFilterSpec;
import com.vmware.vim25.ArrayOfVirtualMachineVcpuConfig;
import com.vmware.vim25.ArrayOfVirtualNicManagerNetConfig;
import com.vmware.vim25.ArrayOfVirtualPCIPassthroughAllowedDevice;
import com.vmware.vim25.ArrayOfVirtualSCSISharing;
import com.vmware.vim25.ArrayOfVirtualSwitchProfile;
import com.vmware.vim25.ArrayOfVmEventArgument;
import com.vmware.vim25.ArrayOfVmPodConfigForPlacement;
import com.vmware.vim25.ArrayOfVmPortGroupProfile;
import com.vmware.vim25.ArrayOfVmfsConfigOption;
import com.vmware.vim25.ArrayOfVmfsDatastoreOption;
import com.vmware.vim25.ArrayOfVnicPortArgument;
import com.vmware.vim25.ArrayOfVsanHostConfigInfo;
import com.vmware.vim25.ArrayOfVsanHostConfigInfoNetworkInfoPortConfig;
import com.vmware.vim25.ArrayOfVsanHostDiskMapInfo;
import com.vmware.vim25.ArrayOfVsanHostDiskMapResult;
import com.vmware.vim25.ArrayOfVsanHostDiskMapping;
import com.vmware.vim25.ArrayOfVsanHostDiskResult;
import com.vmware.vim25.ArrayOfVsanHostMembershipInfo;
import com.vmware.vim25.ArrayOfVsanHostRuntimeInfoDiskIssue;
import com.vmware.vim25.ArrayOfVsanNewPolicyBatch;
import com.vmware.vim25.ArrayOfVsanPolicyChangeBatch;
import com.vmware.vim25.ArrayOfVsanPolicySatisfiability;
import com.vmware.vim25.ArrayOfVsanUpgradeSystemNetworkPartitionInfo;
import com.vmware.vim25.ArrayOfVsanUpgradeSystemPreflightCheckIssue;
import com.vmware.vim25.ArrayOfVsanUpgradeSystemUpgradeHistoryItem;
import com.vmware.vim25.ArrayOfVslmTagEntry;
import com.vmware.vim25.ArrayOfvslmInfrastructureObjectPolicy;
import com.vmware.vim25.ArrayUpdateSpec;
import com.vmware.vim25.AssignUserToGroupRequestType;
import com.vmware.vim25.AssignUserToGroupResponse;
import com.vmware.vim25.AssociateProfileRequestType;
import com.vmware.vim25.AssociateProfileResponse;
import com.vmware.vim25.AttachDiskRequestType;
import com.vmware.vim25.AttachDiskTaskResponse;
import com.vmware.vim25.AttachScsiLunExRequestType;
import com.vmware.vim25.AttachScsiLunExTaskResponse;
import com.vmware.vim25.AttachScsiLunRequestType;
import com.vmware.vim25.AttachScsiLunResponse;
import com.vmware.vim25.AttachTagToVStorageObjectRequestType;
import com.vmware.vim25.AttachTagToVStorageObjectResponse;
import com.vmware.vim25.AttachVmfsExtentRequestType;
import com.vmware.vim25.AttachVmfsExtentResponse;
import com.vmware.vim25.AuthMinimumAdminPermission;
import com.vmware.vim25.AuthenticationProfile;
import com.vmware.vim25.AuthorizationDescription;
import com.vmware.vim25.AuthorizationEvent;
import com.vmware.vim25.AuthorizationPrivilege;
import com.vmware.vim25.AuthorizationRole;
import com.vmware.vim25.AutoStartDefaults;
import com.vmware.vim25.AutoStartPowerInfo;
import com.vmware.vim25.AutoStartPowerOffRequestType;
import com.vmware.vim25.AutoStartPowerOffResponse;
import com.vmware.vim25.AutoStartPowerOnRequestType;
import com.vmware.vim25.AutoStartPowerOnResponse;
import com.vmware.vim25.BackupBlobReadFailure;
import com.vmware.vim25.BackupBlobWriteFailure;
import com.vmware.vim25.BackupFirmwareConfigurationRequestType;
import com.vmware.vim25.BackupFirmwareConfigurationResponse;
import com.vmware.vim25.BadUsernameSessionEvent;
import com.vmware.vim25.BaseConfigInfo;
import com.vmware.vim25.BaseConfigInfoBackingInfo;
import com.vmware.vim25.BaseConfigInfoDiskFileBackingInfo;
import com.vmware.vim25.BaseConfigInfoFileBackingInfo;
import com.vmware.vim25.BaseConfigInfoRawDiskMappingBackingInfo;
import com.vmware.vim25.BatchAddHostsToClusterRequestType;
import com.vmware.vim25.BatchAddHostsToClusterTaskResponse;
import com.vmware.vim25.BatchAddStandaloneHostsRequestType;
import com.vmware.vim25.BatchAddStandaloneHostsTaskResponse;
import com.vmware.vim25.BatchQueryConnectInfoRequestType;
import com.vmware.vim25.BatchQueryConnectInfoResponse;
import com.vmware.vim25.BatchResult;
import com.vmware.vim25.BindVnicRequestType;
import com.vmware.vim25.BindVnicResponse;
import com.vmware.vim25.BlockedByFirewall;
import com.vmware.vim25.BoolOption;
import com.vmware.vim25.BoolPolicy;
import com.vmware.vim25.BrowseDiagnosticLogRequestType;
import com.vmware.vim25.BrowseDiagnosticLogResponse;
import com.vmware.vim25.CAMServerRefusedConnection;
import com.vmware.vim25.CanProvisionObjectsRequestType;
import com.vmware.vim25.CanProvisionObjectsResponse;
import com.vmware.vim25.CancelRecommendationRequestType;
import com.vmware.vim25.CancelRecommendationResponse;
import com.vmware.vim25.CancelRetrievePropertiesExRequestType;
import com.vmware.vim25.CancelRetrievePropertiesExResponse;
import com.vmware.vim25.CancelStorageDrsRecommendationRequestType;
import com.vmware.vim25.CancelStorageDrsRecommendationResponse;
import com.vmware.vim25.CancelTaskRequestType;
import com.vmware.vim25.CancelTaskResponse;
import com.vmware.vim25.CancelWaitForUpdatesRequestType;
import com.vmware.vim25.CancelWaitForUpdatesResponse;
import com.vmware.vim25.CanceledHostOperationEvent;
import com.vmware.vim25.CannotAccessFile;
import com.vmware.vim25.CannotAccessLocalSource;
import com.vmware.vim25.CannotAccessNetwork;
import com.vmware.vim25.CannotAccessVmComponent;
import com.vmware.vim25.CannotAccessVmConfig;
import com.vmware.vim25.CannotAccessVmDevice;
import com.vmware.vim25.CannotAccessVmDisk;
import com.vmware.vim25.CannotAddHostWithFTVmAsStandalone;
import com.vmware.vim25.CannotAddHostWithFTVmToDifferentCluster;
import com.vmware.vim25.CannotAddHostWithFTVmToNonHACluster;
import com.vmware.vim25.CannotChangeDrsBehaviorForFtSecondary;
import com.vmware.vim25.CannotChangeHaSettingsForFtSecondary;
import com.vmware.vim25.CannotChangeVsanClusterUuid;
import com.vmware.vim25.CannotChangeVsanNodeUuid;
import com.vmware.vim25.CannotComputeFTCompatibleHosts;
import com.vmware.vim25.CannotCreateFile;
import com.vmware.vim25.CannotDecryptPasswords;
import com.vmware.vim25.CannotDeleteFile;
import com.vmware.vim25.CannotDisableDrsOnClustersWithVApps;
import com.vmware.vim25.CannotDisableSnapshot;
import com.vmware.vim25.CannotDisconnectHostWithFaultToleranceVm;
import com.vmware.vim25.CannotEnableVmcpForCluster;
import com.vmware.vim25.CannotModifyConfigCpuRequirements;
import com.vmware.vim25.CannotMoveFaultToleranceVm;
import com.vmware.vim25.CannotMoveHostWithFaultToleranceVm;
import com.vmware.vim25.CannotMoveVmWithDeltaDisk;
import com.vmware.vim25.CannotMoveVmWithNativeDeltaDisk;
import com.vmware.vim25.CannotMoveVsanEnabledHost;
import com.vmware.vim25.CannotPlaceWithoutPrerequisiteMoves;
import com.vmware.vim25.CannotPowerOffVmInCluster;
import com.vmware.vim25.CannotReconfigureVsanWhenHaEnabled;
import com.vmware.vim25.CannotUseNetwork;
import com.vmware.vim25.Capability;
import com.vmware.vim25.CertMgrRefreshCACertificatesAndCRLsRequestType;
import com.vmware.vim25.CertMgrRefreshCACertificatesAndCRLsTaskResponse;
import com.vmware.vim25.CertMgrRefreshCertificatesRequestType;
import com.vmware.vim25.CertMgrRefreshCertificatesTaskResponse;
import com.vmware.vim25.CertMgrRevokeCertificatesRequestType;
import com.vmware.vim25.CertMgrRevokeCertificatesTaskResponse;
import com.vmware.vim25.ChangeAccessModeRequestType;
import com.vmware.vim25.ChangeAccessModeResponse;
import com.vmware.vim25.ChangeFileAttributesInGuestRequestType;
import com.vmware.vim25.ChangeFileAttributesInGuestResponse;
import com.vmware.vim25.ChangeKeyRequestType;
import com.vmware.vim25.ChangeKeyTaskResponse;
import com.vmware.vim25.ChangeLockdownModeRequestType;
import com.vmware.vim25.ChangeLockdownModeResponse;
import com.vmware.vim25.ChangeNFSUserPasswordRequestType;
import com.vmware.vim25.ChangeNFSUserPasswordResponse;
import com.vmware.vim25.ChangeOwnerRequestType;
import com.vmware.vim25.ChangeOwnerResponse;
import com.vmware.vim25.ChangePasswordRequestType;
import com.vmware.vim25.ChangePasswordResponse;
import com.vmware.vim25.ChangesInfoEventArgument;
import com.vmware.vim25.CheckAddHostEvcRequestType;
import com.vmware.vim25.CheckAddHostEvcTaskResponse;
import com.vmware.vim25.CheckAnswerFileStatusRequestType;
import com.vmware.vim25.CheckAnswerFileStatusTaskResponse;
import com.vmware.vim25.CheckCloneRequestType;
import com.vmware.vim25.CheckCloneTaskResponse;
import com.vmware.vim25.CheckCompatibilityRequestType;
import com.vmware.vim25.CheckCompatibilityTaskResponse;
import com.vmware.vim25.CheckComplianceRequestType;
import com.vmware.vim25.CheckComplianceTaskResponse;
import com.vmware.vim25.CheckConfigureEvcModeRequestType;
import com.vmware.vim25.CheckConfigureEvcModeTaskResponse;
import com.vmware.vim25.CheckCustomizationResourcesRequestType;
import com.vmware.vim25.CheckCustomizationResourcesResponse;
import com.vmware.vim25.CheckCustomizationSpecRequestType;
import com.vmware.vim25.CheckCustomizationSpecResponse;
import com.vmware.vim25.CheckForUpdatesRequestType;
import com.vmware.vim25.CheckForUpdatesResponse;
import com.vmware.vim25.CheckHostPatchRequestType;
import com.vmware.vim25.CheckHostPatchTaskResponse;
import com.vmware.vim25.CheckInstantCloneRequestType;
import com.vmware.vim25.CheckInstantCloneTaskResponse;
import com.vmware.vim25.CheckLicenseFeatureRequestType;
import com.vmware.vim25.CheckLicenseFeatureResponse;
import com.vmware.vim25.CheckMigrateRequestType;
import com.vmware.vim25.CheckMigrateTaskResponse;
import com.vmware.vim25.CheckPowerOnRequestType;
import com.vmware.vim25.CheckPowerOnTaskResponse;
import com.vmware.vim25.CheckProfileComplianceRequestType;
import com.vmware.vim25.CheckProfileComplianceTaskResponse;
import com.vmware.vim25.CheckRelocateRequestType;
import com.vmware.vim25.CheckRelocateTaskResponse;
import com.vmware.vim25.CheckResult;
import com.vmware.vim25.CheckVmConfigRequestType;
import com.vmware.vim25.CheckVmConfigTaskResponse;
import com.vmware.vim25.ChoiceOption;
import com.vmware.vim25.ClearComplianceStatusRequestType;
import com.vmware.vim25.ClearComplianceStatusResponse;
import com.vmware.vim25.ClearNFSUserRequestType;
import com.vmware.vim25.ClearNFSUserResponse;
import com.vmware.vim25.ClearSystemEventLogRequestType;
import com.vmware.vim25.ClearSystemEventLogResponse;
import com.vmware.vim25.ClearTriggeredAlarmsRequestType;
import com.vmware.vim25.ClearTriggeredAlarmsResponse;
import com.vmware.vim25.ClearVStorageObjectControlFlagsRequestType;
import com.vmware.vim25.ClearVStorageObjectControlFlagsResponse;
import com.vmware.vim25.ClockSkew;
import com.vmware.vim25.CloneFromSnapshotNotSupported;
import com.vmware.vim25.CloneSessionRequestType;
import com.vmware.vim25.CloneSessionResponse;
import com.vmware.vim25.CloneVAppRequestType;
import com.vmware.vim25.CloneVAppTaskResponse;
import com.vmware.vim25.CloneVMRequestType;
import com.vmware.vim25.CloneVMTaskResponse;
import com.vmware.vim25.CloneVStorageObjectRequestType;
import com.vmware.vim25.CloneVStorageObjectTaskResponse;
import com.vmware.vim25.CloseInventoryViewFolderRequestType;
import com.vmware.vim25.CloseInventoryViewFolderResponse;
import com.vmware.vim25.ClusterAction;
import com.vmware.vim25.ClusterActionHistory;
import com.vmware.vim25.ClusterAffinityRuleSpec;
import com.vmware.vim25.ClusterAntiAffinityRuleSpec;
import com.vmware.vim25.ClusterAttemptedVmInfo;
import com.vmware.vim25.ClusterComplianceCheckedEvent;
import com.vmware.vim25.ClusterComputeResourceClusterConfigResult;
import com.vmware.vim25.ClusterComputeResourceDVSConfigurationValidation;
import com.vmware.vim25.ClusterComputeResourceDVSSetting;
import com.vmware.vim25.ClusterComputeResourceDVSSettingDVPortgroupToServiceMapping;
import com.vmware.vim25.ClusterComputeResourceDvsProfile;
import com.vmware.vim25.ClusterComputeResourceDvsProfileDVPortgroupSpecToServiceMapping;
import com.vmware.vim25.ClusterComputeResourceHCIConfigInfo;
import com.vmware.vim25.ClusterComputeResourceHCIConfigSpec;
import com.vmware.vim25.ClusterComputeResourceHostConfigurationInput;
import com.vmware.vim25.ClusterComputeResourceHostConfigurationProfile;
import com.vmware.vim25.ClusterComputeResourceHostConfigurationValidation;
import com.vmware.vim25.ClusterComputeResourceHostVmkNicInfo;
import com.vmware.vim25.ClusterComputeResourceSummary;
import com.vmware.vim25.ClusterComputeResourceVCProfile;
import com.vmware.vim25.ClusterComputeResourceValidationResultBase;
import com.vmware.vim25.ClusterConfigInfo;
import com.vmware.vim25.ClusterConfigInfoEx;
import com.vmware.vim25.ClusterConfigSpec;
import com.vmware.vim25.ClusterConfigSpecEx;
import com.vmware.vim25.ClusterCreatedEvent;
import com.vmware.vim25.ClusterCryptoConfigInfo;
import com.vmware.vim25.ClusterDasAamHostInfo;
import com.vmware.vim25.ClusterDasAamNodeState;
import com.vmware.vim25.ClusterDasAdmissionControlInfo;
import com.vmware.vim25.ClusterDasAdmissionControlPolicy;
import com.vmware.vim25.ClusterDasAdvancedRuntimeInfo;
import com.vmware.vim25.ClusterDasAdvancedRuntimeInfoVmcpCapabilityInfo;
import com.vmware.vim25.ClusterDasConfigInfo;
import com.vmware.vim25.ClusterDasData;
import com.vmware.vim25.ClusterDasDataSummary;
import com.vmware.vim25.ClusterDasFailoverLevelAdvancedRuntimeInfo;
import com.vmware.vim25.ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots;
import com.vmware.vim25.ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo;
import com.vmware.vim25.ClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots;
import com.vmware.vim25.ClusterDasFdmHostState;
import com.vmware.vim25.ClusterDasHostInfo;
import com.vmware.vim25.ClusterDasHostRecommendation;
import com.vmware.vim25.ClusterDasVmConfigInfo;
import com.vmware.vim25.ClusterDasVmConfigSpec;
import com.vmware.vim25.ClusterDasVmSettings;
import com.vmware.vim25.ClusterDependencyRuleInfo;
import com.vmware.vim25.ClusterDestroyedEvent;
import com.vmware.vim25.ClusterDpmConfigInfo;
import com.vmware.vim25.ClusterDpmHostConfigInfo;
import com.vmware.vim25.ClusterDpmHostConfigSpec;
import com.vmware.vim25.ClusterDrsConfigInfo;
import com.vmware.vim25.ClusterDrsFaults;
import com.vmware.vim25.ClusterDrsFaultsFaultsByVirtualDisk;
import com.vmware.vim25.ClusterDrsFaultsFaultsByVm;
import com.vmware.vim25.ClusterDrsMigration;
import com.vmware.vim25.ClusterDrsRecommendation;
import com.vmware.vim25.ClusterDrsVmConfigInfo;
import com.vmware.vim25.ClusterDrsVmConfigSpec;
import com.vmware.vim25.ClusterEVCManagerCheckResult;
import com.vmware.vim25.ClusterEVCManagerEVCState;
import com.vmware.vim25.ClusterEnterMaintenanceModeRequestType;
import com.vmware.vim25.ClusterEnterMaintenanceModeResponse;
import com.vmware.vim25.ClusterEnterMaintenanceResult;
import com.vmware.vim25.ClusterEvent;
import com.vmware.vim25.ClusterFailoverHostAdmissionControlInfo;
import com.vmware.vim25.ClusterFailoverHostAdmissionControlInfoHostStatus;
import com.vmware.vim25.ClusterFailoverHostAdmissionControlPolicy;
import com.vmware.vim25.ClusterFailoverLevelAdmissionControlInfo;
import com.vmware.vim25.ClusterFailoverLevelAdmissionControlPolicy;
import com.vmware.vim25.ClusterFailoverResourcesAdmissionControlInfo;
import com.vmware.vim25.ClusterFailoverResourcesAdmissionControlPolicy;
import com.vmware.vim25.ClusterFixedSizeSlotPolicy;
import com.vmware.vim25.ClusterGroupInfo;
import com.vmware.vim25.ClusterGroupSpec;
import com.vmware.vim25.ClusterHostGroup;
import com.vmware.vim25.ClusterHostInfraUpdateHaModeAction;
import com.vmware.vim25.ClusterHostPowerAction;
import com.vmware.vim25.ClusterHostRecommendation;
import com.vmware.vim25.ClusterInfraUpdateHaConfigInfo;
import com.vmware.vim25.ClusterInitialPlacementAction;
import com.vmware.vim25.ClusterIoFilterInfo;
import com.vmware.vim25.ClusterMigrationAction;
import com.vmware.vim25.ClusterNetworkConfigSpec;
import com.vmware.vim25.ClusterNotAttemptedVmInfo;
import com.vmware.vim25.ClusterOrchestrationInfo;
import com.vmware.vim25.ClusterOvercommittedEvent;
import com.vmware.vim25.ClusterPowerOnVmResult;
import com.vmware.vim25.ClusterProactiveDrsConfigInfo;
import com.vmware.vim25.ClusterProfileCompleteConfigSpec;
import com.vmware.vim25.ClusterProfileConfigInfo;
import com.vmware.vim25.ClusterProfileConfigServiceCreateSpec;
import com.vmware.vim25.ClusterProfileConfigSpec;
import com.vmware.vim25.ClusterProfileCreateSpec;
import com.vmware.vim25.ClusterRecommendation;
import com.vmware.vim25.ClusterReconfiguredEvent;
import com.vmware.vim25.ClusterResourceUsageSummary;
import com.vmware.vim25.ClusterRuleInfo;
import com.vmware.vim25.ClusterRuleSpec;
import com.vmware.vim25.ClusterSlotPolicy;
import com.vmware.vim25.ClusterStatusChangedEvent;
import com.vmware.vim25.ClusterUsageSummary;
import com.vmware.vim25.ClusterVmComponentProtectionSettings;
import com.vmware.vim25.ClusterVmGroup;
import com.vmware.vim25.ClusterVmHostRuleInfo;
import com.vmware.vim25.ClusterVmOrchestrationInfo;
import com.vmware.vim25.ClusterVmOrchestrationSpec;
import com.vmware.vim25.ClusterVmReadiness;
import com.vmware.vim25.ClusterVmToolsMonitoringSettings;
import com.vmware.vim25.CollectorAddressUnset;
import com.vmware.vim25.ComplianceFailure;
import com.vmware.vim25.ComplianceFailureComplianceFailureValues;
import com.vmware.vim25.ComplianceLocator;
import com.vmware.vim25.ComplianceProfile;
import com.vmware.vim25.ComplianceResult;
import com.vmware.vim25.CompositeHostProfileRequestType;
import com.vmware.vim25.CompositeHostProfileTaskResponse;
import com.vmware.vim25.CompositePolicyOption;
import com.vmware.vim25.ComputeDiskPartitionInfoForResizeRequestType;
import com.vmware.vim25.ComputeDiskPartitionInfoForResizeResponse;
import com.vmware.vim25.ComputeDiskPartitionInfoRequestType;
import com.vmware.vim25.ComputeDiskPartitionInfoResponse;
import com.vmware.vim25.ComputeResourceConfigInfo;
import com.vmware.vim25.ComputeResourceConfigSpec;
import com.vmware.vim25.ComputeResourceEventArgument;
import com.vmware.vim25.ComputeResourceHostSPBMLicenseInfo;
import com.vmware.vim25.ComputeResourceSummary;
import com.vmware.vim25.ConcurrentAccess;
import com.vmware.vim25.ConfigTarget;
import com.vmware.vim25.ConfigureCryptoKeyRequestType;
import com.vmware.vim25.ConfigureCryptoKeyResponse;
import com.vmware.vim25.ConfigureDatastoreIORMRequestType;
import com.vmware.vim25.ConfigureDatastoreIORMTaskResponse;
import com.vmware.vim25.ConfigureDatastorePrincipalRequestType;
import com.vmware.vim25.ConfigureDatastorePrincipalResponse;
import com.vmware.vim25.ConfigureEvcModeRequestType;
import com.vmware.vim25.ConfigureEvcModeTaskResponse;
import com.vmware.vim25.ConfigureHCIRequestType;
import com.vmware.vim25.ConfigureHCITaskResponse;
import com.vmware.vim25.ConfigureHostCacheRequestType;
import com.vmware.vim25.ConfigureHostCacheTaskResponse;
import com.vmware.vim25.ConfigureLicenseSourceRequestType;
import com.vmware.vim25.ConfigureLicenseSourceResponse;
import com.vmware.vim25.ConfigurePowerPolicyRequestType;
import com.vmware.vim25.ConfigurePowerPolicyResponse;
import com.vmware.vim25.ConfigureStorageDrsForPodRequestType;
import com.vmware.vim25.ConfigureStorageDrsForPodTaskResponse;
import com.vmware.vim25.ConfigureVFlashResourceExRequestType;
import com.vmware.vim25.ConfigureVFlashResourceExTaskResponse;
import com.vmware.vim25.ConfigureVchaRequestType;
import com.vmware.vim25.ConfigureVchaTaskResponse;
import com.vmware.vim25.ConflictingConfiguration;
import com.vmware.vim25.ConflictingConfigurationConfig;
import com.vmware.vim25.ConflictingDatastoreFound;
import com.vmware.vim25.ConnectNvmeControllerRequestType;
import com.vmware.vim25.ConnectNvmeControllerResponse;
import com.vmware.vim25.ConnectedIso;
import com.vmware.vim25.ConsolidateVMDisksRequestType;
import com.vmware.vim25.ConsolidateVMDisksTaskResponse;
import com.vmware.vim25.ContinueRetrievePropertiesExRequestType;
import com.vmware.vim25.ContinueRetrievePropertiesExResponse;
import com.vmware.vim25.ConvertNamespacePathToUuidPathRequestType;
import com.vmware.vim25.ConvertNamespacePathToUuidPathResponse;
import com.vmware.vim25.CopyDatastoreFileRequestType;
import com.vmware.vim25.CopyDatastoreFileTaskResponse;
import com.vmware.vim25.CopyVirtualDiskRequestType;
import com.vmware.vim25.CopyVirtualDiskTaskResponse;
import com.vmware.vim25.CpuCompatibilityUnknown;
import com.vmware.vim25.CpuHotPlugNotSupported;
import com.vmware.vim25.CpuIncompatible;
import com.vmware.vim25.CpuIncompatible1ECX;
import com.vmware.vim25.CpuIncompatible81EDX;
import com.vmware.vim25.CreateAlarmRequestType;
import com.vmware.vim25.CreateAlarmResponse;
import com.vmware.vim25.CreateChildVMRequestType;
import com.vmware.vim25.CreateChildVMTaskResponse;
import com.vmware.vim25.CreateClusterExRequestType;
import com.vmware.vim25.CreateClusterExResponse;
import com.vmware.vim25.CreateClusterRequestType;
import com.vmware.vim25.CreateClusterResponse;
import com.vmware.vim25.CreateCollectorForEventsRequestType;
import com.vmware.vim25.CreateCollectorForEventsResponse;
import com.vmware.vim25.CreateCollectorForTasksRequestType;
import com.vmware.vim25.CreateCollectorForTasksResponse;
import com.vmware.vim25.CreateContainerViewRequestType;
import com.vmware.vim25.CreateContainerViewResponse;
import com.vmware.vim25.CreateCustomizationSpecRequestType;
import com.vmware.vim25.CreateCustomizationSpecResponse;
import com.vmware.vim25.CreateDVPortgroupRequestType;
import com.vmware.vim25.CreateDVPortgroupTaskResponse;
import com.vmware.vim25.CreateDVSRequestType;
import com.vmware.vim25.CreateDVSTaskResponse;
import com.vmware.vim25.CreateDatacenterRequestType;
import com.vmware.vim25.CreateDatacenterResponse;
import com.vmware.vim25.CreateDefaultProfileRequestType;
import com.vmware.vim25.CreateDefaultProfileResponse;
import com.vmware.vim25.CreateDescriptorRequestType;
import com.vmware.vim25.CreateDescriptorResponse;
import com.vmware.vim25.CreateDiagnosticPartitionRequestType;
import com.vmware.vim25.CreateDiagnosticPartitionResponse;
import com.vmware.vim25.CreateDirectoryRequestType;
import com.vmware.vim25.CreateDirectoryResponse;
import com.vmware.vim25.CreateDiskFromSnapshotRequestType;
import com.vmware.vim25.CreateDiskFromSnapshotTaskResponse;
import com.vmware.vim25.CreateDiskRequestType;
import com.vmware.vim25.CreateDiskTaskResponse;
import com.vmware.vim25.CreateFilterRequestType;
import com.vmware.vim25.CreateFilterResponse;
import com.vmware.vim25.CreateFolderRequestType;
import com.vmware.vim25.CreateFolderResponse;
import com.vmware.vim25.CreateGroupRequestType;
import com.vmware.vim25.CreateGroupResponse;
import com.vmware.vim25.CreateImportSpecRequestType;
import com.vmware.vim25.CreateImportSpecResponse;
import com.vmware.vim25.CreateInventoryViewRequestType;
import com.vmware.vim25.CreateInventoryViewResponse;
import com.vmware.vim25.CreateIpPoolRequestType;
import com.vmware.vim25.CreateIpPoolResponse;
import com.vmware.vim25.CreateListViewFromViewRequestType;
import com.vmware.vim25.CreateListViewFromViewResponse;
import com.vmware.vim25.CreateListViewRequestType;
import com.vmware.vim25.CreateListViewResponse;
import com.vmware.vim25.CreateLocalDatastoreRequestType;
import com.vmware.vim25.CreateLocalDatastoreResponse;
import com.vmware.vim25.CreateNasDatastoreRequestType;
import com.vmware.vim25.CreateNasDatastoreResponse;
import com.vmware.vim25.CreateNvdimmNamespaceRequestType;
import com.vmware.vim25.CreateNvdimmNamespaceTaskResponse;
import com.vmware.vim25.CreateNvdimmPMemNamespaceRequestType;
import com.vmware.vim25.CreateNvdimmPMemNamespaceTaskResponse;
import com.vmware.vim25.CreateNvmeOverRdmaAdapterRequestType;
import com.vmware.vim25.CreateNvmeOverRdmaAdapterResponse;
import com.vmware.vim25.CreateObjectScheduledTaskRequestType;
import com.vmware.vim25.CreateObjectScheduledTaskResponse;
import com.vmware.vim25.CreatePassiveNodeRequestType;
import com.vmware.vim25.CreatePassiveNodeTaskResponse;
import com.vmware.vim25.CreatePerfIntervalRequestType;
import com.vmware.vim25.CreatePerfIntervalResponse;
import com.vmware.vim25.CreateProfileRequestType;
import com.vmware.vim25.CreateProfileResponse;
import com.vmware.vim25.CreatePropertyCollectorRequestType;
import com.vmware.vim25.CreatePropertyCollectorResponse;
import com.vmware.vim25.CreateRegistryKeyInGuestRequestType;
import com.vmware.vim25.CreateRegistryKeyInGuestResponse;
import com.vmware.vim25.CreateResourcePoolRequestType;
import com.vmware.vim25.CreateResourcePoolResponse;
import com.vmware.vim25.CreateScheduledTaskRequestType;
import com.vmware.vim25.CreateScheduledTaskResponse;
import com.vmware.vim25.CreateScreenshotRequestType;
import com.vmware.vim25.CreateScreenshotTaskResponse;
import com.vmware.vim25.CreateSecondaryVMExRequestType;
import com.vmware.vim25.CreateSecondaryVMExTaskResponse;
import com.vmware.vim25.CreateSecondaryVMRequestType;
import com.vmware.vim25.CreateSecondaryVMTaskResponse;
import com.vmware.vim25.CreateSnapshotExRequestType;
import com.vmware.vim25.CreateSnapshotExTaskResponse;
import com.vmware.vim25.CreateSnapshotRequestType;
import com.vmware.vim25.CreateSnapshotTaskResponse;
import com.vmware.vim25.CreateStoragePodRequestType;
import com.vmware.vim25.CreateStoragePodResponse;
import com.vmware.vim25.CreateTaskAction;
import com.vmware.vim25.CreateTaskRequestType;
import com.vmware.vim25.CreateTaskResponse;
import com.vmware.vim25.CreateTemporaryDirectoryInGuestRequestType;
import com.vmware.vim25.CreateTemporaryDirectoryInGuestResponse;
import com.vmware.vim25.CreateTemporaryFileInGuestRequestType;
import com.vmware.vim25.CreateTemporaryFileInGuestResponse;
import com.vmware.vim25.CreateUserRequestType;
import com.vmware.vim25.CreateUserResponse;
import com.vmware.vim25.CreateVAppRequestType;
import com.vmware.vim25.CreateVAppResponse;
import com.vmware.vim25.CreateVMRequestType;
import com.vmware.vim25.CreateVMTaskResponse;
import com.vmware.vim25.CreateVirtualDiskRequestType;
import com.vmware.vim25.CreateVirtualDiskTaskResponse;
import com.vmware.vim25.CreateVmfsDatastoreRequestType;
import com.vmware.vim25.CreateVmfsDatastoreResponse;
import com.vmware.vim25.CreateVvolDatastoreRequestType;
import com.vmware.vim25.CreateVvolDatastoreResponse;
import com.vmware.vim25.CreateWitnessNodeRequestType;
import com.vmware.vim25.CreateWitnessNodeTaskResponse;
import com.vmware.vim25.CryptoKeyId;
import com.vmware.vim25.CryptoKeyPlain;
import com.vmware.vim25.CryptoKeyResult;
import com.vmware.vim25.CryptoManagerHostDisableRequestType;
import com.vmware.vim25.CryptoManagerHostDisableResponse;
import com.vmware.vim25.CryptoManagerHostEnableRequestType;
import com.vmware.vim25.CryptoManagerHostEnableResponse;
import com.vmware.vim25.CryptoManagerHostPrepareRequestType;
import com.vmware.vim25.CryptoManagerHostPrepareResponse;
import com.vmware.vim25.CryptoManagerKmipCertificateInfo;
import com.vmware.vim25.CryptoManagerKmipClusterStatus;
import com.vmware.vim25.CryptoManagerKmipCryptoKeyStatus;
import com.vmware.vim25.CryptoManagerKmipServerCertInfo;
import com.vmware.vim25.CryptoManagerKmipServerStatus;
import com.vmware.vim25.CryptoSpec;
import com.vmware.vim25.CryptoSpecDecrypt;
import com.vmware.vim25.CryptoSpecDeepRecrypt;
import com.vmware.vim25.CryptoSpecEncrypt;
import com.vmware.vim25.CryptoSpecNoOp;
import com.vmware.vim25.CryptoSpecRegister;
import com.vmware.vim25.CryptoSpecShallowRecrypt;
import com.vmware.vim25.CryptoUnlockRequestType;
import com.vmware.vim25.CryptoUnlockTaskResponse;
import com.vmware.vim25.CurrentTimeRequestType;
import com.vmware.vim25.CurrentTimeResponse;
import com.vmware.vim25.CustomFieldDef;
import com.vmware.vim25.CustomFieldDefAddedEvent;
import com.vmware.vim25.CustomFieldDefEvent;
import com.vmware.vim25.CustomFieldDefRemovedEvent;
import com.vmware.vim25.CustomFieldDefRenamedEvent;
import com.vmware.vim25.CustomFieldEvent;
import com.vmware.vim25.CustomFieldStringValue;
import com.vmware.vim25.CustomFieldValue;
import com.vmware.vim25.CustomFieldValueChangedEvent;
import com.vmware.vim25.CustomizationAdapterMapping;
import com.vmware.vim25.CustomizationAutoIpV6Generator;
import com.vmware.vim25.CustomizationCustomIpGenerator;
import com.vmware.vim25.CustomizationCustomIpV6Generator;
import com.vmware.vim25.CustomizationCustomName;
import com.vmware.vim25.CustomizationDhcpIpGenerator;
import com.vmware.vim25.CustomizationDhcpIpV6Generator;
import com.vmware.vim25.CustomizationEvent;
import com.vmware.vim25.CustomizationFailed;
import com.vmware.vim25.CustomizationFault;
import com.vmware.vim25.CustomizationFixedIp;
import com.vmware.vim25.CustomizationFixedIpV6;
import com.vmware.vim25.CustomizationFixedName;
import com.vmware.vim25.CustomizationGlobalIPSettings;
import com.vmware.vim25.CustomizationGuiRunOnce;
import com.vmware.vim25.CustomizationGuiUnattended;
import com.vmware.vim25.CustomizationIPSettings;
import com.vmware.vim25.CustomizationIPSettingsIpV6AddressSpec;
import com.vmware.vim25.CustomizationIdentification;
import com.vmware.vim25.CustomizationIdentitySettings;
import com.vmware.vim25.CustomizationIpGenerator;
import com.vmware.vim25.CustomizationIpV6Generator;
import com.vmware.vim25.CustomizationLicenseFilePrintData;
import com.vmware.vim25.CustomizationLinuxIdentityFailed;
import com.vmware.vim25.CustomizationLinuxOptions;
import com.vmware.vim25.CustomizationLinuxPrep;
import com.vmware.vim25.CustomizationName;
import com.vmware.vim25.CustomizationNetworkSetupFailed;
import com.vmware.vim25.CustomizationOptions;
import com.vmware.vim25.CustomizationPassword;
import com.vmware.vim25.CustomizationPending;
import com.vmware.vim25.CustomizationPrefixName;
import com.vmware.vim25.CustomizationSpec;
import com.vmware.vim25.CustomizationSpecInfo;
import com.vmware.vim25.CustomizationSpecItem;
import com.vmware.vim25.CustomizationSpecItemToXmlRequestType;
import com.vmware.vim25.CustomizationSpecItemToXmlResponse;
import com.vmware.vim25.CustomizationStartedEvent;
import com.vmware.vim25.CustomizationStatelessIpV6Generator;
import com.vmware.vim25.CustomizationSucceeded;
import com.vmware.vim25.CustomizationSysprep;
import com.vmware.vim25.CustomizationSysprepFailed;
import com.vmware.vim25.CustomizationSysprepText;
import com.vmware.vim25.CustomizationUnknownFailure;
import com.vmware.vim25.CustomizationUnknownIpGenerator;
import com.vmware.vim25.CustomizationUnknownIpV6Generator;
import com.vmware.vim25.CustomizationUnknownName;
import com.vmware.vim25.CustomizationUserData;
import com.vmware.vim25.CustomizationVirtualMachineName;
import com.vmware.vim25.CustomizationWinOptions;
import com.vmware.vim25.CustomizeGuestRequestType;
import com.vmware.vim25.CustomizeGuestTaskResponse;
import com.vmware.vim25.CustomizeVMRequestType;
import com.vmware.vim25.CustomizeVMTaskResponse;
import com.vmware.vim25.DVPortConfigInfo;
import com.vmware.vim25.DVPortConfigSpec;
import com.vmware.vim25.DVPortNotSupported;
import com.vmware.vim25.DVPortSetting;
import com.vmware.vim25.DVPortState;
import com.vmware.vim25.DVPortStatus;
import com.vmware.vim25.DVPortgroupConfigInfo;
import com.vmware.vim25.DVPortgroupConfigSpec;
import com.vmware.vim25.DVPortgroupCreatedEvent;
import com.vmware.vim25.DVPortgroupDestroyedEvent;
import com.vmware.vim25.DVPortgroupEvent;
import com.vmware.vim25.DVPortgroupPolicy;
import com.vmware.vim25.DVPortgroupReconfiguredEvent;
import com.vmware.vim25.DVPortgroupRenamedEvent;
import com.vmware.vim25.DVPortgroupRollbackRequestType;
import com.vmware.vim25.DVPortgroupRollbackTaskResponse;
import com.vmware.vim25.DVPortgroupSelection;
import com.vmware.vim25.DVSBackupRestoreCapability;
import com.vmware.vim25.DVSCapability;
import com.vmware.vim25.DVSConfigInfo;
import com.vmware.vim25.DVSConfigSpec;
import com.vmware.vim25.DVSContactInfo;
import com.vmware.vim25.DVSCreateSpec;
import com.vmware.vim25.DVSFailureCriteria;
import com.vmware.vim25.DVSFeatureCapability;
import com.vmware.vim25.DVSHealthCheckCapability;
import com.vmware.vim25.DVSHealthCheckConfig;
import com.vmware.vim25.DVSHostLocalPortInfo;
import com.vmware.vim25.DVSMacLearningPolicy;
import com.vmware.vim25.DVSMacManagementPolicy;
import com.vmware.vim25.DVSManagerDvsConfigTarget;
import com.vmware.vim25.DVSManagerExportEntityRequestType;
import com.vmware.vim25.DVSManagerExportEntityTaskResponse;
import com.vmware.vim25.DVSManagerImportEntityRequestType;
import com.vmware.vim25.DVSManagerImportEntityTaskResponse;
import com.vmware.vim25.DVSManagerLookupDvPortGroupRequestType;
import com.vmware.vim25.DVSManagerLookupDvPortGroupResponse;
import com.vmware.vim25.DVSNameArrayUplinkPortPolicy;
import com.vmware.vim25.DVSNetworkResourceManagementCapability;
import com.vmware.vim25.DVSNetworkResourcePool;
import com.vmware.vim25.DVSNetworkResourcePoolAllocationInfo;
import com.vmware.vim25.DVSNetworkResourcePoolConfigSpec;
import com.vmware.vim25.DVSPolicy;
import com.vmware.vim25.DVSRollbackCapability;
import com.vmware.vim25.DVSRollbackRequestType;
import com.vmware.vim25.DVSRollbackTaskResponse;
import com.vmware.vim25.DVSRuntimeInfo;
import com.vmware.vim25.DVSSecurityPolicy;
import com.vmware.vim25.DVSSelection;
import com.vmware.vim25.DVSSummary;
import com.vmware.vim25.DVSTrafficShapingPolicy;
import com.vmware.vim25.DVSUplinkPortPolicy;
import com.vmware.vim25.DVSVendorSpecificConfig;
import com.vmware.vim25.DVSVmVnicNetworkResourcePool;
import com.vmware.vim25.DailyTaskScheduler;
import com.vmware.vim25.DasAdmissionControlDisabledEvent;
import com.vmware.vim25.DasAdmissionControlEnabledEvent;
import com.vmware.vim25.DasAgentFoundEvent;
import com.vmware.vim25.DasAgentUnavailableEvent;
import com.vmware.vim25.DasClusterIsolatedEvent;
import com.vmware.vim25.DasConfigFault;
import com.vmware.vim25.DasDisabledEvent;
import com.vmware.vim25.DasEnabledEvent;
import com.vmware.vim25.DasHeartbeatDatastoreInfo;
import com.vmware.vim25.DasHostFailedEvent;
import com.vmware.vim25.DasHostIsolatedEvent;
import com.vmware.vim25.DatabaseError;
import com.vmware.vim25.DatabaseSizeEstimate;
import com.vmware.vim25.DatabaseSizeParam;
import com.vmware.vim25.DatacenterBasicConnectInfo;
import com.vmware.vim25.DatacenterConfigInfo;
import com.vmware.vim25.DatacenterConfigSpec;
import com.vmware.vim25.DatacenterCreatedEvent;
import com.vmware.vim25.DatacenterEvent;
import com.vmware.vim25.DatacenterEventArgument;
import com.vmware.vim25.DatacenterMismatch;
import com.vmware.vim25.DatacenterMismatchArgument;
import com.vmware.vim25.DatacenterRenamedEvent;
import com.vmware.vim25.DatastoreCapability;
import com.vmware.vim25.DatastoreCapacityIncreasedEvent;
import com.vmware.vim25.DatastoreDestroyedEvent;
import com.vmware.vim25.DatastoreDiscoveredEvent;
import com.vmware.vim25.DatastoreDuplicatedEvent;
import com.vmware.vim25.DatastoreEnterMaintenanceModeRequestType;
import com.vmware.vim25.DatastoreEnterMaintenanceModeResponse;
import com.vmware.vim25.DatastoreEvent;
import com.vmware.vim25.DatastoreEventArgument;
import com.vmware.vim25.DatastoreExitMaintenanceModeRequestType;
import com.vmware.vim25.DatastoreExitMaintenanceModeTaskResponse;
import com.vmware.vim25.DatastoreFileCopiedEvent;
import com.vmware.vim25.DatastoreFileDeletedEvent;
import com.vmware.vim25.DatastoreFileEvent;
import com.vmware.vim25.DatastoreFileMovedEvent;
import com.vmware.vim25.DatastoreHostMount;
import com.vmware.vim25.DatastoreIORMReconfiguredEvent;
import com.vmware.vim25.DatastoreInfo;
import com.vmware.vim25.DatastoreMountPathDatastorePair;
import com.vmware.vim25.DatastoreNotWritableOnHost;
import com.vmware.vim25.DatastoreOption;
import com.vmware.vim25.DatastorePrincipalConfigured;
import com.vmware.vim25.DatastoreRemovedOnHostEvent;
import com.vmware.vim25.DatastoreRenamedEvent;
import com.vmware.vim25.DatastoreRenamedOnHostEvent;
import com.vmware.vim25.DatastoreSummary;
import com.vmware.vim25.DatastoreVVolContainerFailoverPair;
import com.vmware.vim25.DateTimeProfile;
import com.vmware.vim25.DecodeLicenseRequestType;
import com.vmware.vim25.DecodeLicenseResponse;
import com.vmware.vim25.DefragmentAllDisksRequestType;
import com.vmware.vim25.DefragmentAllDisksResponse;
import com.vmware.vim25.DefragmentVirtualDiskRequestType;
import com.vmware.vim25.DefragmentVirtualDiskTaskResponse;
import com.vmware.vim25.DeleteCustomizationSpecRequestType;
import com.vmware.vim25.DeleteCustomizationSpecResponse;
import com.vmware.vim25.DeleteDatastoreFileRequestType;
import com.vmware.vim25.DeleteDatastoreFileTaskResponse;
import com.vmware.vim25.DeleteDirectoryInGuestRequestType;
import com.vmware.vim25.DeleteDirectoryInGuestResponse;
import com.vmware.vim25.DeleteDirectoryRequestType;
import com.vmware.vim25.DeleteDirectoryResponse;
import com.vmware.vim25.DeleteFileInGuestRequestType;
import com.vmware.vim25.DeleteFileInGuestResponse;
import com.vmware.vim25.DeleteFileRequestType;
import com.vmware.vim25.DeleteFileResponse;
import com.vmware.vim25.DeleteHostSpecificationRequestType;
import com.vmware.vim25.DeleteHostSpecificationResponse;
import com.vmware.vim25.DeleteHostSubSpecificationRequestType;
import com.vmware.vim25.DeleteHostSubSpecificationResponse;
import com.vmware.vim25.DeleteNvdimmBlockNamespacesRequestType;
import com.vmware.vim25.DeleteNvdimmBlockNamespacesTaskResponse;
import com.vmware.vim25.DeleteNvdimmNamespaceRequestType;
import com.vmware.vim25.DeleteNvdimmNamespaceTaskResponse;
import com.vmware.vim25.DeleteRegistryKeyInGuestRequestType;
import com.vmware.vim25.DeleteRegistryKeyInGuestResponse;
import com.vmware.vim25.DeleteRegistryValueInGuestRequestType;
import com.vmware.vim25.DeleteRegistryValueInGuestResponse;
import com.vmware.vim25.DeleteScsiLunStateRequestType;
import com.vmware.vim25.DeleteScsiLunStateResponse;
import com.vmware.vim25.DeleteSnapshotRequestType;
import com.vmware.vim25.DeleteSnapshotTaskResponse;
import com.vmware.vim25.DeleteVStorageObjectRequestType;
import com.vmware.vim25.DeleteVStorageObjectTaskResponse;
import com.vmware.vim25.DeleteVffsVolumeStateRequestType;
import com.vmware.vim25.DeleteVffsVolumeStateResponse;
import com.vmware.vim25.DeleteVirtualDiskRequestType;
import com.vmware.vim25.DeleteVirtualDiskTaskResponse;
import com.vmware.vim25.DeleteVmfsVolumeStateRequestType;
import com.vmware.vim25.DeleteVmfsVolumeStateResponse;
import com.vmware.vim25.DeleteVsanObjectsRequestType;
import com.vmware.vim25.DeleteVsanObjectsResponse;
import com.vmware.vim25.DeltaDiskFormatNotSupported;
import com.vmware.vim25.DeployVchaRequestType;
import com.vmware.vim25.DeployVchaTaskResponse;
import com.vmware.vim25.Description;
import com.vmware.vim25.DeselectVnicForNicTypeRequestType;
import com.vmware.vim25.DeselectVnicForNicTypeResponse;
import com.vmware.vim25.DeselectVnicRequestType;
import com.vmware.vim25.DeselectVnicResponse;
import com.vmware.vim25.DesiredSoftwareSpec;
import com.vmware.vim25.DesiredSoftwareSpecBaseImageSpec;
import com.vmware.vim25.DesiredSoftwareSpecVendorAddOnSpec;
import com.vmware.vim25.DestinationSwitchFull;
import com.vmware.vim25.DestinationVsanDisabled;
import com.vmware.vim25.DestroyChildrenRequestType;
import com.vmware.vim25.DestroyChildrenResponse;
import com.vmware.vim25.DestroyCollectorRequestType;
import com.vmware.vim25.DestroyCollectorResponse;
import com.vmware.vim25.DestroyDatastoreRequestType;
import com.vmware.vim25.DestroyDatastoreResponse;
import com.vmware.vim25.DestroyIpPoolRequestType;
import com.vmware.vim25.DestroyIpPoolResponse;
import com.vmware.vim25.DestroyNetworkRequestType;
import com.vmware.vim25.DestroyNetworkResponse;
import com.vmware.vim25.DestroyProfileRequestType;
import com.vmware.vim25.DestroyProfileResponse;
import com.vmware.vim25.DestroyPropertyCollectorRequestType;
import com.vmware.vim25.DestroyPropertyCollectorResponse;
import com.vmware.vim25.DestroyPropertyFilterRequestType;
import com.vmware.vim25.DestroyPropertyFilterResponse;
import com.vmware.vim25.DestroyRequestType;
import com.vmware.vim25.DestroyTaskResponse;
import com.vmware.vim25.DestroyVchaRequestType;
import com.vmware.vim25.DestroyVchaTaskResponse;
import com.vmware.vim25.DestroyVffsRequestType;
import com.vmware.vim25.DestroyVffsResponse;
import com.vmware.vim25.DestroyViewRequestType;
import com.vmware.vim25.DestroyViewResponse;
import com.vmware.vim25.DetachDiskRequestType;
import com.vmware.vim25.DetachDiskTaskResponse;
import com.vmware.vim25.DetachScsiLunExRequestType;
import com.vmware.vim25.DetachScsiLunExTaskResponse;
import com.vmware.vim25.DetachScsiLunRequestType;
import com.vmware.vim25.DetachScsiLunResponse;
import com.vmware.vim25.DetachTagFromVStorageObjectRequestType;
import com.vmware.vim25.DetachTagFromVStorageObjectResponse;
import com.vmware.vim25.DeviceBackedVirtualDiskSpec;
import com.vmware.vim25.DeviceBackingNotSupported;
import com.vmware.vim25.DeviceControllerNotSupported;
import com.vmware.vim25.DeviceGroupId;
import com.vmware.vim25.DeviceHotPlugNotSupported;
import com.vmware.vim25.DeviceNotFound;
import com.vmware.vim25.DeviceNotSupported;
import com.vmware.vim25.DeviceUnsupportedForVmPlatform;
import com.vmware.vim25.DeviceUnsupportedForVmVersion;
import com.vmware.vim25.DiagnosticManagerBundleInfo;
import com.vmware.vim25.DiagnosticManagerLogDescriptor;
import com.vmware.vim25.DiagnosticManagerLogHeader;
import com.vmware.vim25.DigestNotSupported;
import com.vmware.vim25.DirectoryNotEmpty;
import com.vmware.vim25.DisableAdminNotSupported;
import com.vmware.vim25.DisableAlarmRequestType;
import com.vmware.vim25.DisableAlarmResponse;
import com.vmware.vim25.DisableClusteredVmdkSupportRequestType;
import com.vmware.vim25.DisableClusteredVmdkSupportResponse;
import com.vmware.vim25.DisableEvcModeRequestType;
import com.vmware.vim25.DisableEvcModeTaskResponse;
import com.vmware.vim25.DisableFeatureRequestType;
import com.vmware.vim25.DisableFeatureResponse;
import com.vmware.vim25.DisableHyperThreadingRequestType;
import com.vmware.vim25.DisableHyperThreadingResponse;
import com.vmware.vim25.DisableMultipathPathRequestType;
import com.vmware.vim25.DisableMultipathPathResponse;
import com.vmware.vim25.DisableRulesetRequestType;
import com.vmware.vim25.DisableRulesetResponse;
import com.vmware.vim25.DisableSecondaryVMRequestType;
import com.vmware.vim25.DisableSecondaryVMTaskResponse;
import com.vmware.vim25.DisableSmartCardAuthenticationRequestType;
import com.vmware.vim25.DisableSmartCardAuthenticationResponse;
import com.vmware.vim25.DisallowedChangeByService;
import com.vmware.vim25.DisallowedDiskModeChange;
import com.vmware.vim25.DisallowedMigrationDeviceAttached;
import com.vmware.vim25.DisallowedOperationOnFailoverHost;
import com.vmware.vim25.DisconnectHostRequestType;
import com.vmware.vim25.DisconnectHostTaskResponse;
import com.vmware.vim25.DisconnectNvmeControllerRequestType;
import com.vmware.vim25.DisconnectNvmeControllerResponse;
import com.vmware.vim25.DisconnectedHostsBlockingEVC;
import com.vmware.vim25.DiscoverFcoeHbasRequestType;
import com.vmware.vim25.DiscoverFcoeHbasResponse;
import com.vmware.vim25.DiscoverNvmeControllersRequestType;
import com.vmware.vim25.DiscoverNvmeControllersResponse;
import com.vmware.vim25.DiskChangeExtent;
import com.vmware.vim25.DiskChangeInfo;
import com.vmware.vim25.DiskCryptoSpec;
import com.vmware.vim25.DiskHasPartitions;
import com.vmware.vim25.DiskIsLastRemainingNonSSD;
import com.vmware.vim25.DiskIsNonLocal;
import com.vmware.vim25.DiskIsUSB;
import com.vmware.vim25.DiskMoveTypeNotSupported;
import com.vmware.vim25.DiskNotSupported;
import com.vmware.vim25.DiskTooSmall;
import com.vmware.vim25.DissociateProfileRequestType;
import com.vmware.vim25.DissociateProfileResponse;
import com.vmware.vim25.DistributedVirtualPort;
import com.vmware.vim25.DistributedVirtualPortgroupInfo;
import com.vmware.vim25.DistributedVirtualPortgroupNsxPortgroupOperationResult;
import com.vmware.vim25.DistributedVirtualPortgroupProblem;
import com.vmware.vim25.DistributedVirtualSwitchHostMember;
import com.vmware.vim25.DistributedVirtualSwitchHostMemberBacking;
import com.vmware.vim25.DistributedVirtualSwitchHostMemberConfigInfo;
import com.vmware.vim25.DistributedVirtualSwitchHostMemberConfigSpec;
import com.vmware.vim25.DistributedVirtualSwitchHostMemberPnicBacking;
import com.vmware.vim25.DistributedVirtualSwitchHostMemberPnicSpec;
import com.vmware.vim25.DistributedVirtualSwitchHostMemberRuntimeState;
import com.vmware.vim25.DistributedVirtualSwitchHostMemberTransportZoneInfo;
import com.vmware.vim25.DistributedVirtualSwitchHostProductSpec;
import com.vmware.vim25.DistributedVirtualSwitchInfo;
import com.vmware.vim25.DistributedVirtualSwitchKeyedOpaqueBlob;
import com.vmware.vim25.DistributedVirtualSwitchManagerCompatibilityResult;
import com.vmware.vim25.DistributedVirtualSwitchManagerDvsProductSpec;
import com.vmware.vim25.DistributedVirtualSwitchManagerHostArrayFilter;
import com.vmware.vim25.DistributedVirtualSwitchManagerHostContainer;
import com.vmware.vim25.DistributedVirtualSwitchManagerHostContainerFilter;
import com.vmware.vim25.DistributedVirtualSwitchManagerHostDvsFilterSpec;
import com.vmware.vim25.DistributedVirtualSwitchManagerHostDvsMembershipFilter;
import com.vmware.vim25.DistributedVirtualSwitchManagerImportResult;
import com.vmware.vim25.DistributedVirtualSwitchPortConnectee;
import com.vmware.vim25.DistributedVirtualSwitchPortConnection;
import com.vmware.vim25.DistributedVirtualSwitchPortCriteria;
import com.vmware.vim25.DistributedVirtualSwitchPortStatistics;
import com.vmware.vim25.DistributedVirtualSwitchProductSpec;
import com.vmware.vim25.DoesCustomizationSpecExistRequestType;
import com.vmware.vim25.DoesCustomizationSpecExistResponse;
import com.vmware.vim25.DomainNotFound;
import com.vmware.vim25.DownloadDescriptionTreeRequestType;
import com.vmware.vim25.DownloadDescriptionTreeResponse;
import com.vmware.vim25.DrsDisabledEvent;
import com.vmware.vim25.DrsDisabledOnVm;
import com.vmware.vim25.DrsEnabledEvent;
import com.vmware.vim25.DrsEnteredStandbyModeEvent;
import com.vmware.vim25.DrsEnteringStandbyModeEvent;
import com.vmware.vim25.DrsExitStandbyModeFailedEvent;
import com.vmware.vim25.DrsExitedStandbyModeEvent;
import com.vmware.vim25.DrsExitingStandbyModeEvent;
import com.vmware.vim25.DrsInvocationFailedEvent;
import com.vmware.vim25.DrsRecoveredFromFailureEvent;
import com.vmware.vim25.DrsResourceConfigureFailedEvent;
import com.vmware.vim25.DrsResourceConfigureSyncedEvent;
import com.vmware.vim25.DrsRuleComplianceEvent;
import com.vmware.vim25.DrsRuleViolationEvent;
import com.vmware.vim25.DrsSoftRuleViolationEvent;
import com.vmware.vim25.DrsVmMigratedEvent;
import com.vmware.vim25.DrsVmPoweredOnEvent;
import com.vmware.vim25.DrsVmotionIncompatibleFault;
import com.vmware.vim25.DuplicateCustomizationSpecRequestType;
import com.vmware.vim25.DuplicateCustomizationSpecResponse;
import com.vmware.vim25.DuplicateDisks;
import com.vmware.vim25.DuplicateIpDetectedEvent;
import com.vmware.vim25.DuplicateName;
import com.vmware.vim25.DuplicateVsanNetworkInterface;
import com.vmware.vim25.DvpgImportEvent;
import com.vmware.vim25.DvpgRestoreEvent;
import com.vmware.vim25.DvsAcceptNetworkRuleAction;
import com.vmware.vim25.DvsApplyOperationFault;
import com.vmware.vim25.DvsApplyOperationFaultFaultOnObject;
import com.vmware.vim25.DvsCopyNetworkRuleAction;
import com.vmware.vim25.DvsCreatedEvent;
import com.vmware.vim25.DvsDestroyedEvent;
import com.vmware.vim25.DvsDropNetworkRuleAction;
import com.vmware.vim25.DvsEvent;
import com.vmware.vim25.DvsEventArgument;
import com.vmware.vim25.DvsFault;
import com.vmware.vim25.DvsFilterConfig;
import com.vmware.vim25.DvsFilterConfigSpec;
import com.vmware.vim25.DvsFilterParameter;
import com.vmware.vim25.DvsFilterPolicy;
import com.vmware.vim25.DvsGreEncapNetworkRuleAction;
import com.vmware.vim25.DvsHealthStatusChangeEvent;
import com.vmware.vim25.DvsHostBackInSyncEvent;
import com.vmware.vim25.DvsHostInfrastructureTrafficResource;
import com.vmware.vim25.DvsHostInfrastructureTrafficResourceAllocation;
import com.vmware.vim25.DvsHostJoinedEvent;
import com.vmware.vim25.DvsHostLeftEvent;
import com.vmware.vim25.DvsHostStatusUpdated;
import com.vmware.vim25.DvsHostVNicProfile;
import com.vmware.vim25.DvsHostWentOutOfSyncEvent;
import com.vmware.vim25.DvsImportEvent;
import com.vmware.vim25.DvsIpNetworkRuleQualifier;
import com.vmware.vim25.DvsIpPort;
import com.vmware.vim25.DvsIpPortRange;
import com.vmware.vim25.DvsLogNetworkRuleAction;
import com.vmware.vim25.DvsMacNetworkRuleQualifier;
import com.vmware.vim25.DvsMacRewriteNetworkRuleAction;
import com.vmware.vim25.DvsMergedEvent;
import com.vmware.vim25.DvsNetworkRuleAction;
import com.vmware.vim25.DvsNetworkRuleQualifier;
import com.vmware.vim25.DvsNotAuthorized;
import com.vmware.vim25.DvsOperationBulkFault;
import com.vmware.vim25.DvsOperationBulkFaultFaultOnHost;
import com.vmware.vim25.DvsOutOfSyncHostArgument;
import com.vmware.vim25.DvsPortBlockedEvent;
import com.vmware.vim25.DvsPortConnectedEvent;
import com.vmware.vim25.DvsPortCreatedEvent;
import com.vmware.vim25.DvsPortDeletedEvent;
import com.vmware.vim25.DvsPortDisconnectedEvent;
import com.vmware.vim25.DvsPortEnteredPassthruEvent;
import com.vmware.vim25.DvsPortExitedPassthruEvent;
import com.vmware.vim25.DvsPortJoinPortgroupEvent;
import com.vmware.vim25.DvsPortLeavePortgroupEvent;
import com.vmware.vim25.DvsPortLinkDownEvent;
import com.vmware.vim25.DvsPortLinkUpEvent;
import com.vmware.vim25.DvsPortReconfiguredEvent;
import com.vmware.vim25.DvsPortRuntimeChangeEvent;
import com.vmware.vim25.DvsPortUnblockedEvent;
import com.vmware.vim25.DvsPortVendorSpecificStateChangeEvent;
import com.vmware.vim25.DvsProfile;
import com.vmware.vim25.DvsPuntNetworkRuleAction;
import com.vmware.vim25.DvsRateLimitNetworkRuleAction;
import com.vmware.vim25.DvsReconfigureVmVnicNetworkResourcePoolRequestType;
import com.vmware.vim25.DvsReconfigureVmVnicNetworkResourcePoolTaskResponse;
import com.vmware.vim25.DvsReconfiguredEvent;
import com.vmware.vim25.DvsRenamedEvent;
import com.vmware.vim25.DvsResourceRuntimeInfo;
import com.vmware.vim25.DvsRestoreEvent;
import com.vmware.vim25.DvsScopeViolated;
import com.vmware.vim25.DvsServiceConsoleVNicProfile;
import com.vmware.vim25.DvsSingleIpPort;
import com.vmware.vim25.DvsSystemTrafficNetworkRuleQualifier;
import com.vmware.vim25.DvsTrafficFilterConfig;
import com.vmware.vim25.DvsTrafficFilterConfigSpec;
import com.vmware.vim25.DvsTrafficRule;
import com.vmware.vim25.DvsTrafficRuleset;
import com.vmware.vim25.DvsUpdateTagNetworkRuleAction;
import com.vmware.vim25.DvsUpgradeAvailableEvent;
import com.vmware.vim25.DvsUpgradeInProgressEvent;
import com.vmware.vim25.DvsUpgradeRejectedEvent;
import com.vmware.vim25.DvsUpgradedEvent;
import com.vmware.vim25.DvsVNicProfile;
import com.vmware.vim25.DvsVmVnicNetworkResourcePoolRuntimeInfo;
import com.vmware.vim25.DvsVmVnicResourceAllocation;
import com.vmware.vim25.DvsVmVnicResourcePoolConfigSpec;
import com.vmware.vim25.DvsVnicAllocatedResource;
import com.vmware.vim25.DynamicArray;
import com.vmware.vim25.DynamicData;
import com.vmware.vim25.DynamicProperty;
import com.vmware.vim25.EVCAdmissionFailed;
import com.vmware.vim25.EVCAdmissionFailedCPUFeaturesForMode;
import com.vmware.vim25.EVCAdmissionFailedCPUModel;
import com.vmware.vim25.EVCAdmissionFailedCPUModelForMode;
import com.vmware.vim25.EVCAdmissionFailedCPUVendor;
import com.vmware.vim25.EVCAdmissionFailedCPUVendorUnknown;
import com.vmware.vim25.EVCAdmissionFailedHostDisconnected;
import com.vmware.vim25.EVCAdmissionFailedHostSoftware;
import com.vmware.vim25.EVCAdmissionFailedHostSoftwareForMode;
import com.vmware.vim25.EVCAdmissionFailedVmActive;
import com.vmware.vim25.EVCConfigFault;
import com.vmware.vim25.EVCMode;
import com.vmware.vim25.EVCModeIllegalByVendor;
import com.vmware.vim25.EVCModeUnsupportedByHosts;
import com.vmware.vim25.EVCUnsupportedByHostHardware;
import com.vmware.vim25.EVCUnsupportedByHostSoftware;
import com.vmware.vim25.EagerZeroVirtualDiskRequestType;
import com.vmware.vim25.EagerZeroVirtualDiskTaskResponse;
import com.vmware.vim25.EightHostLimitViolated;
import com.vmware.vim25.ElementDescription;
import com.vmware.vim25.EnableAlarmActionsRequestType;
import com.vmware.vim25.EnableAlarmActionsResponse;
import com.vmware.vim25.EnableAlarmRequestType;
import com.vmware.vim25.EnableAlarmResponse;
import com.vmware.vim25.EnableClusteredVmdkSupportRequestType;
import com.vmware.vim25.EnableClusteredVmdkSupportResponse;
import com.vmware.vim25.EnableCryptoRequestType;
import com.vmware.vim25.EnableCryptoResponse;
import com.vmware.vim25.EnableFeatureRequestType;
import com.vmware.vim25.EnableFeatureResponse;
import com.vmware.vim25.EnableHyperThreadingRequestType;
import com.vmware.vim25.EnableHyperThreadingResponse;
import com.vmware.vim25.EnableMultipathPathRequestType;
import com.vmware.vim25.EnableMultipathPathResponse;
import com.vmware.vim25.EnableNetworkResourceManagementRequestType;
import com.vmware.vim25.EnableNetworkResourceManagementResponse;
import com.vmware.vim25.EnableRulesetRequestType;
import com.vmware.vim25.EnableRulesetResponse;
import com.vmware.vim25.EnableSecondaryVMRequestType;
import com.vmware.vim25.EnableSecondaryVMTaskResponse;
import com.vmware.vim25.EnableSmartCardAuthenticationRequestType;
import com.vmware.vim25.EnableSmartCardAuthenticationResponse;
import com.vmware.vim25.EncryptionKeyRequired;
import com.vmware.vim25.EnterLockdownModeRequestType;
import com.vmware.vim25.EnterLockdownModeResponse;
import com.vmware.vim25.EnterMaintenanceModeRequestType;
import com.vmware.vim25.EnterMaintenanceModeTaskResponse;
import com.vmware.vim25.EnteredMaintenanceModeEvent;
import com.vmware.vim25.EnteredStandbyModeEvent;
import com.vmware.vim25.EnteringMaintenanceModeEvent;
import com.vmware.vim25.EnteringStandbyModeEvent;
import com.vmware.vim25.EntityBackup;
import com.vmware.vim25.EntityBackupConfig;
import com.vmware.vim25.EntityEventArgument;
import com.vmware.vim25.EntityPrivilege;
import com.vmware.vim25.EnumDescription;
import com.vmware.vim25.EnvironmentBrowserConfigOptionQuerySpec;
import com.vmware.vim25.ErrorUpgradeEvent;
import com.vmware.vim25.EstimateDatabaseSizeRequestType;
import com.vmware.vim25.EstimateDatabaseSizeResponse;
import com.vmware.vim25.EstimateStorageForConsolidateSnapshotsRequestType;
import com.vmware.vim25.EstimateStorageForConsolidateSnapshotsTaskResponse;
import com.vmware.vim25.EsxAgentHostManagerUpdateConfigRequestType;
import com.vmware.vim25.EsxAgentHostManagerUpdateConfigResponse;
import com.vmware.vim25.EvacuateVsanNodeRequestType;
import com.vmware.vim25.EvacuateVsanNodeTaskResponse;
import com.vmware.vim25.EvaluationLicenseSource;
import com.vmware.vim25.EvcManagerRequestType;
import com.vmware.vim25.EvcManagerResponse;
import com.vmware.vim25.Event;
import com.vmware.vim25.EventAlarmExpression;
import com.vmware.vim25.EventAlarmExpressionComparison;
import com.vmware.vim25.EventArgDesc;
import com.vmware.vim25.EventArgument;
import com.vmware.vim25.EventDescription;
import com.vmware.vim25.EventDescriptionEventDetail;
import com.vmware.vim25.EventEx;
import com.vmware.vim25.EventFilterSpec;
import com.vmware.vim25.EventFilterSpecByEntity;
import com.vmware.vim25.EventFilterSpecByTime;
import com.vmware.vim25.EventFilterSpecByUsername;
import com.vmware.vim25.ExecuteHostProfileRequestType;
import com.vmware.vim25.ExecuteHostProfileResponse;
import com.vmware.vim25.ExecuteSimpleCommandRequestType;
import com.vmware.vim25.ExecuteSimpleCommandResponse;
import com.vmware.vim25.ExitLockdownModeRequestType;
import com.vmware.vim25.ExitLockdownModeResponse;
import com.vmware.vim25.ExitMaintenanceModeEvent;
import com.vmware.vim25.ExitMaintenanceModeRequestType;
import com.vmware.vim25.ExitMaintenanceModeTaskResponse;
import com.vmware.vim25.ExitStandbyModeFailedEvent;
import com.vmware.vim25.ExitedStandbyModeEvent;
import com.vmware.vim25.ExitingStandbyModeEvent;
import com.vmware.vim25.ExpandVmfsDatastoreRequestType;
import com.vmware.vim25.ExpandVmfsDatastoreResponse;
import com.vmware.vim25.ExpandVmfsExtentRequestType;
import com.vmware.vim25.ExpandVmfsExtentResponse;
import com.vmware.vim25.ExpiredAddonLicense;
import com.vmware.vim25.ExpiredEditionLicense;
import com.vmware.vim25.ExpiredFeatureLicense;
import com.vmware.vim25.ExportAnswerFileRequestType;
import com.vmware.vim25.ExportAnswerFileTaskResponse;
import com.vmware.vim25.ExportProfileRequestType;
import com.vmware.vim25.ExportProfileResponse;
import com.vmware.vim25.ExportSnapshotRequestType;
import com.vmware.vim25.ExportSnapshotResponse;
import com.vmware.vim25.ExportVAppRequestType;
import com.vmware.vim25.ExportVAppResponse;
import com.vmware.vim25.ExportVmRequestType;
import com.vmware.vim25.ExportVmResponse;
import com.vmware.vim25.ExtExtendedProductInfo;
import com.vmware.vim25.ExtManagedEntityInfo;
import com.vmware.vim25.ExtSolutionManagerInfo;
import com.vmware.vim25.ExtSolutionManagerInfoTabInfo;
import com.vmware.vim25.ExtendDiskRequestType;
import com.vmware.vim25.ExtendDiskTaskResponse;
import com.vmware.vim25.ExtendHCIRequestType;
import com.vmware.vim25.ExtendHCITaskResponse;
import com.vmware.vim25.ExtendVffsRequestType;
import com.vmware.vim25.ExtendVffsResponse;
import com.vmware.vim25.ExtendVirtualDiskRequestType;
import com.vmware.vim25.ExtendVirtualDiskTaskResponse;
import com.vmware.vim25.ExtendVmfsDatastoreRequestType;
import com.vmware.vim25.ExtendVmfsDatastoreResponse;
import com.vmware.vim25.ExtendedDescription;
import com.vmware.vim25.ExtendedElementDescription;
import com.vmware.vim25.ExtendedEvent;
import com.vmware.vim25.ExtendedEventPair;
import com.vmware.vim25.ExtendedFault;
import com.vmware.vim25.Extension;
import com.vmware.vim25.ExtensionClientInfo;
import com.vmware.vim25.ExtensionEventTypeInfo;
import com.vmware.vim25.ExtensionFaultTypeInfo;
import com.vmware.vim25.ExtensionHealthInfo;
import com.vmware.vim25.ExtensionManagerIpAllocationUsage;
import com.vmware.vim25.ExtensionOvfConsumerInfo;
import com.vmware.vim25.ExtensionPrivilegeInfo;
import com.vmware.vim25.ExtensionResourceInfo;
import com.vmware.vim25.ExtensionServerInfo;
import com.vmware.vim25.ExtensionTaskTypeInfo;
import com.vmware.vim25.ExtractOvfEnvironmentRequestType;
import com.vmware.vim25.ExtractOvfEnvironmentResponse;
import com.vmware.vim25.FailToEnableSPBM;
import com.vmware.vim25.FailToLockFaultToleranceVMs;
import com.vmware.vim25.FailoverLevelRestored;
import com.vmware.vim25.FailoverNodeInfo;
import com.vmware.vim25.FaultDomainId;
import com.vmware.vim25.FaultToleranceAntiAffinityViolated;
import com.vmware.vim25.FaultToleranceCannotEditMem;
import com.vmware.vim25.FaultToleranceConfigInfo;
import com.vmware.vim25.FaultToleranceConfigSpec;
import com.vmware.vim25.FaultToleranceCpuIncompatible;
import com.vmware.vim25.FaultToleranceDiskSpec;
import com.vmware.vim25.FaultToleranceMetaSpec;
import com.vmware.vim25.FaultToleranceNeedsThickDisk;
import com.vmware.vim25.FaultToleranceNotLicensed;
import com.vmware.vim25.FaultToleranceNotSameBuild;
import com.vmware.vim25.FaultTolerancePrimaryConfigInfo;
import com.vmware.vim25.FaultTolerancePrimaryPowerOnNotAttempted;
import com.vmware.vim25.FaultToleranceSecondaryConfigInfo;
import com.vmware.vim25.FaultToleranceSecondaryOpResult;
import com.vmware.vim25.FaultToleranceVMConfigSpec;
import com.vmware.vim25.FaultToleranceVmNotDasProtected;
import com.vmware.vim25.FaultsByHost;
import com.vmware.vim25.FaultsByVM;
import com.vmware.vim25.FcoeConfig;
import com.vmware.vim25.FcoeConfigFcoeCapabilities;
import com.vmware.vim25.FcoeConfigFcoeSpecification;
import com.vmware.vim25.FcoeConfigVlanRange;
import com.vmware.vim25.FcoeFault;
import com.vmware.vim25.FcoeFaultPnicHasNoPortSet;
import com.vmware.vim25.FeatureRequirementsNotMet;
import com.vmware.vim25.FetchDVPortKeysRequestType;
import com.vmware.vim25.FetchDVPortKeysResponse;
import com.vmware.vim25.FetchDVPortsRequestType;
import com.vmware.vim25.FetchDVPortsResponse;
import com.vmware.vim25.FetchSoftwarePackagesRequestType;
import com.vmware.vim25.FetchSoftwarePackagesResponse;
import com.vmware.vim25.FetchSystemEventLogRequestType;
import com.vmware.vim25.FetchSystemEventLogResponse;
import com.vmware.vim25.FetchUserPrivilegeOnEntitiesRequestType;
import com.vmware.vim25.FetchUserPrivilegeOnEntitiesResponse;
import com.vmware.vim25.FileAlreadyExists;
import com.vmware.vim25.FileBackedPortNotSupported;
import com.vmware.vim25.FileBackedVirtualDiskSpec;
import com.vmware.vim25.FileFault;
import com.vmware.vim25.FileInfo;
import com.vmware.vim25.FileLocked;
import com.vmware.vim25.FileNameTooLong;
import com.vmware.vim25.FileNotFound;
import com.vmware.vim25.FileNotWritable;
import com.vmware.vim25.FileQuery;
import com.vmware.vim25.FileQueryFlags;
import com.vmware.vim25.FileTooLarge;
import com.vmware.vim25.FileTransferInformation;
import com.vmware.vim25.FilesystemQuiesceFault;
import com.vmware.vim25.FilterInUse;
import com.vmware.vim25.FindAllByDnsNameRequestType;
import com.vmware.vim25.FindAllByDnsNameResponse;
import com.vmware.vim25.FindAllByIpRequestType;
import com.vmware.vim25.FindAllByIpResponse;
import com.vmware.vim25.FindAllByUuidRequestType;
import com.vmware.vim25.FindAllByUuidResponse;
import com.vmware.vim25.FindAssociatedProfileRequestType;
import com.vmware.vim25.FindAssociatedProfileResponse;
import com.vmware.vim25.FindByDatastorePathRequestType;
import com.vmware.vim25.FindByDatastorePathResponse;
import com.vmware.vim25.FindByDnsNameRequestType;
import com.vmware.vim25.FindByDnsNameResponse;
import com.vmware.vim25.FindByInventoryPathRequestType;
import com.vmware.vim25.FindByInventoryPathResponse;
import com.vmware.vim25.FindByIpRequestType;
import com.vmware.vim25.FindByIpResponse;
import com.vmware.vim25.FindByUuidRequestType;
import com.vmware.vim25.FindByUuidResponse;
import com.vmware.vim25.FindChildRequestType;
import com.vmware.vim25.FindChildResponse;
import com.vmware.vim25.FindExtensionRequestType;
import com.vmware.vim25.FindExtensionResponse;
import com.vmware.vim25.FindRulesForVmRequestType;
import com.vmware.vim25.FindRulesForVmResponse;
import com.vmware.vim25.FirewallProfile;
import com.vmware.vim25.FirewallProfileRulesetProfile;
import com.vmware.vim25.FloatOption;
import com.vmware.vim25.FloppyImageFileInfo;
import com.vmware.vim25.FloppyImageFileQuery;
import com.vmware.vim25.FolderBatchAddHostsToClusterResult;
import com.vmware.vim25.FolderBatchAddStandaloneHostsResult;
import com.vmware.vim25.FolderEventArgument;
import com.vmware.vim25.FolderFailedHostResult;
import com.vmware.vim25.FolderFileInfo;
import com.vmware.vim25.FolderFileQuery;
import com.vmware.vim25.FolderNewHostSpec;
import com.vmware.vim25.FormatVffsRequestType;
import com.vmware.vim25.FormatVffsResponse;
import com.vmware.vim25.FormatVmfsRequestType;
import com.vmware.vim25.FormatVmfsResponse;
import com.vmware.vim25.FtIssuesOnHost;
import com.vmware.vim25.FullStorageVMotionNotSupported;
import com.vmware.vim25.GatewayConnectFault;
import com.vmware.vim25.GatewayHostNotReachable;
import com.vmware.vim25.GatewayNotFound;
import com.vmware.vim25.GatewayNotReachable;
import com.vmware.vim25.GatewayOperationRefused;
import com.vmware.vim25.GatewayToHostAuthFault;
import com.vmware.vim25.GatewayToHostConnectFault;
import com.vmware.vim25.GatewayToHostTrustVerifyFault;
import com.vmware.vim25.GeneralEvent;
import com.vmware.vim25.GeneralHostErrorEvent;
import com.vmware.vim25.GeneralHostInfoEvent;
import com.vmware.vim25.GeneralHostWarningEvent;
import com.vmware.vim25.GeneralUserEvent;
import com.vmware.vim25.GeneralVmErrorEvent;
import com.vmware.vim25.GeneralVmInfoEvent;
import com.vmware.vim25.GeneralVmWarningEvent;
import com.vmware.vim25.GenerateCertificateSigningRequestByDnRequestType;
import com.vmware.vim25.GenerateCertificateSigningRequestByDnResponse;
import com.vmware.vim25.GenerateCertificateSigningRequestRequestType;
import com.vmware.vim25.GenerateCertificateSigningRequestResponse;
import com.vmware.vim25.GenerateClientCsrRequestType;
import com.vmware.vim25.GenerateClientCsrResponse;
import com.vmware.vim25.GenerateConfigTaskListRequestType;
import com.vmware.vim25.GenerateConfigTaskListResponse;
import com.vmware.vim25.GenerateHostConfigTaskSpecRequestType;
import com.vmware.vim25.GenerateHostConfigTaskSpecTaskResponse;
import com.vmware.vim25.GenerateHostProfileTaskListRequestType;
import com.vmware.vim25.GenerateHostProfileTaskListTaskResponse;
import com.vmware.vim25.GenerateKeyRequestType;
import com.vmware.vim25.GenerateKeyResponse;
import com.vmware.vim25.GenerateLogBundlesRequestType;
import com.vmware.vim25.GenerateLogBundlesTaskResponse;
import com.vmware.vim25.GenerateSelfSignedClientCertRequestType;
import com.vmware.vim25.GenerateSelfSignedClientCertResponse;
import com.vmware.vim25.GenericDrsFault;
import com.vmware.vim25.GenericVmConfigFault;
import com.vmware.vim25.GetAlarmRequestType;
import com.vmware.vim25.GetAlarmResponse;
import com.vmware.vim25.GetAlarmStateRequestType;
import com.vmware.vim25.GetAlarmStateResponse;
import com.vmware.vim25.GetClusterModeRequestType;
import com.vmware.vim25.GetClusterModeResponse;
import com.vmware.vim25.GetCustomizationSpecRequestType;
import com.vmware.vim25.GetCustomizationSpecResponse;
import com.vmware.vim25.GetDefaultKmsClusterRequestType;
import com.vmware.vim25.GetDefaultKmsClusterResponse;
import com.vmware.vim25.GetPublicKeyRequestType;
import com.vmware.vim25.GetPublicKeyResponse;
import com.vmware.vim25.GetResourceUsageRequestType;
import com.vmware.vim25.GetResourceUsageResponse;
import com.vmware.vim25.GetSiteInfoRequestType;
import com.vmware.vim25.GetSiteInfoResponse;
import com.vmware.vim25.GetVchaClusterHealthRequestType;
import com.vmware.vim25.GetVchaClusterHealthResponse;
import com.vmware.vim25.GetVchaConfigRequestType;
import com.vmware.vim25.GetVchaConfigResponse;
import com.vmware.vim25.GetVsanObjExtAttrsRequestType;
import com.vmware.vim25.GetVsanObjExtAttrsResponse;
import com.vmware.vim25.GhostDvsProxySwitchDetectedEvent;
import com.vmware.vim25.GhostDvsProxySwitchRemovedEvent;
import com.vmware.vim25.GlobalMessageChangedEvent;
import com.vmware.vim25.GroupAlarmAction;
import com.vmware.vim25.GuestAliases;
import com.vmware.vim25.GuestAuthAliasInfo;
import com.vmware.vim25.GuestAuthAnySubject;
import com.vmware.vim25.GuestAuthNamedSubject;
import com.vmware.vim25.GuestAuthSubject;
import com.vmware.vim25.GuestAuthentication;
import com.vmware.vim25.GuestAuthenticationChallenge;
import com.vmware.vim25.GuestComponentsOutOfDate;
import com.vmware.vim25.GuestDiskInfo;
import com.vmware.vim25.GuestFileAttributes;
import com.vmware.vim25.GuestFileInfo;
import com.vmware.vim25.GuestInfo;
import com.vmware.vim25.GuestInfoNamespaceGenerationInfo;
import com.vmware.vim25.GuestInfoVirtualDiskMapping;
import com.vmware.vim25.GuestListFileInfo;
import com.vmware.vim25.GuestMappedAliases;
import com.vmware.vim25.GuestMultipleMappings;
import com.vmware.vim25.GuestNicInfo;
import com.vmware.vim25.GuestOperationsFault;
import com.vmware.vim25.GuestOperationsUnavailable;
import com.vmware.vim25.GuestOsDescriptor;
import com.vmware.vim25.GuestPermissionDenied;
import com.vmware.vim25.GuestPosixFileAttributes;
import com.vmware.vim25.GuestProcessInfo;
import com.vmware.vim25.GuestProcessNotFound;
import com.vmware.vim25.GuestProgramSpec;
import com.vmware.vim25.GuestRegKeyNameSpec;
import com.vmware.vim25.GuestRegKeyRecordSpec;
import com.vmware.vim25.GuestRegKeySpec;
import com.vmware.vim25.GuestRegValueBinarySpec;
import com.vmware.vim25.GuestRegValueDataSpec;
import com.vmware.vim25.GuestRegValueDwordSpec;
import com.vmware.vim25.GuestRegValueExpandStringSpec;
import com.vmware.vim25.GuestRegValueMultiStringSpec;
import com.vmware.vim25.GuestRegValueNameSpec;
import com.vmware.vim25.GuestRegValueQwordSpec;
import com.vmware.vim25.GuestRegValueSpec;
import com.vmware.vim25.GuestRegValueStringSpec;
import com.vmware.vim25.GuestRegistryFault;
import com.vmware.vim25.GuestRegistryKeyAlreadyExists;
import com.vmware.vim25.GuestRegistryKeyFault;
import com.vmware.vim25.GuestRegistryKeyHasSubkeys;
import com.vmware.vim25.GuestRegistryKeyInvalid;
import com.vmware.vim25.GuestRegistryKeyParentVolatile;
import com.vmware.vim25.GuestRegistryValueFault;
import com.vmware.vim25.GuestRegistryValueNotFound;
import com.vmware.vim25.GuestScreenInfo;
import com.vmware.vim25.GuestStackInfo;
import com.vmware.vim25.GuestWindowsFileAttributes;
import com.vmware.vim25.GuestWindowsProgramSpec;
import com.vmware.vim25.HAErrorsAtDest;
import com.vmware.vim25.HasMonitoredEntityRequestType;
import com.vmware.vim25.HasMonitoredEntityResponse;
import com.vmware.vim25.HasPrivilegeOnEntitiesRequestType;
import com.vmware.vim25.HasPrivilegeOnEntitiesResponse;
import com.vmware.vim25.HasPrivilegeOnEntityRequestType;
import com.vmware.vim25.HasPrivilegeOnEntityResponse;
import com.vmware.vim25.HasProviderRequestType;
import com.vmware.vim25.HasProviderResponse;
import com.vmware.vim25.HasUserPrivilegeOnEntitiesRequestType;
import com.vmware.vim25.HasUserPrivilegeOnEntitiesResponse;
import com.vmware.vim25.HbrDiskMigrationAction;
import com.vmware.vim25.HbrManagerReplicationVmInfo;
import com.vmware.vim25.HbrManagerVmReplicationCapability;
import com.vmware.vim25.HealthStatusChangedEvent;
import com.vmware.vim25.HealthSystemRuntime;
import com.vmware.vim25.HealthUpdate;
import com.vmware.vim25.HealthUpdateInfo;
import com.vmware.vim25.HeterogenousHostsBlockingEVC;
import com.vmware.vim25.HostAccessControlEntry;
import com.vmware.vim25.HostAccessRestrictedToManagementServer;
import com.vmware.vim25.HostAccountSpec;
import com.vmware.vim25.HostActiveDirectory;
import com.vmware.vim25.HostActiveDirectoryInfo;
import com.vmware.vim25.HostActiveDirectorySpec;
import com.vmware.vim25.HostAddFailedEvent;
import com.vmware.vim25.HostAddedEvent;
import com.vmware.vim25.HostAdminDisableEvent;
import com.vmware.vim25.HostAdminEnableEvent;
import com.vmware.vim25.HostApplyProfile;
import com.vmware.vim25.HostAssignableHardwareBinding;
import com.vmware.vim25.HostAssignableHardwareConfig;
import com.vmware.vim25.HostAssignableHardwareConfigAttributeOverride;
import com.vmware.vim25.HostAuthenticationManagerInfo;
import com.vmware.vim25.HostAuthenticationStoreInfo;
import com.vmware.vim25.HostAutoStartManagerConfig;
import com.vmware.vim25.HostBIOSInfo;
import com.vmware.vim25.HostBlockAdapterTargetTransport;
import com.vmware.vim25.HostBlockHba;
import com.vmware.vim25.HostBootDevice;
import com.vmware.vim25.HostBootDeviceInfo;
import com.vmware.vim25.HostCacheConfigurationInfo;
import com.vmware.vim25.HostCacheConfigurationSpec;
import com.vmware.vim25.HostCapability;
import com.vmware.vim25.HostCertificateManagerCertificateInfo;
import com.vmware.vim25.HostClearVStorageObjectControlFlagsRequestType;
import com.vmware.vim25.HostClearVStorageObjectControlFlagsResponse;
import com.vmware.vim25.HostCloneVStorageObjectRequestType;
import com.vmware.vim25.HostCloneVStorageObjectTaskResponse;
import com.vmware.vim25.HostCnxFailedAccountFailedEvent;
import com.vmware.vim25.HostCnxFailedAlreadyManagedEvent;
import com.vmware.vim25.HostCnxFailedBadCcagentEvent;
import com.vmware.vim25.HostCnxFailedBadUsernameEvent;
import com.vmware.vim25.HostCnxFailedBadVersionEvent;
import com.vmware.vim25.HostCnxFailedCcagentUpgradeEvent;
import com.vmware.vim25.HostCnxFailedEvent;
import com.vmware.vim25.HostCnxFailedNetworkErrorEvent;
import com.vmware.vim25.HostCnxFailedNoAccessEvent;
import com.vmware.vim25.HostCnxFailedNoConnectionEvent;
import com.vmware.vim25.HostCnxFailedNoLicenseEvent;
import com.vmware.vim25.HostCnxFailedNotFoundEvent;
import com.vmware.vim25.HostCnxFailedTimeoutEvent;
import com.vmware.vim25.HostCommunication;
import com.vmware.vim25.HostComplianceCheckedEvent;
import com.vmware.vim25.HostCompliantEvent;
import com.vmware.vim25.HostConfigAppliedEvent;
import com.vmware.vim25.HostConfigChange;
import com.vmware.vim25.HostConfigFailed;
import com.vmware.vim25.HostConfigFault;
import com.vmware.vim25.HostConfigInfo;
import com.vmware.vim25.HostConfigManager;
import com.vmware.vim25.HostConfigSpec;
import com.vmware.vim25.HostConfigSummary;
import com.vmware.vim25.HostConfigVFlashCacheRequestType;
import com.vmware.vim25.HostConfigVFlashCacheResponse;
import com.vmware.vim25.HostConfigureVFlashResourceRequestType;
import com.vmware.vim25.HostConfigureVFlashResourceResponse;
import com.vmware.vim25.HostConnectFault;
import com.vmware.vim25.HostConnectInfo;
import com.vmware.vim25.HostConnectInfoNetworkInfo;
import com.vmware.vim25.HostConnectSpec;
import com.vmware.vim25.HostConnectedEvent;
import com.vmware.vim25.HostConnectionLostEvent;
import com.vmware.vim25.HostCpuIdInfo;
import com.vmware.vim25.HostCpuInfo;
import com.vmware.vim25.HostCpuPackage;
import com.vmware.vim25.HostCpuPowerManagementInfo;
import com.vmware.vim25.HostCreateDiskRequestType;
import com.vmware.vim25.HostCreateDiskTaskResponse;
import com.vmware.vim25.HostDasDisabledEvent;
import com.vmware.vim25.HostDasDisablingEvent;
import com.vmware.vim25.HostDasEnabledEvent;
import com.vmware.vim25.HostDasEnablingEvent;
import com.vmware.vim25.HostDasErrorEvent;
import com.vmware.vim25.HostDasEvent;
import com.vmware.vim25.HostDasOkEvent;
import com.vmware.vim25.HostDatastoreBrowserSearchResults;
import com.vmware.vim25.HostDatastoreBrowserSearchSpec;
import com.vmware.vim25.HostDatastoreConnectInfo;
import com.vmware.vim25.HostDatastoreExistsConnectInfo;
import com.vmware.vim25.HostDatastoreNameConflictConnectInfo;
import com.vmware.vim25.HostDatastoreSystemCapabilities;
import com.vmware.vim25.HostDatastoreSystemDatastoreResult;
import com.vmware.vim25.HostDatastoreSystemVvolDatastoreSpec;
import com.vmware.vim25.HostDateTimeConfig;
import com.vmware.vim25.HostDateTimeInfo;
import com.vmware.vim25.HostDateTimeSystemTimeZone;
import com.vmware.vim25.HostDeleteVStorageObjectRequestType;
import com.vmware.vim25.HostDeleteVStorageObjectTaskResponse;
import com.vmware.vim25.HostDeploymentInfo;
import com.vmware.vim25.HostDevice;
import com.vmware.vim25.HostDhcpService;
import com.vmware.vim25.HostDhcpServiceConfig;
import com.vmware.vim25.HostDhcpServiceSpec;
import com.vmware.vim25.HostDiagnosticPartition;
import com.vmware.vim25.HostDiagnosticPartitionCreateDescription;
import com.vmware.vim25.HostDiagnosticPartitionCreateOption;
import com.vmware.vim25.HostDiagnosticPartitionCreateSpec;
import com.vmware.vim25.HostDigestInfo;
import com.vmware.vim25.HostDirectoryStoreInfo;
import com.vmware.vim25.HostDisconnectedEvent;
import com.vmware.vim25.HostDiskConfigurationResult;
import com.vmware.vim25.HostDiskDimensions;
import com.vmware.vim25.HostDiskDimensionsChs;
import com.vmware.vim25.HostDiskDimensionsLba;
import com.vmware.vim25.HostDiskMappingInfo;
import com.vmware.vim25.HostDiskMappingOption;
import com.vmware.vim25.HostDiskMappingPartitionInfo;
import com.vmware.vim25.HostDiskMappingPartitionOption;
import com.vmware.vim25.HostDiskPartitionAttributes;
import com.vmware.vim25.HostDiskPartitionBlockRange;
import com.vmware.vim25.HostDiskPartitionInfo;
import com.vmware.vim25.HostDiskPartitionLayout;
import com.vmware.vim25.HostDiskPartitionSpec;
import com.vmware.vim25.HostDnsConfig;
import com.vmware.vim25.HostDnsConfigSpec;
import com.vmware.vim25.HostEnableAdminFailedEvent;
import com.vmware.vim25.HostEnterMaintenanceResult;
import com.vmware.vim25.HostEsxAgentHostManagerConfigInfo;
import com.vmware.vim25.HostEvent;
import com.vmware.vim25.HostEventArgument;
import com.vmware.vim25.HostExtendDiskRequestType;
import com.vmware.vim25.HostExtendDiskTaskResponse;
import com.vmware.vim25.HostExtraNetworksEvent;
import com.vmware.vim25.HostFaultToleranceManagerComponentHealthInfo;
import com.vmware.vim25.HostFeatureCapability;
import com.vmware.vim25.HostFeatureMask;
import com.vmware.vim25.HostFeatureVersionInfo;
import com.vmware.vim25.HostFibreChannelHba;
import com.vmware.vim25.HostFibreChannelOverEthernetHba;
import com.vmware.vim25.HostFibreChannelOverEthernetHbaLinkInfo;
import com.vmware.vim25.HostFibreChannelOverEthernetTargetTransport;
import com.vmware.vim25.HostFibreChannelTargetTransport;
import com.vmware.vim25.HostFileAccess;
import com.vmware.vim25.HostFileSystemMountInfo;
import com.vmware.vim25.HostFileSystemVolume;
import com.vmware.vim25.HostFileSystemVolumeInfo;
import com.vmware.vim25.HostFirewallConfig;
import com.vmware.vim25.HostFirewallConfigRuleSetConfig;
import com.vmware.vim25.HostFirewallDefaultPolicy;
import com.vmware.vim25.HostFirewallInfo;
import com.vmware.vim25.HostFirewallRule;
import com.vmware.vim25.HostFirewallRuleset;
import com.vmware.vim25.HostFirewallRulesetIpList;
import com.vmware.vim25.HostFirewallRulesetIpNetwork;
import com.vmware.vim25.HostFirewallRulesetRulesetSpec;
import com.vmware.vim25.HostFlagInfo;
import com.vmware.vim25.HostForceMountedInfo;
import com.vmware.vim25.HostGatewaySpec;
import com.vmware.vim25.HostGetShortNameFailedEvent;
import com.vmware.vim25.HostGetVFlashModuleDefaultConfigRequestType;
import com.vmware.vim25.HostGetVFlashModuleDefaultConfigResponse;
import com.vmware.vim25.HostGraphicsConfig;
import com.vmware.vim25.HostGraphicsConfigDeviceType;
import com.vmware.vim25.HostGraphicsInfo;
import com.vmware.vim25.HostHardwareElementInfo;
import com.vmware.vim25.HostHardwareInfo;
import com.vmware.vim25.HostHardwareStatusInfo;
import com.vmware.vim25.HostHardwareSummary;
import com.vmware.vim25.HostHasComponentFailure;
import com.vmware.vim25.HostHostBusAdapter;
import com.vmware.vim25.HostHyperThreadScheduleInfo;
import com.vmware.vim25.HostImageConfigGetAcceptanceRequestType;
import com.vmware.vim25.HostImageConfigGetAcceptanceResponse;
import com.vmware.vim25.HostImageConfigGetProfileRequestType;
import com.vmware.vim25.HostImageConfigGetProfileResponse;
import com.vmware.vim25.HostImageProfileSummary;
import com.vmware.vim25.HostInAuditModeEvent;
import com.vmware.vim25.HostInDomain;
import com.vmware.vim25.HostIncompatibleForFaultTolerance;
import com.vmware.vim25.HostIncompatibleForRecordReplay;
import com.vmware.vim25.HostInflateDiskRequestType;
import com.vmware.vim25.HostInflateDiskTaskResponse;
import com.vmware.vim25.HostInternetScsiHba;
import com.vmware.vim25.HostInternetScsiHbaAuthenticationCapabilities;
import com.vmware.vim25.HostInternetScsiHbaAuthenticationProperties;
import com.vmware.vim25.HostInternetScsiHbaDigestCapabilities;
import com.vmware.vim25.HostInternetScsiHbaDigestProperties;
import com.vmware.vim25.HostInternetScsiHbaDiscoveryCapabilities;
import com.vmware.vim25.HostInternetScsiHbaDiscoveryProperties;
import com.vmware.vim25.HostInternetScsiHbaIPCapabilities;
import com.vmware.vim25.HostInternetScsiHbaIPProperties;
import com.vmware.vim25.HostInternetScsiHbaIPv6Properties;
import com.vmware.vim25.HostInternetScsiHbaIscsiIpv6Address;
import com.vmware.vim25.HostInternetScsiHbaParamValue;
import com.vmware.vim25.HostInternetScsiHbaSendTarget;
import com.vmware.vim25.HostInternetScsiHbaStaticTarget;
import com.vmware.vim25.HostInternetScsiHbaTargetSet;
import com.vmware.vim25.HostInternetScsiTargetTransport;
import com.vmware.vim25.HostInventoryFull;
import com.vmware.vim25.HostInventoryFullEvent;
import com.vmware.vim25.HostInventoryUnreadableEvent;
import com.vmware.vim25.HostIoFilterInfo;
import com.vmware.vim25.HostIpChangedEvent;
import com.vmware.vim25.HostIpConfig;
import com.vmware.vim25.HostIpConfigIpV6Address;
import com.vmware.vim25.HostIpConfigIpV6AddressConfiguration;
import com.vmware.vim25.HostIpInconsistentEvent;
import com.vmware.vim25.HostIpRouteConfig;
import com.vmware.vim25.HostIpRouteConfigSpec;
import com.vmware.vim25.HostIpRouteEntry;
import com.vmware.vim25.HostIpRouteOp;
import com.vmware.vim25.HostIpRouteTableConfig;
import com.vmware.vim25.HostIpRouteTableInfo;
import com.vmware.vim25.HostIpToShortNameFailedEvent;
import com.vmware.vim25.HostIpmiInfo;
import com.vmware.vim25.HostIsolationIpPingFailedEvent;
import com.vmware.vim25.HostLicensableResourceInfo;
import com.vmware.vim25.HostLicenseConnectInfo;
import com.vmware.vim25.HostLicenseExpiredEvent;
import com.vmware.vim25.HostLicenseSpec;
import com.vmware.vim25.HostListSummary;
import com.vmware.vim25.HostListSummaryGatewaySummary;
import com.vmware.vim25.HostListSummaryQuickStats;
import com.vmware.vim25.HostListVStorageObjectRequestType;
import com.vmware.vim25.HostListVStorageObjectResponse;
import com.vmware.vim25.HostLocalAuthenticationInfo;
import com.vmware.vim25.HostLocalFileSystemVolume;
import com.vmware.vim25.HostLocalFileSystemVolumeSpec;
import com.vmware.vim25.HostLocalPortCreatedEvent;
import com.vmware.vim25.HostLowLevelProvisioningManagerDiskLayoutSpec;
import com.vmware.vim25.HostLowLevelProvisioningManagerFileDeleteResult;
import com.vmware.vim25.HostLowLevelProvisioningManagerFileDeleteSpec;
import com.vmware.vim25.HostLowLevelProvisioningManagerFileReserveResult;
import com.vmware.vim25.HostLowLevelProvisioningManagerFileReserveSpec;
import com.vmware.vim25.HostLowLevelProvisioningManagerSnapshotLayoutSpec;
import com.vmware.vim25.HostLowLevelProvisioningManagerVmMigrationStatus;
import com.vmware.vim25.HostLowLevelProvisioningManagerVmRecoveryInfo;
import com.vmware.vim25.HostMaintenanceSpec;
import com.vmware.vim25.HostMemberHealthCheckResult;
import com.vmware.vim25.HostMemberRuntimeInfo;
import com.vmware.vim25.HostMemberUplinkHealthCheckResult;
import com.vmware.vim25.HostMemoryProfile;
import com.vmware.vim25.HostMemorySpec;
import com.vmware.vim25.HostMissingNetworksEvent;
import com.vmware.vim25.HostMonitoringStateChangedEvent;
import com.vmware.vim25.HostMountInfo;
import com.vmware.vim25.HostMultipathInfo;
import com.vmware.vim25.HostMultipathInfoFixedLogicalUnitPolicy;
import com.vmware.vim25.HostMultipathInfoHppLogicalUnitPolicy;
import com.vmware.vim25.HostMultipathInfoLogicalUnit;
import com.vmware.vim25.HostMultipathInfoLogicalUnitPolicy;
import com.vmware.vim25.HostMultipathInfoLogicalUnitStorageArrayTypePolicy;
import com.vmware.vim25.HostMultipathInfoPath;
import com.vmware.vim25.HostMultipathStateInfo;
import com.vmware.vim25.HostMultipathStateInfoPath;
import com.vmware.vim25.HostNasVolume;
import com.vmware.vim25.HostNasVolumeConfig;
import com.vmware.vim25.HostNasVolumeSpec;
import com.vmware.vim25.HostNasVolumeUserInfo;
import com.vmware.vim25.HostNatService;
import com.vmware.vim25.HostNatServiceConfig;
import com.vmware.vim25.HostNatServiceNameServiceSpec;
import com.vmware.vim25.HostNatServicePortForwardSpec;
import com.vmware.vim25.HostNatServiceSpec;
import com.vmware.vim25.HostNetCapabilities;
import com.vmware.vim25.HostNetOffloadCapabilities;
import com.vmware.vim25.HostNetStackInstance;
import com.vmware.vim25.HostNetworkConfig;
import com.vmware.vim25.HostNetworkConfigNetStackSpec;
import com.vmware.vim25.HostNetworkConfigResult;
import com.vmware.vim25.HostNetworkInfo;
import com.vmware.vim25.HostNetworkPolicy;
import com.vmware.vim25.HostNetworkResourceRuntime;
import com.vmware.vim25.HostNetworkSecurityPolicy;
import com.vmware.vim25.HostNetworkTrafficShapingPolicy;
import com.vmware.vim25.HostNewNetworkConnectInfo;
import com.vmware.vim25.HostNicFailureCriteria;
import com.vmware.vim25.HostNicOrderPolicy;
import com.vmware.vim25.HostNicTeamingPolicy;
import com.vmware.vim25.HostNoAvailableNetworksEvent;
import com.vmware.vim25.HostNoHAEnabledPortGroupsEvent;
import com.vmware.vim25.HostNoRedundantManagementNetworkEvent;
import com.vmware.vim25.HostNonCompliantEvent;
import com.vmware.vim25.HostNotConnected;
import com.vmware.vim25.HostNotInClusterEvent;
import com.vmware.vim25.HostNotReachable;
import com.vmware.vim25.HostNtpConfig;
import com.vmware.vim25.HostNumaInfo;
import com.vmware.vim25.HostNumaNode;
import com.vmware.vim25.HostNumericSensorInfo;
import com.vmware.vim25.HostNvmeConnectSpec;
import com.vmware.vim25.HostNvmeController;
import com.vmware.vim25.HostNvmeDisconnectSpec;
import com.vmware.vim25.HostNvmeDiscoverSpec;
import com.vmware.vim25.HostNvmeDiscoveryLog;
import com.vmware.vim25.HostNvmeDiscoveryLogEntry;
import com.vmware.vim25.HostNvmeNamespace;
import com.vmware.vim25.HostNvmeOpaqueTransportParameters;
import com.vmware.vim25.HostNvmeOverFibreChannelParameters;
import com.vmware.vim25.HostNvmeOverRdmaParameters;
import com.vmware.vim25.HostNvmeSpec;
import com.vmware.vim25.HostNvmeTopology;
import com.vmware.vim25.HostNvmeTopologyInterface;
import com.vmware.vim25.HostNvmeTransportParameters;
import com.vmware.vim25.HostOpaqueNetworkInfo;
import com.vmware.vim25.HostOpaqueSwitch;
import com.vmware.vim25.HostOpaqueSwitchPhysicalNicZone;
import com.vmware.vim25.HostOvercommittedEvent;
import com.vmware.vim25.HostPMemVolume;
import com.vmware.vim25.HostParallelScsiHba;
import com.vmware.vim25.HostParallelScsiTargetTransport;
import com.vmware.vim25.HostPatchManagerLocator;
import com.vmware.vim25.HostPatchManagerPatchManagerOperationSpec;
import com.vmware.vim25.HostPatchManagerResult;
import com.vmware.vim25.HostPatchManagerStatus;
import com.vmware.vim25.HostPatchManagerStatusPrerequisitePatch;
import com.vmware.vim25.HostPathSelectionPolicyOption;
import com.vmware.vim25.HostPciDevice;
import com.vmware.vim25.HostPciPassthruConfig;
import com.vmware.vim25.HostPciPassthruInfo;
import com.vmware.vim25.HostPcieHba;
import com.vmware.vim25.HostPcieTargetTransport;
import com.vmware.vim25.HostPersistentMemoryInfo;
import com.vmware.vim25.HostPlacedVirtualNicIdentifier;
import com.vmware.vim25.HostPlugStoreTopology;
import com.vmware.vim25.HostPlugStoreTopologyAdapter;
import com.vmware.vim25.HostPlugStoreTopologyDevice;
import com.vmware.vim25.HostPlugStoreTopologyPath;
import com.vmware.vim25.HostPlugStoreTopologyPlugin;
import com.vmware.vim25.HostPlugStoreTopologyTarget;
import com.vmware.vim25.HostPnicNetworkResourceInfo;
import com.vmware.vim25.HostPortGroup;
import com.vmware.vim25.HostPortGroupConfig;
import com.vmware.vim25.HostPortGroupPort;
import com.vmware.vim25.HostPortGroupProfile;
import com.vmware.vim25.HostPortGroupSpec;
import com.vmware.vim25.HostPosixAccountSpec;
import com.vmware.vim25.HostPowerOpFailed;
import com.vmware.vim25.HostPowerPolicy;
import com.vmware.vim25.HostPrimaryAgentNotShortNameEvent;
import com.vmware.vim25.HostProfileAppliedEvent;
import com.vmware.vim25.HostProfileCompleteConfigSpec;
import com.vmware.vim25.HostProfileConfigInfo;
import com.vmware.vim25.HostProfileConfigSpec;
import com.vmware.vim25.HostProfileHostBasedConfigSpec;
import com.vmware.vim25.HostProfileManagerCompositionResult;
import com.vmware.vim25.HostProfileManagerCompositionResultResultElement;
import com.vmware.vim25.HostProfileManagerCompositionValidationResult;
import com.vmware.vim25.HostProfileManagerCompositionValidationResultResultElement;
import com.vmware.vim25.HostProfileManagerConfigTaskList;
import com.vmware.vim25.HostProfileManagerHostToConfigSpecMap;
import com.vmware.vim25.HostProfileResetValidationStateRequestType;
import com.vmware.vim25.HostProfileResetValidationStateResponse;
import com.vmware.vim25.HostProfileSerializedHostProfileSpec;
import com.vmware.vim25.HostProfileValidationFailureInfo;
import com.vmware.vim25.HostProfilesEntityCustomizations;
import com.vmware.vim25.HostProtocolEndpoint;
import com.vmware.vim25.HostProxySwitch;
import com.vmware.vim25.HostProxySwitchConfig;
import com.vmware.vim25.HostProxySwitchHostLagConfig;
import com.vmware.vim25.HostProxySwitchSpec;
import com.vmware.vim25.HostRdmaDevice;
import com.vmware.vim25.HostRdmaDeviceBacking;
import com.vmware.vim25.HostRdmaDeviceCapability;
import com.vmware.vim25.HostRdmaDeviceConnectionInfo;
import com.vmware.vim25.HostRdmaDevicePnicBacking;
import com.vmware.vim25.HostRdmaHba;
import com.vmware.vim25.HostRdmaTargetTransport;
import com.vmware.vim25.HostReconcileDatastoreInventoryRequestType;
import com.vmware.vim25.HostReconcileDatastoreInventoryTaskResponse;
import com.vmware.vim25.HostReconnectionFailedEvent;
import com.vmware.vim25.HostRegisterDiskRequestType;
import com.vmware.vim25.HostRegisterDiskResponse;
import com.vmware.vim25.HostReliableMemoryInfo;
import com.vmware.vim25.HostRelocateVStorageObjectRequestType;
import com.vmware.vim25.HostRelocateVStorageObjectTaskResponse;
import com.vmware.vim25.HostRemoveVFlashResourceRequestType;
import com.vmware.vim25.HostRemoveVFlashResourceResponse;
import com.vmware.vim25.HostRemovedEvent;
import com.vmware.vim25.HostRenameVStorageObjectRequestType;
import com.vmware.vim25.HostRenameVStorageObjectResponse;
import com.vmware.vim25.HostResignatureRescanResult;
import com.vmware.vim25.HostRetrieveVStorageInfrastructureObjectPolicyRequestType;
import com.vmware.vim25.HostRetrieveVStorageInfrastructureObjectPolicyResponse;
import com.vmware.vim25.HostRetrieveVStorageObjectMetadataRequestType;
import com.vmware.vim25.HostRetrieveVStorageObjectMetadataResponse;
import com.vmware.vim25.HostRetrieveVStorageObjectMetadataValueRequestType;
import com.vmware.vim25.HostRetrieveVStorageObjectMetadataValueResponse;
import com.vmware.vim25.HostRetrieveVStorageObjectRequestType;
import com.vmware.vim25.HostRetrieveVStorageObjectResponse;
import com.vmware.vim25.HostRetrieveVStorageObjectStateRequestType;
import com.vmware.vim25.HostRetrieveVStorageObjectStateResponse;
import com.vmware.vim25.HostRuntimeInfo;
import com.vmware.vim25.HostRuntimeInfoNetStackInstanceRuntimeInfo;
import com.vmware.vim25.HostRuntimeInfoNetworkRuntimeInfo;
import com.vmware.vim25.HostScheduleReconcileDatastoreInventoryRequestType;
import com.vmware.vim25.HostScheduleReconcileDatastoreInventoryResponse;
import com.vmware.vim25.HostScsiDisk;
import com.vmware.vim25.HostScsiDiskPartition;
import com.vmware.vim25.HostScsiTopology;
import com.vmware.vim25.HostScsiTopologyInterface;
import com.vmware.vim25.HostScsiTopologyLun;
import com.vmware.vim25.HostScsiTopologyTarget;
import com.vmware.vim25.HostSecuritySpec;
import com.vmware.vim25.HostSerialAttachedHba;
import com.vmware.vim25.HostSerialAttachedTargetTransport;
import com.vmware.vim25.HostService;
import com.vmware.vim25.HostServiceConfig;
import com.vmware.vim25.HostServiceInfo;
import com.vmware.vim25.HostServiceSourcePackage;
import com.vmware.vim25.HostServiceTicket;
import com.vmware.vim25.HostSetVStorageObjectControlFlagsRequestType;
import com.vmware.vim25.HostSetVStorageObjectControlFlagsResponse;
import com.vmware.vim25.HostSgxInfo;
import com.vmware.vim25.HostSharedGpuCapabilities;
import com.vmware.vim25.HostShortNameInconsistentEvent;
import com.vmware.vim25.HostShortNameToIpFailedEvent;
import com.vmware.vim25.HostShutdownEvent;
import com.vmware.vim25.HostSnmpConfigSpec;
import com.vmware.vim25.HostSnmpDestination;
import com.vmware.vim25.HostSnmpSystemAgentLimits;
import com.vmware.vim25.HostSpecGetUpdatedHostsRequestType;
import com.vmware.vim25.HostSpecGetUpdatedHostsResponse;
import com.vmware.vim25.HostSpecification;
import com.vmware.vim25.HostSpecificationChangedEvent;
import com.vmware.vim25.HostSpecificationOperationFailed;
import com.vmware.vim25.HostSpecificationRequireEvent;
import com.vmware.vim25.HostSpecificationUpdateEvent;
import com.vmware.vim25.HostSriovConfig;
import com.vmware.vim25.HostSriovDevicePoolInfo;
import com.vmware.vim25.HostSriovInfo;
import com.vmware.vim25.HostSriovNetworkDevicePoolInfo;
import com.vmware.vim25.HostSslThumbprintInfo;
import com.vmware.vim25.HostStatusChangedEvent;
import com.vmware.vim25.HostStorageArrayTypePolicyOption;
import com.vmware.vim25.HostStorageDeviceInfo;
import com.vmware.vim25.HostStorageElementInfo;
import com.vmware.vim25.HostStorageOperationalInfo;
import com.vmware.vim25.HostStorageSystemDiskLocatorLedResult;
import com.vmware.vim25.HostStorageSystemScsiLunResult;
import com.vmware.vim25.HostStorageSystemVmfsVolumeResult;
import com.vmware.vim25.HostSubSpecification;
import com.vmware.vim25.HostSubSpecificationDeleteEvent;
import com.vmware.vim25.HostSubSpecificationUpdateEvent;
import com.vmware.vim25.HostSyncFailedEvent;
import com.vmware.vim25.HostSystemComplianceCheckState;
import com.vmware.vim25.HostSystemHealthInfo;
import com.vmware.vim25.HostSystemIdentificationInfo;
import com.vmware.vim25.HostSystemInfo;
import com.vmware.vim25.HostSystemReconnectSpec;
import com.vmware.vim25.HostSystemRemediationState;
import com.vmware.vim25.HostSystemResourceInfo;
import com.vmware.vim25.HostSystemSwapConfiguration;
import com.vmware.vim25.HostSystemSwapConfigurationDatastoreOption;
import com.vmware.vim25.HostSystemSwapConfigurationDisabledOption;
import com.vmware.vim25.HostSystemSwapConfigurationHostCacheOption;
import com.vmware.vim25.HostSystemSwapConfigurationHostLocalSwapOption;
import com.vmware.vim25.HostSystemSwapConfigurationSystemSwapOption;
import com.vmware.vim25.HostTargetTransport;
import com.vmware.vim25.HostTpmAttestationInfo;
import com.vmware.vim25.HostTpmAttestationReport;
import com.vmware.vim25.HostTpmBootSecurityOptionEventDetails;
import com.vmware.vim25.HostTpmCommandEventDetails;
import com.vmware.vim25.HostTpmDigestInfo;
import com.vmware.vim25.HostTpmEventDetails;
import com.vmware.vim25.HostTpmEventLogEntry;
import com.vmware.vim25.HostTpmOptionEventDetails;
import com.vmware.vim25.HostTpmSoftwareComponentEventDetails;
import com.vmware.vim25.HostUnresolvedVmfsExtent;
import com.vmware.vim25.HostUnresolvedVmfsResignatureSpec;
import com.vmware.vim25.HostUnresolvedVmfsResolutionResult;
import com.vmware.vim25.HostUnresolvedVmfsResolutionSpec;
import com.vmware.vim25.HostUnresolvedVmfsVolume;
import com.vmware.vim25.HostUnresolvedVmfsVolumeResolveStatus;
import com.vmware.vim25.HostUpdateVStorageObjectMetadataRequestType;
import com.vmware.vim25.HostUpdateVStorageObjectMetadataTaskResponse;
import com.vmware.vim25.HostUpgradeFailedEvent;
import com.vmware.vim25.HostUserWorldSwapNotEnabledEvent;
import com.vmware.vim25.HostVFlashManagerVFlashCacheConfigInfo;
import com.vmware.vim25.HostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption;
import com.vmware.vim25.HostVFlashManagerVFlashCacheConfigSpec;
import com.vmware.vim25.HostVFlashManagerVFlashConfigInfo;
import com.vmware.vim25.HostVFlashManagerVFlashResourceConfigInfo;
import com.vmware.vim25.HostVFlashManagerVFlashResourceConfigSpec;
import com.vmware.vim25.HostVFlashManagerVFlashResourceRunTimeInfo;
import com.vmware.vim25.HostVFlashResourceConfigurationResult;
import com.vmware.vim25.HostVMotionCompatibility;
import com.vmware.vim25.HostVMotionConfig;
import com.vmware.vim25.HostVMotionInfo;
import com.vmware.vim25.HostVMotionManagerDstInstantCloneResult;
import com.vmware.vim25.HostVMotionManagerSrcInstantCloneResult;
import com.vmware.vim25.HostVMotionNetConfig;
import com.vmware.vim25.HostVStorageObjectCreateDiskFromSnapshotRequestType;
import com.vmware.vim25.HostVStorageObjectCreateDiskFromSnapshotTaskResponse;
import com.vmware.vim25.HostVStorageObjectCreateSnapshotRequestType;
import com.vmware.vim25.HostVStorageObjectCreateSnapshotTaskResponse;
import com.vmware.vim25.HostVStorageObjectDeleteSnapshotRequestType;
import com.vmware.vim25.HostVStorageObjectDeleteSnapshotTaskResponse;
import com.vmware.vim25.HostVStorageObjectRetrieveSnapshotInfoRequestType;
import com.vmware.vim25.HostVStorageObjectRetrieveSnapshotInfoResponse;
import com.vmware.vim25.HostVStorageObjectRevertRequestType;
import com.vmware.vim25.HostVStorageObjectRevertTaskResponse;
import com.vmware.vim25.HostVfatVolume;
import com.vmware.vim25.HostVffsSpec;
import com.vmware.vim25.HostVffsVolume;
import com.vmware.vim25.HostVirtualNic;
import com.vmware.vim25.HostVirtualNicConfig;
import com.vmware.vim25.HostVirtualNicConnection;
import com.vmware.vim25.HostVirtualNicIpRouteSpec;
import com.vmware.vim25.HostVirtualNicManagerInfo;
import com.vmware.vim25.HostVirtualNicManagerNicTypeSelection;
import com.vmware.vim25.HostVirtualNicOpaqueNetworkSpec;
import com.vmware.vim25.HostVirtualNicSpec;
import com.vmware.vim25.HostVirtualSwitch;
import com.vmware.vim25.HostVirtualSwitchAutoBridge;
import com.vmware.vim25.HostVirtualSwitchBeaconConfig;
import com.vmware.vim25.HostVirtualSwitchBondBridge;
import com.vmware.vim25.HostVirtualSwitchBridge;
import com.vmware.vim25.HostVirtualSwitchConfig;
import com.vmware.vim25.HostVirtualSwitchSimpleBridge;
import com.vmware.vim25.HostVirtualSwitchSpec;
import com.vmware.vim25.HostVmciAccessManagerAccessSpec;
import com.vmware.vim25.HostVmfsRescanResult;
import com.vmware.vim25.HostVmfsSpec;
import com.vmware.vim25.HostVmfsVolume;
import com.vmware.vim25.HostVnicConnectedToCustomizedDVPortEvent;
import com.vmware.vim25.HostVsanInternalSystemCmmdsQuery;
import com.vmware.vim25.HostVsanInternalSystemDeleteVsanObjectsResult;
import com.vmware.vim25.HostVsanInternalSystemVsanObjectOperationResult;
import com.vmware.vim25.HostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult;
import com.vmware.vim25.HostVvolVolume;
import com.vmware.vim25.HostVvolVolumeSpecification;
import com.vmware.vim25.HostWwnChangedEvent;
import com.vmware.vim25.HostWwnConflictEvent;
import com.vmware.vim25.HotSnapshotMoveNotSupported;
import com.vmware.vim25.HourlyTaskScheduler;
import com.vmware.vim25.HttpFault;
import com.vmware.vim25.HttpNfcLeaseAbortRequestType;
import com.vmware.vim25.HttpNfcLeaseAbortResponse;
import com.vmware.vim25.HttpNfcLeaseCapabilities;
import com.vmware.vim25.HttpNfcLeaseCompleteRequestType;
import com.vmware.vim25.HttpNfcLeaseCompleteResponse;
import com.vmware.vim25.HttpNfcLeaseDatastoreLeaseInfo;
import com.vmware.vim25.HttpNfcLeaseDeviceUrl;
import com.vmware.vim25.HttpNfcLeaseGetManifestRequestType;
import com.vmware.vim25.HttpNfcLeaseGetManifestResponse;
import com.vmware.vim25.HttpNfcLeaseHostInfo;
import com.vmware.vim25.HttpNfcLeaseInfo;
import com.vmware.vim25.HttpNfcLeaseManifestEntry;
import com.vmware.vim25.HttpNfcLeaseProgressRequestType;
import com.vmware.vim25.HttpNfcLeaseProgressResponse;
import com.vmware.vim25.HttpNfcLeasePullFromUrlsRequestType;
import com.vmware.vim25.HttpNfcLeasePullFromUrlsTaskResponse;
import com.vmware.vim25.HttpNfcLeaseSetManifestChecksumTypeRequestType;
import com.vmware.vim25.HttpNfcLeaseSetManifestChecksumTypeResponse;
import com.vmware.vim25.HttpNfcLeaseSourceFile;
import com.vmware.vim25.ID;
import com.vmware.vim25.IDEDiskNotSupported;
import com.vmware.vim25.IORMNotSupportedHostOnDatastore;
import com.vmware.vim25.IScsiBootFailureEvent;
import com.vmware.vim25.ImpersonateUserRequestType;
import com.vmware.vim25.ImpersonateUserResponse;
import com.vmware.vim25.ImportCertificateForCAMRequestType;
import com.vmware.vim25.ImportCertificateForCAMTaskResponse;
import com.vmware.vim25.ImportHostAddFailure;
import com.vmware.vim25.ImportOperationBulkFault;
import com.vmware.vim25.ImportOperationBulkFaultFaultOnImport;
import com.vmware.vim25.ImportSpec;
import com.vmware.vim25.ImportUnmanagedSnapshotRequestType;
import com.vmware.vim25.ImportUnmanagedSnapshotResponse;
import com.vmware.vim25.ImportVAppRequestType;
import com.vmware.vim25.ImportVAppResponse;
import com.vmware.vim25.InUseFeatureManipulationDisallowed;
import com.vmware.vim25.InaccessibleDatastore;
import com.vmware.vim25.InaccessibleFTMetadataDatastore;
import com.vmware.vim25.InaccessibleVFlashSource;
import com.vmware.vim25.IncompatibleDefaultDevice;
import com.vmware.vim25.IncompatibleHostForFtSecondary;
import com.vmware.vim25.IncompatibleHostForVmReplication;
import com.vmware.vim25.IncompatibleSetting;
import com.vmware.vim25.IncorrectFileType;
import com.vmware.vim25.IncorrectHostInformation;
import com.vmware.vim25.IncorrectHostInformationEvent;
import com.vmware.vim25.IndependentDiskVMotionNotSupported;
import com.vmware.vim25.InflateDiskRequestType;
import com.vmware.vim25.InflateDiskTaskResponse;
import com.vmware.vim25.InflateVirtualDiskRequestType;
import com.vmware.vim25.InflateVirtualDiskTaskResponse;
import com.vmware.vim25.InfoUpgradeEvent;
import com.vmware.vim25.InheritablePolicy;
import com.vmware.vim25.InitializeDisksRequestType;
import com.vmware.vim25.InitializeDisksTaskResponse;
import com.vmware.vim25.InitiateFailoverRequestType;
import com.vmware.vim25.InitiateFailoverTaskResponse;
import com.vmware.vim25.InitiateFileTransferFromGuestRequestType;
import com.vmware.vim25.InitiateFileTransferFromGuestResponse;
import com.vmware.vim25.InitiateFileTransferToGuestRequestType;
import com.vmware.vim25.InitiateFileTransferToGuestResponse;
import com.vmware.vim25.InstallDateRequestType;
import com.vmware.vim25.InstallDateResponse;
import com.vmware.vim25.InstallHostPatchRequestType;
import com.vmware.vim25.InstallHostPatchTaskResponse;
import com.vmware.vim25.InstallHostPatchV2RequestType;
import com.vmware.vim25.InstallHostPatchV2TaskResponse;
import com.vmware.vim25.InstallIoFilterRequestType;
import com.vmware.vim25.InstallIoFilterTaskResponse;
import com.vmware.vim25.InstallServerCertificateRequestType;
import com.vmware.vim25.InstallServerCertificateResponse;
import com.vmware.vim25.InstallSmartCardTrustAnchorRequestType;
import com.vmware.vim25.InstallSmartCardTrustAnchorResponse;
import com.vmware.vim25.InstantCloneRequestType;
import com.vmware.vim25.InstantCloneTaskResponse;
import com.vmware.vim25.InsufficientAgentVmsDeployed;
import com.vmware.vim25.InsufficientCpuResourcesFault;
import com.vmware.vim25.InsufficientDisks;
import com.vmware.vim25.InsufficientFailoverResourcesEvent;
import com.vmware.vim25.InsufficientFailoverResourcesFault;
import com.vmware.vim25.InsufficientGraphicsResourcesFault;
import com.vmware.vim25.InsufficientHostCapacityFault;
import com.vmware.vim25.InsufficientHostCpuCapacityFault;
import com.vmware.vim25.InsufficientHostMemoryCapacityFault;
import com.vmware.vim25.InsufficientMemoryResourcesFault;
import com.vmware.vim25.InsufficientNetworkCapacity;
import com.vmware.vim25.InsufficientNetworkResourcePoolCapacity;
import com.vmware.vim25.InsufficientPerCpuCapacity;
import com.vmware.vim25.InsufficientResourcesFault;
import com.vmware.vim25.InsufficientStandbyCpuResource;
import com.vmware.vim25.InsufficientStandbyMemoryResource;
import com.vmware.vim25.InsufficientStandbyResource;
import com.vmware.vim25.InsufficientStorageIops;
import com.vmware.vim25.InsufficientStorageSpace;
import com.vmware.vim25.InsufficientVFlashResourcesFault;
import com.vmware.vim25.IntExpression;
import com.vmware.vim25.IntOption;
import com.vmware.vim25.IntPolicy;
import com.vmware.vim25.InvalidAffinitySettingFault;
import com.vmware.vim25.InvalidArgument;
import com.vmware.vim25.InvalidBmcRole;
import com.vmware.vim25.InvalidBundle;
import com.vmware.vim25.InvalidCAMCertificate;
import com.vmware.vim25.InvalidCAMServer;
import com.vmware.vim25.InvalidClientCertificate;
import com.vmware.vim25.InvalidCollectorVersion;
import com.vmware.vim25.InvalidController;
import com.vmware.vim25.InvalidDasConfigArgument;
import com.vmware.vim25.InvalidDasRestartPriorityForFtVm;
import com.vmware.vim25.InvalidDatastore;
import com.vmware.vim25.InvalidDatastorePath;
import com.vmware.vim25.InvalidDatastoreState;
import com.vmware.vim25.InvalidDeviceBacking;
import com.vmware.vim25.InvalidDeviceOperation;
import com.vmware.vim25.InvalidDeviceSpec;
import com.vmware.vim25.InvalidDiskFormat;
import com.vmware.vim25.InvalidDrsBehaviorForFtVm;
import com.vmware.vim25.InvalidEditionEvent;
import com.vmware.vim25.InvalidEditionLicense;
import com.vmware.vim25.InvalidEvent;
import com.vmware.vim25.InvalidFolder;
import com.vmware.vim25.InvalidFormat;
import com.vmware.vim25.InvalidGuestLogin;
import com.vmware.vim25.InvalidHostConnectionState;
import com.vmware.vim25.InvalidHostName;
import com.vmware.vim25.InvalidHostState;
import com.vmware.vim25.InvalidIndexArgument;
import com.vmware.vim25.InvalidIpfixConfig;
import com.vmware.vim25.InvalidIpmiLoginInfo;
import com.vmware.vim25.InvalidIpmiMacAddress;
import com.vmware.vim25.InvalidLicense;
import com.vmware.vim25.InvalidLocale;
import com.vmware.vim25.InvalidLogin;
import com.vmware.vim25.InvalidName;
import com.vmware.vim25.InvalidNasCredentials;
import com.vmware.vim25.InvalidNetworkInType;
import com.vmware.vim25.InvalidNetworkResource;
import com.vmware.vim25.InvalidOperationOnSecondaryVm;
import com.vmware.vim25.InvalidPowerState;
import com.vmware.vim25.InvalidPrivilege;
import com.vmware.vim25.InvalidProfileReferenceHost;
import com.vmware.vim25.InvalidProperty;
import com.vmware.vim25.InvalidPropertyType;
import com.vmware.vim25.InvalidPropertyValue;
import com.vmware.vim25.InvalidRequest;
import com.vmware.vim25.InvalidResourcePoolStructureFault;
import com.vmware.vim25.InvalidSnapshotFormat;
import com.vmware.vim25.InvalidState;
import com.vmware.vim25.InvalidType;
import com.vmware.vim25.InvalidVmConfig;
import com.vmware.vim25.InvalidVmState;
import com.vmware.vim25.InventoryDescription;
import com.vmware.vim25.InventoryHasStandardAloneHosts;
import com.vmware.vim25.IoFilterHostIssue;
import com.vmware.vim25.IoFilterInfo;
import com.vmware.vim25.IoFilterQueryIssueResult;
import com.vmware.vim25.IpAddress;
import com.vmware.vim25.IpAddressProfile;
import com.vmware.vim25.IpHostnameGeneratorError;
import com.vmware.vim25.IpPool;
import com.vmware.vim25.IpPoolAssociation;
import com.vmware.vim25.IpPoolIpPoolConfigInfo;
import com.vmware.vim25.IpPoolManagerIpAllocation;
import com.vmware.vim25.IpRange;
import com.vmware.vim25.IpRouteProfile;
import com.vmware.vim25.IsKmsClusterActiveRequestType;
import com.vmware.vim25.IsKmsClusterActiveResponse;
import com.vmware.vim25.IsSharedGraphicsActiveRequestType;
import com.vmware.vim25.IsSharedGraphicsActiveResponse;
import com.vmware.vim25.IscsiDependencyEntity;
import com.vmware.vim25.IscsiFault;
import com.vmware.vim25.IscsiFaultInvalidVnic;
import com.vmware.vim25.IscsiFaultPnicInUse;
import com.vmware.vim25.IscsiFaultVnicAlreadyBound;
import com.vmware.vim25.IscsiFaultVnicHasActivePaths;
import com.vmware.vim25.IscsiFaultVnicHasMultipleUplinks;
import com.vmware.vim25.IscsiFaultVnicHasNoUplinks;
import com.vmware.vim25.IscsiFaultVnicHasWrongUplink;
import com.vmware.vim25.IscsiFaultVnicInUse;
import com.vmware.vim25.IscsiFaultVnicIsLastPath;
import com.vmware.vim25.IscsiFaultVnicNotBound;
import com.vmware.vim25.IscsiFaultVnicNotFound;
import com.vmware.vim25.IscsiMigrationDependency;
import com.vmware.vim25.IscsiPortInfo;
import com.vmware.vim25.IscsiStatus;
import com.vmware.vim25.IsoImageFileInfo;
import com.vmware.vim25.IsoImageFileQuery;
import com.vmware.vim25.JoinDomainRequestType;
import com.vmware.vim25.JoinDomainTaskResponse;
import com.vmware.vim25.JoinDomainWithCAMRequestType;
import com.vmware.vim25.JoinDomainWithCAMTaskResponse;
import com.vmware.vim25.KernelModuleInfo;
import com.vmware.vim25.KernelModuleSectionInfo;
import com.vmware.vim25.KeyAnyValue;
import com.vmware.vim25.KeyNotFound;
import com.vmware.vim25.KeyProviderId;
import com.vmware.vim25.KeyValue;
import com.vmware.vim25.KmipClusterInfo;
import com.vmware.vim25.KmipServerInfo;
import com.vmware.vim25.KmipServerSpec;
import com.vmware.vim25.KmipServerStatus;
import com.vmware.vim25.LargeRDMConversionNotSupported;
import com.vmware.vim25.LargeRDMNotSupportedOnDatastore;
import com.vmware.vim25.LatencySensitivity;
import com.vmware.vim25.LeaveCurrentDomainRequestType;
import com.vmware.vim25.LeaveCurrentDomainTaskResponse;
import com.vmware.vim25.LegacyNetworkInterfaceInUse;
import com.vmware.vim25.LicenseAssignmentFailed;
import com.vmware.vim25.LicenseAssignmentManagerLicenseAssignment;
import com.vmware.vim25.LicenseAvailabilityInfo;
import com.vmware.vim25.LicenseDiagnostics;
import com.vmware.vim25.LicenseDowngradeDisallowed;
import com.vmware.vim25.LicenseEntityNotFound;
import com.vmware.vim25.LicenseEvent;
import com.vmware.vim25.LicenseExpired;
import com.vmware.vim25.LicenseExpiredEvent;
import com.vmware.vim25.LicenseFeatureInfo;
import com.vmware.vim25.LicenseKeyEntityMismatch;
import com.vmware.vim25.LicenseManagerEvaluationInfo;
import com.vmware.vim25.LicenseManagerLicenseInfo;
import com.vmware.vim25.LicenseNonComplianceEvent;
import com.vmware.vim25.LicenseReservationInfo;
import com.vmware.vim25.LicenseRestricted;
import com.vmware.vim25.LicenseRestrictedEvent;
import com.vmware.vim25.LicenseServerAvailableEvent;
import com.vmware.vim25.LicenseServerSource;
import com.vmware.vim25.LicenseServerUnavailable;
import com.vmware.vim25.LicenseServerUnavailableEvent;
import com.vmware.vim25.LicenseSource;
import com.vmware.vim25.LicenseSourceUnavailable;
import com.vmware.vim25.LicenseUsageInfo;
import com.vmware.vim25.LimitExceeded;
import com.vmware.vim25.LinkDiscoveryProtocolConfig;
import com.vmware.vim25.LinkLayerDiscoveryProtocolInfo;
import com.vmware.vim25.LinkProfile;
import com.vmware.vim25.LinuxVolumeNotClean;
import com.vmware.vim25.ListCACertificateRevocationListsRequestType;
import com.vmware.vim25.ListCACertificateRevocationListsResponse;
import com.vmware.vim25.ListCACertificatesRequestType;
import com.vmware.vim25.ListCACertificatesResponse;
import com.vmware.vim25.ListFilesInGuestRequestType;
import com.vmware.vim25.ListFilesInGuestResponse;
import com.vmware.vim25.ListGuestAliasesRequestType;
import com.vmware.vim25.ListGuestAliasesResponse;
import com.vmware.vim25.ListGuestMappedAliasesRequestType;
import com.vmware.vim25.ListGuestMappedAliasesResponse;
import com.vmware.vim25.ListKeysRequestType;
import com.vmware.vim25.ListKeysResponse;
import com.vmware.vim25.ListKmipServersRequestType;
import com.vmware.vim25.ListKmipServersResponse;
import com.vmware.vim25.ListKmsClustersRequestType;
import com.vmware.vim25.ListKmsClustersResponse;
import com.vmware.vim25.ListProcessesInGuestRequestType;
import com.vmware.vim25.ListProcessesInGuestResponse;
import com.vmware.vim25.ListRegistryKeysInGuestRequestType;
import com.vmware.vim25.ListRegistryKeysInGuestResponse;
import com.vmware.vim25.ListRegistryValuesInGuestRequestType;
import com.vmware.vim25.ListRegistryValuesInGuestResponse;
import com.vmware.vim25.ListSmartCardTrustAnchorsRequestType;
import com.vmware.vim25.ListSmartCardTrustAnchorsResponse;
import com.vmware.vim25.ListTagsAttachedToVStorageObjectRequestType;
import com.vmware.vim25.ListTagsAttachedToVStorageObjectResponse;
import com.vmware.vim25.ListVStorageObjectRequestType;
import com.vmware.vim25.ListVStorageObjectResponse;
import com.vmware.vim25.ListVStorageObjectsAttachedToTagRequestType;
import com.vmware.vim25.ListVStorageObjectsAttachedToTagResponse;
import com.vmware.vim25.LocalDatastoreCreatedEvent;
import com.vmware.vim25.LocalDatastoreInfo;
import com.vmware.vim25.LocalLicenseSource;
import com.vmware.vim25.LocalTSMEnabledEvent;
import com.vmware.vim25.LocalizableMessage;
import com.vmware.vim25.LocalizationManagerMessageCatalog;
import com.vmware.vim25.LocalizedMethodFault;
import com.vmware.vim25.LockerMisconfiguredEvent;
import com.vmware.vim25.LockerReconfiguredEvent;
import com.vmware.vim25.LogBundlingFailed;
import com.vmware.vim25.LogUserEventRequestType;
import com.vmware.vim25.LogUserEventResponse;
import com.vmware.vim25.LoginBySSPIRequestType;
import com.vmware.vim25.LoginBySSPIResponse;
import com.vmware.vim25.LoginByTokenRequestType;
import com.vmware.vim25.LoginByTokenResponse;
import com.vmware.vim25.LoginExtensionByCertificateRequestType;
import com.vmware.vim25.LoginExtensionByCertificateResponse;
import com.vmware.vim25.LoginExtensionBySubjectNameRequestType;
import com.vmware.vim25.LoginExtensionBySubjectNameResponse;
import com.vmware.vim25.LoginRequestType;
import com.vmware.vim25.LoginResponse;
import com.vmware.vim25.LogoutRequestType;
import com.vmware.vim25.LogoutResponse;
import com.vmware.vim25.LongOption;
import com.vmware.vim25.LongPolicy;
import com.vmware.vim25.LookupDvPortGroupRequestType;
import com.vmware.vim25.LookupDvPortGroupResponse;
import com.vmware.vim25.LookupVmOverheadMemoryRequestType;
import com.vmware.vim25.LookupVmOverheadMemoryResponse;
import com.vmware.vim25.MacAddress;
import com.vmware.vim25.MacRange;
import com.vmware.vim25.MaintenanceModeFileMove;
import com.vmware.vim25.MakeDirectoryInGuestRequestType;
import com.vmware.vim25.MakeDirectoryInGuestResponse;
import com.vmware.vim25.MakeDirectoryRequestType;
import com.vmware.vim25.MakeDirectoryResponse;
import com.vmware.vim25.MakePrimaryVMRequestType;
import com.vmware.vim25.MakePrimaryVMTaskResponse;
import com.vmware.vim25.ManagedByInfo;
import com.vmware.vim25.ManagedEntityEventArgument;
import com.vmware.vim25.ManagedObjectNotFound;
import com.vmware.vim25.ManagedObjectReference;
import com.vmware.vim25.MarkAsLocalRequestType;
import com.vmware.vim25.MarkAsLocalTaskResponse;
import com.vmware.vim25.MarkAsNonLocalRequestType;
import com.vmware.vim25.MarkAsNonLocalTaskResponse;
import com.vmware.vim25.MarkAsNonSsdRequestType;
import com.vmware.vim25.MarkAsNonSsdTaskResponse;
import com.vmware.vim25.MarkAsSsdRequestType;
import com.vmware.vim25.MarkAsSsdTaskResponse;
import com.vmware.vim25.MarkAsTemplateRequestType;
import com.vmware.vim25.MarkAsTemplateResponse;
import com.vmware.vim25.MarkAsVirtualMachineRequestType;
import com.vmware.vim25.MarkAsVirtualMachineResponse;
import com.vmware.vim25.MarkDefaultRequestType;
import com.vmware.vim25.MarkDefaultResponse;
import com.vmware.vim25.MarkForRemovalRequestType;
import com.vmware.vim25.MarkForRemovalResponse;
import com.vmware.vim25.MarkPerenniallyReservedExRequestType;
import com.vmware.vim25.MarkPerenniallyReservedExTaskResponse;
import com.vmware.vim25.MarkPerenniallyReservedRequestType;
import com.vmware.vim25.MarkPerenniallyReservedResponse;
import com.vmware.vim25.MarkServiceProviderEntitiesRequestType;
import com.vmware.vim25.MarkServiceProviderEntitiesResponse;
import com.vmware.vim25.MemoryFileFormatNotSupportedByDatastore;
import com.vmware.vim25.MemoryHotPlugNotSupported;
import com.vmware.vim25.MemorySizeNotRecommended;
import com.vmware.vim25.MemorySizeNotSupported;
import com.vmware.vim25.MemorySizeNotSupportedByDatastore;
import com.vmware.vim25.MemorySnapshotOnIndependentDisk;
import com.vmware.vim25.MergeDvsRequestType;
import com.vmware.vim25.MergeDvsTaskResponse;
import com.vmware.vim25.MergePermissionsRequestType;
import com.vmware.vim25.MergePermissionsResponse;
import com.vmware.vim25.MethodAction;
import com.vmware.vim25.MethodActionArgument;
import com.vmware.vim25.MethodAlreadyDisabledFault;
import com.vmware.vim25.MethodDescription;
import com.vmware.vim25.MethodDisabled;
import com.vmware.vim25.MethodFault;
import com.vmware.vim25.MethodNotFound;
import com.vmware.vim25.MetricAlarmExpression;
import com.vmware.vim25.MigrateVMRequestType;
import com.vmware.vim25.MigrateVMTaskResponse;
import com.vmware.vim25.MigrationDisabled;
import com.vmware.vim25.MigrationErrorEvent;
import com.vmware.vim25.MigrationEvent;
import com.vmware.vim25.MigrationFault;
import com.vmware.vim25.MigrationFeatureNotSupported;
import com.vmware.vim25.MigrationHostErrorEvent;
import com.vmware.vim25.MigrationHostWarningEvent;
import com.vmware.vim25.MigrationNotReady;
import com.vmware.vim25.MigrationResourceErrorEvent;
import com.vmware.vim25.MigrationResourceWarningEvent;
import com.vmware.vim25.MigrationWarningEvent;
import com.vmware.vim25.MismatchedBundle;
import com.vmware.vim25.MismatchedNetworkPolicies;
import com.vmware.vim25.MismatchedVMotionNetworkNames;
import com.vmware.vim25.MissingBmcSupport;
import com.vmware.vim25.MissingController;
import com.vmware.vim25.MissingIpPool;
import com.vmware.vim25.MissingLinuxCustResources;
import com.vmware.vim25.MissingNetworkIpConfig;
import com.vmware.vim25.MissingObject;
import com.vmware.vim25.MissingPowerOffConfiguration;
import com.vmware.vim25.MissingPowerOnConfiguration;
import com.vmware.vim25.MissingProperty;
import com.vmware.vim25.MissingWindowsCustResources;
import com.vmware.vim25.MksConnectionLimitReached;
import com.vmware.vim25.ModeInfo;
import com.vmware.vim25.ModifyListViewRequestType;
import com.vmware.vim25.ModifyListViewResponse;
import com.vmware.vim25.MonthlyByDayTaskScheduler;
import com.vmware.vim25.MonthlyByWeekdayTaskScheduler;
import com.vmware.vim25.MonthlyTaskScheduler;
import com.vmware.vim25.MountError;
import com.vmware.vim25.MountToolsInstallerRequestType;
import com.vmware.vim25.MountToolsInstallerResponse;
import com.vmware.vim25.MountVffsVolumeRequestType;
import com.vmware.vim25.MountVffsVolumeResponse;
import com.vmware.vim25.MountVmfsVolumeExRequestType;
import com.vmware.vim25.MountVmfsVolumeExTaskResponse;
import com.vmware.vim25.MountVmfsVolumeRequestType;
import com.vmware.vim25.MountVmfsVolumeResponse;
import com.vmware.vim25.MoveDVPortRequestType;
import com.vmware.vim25.MoveDVPortTaskResponse;
import com.vmware.vim25.MoveDatastoreFileRequestType;
import com.vmware.vim25.MoveDatastoreFileTaskResponse;
import com.vmware.vim25.MoveDirectoryInGuestRequestType;
import com.vmware.vim25.MoveDirectoryInGuestResponse;
import com.vmware.vim25.MoveFileInGuestRequestType;
import com.vmware.vim25.MoveFileInGuestResponse;
import com.vmware.vim25.MoveHostIntoRequestType;
import com.vmware.vim25.MoveHostIntoTaskResponse;
import com.vmware.vim25.MoveIntoFolderRequestType;
import com.vmware.vim25.MoveIntoFolderTaskResponse;
import com.vmware.vim25.MoveIntoRequestType;
import com.vmware.vim25.MoveIntoResourcePoolRequestType;
import com.vmware.vim25.MoveIntoResourcePoolResponse;
import com.vmware.vim25.MoveIntoTaskResponse;
import com.vmware.vim25.MoveVirtualDiskRequestType;
import com.vmware.vim25.MoveVirtualDiskTaskResponse;
import com.vmware.vim25.MtuMatchEvent;
import com.vmware.vim25.MtuMismatchEvent;
import com.vmware.vim25.MultiWriterNotSupported;
import com.vmware.vim25.MultipleCertificatesVerifyFault;
import com.vmware.vim25.MultipleCertificatesVerifyFaultThumbprintData;
import com.vmware.vim25.MultipleSnapshotsNotSupported;
import com.vmware.vim25.NASDatastoreCreatedEvent;
import com.vmware.vim25.NamePasswordAuthentication;
import com.vmware.vim25.NamespaceFull;
import com.vmware.vim25.NamespaceLimitReached;
import com.vmware.vim25.NamespaceWriteProtected;
import com.vmware.vim25.NasConfigFault;
import com.vmware.vim25.NasConnectionLimitReached;
import com.vmware.vim25.NasDatastoreInfo;
import com.vmware.vim25.NasSessionCredentialConflict;
import com.vmware.vim25.NasStorageProfile;
import com.vmware.vim25.NasVolumeNotMounted;
import com.vmware.vim25.NegatableExpression;
import com.vmware.vim25.NetBIOSConfigInfo;
import com.vmware.vim25.NetDhcpConfigInfo;
import com.vmware.vim25.NetDhcpConfigInfoDhcpOptions;
import com.vmware.vim25.NetDhcpConfigSpec;
import com.vmware.vim25.NetDhcpConfigSpecDhcpOptionsSpec;
import com.vmware.vim25.NetDnsConfigInfo;
import com.vmware.vim25.NetDnsConfigSpec;
import com.vmware.vim25.NetIpConfigInfo;
import com.vmware.vim25.NetIpConfigInfoIpAddress;
import com.vmware.vim25.NetIpConfigSpec;
import com.vmware.vim25.NetIpConfigSpecIpAddressSpec;
import com.vmware.vim25.NetIpRouteConfigInfo;
import com.vmware.vim25.NetIpRouteConfigInfoGateway;
import com.vmware.vim25.NetIpRouteConfigInfoIpRoute;
import com.vmware.vim25.NetIpRouteConfigSpec;
import com.vmware.vim25.NetIpRouteConfigSpecGatewaySpec;
import com.vmware.vim25.NetIpRouteConfigSpecIpRouteSpec;
import com.vmware.vim25.NetIpStackInfo;
import com.vmware.vim25.NetIpStackInfoDefaultRouter;
import com.vmware.vim25.NetIpStackInfoNetToMedia;
import com.vmware.vim25.NetStackInstanceProfile;
import com.vmware.vim25.NetworkCopyFault;
import com.vmware.vim25.NetworkDisruptedAndConfigRolledBack;
import com.vmware.vim25.NetworkEventArgument;
import com.vmware.vim25.NetworkInaccessible;
import com.vmware.vim25.NetworkPolicyProfile;
import com.vmware.vim25.NetworkProfile;
import com.vmware.vim25.NetworkProfileDnsConfigProfile;
import com.vmware.vim25.NetworkRollbackEvent;
import com.vmware.vim25.NetworkSummary;
import com.vmware.vim25.NetworksMayNotBeTheSame;
import com.vmware.vim25.NicSettingMismatch;
import com.vmware.vim25.NoAccessUserEvent;
import com.vmware.vim25.NoActiveHostInCluster;
import com.vmware.vim25.NoAvailableIp;
import com.vmware.vim25.NoClientCertificate;
import com.vmware.vim25.NoCompatibleDatastore;
import com.vmware.vim25.NoCompatibleHardAffinityHost;
import com.vmware.vim25.NoCompatibleHost;
import com.vmware.vim25.NoCompatibleHostWithAccessToDevice;
import com.vmware.vim25.NoCompatibleSoftAffinityHost;
import com.vmware.vim25.NoConnectedDatastore;
import com.vmware.vim25.NoDatastoresConfiguredEvent;
import com.vmware.vim25.NoDiskFound;
import com.vmware.vim25.NoDiskSpace;
import com.vmware.vim25.NoDisksToCustomize;
import com.vmware.vim25.NoGateway;
import com.vmware.vim25.NoGuestHeartbeat;
import com.vmware.vim25.NoHost;
import com.vmware.vim25.NoHostSuitableForFtSecondary;
import com.vmware.vim25.NoLicenseEvent;
import com.vmware.vim25.NoLicenseServerConfigured;
import com.vmware.vim25.NoMaintenanceModeDrsRecommendationForVM;
import com.vmware.vim25.NoPeerHostFound;
import com.vmware.vim25.NoPermission;
import com.vmware.vim25.NoPermissionOnAD;
import com.vmware.vim25.NoPermissionOnHost;
import com.vmware.vim25.NoPermissionOnNasVolume;
import com.vmware.vim25.NoSubjectName;
import com.vmware.vim25.NoVcManagedIpConfigured;
import com.vmware.vim25.NoVirtualNic;
import com.vmware.vim25.NoVmInVApp;
import com.vmware.vim25.NodeDeploymentSpec;
import com.vmware.vim25.NodeNetworkSpec;
import com.vmware.vim25.NonADUserRequired;
import com.vmware.vim25.NonHomeRDMVMotionNotSupported;
import com.vmware.vim25.NonPersistentDisksNotSupported;
import com.vmware.vim25.NonVIWorkloadDetectedOnDatastoreEvent;
import com.vmware.vim25.NonVmwareOuiMacNotSupportedHost;
import com.vmware.vim25.NotADirectory;
import com.vmware.vim25.NotAFile;
import com.vmware.vim25.NotAuthenticated;
import com.vmware.vim25.NotEnoughCpus;
import com.vmware.vim25.NotEnoughLicenses;
import com.vmware.vim25.NotEnoughLogicalCpus;
import com.vmware.vim25.NotEnoughResourcesToStartVmEvent;
import com.vmware.vim25.NotFound;
import com.vmware.vim25.NotImplemented;
import com.vmware.vim25.NotSupported;
import com.vmware.vim25.NotSupportedDeviceForFT;
import com.vmware.vim25.NotSupportedHost;
import com.vmware.vim25.NotSupportedHostForChecksum;
import com.vmware.vim25.NotSupportedHostForVFlash;
import com.vmware.vim25.NotSupportedHostForVmcp;
import com.vmware.vim25.NotSupportedHostForVmemFile;
import com.vmware.vim25.NotSupportedHostForVsan;
import com.vmware.vim25.NotSupportedHostInCluster;
import com.vmware.vim25.NotSupportedHostInDvs;
import com.vmware.vim25.NotSupportedHostInHACluster;
import com.vmware.vim25.NotUserConfigurableProperty;
import com.vmware.vim25.NsxHostVNicProfile;
import com.vmware.vim25.NumPortsProfile;
import com.vmware.vim25.NumVirtualCoresPerSocketNotSupported;
import com.vmware.vim25.NumVirtualCpusExceedsLimit;
import com.vmware.vim25.NumVirtualCpusIncompatible;
import com.vmware.vim25.NumVirtualCpusNotSupported;
import com.vmware.vim25.NumericRange;
import com.vmware.vim25.NvdimmDimmInfo;
import com.vmware.vim25.NvdimmGuid;
import com.vmware.vim25.NvdimmHealthInfo;
import com.vmware.vim25.NvdimmInterleaveSetInfo;
import com.vmware.vim25.NvdimmNamespaceCreateSpec;
import com.vmware.vim25.NvdimmNamespaceDeleteSpec;
import com.vmware.vim25.NvdimmNamespaceDetails;
import com.vmware.vim25.NvdimmNamespaceInfo;
import com.vmware.vim25.NvdimmPMemNamespaceCreateSpec;
import com.vmware.vim25.NvdimmRegionInfo;
import com.vmware.vim25.NvdimmSummary;
import com.vmware.vim25.NvdimmSystemInfo;
import com.vmware.vim25.ObjectContent;
import com.vmware.vim25.ObjectFactory;
import com.vmware.vim25.ObjectSpec;
import com.vmware.vim25.ObjectUpdate;
import com.vmware.vim25.OnceTaskScheduler;
import com.vmware.vim25.OpaqueNetworkCapability;
import com.vmware.vim25.OpaqueNetworkSummary;
import com.vmware.vim25.OpaqueNetworkTargetInfo;
import com.vmware.vim25.OpaqueSwitchProfile;
import com.vmware.vim25.OpenInventoryViewFolderRequestType;
import com.vmware.vim25.OpenInventoryViewFolderResponse;
import com.vmware.vim25.OperationDisabledByGuest;
import com.vmware.vim25.OperationDisallowedOnHost;
import com.vmware.vim25.OperationNotSupportedByGuest;
import com.vmware.vim25.OptionDef;
import com.vmware.vim25.OptionProfile;
import com.vmware.vim25.OptionType;
import com.vmware.vim25.OptionValue;
import com.vmware.vim25.OrAlarmExpression;
import com.vmware.vim25.OutOfBounds;
import com.vmware.vim25.OutOfSyncDvsHost;
import com.vmware.vim25.OverwriteCustomizationSpecRequestType;
import com.vmware.vim25.OverwriteCustomizationSpecResponse;
import com.vmware.vim25.OvfAttribute;
import com.vmware.vim25.OvfConnectedDevice;
import com.vmware.vim25.OvfConnectedDeviceFloppy;
import com.vmware.vim25.OvfConnectedDeviceIso;
import com.vmware.vim25.OvfConstraint;
import com.vmware.vim25.OvfConsumerCallbackFault;
import com.vmware.vim25.OvfConsumerCommunicationError;
import com.vmware.vim25.OvfConsumerFault;
import com.vmware.vim25.OvfConsumerInvalidSection;
import com.vmware.vim25.OvfConsumerOstNode;
import com.vmware.vim25.OvfConsumerOvfSection;
import com.vmware.vim25.OvfConsumerPowerOnFault;
import com.vmware.vim25.OvfConsumerUndeclaredSection;
import com.vmware.vim25.OvfConsumerUndefinedPrefix;
import com.vmware.vim25.OvfConsumerValidationFault;
import com.vmware.vim25.OvfCpuCompatibility;
import com.vmware.vim25.OvfCpuCompatibilityCheckNotSupported;
import com.vmware.vim25.OvfCreateDescriptorParams;
import com.vmware.vim25.OvfCreateDescriptorResult;
import com.vmware.vim25.OvfCreateImportSpecParams;
import com.vmware.vim25.OvfCreateImportSpecResult;
import com.vmware.vim25.OvfDeploymentOption;
import com.vmware.vim25.OvfDiskMappingNotFound;
import com.vmware.vim25.OvfDiskOrderConstraint;
import com.vmware.vim25.OvfDuplicateElement;
import com.vmware.vim25.OvfDuplicatedElementBoundary;
import com.vmware.vim25.OvfDuplicatedPropertyIdExport;
import com.vmware.vim25.OvfDuplicatedPropertyIdImport;
import com.vmware.vim25.OvfElement;
import com.vmware.vim25.OvfElementInvalidValue;
import com.vmware.vim25.OvfExport;
import com.vmware.vim25.OvfExportFailed;
import com.vmware.vim25.OvfFault;
import com.vmware.vim25.OvfFile;
import com.vmware.vim25.OvfFileItem;
import com.vmware.vim25.OvfHardwareCheck;
import com.vmware.vim25.OvfHardwareExport;
import com.vmware.vim25.OvfHostResourceConstraint;
import com.vmware.vim25.OvfHostValueNotParsed;
import com.vmware.vim25.OvfImport;
import com.vmware.vim25.OvfImportFailed;
import com.vmware.vim25.OvfInternalError;
import com.vmware.vim25.OvfInvalidPackage;
import com.vmware.vim25.OvfInvalidValue;
import com.vmware.vim25.OvfInvalidValueConfiguration;
import com.vmware.vim25.OvfInvalidValueEmpty;
import com.vmware.vim25.OvfInvalidValueFormatMalformed;
import com.vmware.vim25.OvfInvalidValueReference;
import com.vmware.vim25.OvfInvalidVmName;
import com.vmware.vim25.OvfManagerCommonParams;
import com.vmware.vim25.OvfMappedOsId;
import com.vmware.vim25.OvfMissingAttribute;
import com.vmware.vim25.OvfMissingElement;
import com.vmware.vim25.OvfMissingElementNormalBoundary;
import com.vmware.vim25.OvfMissingHardware;
import com.vmware.vim25.OvfNetworkInfo;
import com.vmware.vim25.OvfNetworkMapping;
import com.vmware.vim25.OvfNetworkMappingNotSupported;
import com.vmware.vim25.OvfNoHostNic;
import com.vmware.vim25.OvfNoSpaceOnController;
import com.vmware.vim25.OvfNoSupportedHardwareFamily;
import com.vmware.vim25.OvfOptionInfo;
import com.vmware.vim25.OvfParseDescriptorParams;
import com.vmware.vim25.OvfParseDescriptorResult;
import com.vmware.vim25.OvfProperty;
import com.vmware.vim25.OvfPropertyExport;
import com.vmware.vim25.OvfPropertyNetwork;
import com.vmware.vim25.OvfPropertyNetworkExport;
import com.vmware.vim25.OvfPropertyQualifier;
import com.vmware.vim25.OvfPropertyQualifierDuplicate;
import com.vmware.vim25.OvfPropertyQualifierIgnored;
import com.vmware.vim25.OvfPropertyType;
import com.vmware.vim25.OvfPropertyValue;
import com.vmware.vim25.OvfResourceMap;
import com.vmware.vim25.OvfSystemFault;
import com.vmware.vim25.OvfToXmlUnsupportedElement;
import com.vmware.vim25.OvfUnableToExportDisk;
import com.vmware.vim25.OvfUnexpectedElement;
import com.vmware.vim25.OvfUnknownDevice;
import com.vmware.vim25.OvfUnknownDeviceBacking;
import com.vmware.vim25.OvfUnknownEntity;
import com.vmware.vim25.OvfUnsupportedAttribute;
import com.vmware.vim25.OvfUnsupportedAttributeValue;
import com.vmware.vim25.OvfUnsupportedDeviceBackingInfo;
import com.vmware.vim25.OvfUnsupportedDeviceBackingOption;
import com.vmware.vim25.OvfUnsupportedDeviceExport;
import com.vmware.vim25.OvfUnsupportedDiskProvisioning;
import com.vmware.vim25.OvfUnsupportedElement;
import com.vmware.vim25.OvfUnsupportedElementValue;
import com.vmware.vim25.OvfUnsupportedPackage;
import com.vmware.vim25.OvfUnsupportedSection;
import com.vmware.vim25.OvfUnsupportedSubType;
import com.vmware.vim25.OvfUnsupportedType;
import com.vmware.vim25.OvfValidateHostParams;
import com.vmware.vim25.OvfValidateHostResult;
import com.vmware.vim25.OvfWrongElement;
import com.vmware.vim25.OvfWrongNamespace;
import com.vmware.vim25.OvfXmlFormat;
import com.vmware.vim25.PMemDatastoreInfo;
import com.vmware.vim25.ParaVirtualSCSIController;
import com.vmware.vim25.ParaVirtualSCSIControllerOption;
import com.vmware.vim25.ParseDescriptorRequestType;
import com.vmware.vim25.ParseDescriptorResponse;
import com.vmware.vim25.PassiveNodeDeploymentSpec;
import com.vmware.vim25.PassiveNodeNetworkSpec;
import com.vmware.vim25.PasswordExpired;
import com.vmware.vim25.PasswordField;
import com.vmware.vim25.PatchAlreadyInstalled;
import com.vmware.vim25.PatchBinariesNotFound;
import com.vmware.vim25.PatchInstallFailed;
import com.vmware.vim25.PatchIntegrityError;
import com.vmware.vim25.PatchMetadataCorrupted;
import com.vmware.vim25.PatchMetadataInvalid;
import com.vmware.vim25.PatchMetadataNotFound;
import com.vmware.vim25.PatchMissingDependencies;
import com.vmware.vim25.PatchNotApplicable;
import com.vmware.vim25.PatchSuperseded;
import com.vmware.vim25.PerfCompositeMetric;
import com.vmware.vim25.PerfCounterInfo;
import com.vmware.vim25.PerfEntityMetric;
import com.vmware.vim25.PerfEntityMetricBase;
import com.vmware.vim25.PerfEntityMetricCSV;
import com.vmware.vim25.PerfInterval;
import com.vmware.vim25.PerfMetricId;
import com.vmware.vim25.PerfMetricIntSeries;
import com.vmware.vim25.PerfMetricSeries;
import com.vmware.vim25.PerfMetricSeriesCSV;
import com.vmware.vim25.PerfProviderSummary;
import com.vmware.vim25.PerfQuerySpec;
import com.vmware.vim25.PerfSampleInfo;
import com.vmware.vim25.PerformDvsProductSpecOperationRequestType;
import com.vmware.vim25.PerformDvsProductSpecOperationTaskResponse;
import com.vmware.vim25.PerformVsanUpgradePreflightCheckRequestType;
import com.vmware.vim25.PerformVsanUpgradePreflightCheckResponse;
import com.vmware.vim25.PerformVsanUpgradeRequestType;
import com.vmware.vim25.PerformVsanUpgradeTaskResponse;
import com.vmware.vim25.PerformanceDescription;
import com.vmware.vim25.PerformanceManagerCounterLevelMapping;
import com.vmware.vim25.PerformanceStatisticsDescription;
import com.vmware.vim25.Permission;
import com.vmware.vim25.PermissionAddedEvent;
import com.vmware.vim25.PermissionEvent;
import com.vmware.vim25.PermissionProfile;
import com.vmware.vim25.PermissionRemovedEvent;
import com.vmware.vim25.PermissionUpdatedEvent;
import com.vmware.vim25.PhysCompatRDMNotSupported;
import com.vmware.vim25.PhysicalNic;
import com.vmware.vim25.PhysicalNicCdpDeviceCapability;
import com.vmware.vim25.PhysicalNicCdpInfo;
import com.vmware.vim25.PhysicalNicConfig;
import com.vmware.vim25.PhysicalNicHint;
import com.vmware.vim25.PhysicalNicHintInfo;
import com.vmware.vim25.PhysicalNicIpHint;
import com.vmware.vim25.PhysicalNicLinkInfo;
import com.vmware.vim25.PhysicalNicNameHint;
import com.vmware.vim25.PhysicalNicProfile;
import com.vmware.vim25.PhysicalNicSpec;
import com.vmware.vim25.PlaceVmRequestType;
import com.vmware.vim25.PlaceVmResponse;
import com.vmware.vim25.PlacementAction;
import com.vmware.vim25.PlacementAffinityRule;
import com.vmware.vim25.PlacementRankResult;
import com.vmware.vim25.PlacementRankSpec;
import com.vmware.vim25.PlacementResult;
import com.vmware.vim25.PlacementSpec;
import com.vmware.vim25.PlatformConfigFault;
import com.vmware.vim25.PnicUplinkProfile;
import com.vmware.vim25.PodDiskLocator;
import com.vmware.vim25.PodStorageDrsEntry;
import com.vmware.vim25.PolicyOption;
import com.vmware.vim25.PortGroupProfile;
import com.vmware.vim25.PosixUserSearchResult;
import com.vmware.vim25.PostEventRequestType;
import com.vmware.vim25.PostEventResponse;
import com.vmware.vim25.PostHealthUpdatesRequestType;
import com.vmware.vim25.PostHealthUpdatesResponse;
import com.vmware.vim25.PowerDownHostToStandByRequestType;
import com.vmware.vim25.PowerDownHostToStandByTaskResponse;
import com.vmware.vim25.PowerOffVAppRequestType;
import com.vmware.vim25.PowerOffVAppTaskResponse;
import com.vmware.vim25.PowerOffVMRequestType;
import com.vmware.vim25.PowerOffVMTaskResponse;
import com.vmware.vim25.PowerOnFtSecondaryFailed;
import com.vmware.vim25.PowerOnFtSecondaryTimedout;
import com.vmware.vim25.PowerOnMultiVMRequestType;
import com.vmware.vim25.PowerOnMultiVMTaskResponse;
import com.vmware.vim25.PowerOnVAppRequestType;
import com.vmware.vim25.PowerOnVAppTaskResponse;
import com.vmware.vim25.PowerOnVMRequestType;
import com.vmware.vim25.PowerOnVMTaskResponse;
import com.vmware.vim25.PowerSystemCapability;
import com.vmware.vim25.PowerSystemInfo;
import com.vmware.vim25.PowerUpHostFromStandByRequestType;
import com.vmware.vim25.PowerUpHostFromStandByTaskResponse;
import com.vmware.vim25.PrepareCryptoRequestType;
import com.vmware.vim25.PrepareCryptoResponse;
import com.vmware.vim25.PrepareVchaRequestType;
import com.vmware.vim25.PrepareVchaTaskResponse;
import com.vmware.vim25.PrivilegeAvailability;
import com.vmware.vim25.PrivilegePolicyDef;
import com.vmware.vim25.ProductComponentInfo;
import com.vmware.vim25.ProfileApplyProfileElement;
import com.vmware.vim25.ProfileApplyProfileProperty;
import com.vmware.vim25.ProfileAssociatedEvent;
import com.vmware.vim25.ProfileChangedEvent;
import com.vmware.vim25.ProfileCompositeExpression;
import com.vmware.vim25.ProfileCompositePolicyOptionMetadata;
import com.vmware.vim25.ProfileConfigInfo;
import com.vmware.vim25.ProfileCreateSpec;
import com.vmware.vim25.ProfileCreatedEvent;
import com.vmware.vim25.ProfileDeferredPolicyOptionParameter;
import com.vmware.vim25.ProfileDescription;
import com.vmware.vim25.ProfileDescriptionSection;
import com.vmware.vim25.ProfileDissociatedEvent;
import com.vmware.vim25.ProfileEvent;
import com.vmware.vim25.ProfileEventArgument;
import com.vmware.vim25.ProfileExecuteError;
import com.vmware.vim25.ProfileExecuteResult;
import com.vmware.vim25.ProfileExpression;
import com.vmware.vim25.ProfileExpressionMetadata;
import com.vmware.vim25.ProfileMetadata;
import com.vmware.vim25.ProfileMetadataProfileOperationMessage;
import com.vmware.vim25.ProfileMetadataProfileSortSpec;
import com.vmware.vim25.ProfileParameterMetadata;
import com.vmware.vim25.ProfileParameterMetadataParameterRelationMetadata;
import com.vmware.vim25.ProfilePolicy;
import com.vmware.vim25.ProfilePolicyMetadata;
import com.vmware.vim25.ProfilePolicyOptionMetadata;
import com.vmware.vim25.ProfileProfileStructure;
import com.vmware.vim25.ProfileProfileStructureProperty;
import com.vmware.vim25.ProfilePropertyPath;
import com.vmware.vim25.ProfileReferenceHostChangedEvent;
import com.vmware.vim25.ProfileRemovedEvent;
import com.vmware.vim25.ProfileSerializedCreateSpec;
import com.vmware.vim25.ProfileSimpleExpression;
import com.vmware.vim25.ProfileUpdateFailed;
import com.vmware.vim25.ProfileUpdateFailedUpdateFailure;
import com.vmware.vim25.PromoteDisksRequestType;
import com.vmware.vim25.PromoteDisksTaskResponse;
import com.vmware.vim25.PropertyChange;
import com.vmware.vim25.PropertyFilterSpec;
import com.vmware.vim25.PropertyFilterUpdate;
import com.vmware.vim25.PropertySpec;
import com.vmware.vim25.PutUsbScanCodesRequestType;
import com.vmware.vim25.PutUsbScanCodesResponse;
import com.vmware.vim25.QuarantineModeFault;
import com.vmware.vim25.QueryAnswerFileStatusRequestType;
import com.vmware.vim25.QueryAnswerFileStatusResponse;
import com.vmware.vim25.QueryAssignedLicensesRequestType;
import com.vmware.vim25.QueryAssignedLicensesResponse;
import com.vmware.vim25.QueryAvailableDisksForVmfsRequestType;
import com.vmware.vim25.QueryAvailableDisksForVmfsResponse;
import com.vmware.vim25.QueryAvailableDvsSpecRequestType;
import com.vmware.vim25.QueryAvailableDvsSpecResponse;
import com.vmware.vim25.QueryAvailablePartitionRequestType;
import com.vmware.vim25.QueryAvailablePartitionResponse;
import com.vmware.vim25.QueryAvailablePerfMetricRequestType;
import com.vmware.vim25.QueryAvailablePerfMetricResponse;
import com.vmware.vim25.QueryAvailableSsdsRequestType;
import com.vmware.vim25.QueryAvailableSsdsResponse;
import com.vmware.vim25.QueryAvailableTimeZonesRequestType;
import com.vmware.vim25.QueryAvailableTimeZonesResponse;
import com.vmware.vim25.QueryBootDevicesRequestType;
import com.vmware.vim25.QueryBootDevicesResponse;
import com.vmware.vim25.QueryBoundVnicsRequestType;
import com.vmware.vim25.QueryBoundVnicsResponse;
import com.vmware.vim25.QueryCandidateNicsRequestType;
import com.vmware.vim25.QueryCandidateNicsResponse;
import com.vmware.vim25.QueryChangedDiskAreasRequestType;
import com.vmware.vim25.QueryChangedDiskAreasResponse;
import com.vmware.vim25.QueryCmmdsRequestType;
import com.vmware.vim25.QueryCmmdsResponse;
import com.vmware.vim25.QueryCompatibleHostForExistingDvsRequestType;
import com.vmware.vim25.QueryCompatibleHostForExistingDvsResponse;
import com.vmware.vim25.QueryCompatibleHostForNewDvsRequestType;
import com.vmware.vim25.QueryCompatibleHostForNewDvsResponse;
import com.vmware.vim25.QueryComplianceStatusRequestType;
import com.vmware.vim25.QueryComplianceStatusResponse;
import com.vmware.vim25.QueryConfigOptionDescriptorRequestType;
import com.vmware.vim25.QueryConfigOptionDescriptorResponse;
import com.vmware.vim25.QueryConfigOptionExRequestType;
import com.vmware.vim25.QueryConfigOptionExResponse;
import com.vmware.vim25.QueryConfigOptionRequestType;
import com.vmware.vim25.QueryConfigOptionResponse;
import com.vmware.vim25.QueryConfigTargetRequestType;
import com.vmware.vim25.QueryConfigTargetResponse;
import com.vmware.vim25.QueryConfiguredModuleOptionStringRequestType;
import com.vmware.vim25.QueryConfiguredModuleOptionStringResponse;
import com.vmware.vim25.QueryConnectionInfoRequestType;
import com.vmware.vim25.QueryConnectionInfoResponse;
import com.vmware.vim25.QueryConnectionInfoViaSpecRequestType;
import com.vmware.vim25.QueryConnectionInfoViaSpecResponse;
import com.vmware.vim25.QueryCryptoKeyStatusRequestType;
import com.vmware.vim25.QueryCryptoKeyStatusResponse;
import com.vmware.vim25.QueryDatacenterConfigOptionDescriptorRequestType;
import com.vmware.vim25.QueryDatacenterConfigOptionDescriptorResponse;
import com.vmware.vim25.QueryDatastorePerformanceSummaryRequestType;
import com.vmware.vim25.QueryDatastorePerformanceSummaryResponse;
import com.vmware.vim25.QueryDateTimeRequestType;
import com.vmware.vim25.QueryDateTimeResponse;
import com.vmware.vim25.QueryDescriptionsRequestType;
import com.vmware.vim25.QueryDescriptionsResponse;
import com.vmware.vim25.QueryDisksForVsanRequestType;
import com.vmware.vim25.QueryDisksForVsanResponse;
import com.vmware.vim25.QueryDisksUsingFilterRequestType;
import com.vmware.vim25.QueryDisksUsingFilterResponse;
import com.vmware.vim25.QueryDvsByUuidRequestType;
import com.vmware.vim25.QueryDvsByUuidResponse;
import com.vmware.vim25.QueryDvsCheckCompatibilityRequestType;
import com.vmware.vim25.QueryDvsCheckCompatibilityResponse;
import com.vmware.vim25.QueryDvsCompatibleHostSpecRequestType;
import com.vmware.vim25.QueryDvsCompatibleHostSpecResponse;
import com.vmware.vim25.QueryDvsConfigTargetRequestType;
import com.vmware.vim25.QueryDvsConfigTargetResponse;
import com.vmware.vim25.QueryDvsFeatureCapabilityRequestType;
import com.vmware.vim25.QueryDvsFeatureCapabilityResponse;
import com.vmware.vim25.QueryEventsRequestType;
import com.vmware.vim25.QueryEventsResponse;
import com.vmware.vim25.QueryExpressionMetadataRequestType;
import com.vmware.vim25.QueryExpressionMetadataResponse;
import com.vmware.vim25.QueryExtensionIpAllocationUsageRequestType;
import com.vmware.vim25.QueryExtensionIpAllocationUsageResponse;
import com.vmware.vim25.QueryFaultToleranceCompatibilityExRequestType;
import com.vmware.vim25.QueryFaultToleranceCompatibilityExResponse;
import com.vmware.vim25.QueryFaultToleranceCompatibilityRequestType;
import com.vmware.vim25.QueryFaultToleranceCompatibilityResponse;
import com.vmware.vim25.QueryFilterEntitiesRequestType;
import com.vmware.vim25.QueryFilterEntitiesResponse;
import com.vmware.vim25.QueryFilterInfoIdsRequestType;
import com.vmware.vim25.QueryFilterInfoIdsResponse;
import com.vmware.vim25.QueryFilterListRequestType;
import com.vmware.vim25.QueryFilterListResponse;
import com.vmware.vim25.QueryFilterNameRequestType;
import com.vmware.vim25.QueryFilterNameResponse;
import com.vmware.vim25.QueryFirmwareConfigUploadURLRequestType;
import com.vmware.vim25.QueryFirmwareConfigUploadURLResponse;
import com.vmware.vim25.QueryHealthUpdateInfosRequestType;
import com.vmware.vim25.QueryHealthUpdateInfosResponse;
import com.vmware.vim25.QueryHealthUpdatesRequestType;
import com.vmware.vim25.QueryHealthUpdatesResponse;
import com.vmware.vim25.QueryHostConnectionInfoRequestType;
import com.vmware.vim25.QueryHostConnectionInfoResponse;
import com.vmware.vim25.QueryHostPatchRequestType;
import com.vmware.vim25.QueryHostPatchTaskResponse;
import com.vmware.vim25.QueryHostProfileMetadataRequestType;
import com.vmware.vim25.QueryHostProfileMetadataResponse;
import com.vmware.vim25.QueryHostStatusRequestType;
import com.vmware.vim25.QueryHostStatusResponse;
import com.vmware.vim25.QueryHostsWithAttachedLunRequestType;
import com.vmware.vim25.QueryHostsWithAttachedLunResponse;
import com.vmware.vim25.QueryIORMConfigOptionRequestType;
import com.vmware.vim25.QueryIORMConfigOptionResponse;
import com.vmware.vim25.QueryIPAllocationsRequestType;
import com.vmware.vim25.QueryIPAllocationsResponse;
import com.vmware.vim25.QueryIoFilterInfoRequestType;
import com.vmware.vim25.QueryIoFilterInfoResponse;
import com.vmware.vim25.QueryIoFilterIssuesRequestType;
import com.vmware.vim25.QueryIoFilterIssuesResponse;
import com.vmware.vim25.QueryIpPoolsRequestType;
import com.vmware.vim25.QueryIpPoolsResponse;
import com.vmware.vim25.QueryLicenseSourceAvailabilityRequestType;
import com.vmware.vim25.QueryLicenseSourceAvailabilityResponse;
import com.vmware.vim25.QueryLicenseUsageRequestType;
import com.vmware.vim25.QueryLicenseUsageResponse;
import com.vmware.vim25.QueryLockdownExceptionsRequestType;
import com.vmware.vim25.QueryLockdownExceptionsResponse;
import com.vmware.vim25.QueryManagedByRequestType;
import com.vmware.vim25.QueryManagedByResponse;
import com.vmware.vim25.QueryMemoryOverheadExRequestType;
import com.vmware.vim25.QueryMemoryOverheadExResponse;
import com.vmware.vim25.QueryMemoryOverheadRequestType;
import com.vmware.vim25.QueryMemoryOverheadResponse;
import com.vmware.vim25.QueryMigrationDependenciesRequestType;
import com.vmware.vim25.QueryMigrationDependenciesResponse;
import com.vmware.vim25.QueryModulesRequestType;
import com.vmware.vim25.QueryModulesResponse;
import com.vmware.vim25.QueryMonitoredEntitiesRequestType;
import com.vmware.vim25.QueryMonitoredEntitiesResponse;
import com.vmware.vim25.QueryNFSUserRequestType;
import com.vmware.vim25.QueryNFSUserResponse;
import com.vmware.vim25.QueryNetConfigRequestType;
import com.vmware.vim25.QueryNetConfigResponse;
import com.vmware.vim25.QueryNetworkHintRequestType;
import com.vmware.vim25.QueryNetworkHintResponse;
import com.vmware.vim25.QueryObjectsOnPhysicalVsanDiskRequestType;
import com.vmware.vim25.QueryObjectsOnPhysicalVsanDiskResponse;
import com.vmware.vim25.QueryOptionsRequestType;
import com.vmware.vim25.QueryOptionsResponse;
import com.vmware.vim25.QueryPartitionCreateDescRequestType;
import com.vmware.vim25.QueryPartitionCreateDescResponse;
import com.vmware.vim25.QueryPartitionCreateOptionsRequestType;
import com.vmware.vim25.QueryPartitionCreateOptionsResponse;
import com.vmware.vim25.QueryPathSelectionPolicyOptionsRequestType;
import com.vmware.vim25.QueryPathSelectionPolicyOptionsResponse;
import com.vmware.vim25.QueryPerfCompositeRequestType;
import com.vmware.vim25.QueryPerfCompositeResponse;
import com.vmware.vim25.QueryPerfCounterByLevelRequestType;
import com.vmware.vim25.QueryPerfCounterByLevelResponse;
import com.vmware.vim25.QueryPerfCounterRequestType;
import com.vmware.vim25.QueryPerfCounterResponse;
import com.vmware.vim25.QueryPerfProviderSummaryRequestType;
import com.vmware.vim25.QueryPerfProviderSummaryResponse;
import com.vmware.vim25.QueryPerfRequestType;
import com.vmware.vim25.QueryPerfResponse;
import com.vmware.vim25.QueryPhysicalVsanDisksRequestType;
import com.vmware.vim25.QueryPhysicalVsanDisksResponse;
import com.vmware.vim25.QueryPnicStatusRequestType;
import com.vmware.vim25.QueryPnicStatusResponse;
import com.vmware.vim25.QueryPolicyMetadataRequestType;
import com.vmware.vim25.QueryPolicyMetadataResponse;
import com.vmware.vim25.QueryProductLockerLocationRequestType;
import com.vmware.vim25.QueryProductLockerLocationResponse;
import com.vmware.vim25.QueryProfileStructureRequestType;
import com.vmware.vim25.QueryProfileStructureResponse;
import com.vmware.vim25.QueryProviderListRequestType;
import com.vmware.vim25.QueryProviderListResponse;
import com.vmware.vim25.QueryProviderNameRequestType;
import com.vmware.vim25.QueryProviderNameResponse;
import com.vmware.vim25.QueryResourceConfigOptionRequestType;
import com.vmware.vim25.QueryResourceConfigOptionResponse;
import com.vmware.vim25.QueryServiceListRequestType;
import com.vmware.vim25.QueryServiceListResponse;
import com.vmware.vim25.QueryStorageArrayTypePolicyOptionsRequestType;
import com.vmware.vim25.QueryStorageArrayTypePolicyOptionsResponse;
import com.vmware.vim25.QuerySupportedFeaturesRequestType;
import com.vmware.vim25.QuerySupportedFeaturesResponse;
import com.vmware.vim25.QuerySyncingVsanObjectsRequestType;
import com.vmware.vim25.QuerySyncingVsanObjectsResponse;
import com.vmware.vim25.QuerySystemUsersRequestType;
import com.vmware.vim25.QuerySystemUsersResponse;
import com.vmware.vim25.QueryTargetCapabilitiesRequestType;
import com.vmware.vim25.QueryTargetCapabilitiesResponse;
import com.vmware.vim25.QueryTpmAttestationReportRequestType;
import com.vmware.vim25.QueryTpmAttestationReportResponse;
import com.vmware.vim25.QueryUnmonitoredHostsRequestType;
import com.vmware.vim25.QueryUnmonitoredHostsResponse;
import com.vmware.vim25.QueryUnownedFilesRequestType;
import com.vmware.vim25.QueryUnownedFilesResponse;
import com.vmware.vim25.QueryUnresolvedVmfsVolumeRequestType;
import com.vmware.vim25.QueryUnresolvedVmfsVolumeResponse;
import com.vmware.vim25.QueryUnresolvedVmfsVolumesRequestType;
import com.vmware.vim25.QueryUnresolvedVmfsVolumesResponse;
import com.vmware.vim25.QueryUsedVlanIdInDvsRequestType;
import com.vmware.vim25.QueryUsedVlanIdInDvsResponse;
import com.vmware.vim25.QueryVMotionCompatibilityExRequestType;
import com.vmware.vim25.QueryVMotionCompatibilityExTaskResponse;
import com.vmware.vim25.QueryVMotionCompatibilityRequestType;
import com.vmware.vim25.QueryVMotionCompatibilityResponse;
import com.vmware.vim25.QueryVirtualDiskFragmentationRequestType;
import com.vmware.vim25.QueryVirtualDiskFragmentationResponse;
import com.vmware.vim25.QueryVirtualDiskGeometryRequestType;
import com.vmware.vim25.QueryVirtualDiskGeometryResponse;
import com.vmware.vim25.QueryVirtualDiskUuidRequestType;
import com.vmware.vim25.QueryVirtualDiskUuidResponse;
import com.vmware.vim25.QueryVmfsConfigOptionRequestType;
import com.vmware.vim25.QueryVmfsConfigOptionResponse;
import com.vmware.vim25.QueryVmfsDatastoreCreateOptionsRequestType;
import com.vmware.vim25.QueryVmfsDatastoreCreateOptionsResponse;
import com.vmware.vim25.QueryVmfsDatastoreExpandOptionsRequestType;
import com.vmware.vim25.QueryVmfsDatastoreExpandOptionsResponse;
import com.vmware.vim25.QueryVmfsDatastoreExtendOptionsRequestType;
import com.vmware.vim25.QueryVmfsDatastoreExtendOptionsResponse;
import com.vmware.vim25.QueryVnicStatusRequestType;
import com.vmware.vim25.QueryVnicStatusResponse;
import com.vmware.vim25.QueryVsanObjectUuidsByFilterRequestType;
import com.vmware.vim25.QueryVsanObjectUuidsByFilterResponse;
import com.vmware.vim25.QueryVsanObjectsRequestType;
import com.vmware.vim25.QueryVsanObjectsResponse;
import com.vmware.vim25.QueryVsanStatisticsRequestType;
import com.vmware.vim25.QueryVsanStatisticsResponse;
import com.vmware.vim25.QueryVsanUpgradeStatusRequestType;
import com.vmware.vim25.QueryVsanUpgradeStatusResponse;
import com.vmware.vim25.QuestionPending;
import com.vmware.vim25.QuiesceDatastoreIOForHAFailed;
import com.vmware.vim25.RDMConversionNotSupported;
import com.vmware.vim25.RDMNotPreserved;
import com.vmware.vim25.RDMNotSupported;
import com.vmware.vim25.RDMNotSupportedOnDatastore;
import com.vmware.vim25.RDMPointsToInaccessibleDisk;
import com.vmware.vim25.RawDiskNotSupported;
import com.vmware.vim25.ReadEnvironmentVariableInGuestRequestType;
import com.vmware.vim25.ReadEnvironmentVariableInGuestResponse;
import com.vmware.vim25.ReadHostResourcePoolTreeFailed;
import com.vmware.vim25.ReadNextEventsRequestType;
import com.vmware.vim25.ReadNextEventsResponse;
import com.vmware.vim25.ReadNextTasksRequestType;
import com.vmware.vim25.ReadNextTasksResponse;
import com.vmware.vim25.ReadOnlyDisksWithLegacyDestination;
import com.vmware.vim25.ReadPreviousEventsRequestType;
import com.vmware.vim25.ReadPreviousEventsResponse;
import com.vmware.vim25.ReadPreviousTasksRequestType;
import com.vmware.vim25.ReadPreviousTasksResponse;
import com.vmware.vim25.RebootGuestRequestType;
import com.vmware.vim25.RebootGuestResponse;
import com.vmware.vim25.RebootHostRequestType;
import com.vmware.vim25.RebootHostTaskResponse;
import com.vmware.vim25.RebootRequired;
import com.vmware.vim25.RecommendDatastoresRequestType;
import com.vmware.vim25.RecommendDatastoresResponse;
import com.vmware.vim25.RecommendHostsForVmRequestType;
import com.vmware.vim25.RecommendHostsForVmResponse;
import com.vmware.vim25.RecommissionVsanNodeRequestType;
import com.vmware.vim25.RecommissionVsanNodeTaskResponse;
import com.vmware.vim25.ReconcileDatastoreInventoryRequestType;
import com.vmware.vim25.ReconcileDatastoreInventoryTaskResponse;
import com.vmware.vim25.ReconfigVMRequestType;
import com.vmware.vim25.ReconfigVMTaskResponse;
import com.vmware.vim25.ReconfigurationSatisfiableRequestType;
import com.vmware.vim25.ReconfigurationSatisfiableResponse;
import com.vmware.vim25.ReconfigureAlarmRequestType;
import com.vmware.vim25.ReconfigureAlarmResponse;
import com.vmware.vim25.ReconfigureAutostartRequestType;
import com.vmware.vim25.ReconfigureAutostartResponse;
import com.vmware.vim25.ReconfigureClusterRequestType;
import com.vmware.vim25.ReconfigureClusterTaskResponse;
import com.vmware.vim25.ReconfigureComputeResourceRequestType;
import com.vmware.vim25.ReconfigureComputeResourceTaskResponse;
import com.vmware.vim25.ReconfigureDVPortRequestType;
import com.vmware.vim25.ReconfigureDVPortTaskResponse;
import com.vmware.vim25.ReconfigureDVPortgroupRequestType;
import com.vmware.vim25.ReconfigureDVPortgroupTaskResponse;
import com.vmware.vim25.ReconfigureDatacenterRequestType;
import com.vmware.vim25.ReconfigureDatacenterTaskResponse;
import com.vmware.vim25.ReconfigureDomObjectRequestType;
import com.vmware.vim25.ReconfigureDomObjectResponse;
import com.vmware.vim25.ReconfigureDvsRequestType;
import com.vmware.vim25.ReconfigureDvsTaskResponse;
import com.vmware.vim25.ReconfigureHostForDASRequestType;
import com.vmware.vim25.ReconfigureHostForDASTaskResponse;
import com.vmware.vim25.ReconfigureScheduledTaskRequestType;
import com.vmware.vim25.ReconfigureScheduledTaskResponse;
import com.vmware.vim25.ReconfigureServiceConsoleReservationRequestType;
import com.vmware.vim25.ReconfigureServiceConsoleReservationResponse;
import com.vmware.vim25.ReconfigureSnmpAgentRequestType;
import com.vmware.vim25.ReconfigureSnmpAgentResponse;
import com.vmware.vim25.ReconfigureVirtualMachineReservationRequestType;
import com.vmware.vim25.ReconfigureVirtualMachineReservationResponse;
import com.vmware.vim25.ReconnectHostRequestType;
import com.vmware.vim25.ReconnectHostTaskResponse;
import com.vmware.vim25.RecordReplayDisabled;
import com.vmware.vim25.RecoveryEvent;
import com.vmware.vim25.RectifyDvsHostRequestType;
import com.vmware.vim25.RectifyDvsHostTaskResponse;
import com.vmware.vim25.RectifyDvsOnHostRequestType;
import com.vmware.vim25.RectifyDvsOnHostTaskResponse;
import com.vmware.vim25.RecurrentTaskScheduler;
import com.vmware.vim25.RefreshDVPortStateRequestType;
import com.vmware.vim25.RefreshDVPortStateResponse;
import com.vmware.vim25.RefreshDatastoreRequestType;
import com.vmware.vim25.RefreshDatastoreResponse;
import com.vmware.vim25.RefreshDatastoreStorageInfoRequestType;
import com.vmware.vim25.RefreshDatastoreStorageInfoResponse;
import com.vmware.vim25.RefreshDateTimeSystemRequestType;
import com.vmware.vim25.RefreshDateTimeSystemResponse;
import com.vmware.vim25.RefreshFirewallRequestType;
import com.vmware.vim25.RefreshFirewallResponse;
import com.vmware.vim25.RefreshGraphicsManagerRequestType;
import com.vmware.vim25.RefreshGraphicsManagerResponse;
import com.vmware.vim25.RefreshHealthStatusSystemRequestType;
import com.vmware.vim25.RefreshHealthStatusSystemResponse;
import com.vmware.vim25.RefreshNetworkSystemRequestType;
import com.vmware.vim25.RefreshNetworkSystemResponse;
import com.vmware.vim25.RefreshRecommendationRequestType;
import com.vmware.vim25.RefreshRecommendationResponse;
import com.vmware.vim25.RefreshRequestType;
import com.vmware.vim25.RefreshResponse;
import com.vmware.vim25.RefreshRuntimeRequestType;
import com.vmware.vim25.RefreshRuntimeResponse;
import com.vmware.vim25.RefreshServicesRequestType;
import com.vmware.vim25.RefreshServicesResponse;
import com.vmware.vim25.RefreshStorageDrsRecommendationRequestType;
import com.vmware.vim25.RefreshStorageDrsRecommendationResponse;
import com.vmware.vim25.RefreshStorageDrsRecommendationsForPodRequestType;
import com.vmware.vim25.RefreshStorageDrsRecommendationsForPodTaskResponse;
import com.vmware.vim25.RefreshStorageInfoRequestType;
import com.vmware.vim25.RefreshStorageInfoResponse;
import com.vmware.vim25.RefreshStorageSystemRequestType;
import com.vmware.vim25.RefreshStorageSystemResponse;
import com.vmware.vim25.RegisterChildVMRequestType;
import com.vmware.vim25.RegisterChildVMTaskResponse;
import com.vmware.vim25.RegisterDiskRequestType;
import com.vmware.vim25.RegisterDiskResponse;
import com.vmware.vim25.RegisterExtensionRequestType;
import com.vmware.vim25.RegisterExtensionResponse;
import com.vmware.vim25.RegisterHealthUpdateProviderRequestType;
import com.vmware.vim25.RegisterHealthUpdateProviderResponse;
import com.vmware.vim25.RegisterKmipServerRequestType;
import com.vmware.vim25.RegisterKmipServerResponse;
import com.vmware.vim25.RegisterKmsClusterRequestType;
import com.vmware.vim25.RegisterKmsClusterResponse;
import com.vmware.vim25.RegisterVMRequestType;
import com.vmware.vim25.RegisterVMTaskResponse;
import com.vmware.vim25.Relation;
import com.vmware.vim25.ReleaseCredentialsInGuestRequestType;
import com.vmware.vim25.ReleaseCredentialsInGuestResponse;
import com.vmware.vim25.ReleaseIpAllocationRequestType;
import com.vmware.vim25.ReleaseIpAllocationResponse;
import com.vmware.vim25.ReleaseManagedSnapshotRequestType;
import com.vmware.vim25.ReleaseManagedSnapshotResponse;
import com.vmware.vim25.ReloadRequestType;
import com.vmware.vim25.ReloadResponse;
import com.vmware.vim25.ReloadVirtualMachineFromPathRequestType;
import com.vmware.vim25.ReloadVirtualMachineFromPathTaskResponse;
import com.vmware.vim25.RelocateVMRequestType;
import com.vmware.vim25.RelocateVMTaskResponse;
import com.vmware.vim25.RelocateVStorageObjectRequestType;
import com.vmware.vim25.RelocateVStorageObjectTaskResponse;
import com.vmware.vim25.RemoteDeviceNotSupported;
import com.vmware.vim25.RemoteTSMEnabledEvent;
import com.vmware.vim25.RemoveAlarmRequestType;
import com.vmware.vim25.RemoveAlarmResponse;
import com.vmware.vim25.RemoveAllSnapshotsRequestType;
import com.vmware.vim25.RemoveAllSnapshotsTaskResponse;
import com.vmware.vim25.RemoveAssignedLicenseRequestType;
import com.vmware.vim25.RemoveAssignedLicenseResponse;
import com.vmware.vim25.RemoveAuthorizationRoleRequestType;
import com.vmware.vim25.RemoveAuthorizationRoleResponse;
import com.vmware.vim25.RemoveCustomFieldDefRequestType;
import com.vmware.vim25.RemoveCustomFieldDefResponse;
import com.vmware.vim25.RemoveDatastoreExRequestType;
import com.vmware.vim25.RemoveDatastoreExTaskResponse;
import com.vmware.vim25.RemoveDatastoreRequestType;
import com.vmware.vim25.RemoveDatastoreResponse;
import com.vmware.vim25.RemoveDiskMappingRequestType;
import com.vmware.vim25.RemoveDiskMappingTaskResponse;
import com.vmware.vim25.RemoveDiskRequestType;
import com.vmware.vim25.RemoveDiskTaskResponse;
import com.vmware.vim25.RemoveEntityPermissionRequestType;
import com.vmware.vim25.RemoveEntityPermissionResponse;
import com.vmware.vim25.RemoveFailed;
import com.vmware.vim25.RemoveFilterEntitiesRequestType;
import com.vmware.vim25.RemoveFilterEntitiesResponse;
import com.vmware.vim25.RemoveFilterRequestType;
import com.vmware.vim25.RemoveFilterResponse;
import com.vmware.vim25.RemoveGroupRequestType;
import com.vmware.vim25.RemoveGroupResponse;
import com.vmware.vim25.RemoveGuestAliasByCertRequestType;
import com.vmware.vim25.RemoveGuestAliasByCertResponse;
import com.vmware.vim25.RemoveGuestAliasRequestType;
import com.vmware.vim25.RemoveGuestAliasResponse;
import com.vmware.vim25.RemoveInternetScsiSendTargetsRequestType;
import com.vmware.vim25.RemoveInternetScsiSendTargetsResponse;
import com.vmware.vim25.RemoveInternetScsiStaticTargetsRequestType;
import com.vmware.vim25.RemoveInternetScsiStaticTargetsResponse;
import com.vmware.vim25.RemoveKeyRequestType;
import com.vmware.vim25.RemoveKeyResponse;
import com.vmware.vim25.RemoveKeysRequestType;
import com.vmware.vim25.RemoveKeysResponse;
import com.vmware.vim25.RemoveKmipServerRequestType;
import com.vmware.vim25.RemoveKmipServerResponse;
import com.vmware.vim25.RemoveLicenseLabelRequestType;
import com.vmware.vim25.RemoveLicenseLabelResponse;
import com.vmware.vim25.RemoveLicenseRequestType;
import com.vmware.vim25.RemoveLicenseResponse;
import com.vmware.vim25.RemoveMonitoredEntitiesRequestType;
import com.vmware.vim25.RemoveMonitoredEntitiesResponse;
import com.vmware.vim25.RemoveNetworkResourcePoolRequestType;
import com.vmware.vim25.RemoveNetworkResourcePoolResponse;
import com.vmware.vim25.RemoveNvmeOverRdmaAdapterRequestType;
import com.vmware.vim25.RemoveNvmeOverRdmaAdapterResponse;
import com.vmware.vim25.RemovePerfIntervalRequestType;
import com.vmware.vim25.RemovePerfIntervalResponse;
import com.vmware.vim25.RemovePortGroupRequestType;
import com.vmware.vim25.RemovePortGroupResponse;
import com.vmware.vim25.RemoveScheduledTaskRequestType;
import com.vmware.vim25.RemoveScheduledTaskResponse;
import com.vmware.vim25.RemoveServiceConsoleVirtualNicRequestType;
import com.vmware.vim25.RemoveServiceConsoleVirtualNicResponse;
import com.vmware.vim25.RemoveSmartCardTrustAnchorByFingerprintRequestType;
import com.vmware.vim25.RemoveSmartCardTrustAnchorByFingerprintResponse;
import com.vmware.vim25.RemoveSmartCardTrustAnchorRequestType;
import com.vmware.vim25.RemoveSmartCardTrustAnchorResponse;
import com.vmware.vim25.RemoveSnapshotRequestType;
import com.vmware.vim25.RemoveSnapshotTaskResponse;
import com.vmware.vim25.RemoveUserRequestType;
import com.vmware.vim25.RemoveUserResponse;
import com.vmware.vim25.RemoveVirtualNicRequestType;
import com.vmware.vim25.RemoveVirtualNicResponse;
import com.vmware.vim25.RemoveVirtualSwitchRequestType;
import com.vmware.vim25.RemoveVirtualSwitchResponse;
import com.vmware.vim25.RenameCustomFieldDefRequestType;
import com.vmware.vim25.RenameCustomFieldDefResponse;
import com.vmware.vim25.RenameCustomizationSpecRequestType;
import com.vmware.vim25.RenameCustomizationSpecResponse;
import com.vmware.vim25.RenameDatastoreRequestType;
import com.vmware.vim25.RenameDatastoreResponse;
import com.vmware.vim25.RenameRequestType;
import com.vmware.vim25.RenameSnapshotRequestType;
import com.vmware.vim25.RenameSnapshotResponse;
import com.vmware.vim25.RenameTaskResponse;
import com.vmware.vim25.RenameVStorageObjectRequestType;
import com.vmware.vim25.RenameVStorageObjectResponse;
import com.vmware.vim25.ReplaceCACertificatesAndCRLsRequestType;
import com.vmware.vim25.ReplaceCACertificatesAndCRLsResponse;
import com.vmware.vim25.ReplaceSmartCardTrustAnchorsRequestType;
import com.vmware.vim25.ReplaceSmartCardTrustAnchorsResponse;
import com.vmware.vim25.ReplicationConfigFault;
import com.vmware.vim25.ReplicationConfigSpec;
import com.vmware.vim25.ReplicationDiskConfigFault;
import com.vmware.vim25.ReplicationFault;
import com.vmware.vim25.ReplicationGroupId;
import com.vmware.vim25.ReplicationIncompatibleWithFT;
import com.vmware.vim25.ReplicationInfoDiskSettings;
import com.vmware.vim25.ReplicationInvalidOptions;
import com.vmware.vim25.ReplicationNotSupportedOnHost;
import com.vmware.vim25.ReplicationSpec;
import com.vmware.vim25.ReplicationVmConfigFault;
import com.vmware.vim25.ReplicationVmFault;
import com.vmware.vim25.ReplicationVmInProgressFault;
import com.vmware.vim25.ReplicationVmProgressInfo;
import com.vmware.vim25.RequestCanceled;
import com.vmware.vim25.RescanAllHbaRequestType;
import com.vmware.vim25.RescanAllHbaResponse;
import com.vmware.vim25.RescanHbaRequestType;
import com.vmware.vim25.RescanHbaResponse;
import com.vmware.vim25.RescanVffsRequestType;
import com.vmware.vim25.RescanVffsResponse;
import com.vmware.vim25.RescanVmfsRequestType;
import com.vmware.vim25.RescanVmfsResponse;
import com.vmware.vim25.ResetCollectorRequestType;
import com.vmware.vim25.ResetCollectorResponse;
import com.vmware.vim25.ResetCounterLevelMappingRequestType;
import com.vmware.vim25.ResetCounterLevelMappingResponse;
import com.vmware.vim25.ResetEntityPermissionsRequestType;
import com.vmware.vim25.ResetEntityPermissionsResponse;
import com.vmware.vim25.ResetFirmwareToFactoryDefaultsRequestType;
import com.vmware.vim25.ResetFirmwareToFactoryDefaultsResponse;
import com.vmware.vim25.ResetGuestInformationRequestType;
import com.vmware.vim25.ResetGuestInformationResponse;
import com.vmware.vim25.ResetListViewFromViewRequestType;
import com.vmware.vim25.ResetListViewFromViewResponse;
import com.vmware.vim25.ResetListViewRequestType;
import com.vmware.vim25.ResetListViewResponse;
import com.vmware.vim25.ResetSystemHealthInfoRequestType;
import com.vmware.vim25.ResetSystemHealthInfoResponse;
import com.vmware.vim25.ResetVMRequestType;
import com.vmware.vim25.ResetVMTaskResponse;
import com.vmware.vim25.ResignatureUnresolvedVmfsVolumeRequestType;
import com.vmware.vim25.ResignatureUnresolvedVmfsVolumeTaskResponse;
import com.vmware.vim25.ResolveInstallationErrorsOnClusterRequestType;
import com.vmware.vim25.ResolveInstallationErrorsOnClusterTaskResponse;
import com.vmware.vim25.ResolveInstallationErrorsOnHostRequestType;
import com.vmware.vim25.ResolveInstallationErrorsOnHostTaskResponse;
import com.vmware.vim25.ResolveMultipleUnresolvedVmfsVolumesExRequestType;
import com.vmware.vim25.ResolveMultipleUnresolvedVmfsVolumesExTaskResponse;
import com.vmware.vim25.ResolveMultipleUnresolvedVmfsVolumesRequestType;
import com.vmware.vim25.ResolveMultipleUnresolvedVmfsVolumesResponse;
import com.vmware.vim25.ResourceAllocationInfo;
import com.vmware.vim25.ResourceAllocationOption;
import com.vmware.vim25.ResourceConfigOption;
import com.vmware.vim25.ResourceConfigSpec;
import com.vmware.vim25.ResourceInUse;
import com.vmware.vim25.ResourceNotAvailable;
import com.vmware.vim25.ResourcePoolCreatedEvent;
import com.vmware.vim25.ResourcePoolDestroyedEvent;
import com.vmware.vim25.ResourcePoolEvent;
import com.vmware.vim25.ResourcePoolEventArgument;
import com.vmware.vim25.ResourcePoolMovedEvent;
import com.vmware.vim25.ResourcePoolQuickStats;
import com.vmware.vim25.ResourcePoolReconfiguredEvent;
import com.vmware.vim25.ResourcePoolResourceUsage;
import com.vmware.vim25.ResourcePoolRuntimeInfo;
import com.vmware.vim25.ResourcePoolSummary;
import com.vmware.vim25.ResourceViolatedEvent;
import com.vmware.vim25.RestartServiceConsoleVirtualNicRequestType;
import com.vmware.vim25.RestartServiceConsoleVirtualNicResponse;
import com.vmware.vim25.RestartServiceRequestType;
import com.vmware.vim25.RestartServiceResponse;
import com.vmware.vim25.RestoreFirmwareConfigurationRequestType;
import com.vmware.vim25.RestoreFirmwareConfigurationResponse;
import com.vmware.vim25.RestrictedByAdministrator;
import com.vmware.vim25.RestrictedVersion;
import com.vmware.vim25.RetrieveAllPermissionsRequestType;
import com.vmware.vim25.RetrieveAllPermissionsResponse;
import com.vmware.vim25.RetrieveAnswerFileForProfileRequestType;
import com.vmware.vim25.RetrieveAnswerFileForProfileResponse;
import com.vmware.vim25.RetrieveAnswerFileRequestType;
import com.vmware.vim25.RetrieveAnswerFileResponse;
import com.vmware.vim25.RetrieveArgumentDescriptionRequestType;
import com.vmware.vim25.RetrieveArgumentDescriptionResponse;
import com.vmware.vim25.RetrieveClientCertRequestType;
import com.vmware.vim25.RetrieveClientCertResponse;
import com.vmware.vim25.RetrieveClientCsrRequestType;
import com.vmware.vim25.RetrieveClientCsrResponse;
import com.vmware.vim25.RetrieveDasAdvancedRuntimeInfoRequestType;
import com.vmware.vim25.RetrieveDasAdvancedRuntimeInfoResponse;
import com.vmware.vim25.RetrieveDescriptionRequestType;
import com.vmware.vim25.RetrieveDescriptionResponse;
import com.vmware.vim25.RetrieveDiskPartitionInfoRequestType;
import com.vmware.vim25.RetrieveDiskPartitionInfoResponse;
import com.vmware.vim25.RetrieveDynamicPassthroughInfoRequestType;
import com.vmware.vim25.RetrieveDynamicPassthroughInfoResponse;
import com.vmware.vim25.RetrieveEntityPermissionsRequestType;
import com.vmware.vim25.RetrieveEntityPermissionsResponse;
import com.vmware.vim25.RetrieveEntityScheduledTaskRequestType;
import com.vmware.vim25.RetrieveEntityScheduledTaskResponse;
import com.vmware.vim25.RetrieveFreeEpcMemoryRequestType;
import com.vmware.vim25.RetrieveFreeEpcMemoryResponse;
import com.vmware.vim25.RetrieveHardwareUptimeRequestType;
import com.vmware.vim25.RetrieveHardwareUptimeResponse;
import com.vmware.vim25.RetrieveHostAccessControlEntriesRequestType;
import com.vmware.vim25.RetrieveHostAccessControlEntriesResponse;
import com.vmware.vim25.RetrieveHostCustomizationsForProfileRequestType;
import com.vmware.vim25.RetrieveHostCustomizationsForProfileResponse;
import com.vmware.vim25.RetrieveHostCustomizationsRequestType;
import com.vmware.vim25.RetrieveHostCustomizationsResponse;
import com.vmware.vim25.RetrieveHostSpecificationRequestType;
import com.vmware.vim25.RetrieveHostSpecificationResponse;
import com.vmware.vim25.RetrieveKmipServerCertRequestType;
import com.vmware.vim25.RetrieveKmipServerCertResponse;
import com.vmware.vim25.RetrieveKmipServersStatusRequestType;
import com.vmware.vim25.RetrieveKmipServersStatusTaskResponse;
import com.vmware.vim25.RetrieveObjectScheduledTaskRequestType;
import com.vmware.vim25.RetrieveObjectScheduledTaskResponse;
import com.vmware.vim25.RetrieveOptions;
import com.vmware.vim25.RetrieveProductComponentsRequestType;
import com.vmware.vim25.RetrieveProductComponentsResponse;
import com.vmware.vim25.RetrievePropertiesExRequestType;
import com.vmware.vim25.RetrievePropertiesExResponse;
import com.vmware.vim25.RetrievePropertiesRequestType;
import com.vmware.vim25.RetrievePropertiesResponse;
import com.vmware.vim25.RetrieveResult;
import com.vmware.vim25.RetrieveRolePermissionsRequestType;
import com.vmware.vim25.RetrieveRolePermissionsResponse;
import com.vmware.vim25.RetrieveSelfSignedClientCertRequestType;
import com.vmware.vim25.RetrieveSelfSignedClientCertResponse;
import com.vmware.vim25.RetrieveServiceContentRequestType;
import com.vmware.vim25.RetrieveServiceContentResponse;
import com.vmware.vim25.RetrieveServiceProviderEntitiesRequestType;
import com.vmware.vim25.RetrieveServiceProviderEntitiesResponse;
import com.vmware.vim25.RetrieveSnapshotDetailsRequestType;
import com.vmware.vim25.RetrieveSnapshotDetailsResponse;
import com.vmware.vim25.RetrieveSnapshotInfoRequestType;
import com.vmware.vim25.RetrieveSnapshotInfoResponse;
import com.vmware.vim25.RetrieveUserGroupsRequestType;
import com.vmware.vim25.RetrieveUserGroupsResponse;
import com.vmware.vim25.RetrieveVStorageInfrastructureObjectPolicyRequestType;
import com.vmware.vim25.RetrieveVStorageInfrastructureObjectPolicyResponse;
import com.vmware.vim25.RetrieveVStorageObjSpec;
import com.vmware.vim25.RetrieveVStorageObjectAssociationsRequestType;
import com.vmware.vim25.RetrieveVStorageObjectAssociationsResponse;
import com.vmware.vim25.RetrieveVStorageObjectRequestType;
import com.vmware.vim25.RetrieveVStorageObjectResponse;
import com.vmware.vim25.RetrieveVStorageObjectStateRequestType;
import com.vmware.vim25.RetrieveVStorageObjectStateResponse;
import com.vmware.vim25.RevertToCurrentSnapshotRequestType;
import com.vmware.vim25.RevertToCurrentSnapshotTaskResponse;
import com.vmware.vim25.RevertToSnapshotRequestType;
import com.vmware.vim25.RevertToSnapshotTaskResponse;
import com.vmware.vim25.RevertVStorageObjectRequestType;
import com.vmware.vim25.RevertVStorageObjectTaskResponse;
import com.vmware.vim25.RewindCollectorRequestType;
import com.vmware.vim25.RewindCollectorResponse;
import com.vmware.vim25.RoleAddedEvent;
import com.vmware.vim25.RoleEvent;
import com.vmware.vim25.RoleEventArgument;
import com.vmware.vim25.RoleRemovedEvent;
import com.vmware.vim25.RoleUpdatedEvent;
import com.vmware.vim25.RollbackEvent;
import com.vmware.vim25.RollbackFailure;
import com.vmware.vim25.RuleViolation;
import com.vmware.vim25.RunScheduledTaskRequestType;
import com.vmware.vim25.RunScheduledTaskResponse;
import com.vmware.vim25.RunScriptAction;
import com.vmware.vim25.RunVsanPhysicalDiskDiagnosticsRequestType;
import com.vmware.vim25.RunVsanPhysicalDiskDiagnosticsResponse;
import com.vmware.vim25.RuntimeFault;
import com.vmware.vim25.SAMLTokenAuthentication;
import com.vmware.vim25.SDDCBase;
import com.vmware.vim25.SSLDisabledFault;
import com.vmware.vim25.SSLVerifyFault;
import com.vmware.vim25.SSPIAuthentication;
import com.vmware.vim25.SSPIChallenge;
import com.vmware.vim25.ScanHostPatchRequestType;
import com.vmware.vim25.ScanHostPatchTaskResponse;
import com.vmware.vim25.ScanHostPatchV2RequestType;
import com.vmware.vim25.ScanHostPatchV2TaskResponse;
import com.vmware.vim25.ScheduleReconcileDatastoreInventoryRequestType;
import com.vmware.vim25.ScheduleReconcileDatastoreInventoryResponse;
import com.vmware.vim25.ScheduledHardwareUpgradeInfo;
import com.vmware.vim25.ScheduledTaskCompletedEvent;
import com.vmware.vim25.ScheduledTaskCreatedEvent;
import com.vmware.vim25.ScheduledTaskDescription;
import com.vmware.vim25.ScheduledTaskDetail;
import com.vmware.vim25.ScheduledTaskEmailCompletedEvent;
import com.vmware.vim25.ScheduledTaskEmailFailedEvent;
import com.vmware.vim25.ScheduledTaskEvent;
import com.vmware.vim25.ScheduledTaskEventArgument;
import com.vmware.vim25.ScheduledTaskFailedEvent;
import com.vmware.vim25.ScheduledTaskInfo;
import com.vmware.vim25.ScheduledTaskReconfiguredEvent;
import com.vmware.vim25.ScheduledTaskRemovedEvent;
import com.vmware.vim25.ScheduledTaskSpec;
import com.vmware.vim25.ScheduledTaskStartedEvent;
import com.vmware.vim25.ScsiLun;
import com.vmware.vim25.ScsiLunCapabilities;
import com.vmware.vim25.ScsiLunDescriptor;
import com.vmware.vim25.ScsiLunDurableName;
import com.vmware.vim25.SeSparseVirtualDiskSpec;
import com.vmware.vim25.SearchDatastoreRequestType;
import com.vmware.vim25.SearchDatastoreSubFoldersRequestType;
import com.vmware.vim25.SearchDatastoreSubFoldersTaskResponse;
import com.vmware.vim25.SearchDatastoreTaskResponse;
import com.vmware.vim25.SecondaryVmAlreadyDisabled;
import com.vmware.vim25.SecondaryVmAlreadyEnabled;
import com.vmware.vim25.SecondaryVmAlreadyRegistered;
import com.vmware.vim25.SecondaryVmNotRegistered;
import com.vmware.vim25.SecurityError;
import com.vmware.vim25.SecurityProfile;
import com.vmware.vim25.SelectActivePartitionRequestType;
import com.vmware.vim25.SelectActivePartitionResponse;
import com.vmware.vim25.SelectVnicForNicTypeRequestType;
import com.vmware.vim25.SelectVnicForNicTypeResponse;
import com.vmware.vim25.SelectVnicRequestType;
import com.vmware.vim25.SelectVnicResponse;
import com.vmware.vim25.SelectionSet;
import com.vmware.vim25.SelectionSpec;
import com.vmware.vim25.SendEmailAction;
import com.vmware.vim25.SendNMIRequestType;
import com.vmware.vim25.SendNMIResponse;
import com.vmware.vim25.SendSNMPAction;
import com.vmware.vim25.SendTestNotificationRequestType;
import com.vmware.vim25.SendTestNotificationResponse;
import com.vmware.vim25.ServerLicenseExpiredEvent;
import com.vmware.vim25.ServerStartedSessionEvent;
import com.vmware.vim25.ServiceConsolePortGroupProfile;
import com.vmware.vim25.ServiceConsoleReservationInfo;
import com.vmware.vim25.ServiceContent;
import com.vmware.vim25.ServiceLocator;
import com.vmware.vim25.ServiceLocatorCredential;
import com.vmware.vim25.ServiceLocatorNamePassword;
import com.vmware.vim25.ServiceLocatorSAMLCredential;
import com.vmware.vim25.ServiceManagerServiceInfo;
import com.vmware.vim25.ServiceProfile;
import com.vmware.vim25.SessionEvent;
import com.vmware.vim25.SessionIsActiveRequestType;
import com.vmware.vim25.SessionIsActiveResponse;
import com.vmware.vim25.SessionManagerGenericServiceTicket;
import com.vmware.vim25.SessionManagerHttpServiceRequestSpec;
import com.vmware.vim25.SessionManagerLocalTicket;
import com.vmware.vim25.SessionManagerServiceRequestSpec;
import com.vmware.vim25.SessionManagerVmomiServiceRequestSpec;
import com.vmware.vim25.SessionTerminatedEvent;
import com.vmware.vim25.SetClusterModeRequestType;
import com.vmware.vim25.SetClusterModeTaskResponse;
import com.vmware.vim25.SetCollectorPageSizeRequestType;
import com.vmware.vim25.SetCollectorPageSizeResponse;
import com.vmware.vim25.SetCryptoModeRequestType;
import com.vmware.vim25.SetCryptoModeResponse;
import com.vmware.vim25.SetCustomValueRequestType;
import com.vmware.vim25.SetCustomValueResponse;
import com.vmware.vim25.SetDefaultKmsClusterRequestType;
import com.vmware.vim25.SetDefaultKmsClusterResponse;
import com.vmware.vim25.SetDisplayTopologyRequestType;
import com.vmware.vim25.SetDisplayTopologyResponse;
import com.vmware.vim25.SetEntityPermissionsRequestType;
import com.vmware.vim25.SetEntityPermissionsResponse;
import com.vmware.vim25.SetExtensionCertificateRequestType;
import com.vmware.vim25.SetExtensionCertificateResponse;
import com.vmware.vim25.SetFieldRequestType;
import com.vmware.vim25.SetFieldResponse;
import com.vmware.vim25.SetLicenseEditionRequestType;
import com.vmware.vim25.SetLicenseEditionResponse;
import com.vmware.vim25.SetLocaleRequestType;
import com.vmware.vim25.SetLocaleResponse;
import com.vmware.vim25.SetMultipathLunPolicyRequestType;
import com.vmware.vim25.SetMultipathLunPolicyResponse;
import com.vmware.vim25.SetNFSUserRequestType;
import com.vmware.vim25.SetNFSUserResponse;
import com.vmware.vim25.SetPublicKeyRequestType;
import com.vmware.vim25.SetPublicKeyResponse;
import com.vmware.vim25.SetRegistryValueInGuestRequestType;
import com.vmware.vim25.SetRegistryValueInGuestResponse;
import com.vmware.vim25.SetScreenResolutionRequestType;
import com.vmware.vim25.SetScreenResolutionResponse;
import com.vmware.vim25.SetTaskDescriptionRequestType;
import com.vmware.vim25.SetTaskDescriptionResponse;
import com.vmware.vim25.SetTaskStateRequestType;
import com.vmware.vim25.SetTaskStateResponse;
import com.vmware.vim25.SetVStorageObjectControlFlagsRequestType;
import com.vmware.vim25.SetVStorageObjectControlFlagsResponse;
import com.vmware.vim25.SetVirtualDiskUuidRequestType;
import com.vmware.vim25.SetVirtualDiskUuidResponse;
import com.vmware.vim25.SharedBusControllerNotSupported;
import com.vmware.vim25.SharesInfo;
import com.vmware.vim25.SharesOption;
import com.vmware.vim25.ShrinkDiskFault;
import com.vmware.vim25.ShrinkVirtualDiskRequestType;
import com.vmware.vim25.ShrinkVirtualDiskTaskResponse;
import com.vmware.vim25.ShutdownGuestRequestType;
import com.vmware.vim25.ShutdownGuestResponse;
import com.vmware.vim25.ShutdownHostRequestType;
import com.vmware.vim25.ShutdownHostTaskResponse;
import com.vmware.vim25.SingleIp;
import com.vmware.vim25.SingleMac;
import com.vmware.vim25.SiteInfo;
import com.vmware.vim25.SnapshotCloneNotSupported;
import com.vmware.vim25.SnapshotCopyNotSupported;
import com.vmware.vim25.SnapshotDisabled;
import com.vmware.vim25.SnapshotFault;
import com.vmware.vim25.SnapshotIncompatibleDeviceInVm;
import com.vmware.vim25.SnapshotLocked;
import com.vmware.vim25.SnapshotMoveFromNonHomeNotSupported;
import com.vmware.vim25.SnapshotMoveNotSupported;
import com.vmware.vim25.SnapshotMoveToNonHomeNotSupported;
import com.vmware.vim25.SnapshotNoChange;
import com.vmware.vim25.SnapshotRevertIssue;
import com.vmware.vim25.SoftRuleVioCorrectionDisallowed;
import com.vmware.vim25.SoftRuleVioCorrectionImpact;
import com.vmware.vim25.SoftwarePackage;
import com.vmware.vim25.SoftwarePackageCapability;
import com.vmware.vim25.SolutionUserRequired;
import com.vmware.vim25.SourceNodeSpec;
import com.vmware.vim25.SsdDiskNotAvailable;
import com.vmware.vim25.StageHostPatchRequestType;
import com.vmware.vim25.StageHostPatchTaskResponse;
import com.vmware.vim25.StampAllRulesWithUuidRequestType;
import com.vmware.vim25.StampAllRulesWithUuidTaskResponse;
import com.vmware.vim25.StandbyGuestRequestType;
import com.vmware.vim25.StandbyGuestResponse;
import com.vmware.vim25.StartGuestNetworkRequestType;
import com.vmware.vim25.StartGuestNetworkTaskResponse;
import com.vmware.vim25.StartProgramInGuestRequestType;
import com.vmware.vim25.StartProgramInGuestResponse;
import com.vmware.vim25.StartRecordingRequestType;
import com.vmware.vim25.StartRecordingTaskResponse;
import com.vmware.vim25.StartReplayingRequestType;
import com.vmware.vim25.StartReplayingTaskResponse;
import com.vmware.vim25.StartServiceRequestType;
import com.vmware.vim25.StartServiceResponse;
import com.vmware.vim25.StateAlarmExpression;
import com.vmware.vim25.StaticRouteProfile;
import com.vmware.vim25.StopRecordingRequestType;
import com.vmware.vim25.StopRecordingTaskResponse;
import com.vmware.vim25.StopReplayingRequestType;
import com.vmware.vim25.StopReplayingTaskResponse;
import com.vmware.vim25.StopServiceRequestType;
import com.vmware.vim25.StopServiceResponse;
import com.vmware.vim25.StorageDrsAutomationConfig;
import com.vmware.vim25.StorageDrsCannotMoveDiskInMultiWriterMode;
import com.vmware.vim25.StorageDrsCannotMoveFTVm;
import com.vmware.vim25.StorageDrsCannotMoveIndependentDisk;
import com.vmware.vim25.StorageDrsCannotMoveManuallyPlacedSwapFile;
import com.vmware.vim25.StorageDrsCannotMoveManuallyPlacedVm;
import com.vmware.vim25.StorageDrsCannotMoveSharedDisk;
import com.vmware.vim25.StorageDrsCannotMoveTemplate;
import com.vmware.vim25.StorageDrsCannotMoveVmInUserFolder;
import com.vmware.vim25.StorageDrsCannotMoveVmWithMountedCDROM;
import com.vmware.vim25.StorageDrsCannotMoveVmWithNoFilesInLayout;
import com.vmware.vim25.StorageDrsConfigInfo;
import com.vmware.vim25.StorageDrsConfigSpec;
import com.vmware.vim25.StorageDrsDatacentersCannotShareDatastore;
import com.vmware.vim25.StorageDrsDisabledOnVm;
import com.vmware.vim25.StorageDrsHbrDiskNotMovable;
import com.vmware.vim25.StorageDrsHmsMoveInProgress;
import com.vmware.vim25.StorageDrsHmsUnreachable;
import com.vmware.vim25.StorageDrsIoLoadBalanceConfig;
import com.vmware.vim25.StorageDrsIolbDisabledInternally;
import com.vmware.vim25.StorageDrsOptionSpec;
import com.vmware.vim25.StorageDrsPlacementRankVmSpec;
import com.vmware.vim25.StorageDrsPodConfigInfo;
import com.vmware.vim25.StorageDrsPodConfigSpec;
import com.vmware.vim25.StorageDrsPodSelectionSpec;
import com.vmware.vim25.StorageDrsRelocateDisabled;
import com.vmware.vim25.StorageDrsSpaceLoadBalanceConfig;
import com.vmware.vim25.StorageDrsStaleHmsCollection;
import com.vmware.vim25.StorageDrsUnableToMoveFiles;
import com.vmware.vim25.StorageDrsVmConfigInfo;
import com.vmware.vim25.StorageDrsVmConfigSpec;
import com.vmware.vim25.StorageIOAllocationInfo;
import com.vmware.vim25.StorageIOAllocationOption;
import com.vmware.vim25.StorageIORMConfigOption;
import com.vmware.vim25.StorageIORMConfigSpec;
import com.vmware.vim25.StorageIORMInfo;
import com.vmware.vim25.StorageMigrationAction;
import com.vmware.vim25.StoragePerformanceSummary;
import com.vmware.vim25.StoragePlacementAction;
import com.vmware.vim25.StoragePlacementResult;
import com.vmware.vim25.StoragePlacementSpec;
import com.vmware.vim25.StoragePodSummary;
import com.vmware.vim25.StorageProfile;
import com.vmware.vim25.StorageRequirement;
import com.vmware.vim25.StorageResourceManagerStorageProfileStatistics;
import com.vmware.vim25.StorageVMotionNotSupported;
import com.vmware.vim25.StorageVmotionIncompatible;
import com.vmware.vim25.StringExpression;
import com.vmware.vim25.StringOption;
import com.vmware.vim25.StringPolicy;
import com.vmware.vim25.StructuredCustomizations;
import com.vmware.vim25.SuspendVAppRequestType;
import com.vmware.vim25.SuspendVAppTaskResponse;
import com.vmware.vim25.SuspendVMRequestType;
import com.vmware.vim25.SuspendVMTaskResponse;
import com.vmware.vim25.SuspendedRelocateNotSupported;
import com.vmware.vim25.SwapDatastoreNotWritableOnHost;
import com.vmware.vim25.SwapDatastoreUnset;
import com.vmware.vim25.SwapPlacementOverrideNotSupported;
import com.vmware.vim25.SwitchIpUnset;
import com.vmware.vim25.SwitchNotInUpgradeMode;
import com.vmware.vim25.SystemError;
import com.vmware.vim25.SystemEventInfo;
import com.vmware.vim25.Tag;
import com.vmware.vim25.TaskDescription;
import com.vmware.vim25.TaskEvent;
import com.vmware.vim25.TaskFilterSpec;
import com.vmware.vim25.TaskFilterSpecByEntity;
import com.vmware.vim25.TaskFilterSpecByTime;
import com.vmware.vim25.TaskFilterSpecByUsername;
import com.vmware.vim25.TaskInProgress;
import com.vmware.vim25.TaskInfo;
import com.vmware.vim25.TaskReason;
import com.vmware.vim25.TaskReasonAlarm;
import com.vmware.vim25.TaskReasonSchedule;
import com.vmware.vim25.TaskReasonSystem;
import com.vmware.vim25.TaskReasonUser;
import com.vmware.vim25.TaskScheduler;
import com.vmware.vim25.TaskTimeoutEvent;
import com.vmware.vim25.TeamingMatchEvent;
import com.vmware.vim25.TeamingMisMatchEvent;
import com.vmware.vim25.TemplateBeingUpgradedEvent;
import com.vmware.vim25.TemplateConfigFileInfo;
import com.vmware.vim25.TemplateConfigFileQuery;
import com.vmware.vim25.TemplateUpgradeEvent;
import com.vmware.vim25.TemplateUpgradeFailedEvent;
import com.vmware.vim25.TemplateUpgradedEvent;
import com.vmware.vim25.TerminateFaultTolerantVMRequestType;
import com.vmware.vim25.TerminateFaultTolerantVMTaskResponse;
import com.vmware.vim25.TerminateProcessInGuestRequestType;
import com.vmware.vim25.TerminateProcessInGuestResponse;
import com.vmware.vim25.TerminateSessionRequestType;
import com.vmware.vim25.TerminateSessionResponse;
import com.vmware.vim25.TerminateVMRequestType;
import com.vmware.vim25.TerminateVMResponse;
import com.vmware.vim25.ThirdPartyLicenseAssignmentFailed;
import com.vmware.vim25.TicketedSessionAuthentication;
import com.vmware.vim25.TimedOutHostOperationEvent;
import com.vmware.vim25.Timedout;
import com.vmware.vim25.TooManyConcurrentNativeClones;
import com.vmware.vim25.TooManyConsecutiveOverrides;
import com.vmware.vim25.TooManyDevices;
import com.vmware.vim25.TooManyDisksOnLegacyHost;
import com.vmware.vim25.TooManyGuestLogons;
import com.vmware.vim25.TooManyHosts;
import com.vmware.vim25.TooManyNativeCloneLevels;
import com.vmware.vim25.TooManyNativeClonesOnFile;
import com.vmware.vim25.TooManySnapshotLevels;
import com.vmware.vim25.ToolsAlreadyUpgraded;
import com.vmware.vim25.ToolsAutoUpgradeNotSupported;
import com.vmware.vim25.ToolsConfigInfo;
import com.vmware.vim25.ToolsConfigInfoToolsLastInstallInfo;
import com.vmware.vim25.ToolsImageCopyFailed;
import com.vmware.vim25.ToolsImageNotAvailable;
import com.vmware.vim25.ToolsImageSignatureCheckFailed;
import com.vmware.vim25.ToolsInstallationInProgress;
import com.vmware.vim25.ToolsUnavailable;
import com.vmware.vim25.ToolsUpgradeCancelled;
import com.vmware.vim25.TraversalSpec;
import com.vmware.vim25.TurnDiskLocatorLedOffRequestType;
import com.vmware.vim25.TurnDiskLocatorLedOffTaskResponse;
import com.vmware.vim25.TurnDiskLocatorLedOnRequestType;
import com.vmware.vim25.TurnDiskLocatorLedOnTaskResponse;
import com.vmware.vim25.TurnOffFaultToleranceForVMRequestType;
import com.vmware.vim25.TurnOffFaultToleranceForVMTaskResponse;
import com.vmware.vim25.TypeDescription;
import com.vmware.vim25.UnSupportedDatastoreForVFlash;
import com.vmware.vim25.UnassignUserFromGroupRequestType;
import com.vmware.vim25.UnassignUserFromGroupResponse;
import com.vmware.vim25.UnbindVnicRequestType;
import com.vmware.vim25.UnbindVnicResponse;
import com.vmware.vim25.UncommittedUndoableDisk;
import com.vmware.vim25.UnconfiguredPropertyValue;
import com.vmware.vim25.UncustomizableGuest;
import com.vmware.vim25.UnexpectedCustomizationFault;
import com.vmware.vim25.UnexpectedFault;
import com.vmware.vim25.UninstallHostPatchRequestType;
import com.vmware.vim25.UninstallHostPatchTaskResponse;
import com.vmware.vim25.UninstallIoFilterRequestType;
import com.vmware.vim25.UninstallIoFilterTaskResponse;
import com.vmware.vim25.UninstallServiceRequestType;
import com.vmware.vim25.UninstallServiceResponse;
import com.vmware.vim25.UnlicensedVirtualMachinesEvent;
import com.vmware.vim25.UnlicensedVirtualMachinesFoundEvent;
import com.vmware.vim25.UnmapVmfsVolumeExRequestType;
import com.vmware.vim25.UnmapVmfsVolumeExTaskResponse;
import com.vmware.vim25.UnmarkServiceProviderEntitiesRequestType;
import com.vmware.vim25.UnmarkServiceProviderEntitiesResponse;
import com.vmware.vim25.UnmountDiskMappingRequestType;
import com.vmware.vim25.UnmountDiskMappingTaskResponse;
import com.vmware.vim25.UnmountForceMountedVmfsVolumeRequestType;
import com.vmware.vim25.UnmountForceMountedVmfsVolumeResponse;
import com.vmware.vim25.UnmountToolsInstallerRequestType;
import com.vmware.vim25.UnmountToolsInstallerResponse;
import com.vmware.vim25.UnmountVffsVolumeRequestType;
import com.vmware.vim25.UnmountVffsVolumeResponse;
import com.vmware.vim25.UnmountVmfsVolumeExRequestType;
import com.vmware.vim25.UnmountVmfsVolumeExTaskResponse;
import com.vmware.vim25.UnmountVmfsVolumeRequestType;
import com.vmware.vim25.UnmountVmfsVolumeResponse;
import com.vmware.vim25.UnrecognizedHost;
import com.vmware.vim25.UnregisterAndDestroyRequestType;
import com.vmware.vim25.UnregisterAndDestroyTaskResponse;
import com.vmware.vim25.UnregisterExtensionRequestType;
import com.vmware.vim25.UnregisterExtensionResponse;
import com.vmware.vim25.UnregisterHealthUpdateProviderRequestType;
import com.vmware.vim25.UnregisterHealthUpdateProviderResponse;
import com.vmware.vim25.UnregisterKmsClusterRequestType;
import com.vmware.vim25.UnregisterKmsClusterResponse;
import com.vmware.vim25.UnregisterVAppRequestType;
import com.vmware.vim25.UnregisterVAppTaskResponse;
import com.vmware.vim25.UnregisterVMRequestType;
import com.vmware.vim25.UnregisterVMResponse;
import com.vmware.vim25.UnsharedSwapVMotionNotSupported;
import com.vmware.vim25.UnsupportedDatastore;
import com.vmware.vim25.UnsupportedGuest;
import com.vmware.vim25.UnsupportedVimApiVersion;
import com.vmware.vim25.UnsupportedVmxLocation;
import com.vmware.vim25.UnusedVirtualDiskBlocksNotScrubbed;
import com.vmware.vim25.UpdateAnswerFileRequestType;
import com.vmware.vim25.UpdateAnswerFileTaskResponse;
import com.vmware.vim25.UpdateAssignableHardwareConfigRequestType;
import com.vmware.vim25.UpdateAssignableHardwareConfigResponse;
import com.vmware.vim25.UpdateAssignedLicenseRequestType;
import com.vmware.vim25.UpdateAssignedLicenseResponse;
import com.vmware.vim25.UpdateAuthorizationRoleRequestType;
import com.vmware.vim25.UpdateAuthorizationRoleResponse;
import com.vmware.vim25.UpdateBootDeviceRequestType;
import com.vmware.vim25.UpdateBootDeviceResponse;
import com.vmware.vim25.UpdateChildResourceConfigurationRequestType;
import com.vmware.vim25.UpdateChildResourceConfigurationResponse;
import com.vmware.vim25.UpdateClusterProfileRequestType;
import com.vmware.vim25.UpdateClusterProfileResponse;
import com.vmware.vim25.UpdateConfigRequestType;
import com.vmware.vim25.UpdateConfigResponse;
import com.vmware.vim25.UpdateConsoleIpRouteConfigRequestType;
import com.vmware.vim25.UpdateConsoleIpRouteConfigResponse;
import com.vmware.vim25.UpdateCounterLevelMappingRequestType;
import com.vmware.vim25.UpdateCounterLevelMappingResponse;
import com.vmware.vim25.UpdateDVSHealthCheckConfigRequestType;
import com.vmware.vim25.UpdateDVSHealthCheckConfigTaskResponse;
import com.vmware.vim25.UpdateDVSLacpGroupConfigRequestType;
import com.vmware.vim25.UpdateDVSLacpGroupConfigTaskResponse;
import com.vmware.vim25.UpdateDateTimeConfigRequestType;
import com.vmware.vim25.UpdateDateTimeConfigResponse;
import com.vmware.vim25.UpdateDateTimeRequestType;
import com.vmware.vim25.UpdateDateTimeResponse;
import com.vmware.vim25.UpdateDefaultPolicyRequestType;
import com.vmware.vim25.UpdateDefaultPolicyResponse;
import com.vmware.vim25.UpdateDiskPartitionsRequestType;
import com.vmware.vim25.UpdateDiskPartitionsResponse;
import com.vmware.vim25.UpdateDnsConfigRequestType;
import com.vmware.vim25.UpdateDnsConfigResponse;
import com.vmware.vim25.UpdateDvsCapabilityRequestType;
import com.vmware.vim25.UpdateDvsCapabilityResponse;
import com.vmware.vim25.UpdateExtensionRequestType;
import com.vmware.vim25.UpdateExtensionResponse;
import com.vmware.vim25.UpdateFlagsRequestType;
import com.vmware.vim25.UpdateFlagsResponse;
import com.vmware.vim25.UpdateGraphicsConfigRequestType;
import com.vmware.vim25.UpdateGraphicsConfigResponse;
import com.vmware.vim25.UpdateHostCustomizationsRequestType;
import com.vmware.vim25.UpdateHostCustomizationsTaskResponse;
import com.vmware.vim25.UpdateHostImageAcceptanceLevelRequestType;
import com.vmware.vim25.UpdateHostImageAcceptanceLevelResponse;
import com.vmware.vim25.UpdateHostProfileRequestType;
import com.vmware.vim25.UpdateHostProfileResponse;
import com.vmware.vim25.UpdateHostSpecificationRequestType;
import com.vmware.vim25.UpdateHostSpecificationResponse;
import com.vmware.vim25.UpdateHostSubSpecificationRequestType;
import com.vmware.vim25.UpdateHostSubSpecificationResponse;
import com.vmware.vim25.UpdateHppMultipathLunPolicyRequestType;
import com.vmware.vim25.UpdateHppMultipathLunPolicyResponse;
import com.vmware.vim25.UpdateInternetScsiAdvancedOptionsRequestType;
import com.vmware.vim25.UpdateInternetScsiAdvancedOptionsResponse;
import com.vmware.vim25.UpdateInternetScsiAliasRequestType;
import com.vmware.vim25.UpdateInternetScsiAliasResponse;
import com.vmware.vim25.UpdateInternetScsiAuthenticationPropertiesRequestType;
import com.vmware.vim25.UpdateInternetScsiAuthenticationPropertiesResponse;
import com.vmware.vim25.UpdateInternetScsiDigestPropertiesRequestType;
import com.vmware.vim25.UpdateInternetScsiDigestPropertiesResponse;
import com.vmware.vim25.UpdateInternetScsiDiscoveryPropertiesRequestType;
import com.vmware.vim25.UpdateInternetScsiDiscoveryPropertiesResponse;
import com.vmware.vim25.UpdateInternetScsiIPPropertiesRequestType;
import com.vmware.vim25.UpdateInternetScsiIPPropertiesResponse;
import com.vmware.vim25.UpdateInternetScsiNameRequestType;
import com.vmware.vim25.UpdateInternetScsiNameResponse;
import com.vmware.vim25.UpdateIpConfigRequestType;
import com.vmware.vim25.UpdateIpConfigResponse;
import com.vmware.vim25.UpdateIpPoolRequestType;
import com.vmware.vim25.UpdateIpPoolResponse;
import com.vmware.vim25.UpdateIpRouteConfigRequestType;
import com.vmware.vim25.UpdateIpRouteConfigResponse;
import com.vmware.vim25.UpdateIpRouteTableConfigRequestType;
import com.vmware.vim25.UpdateIpRouteTableConfigResponse;
import com.vmware.vim25.UpdateIpmiRequestType;
import com.vmware.vim25.UpdateIpmiResponse;
import com.vmware.vim25.UpdateKmipServerRequestType;
import com.vmware.vim25.UpdateKmipServerResponse;
import com.vmware.vim25.UpdateKmsSignedCsrClientCertRequestType;
import com.vmware.vim25.UpdateKmsSignedCsrClientCertResponse;
import com.vmware.vim25.UpdateLicenseLabelRequestType;
import com.vmware.vim25.UpdateLicenseLabelResponse;
import com.vmware.vim25.UpdateLicenseRequestType;
import com.vmware.vim25.UpdateLicenseResponse;
import com.vmware.vim25.UpdateLinkedChildrenRequestType;
import com.vmware.vim25.UpdateLinkedChildrenResponse;
import com.vmware.vim25.UpdateLocalSwapDatastoreRequestType;
import com.vmware.vim25.UpdateLocalSwapDatastoreResponse;
import com.vmware.vim25.UpdateLockdownExceptionsRequestType;
import com.vmware.vim25.UpdateLockdownExceptionsResponse;
import com.vmware.vim25.UpdateModuleOptionStringRequestType;
import com.vmware.vim25.UpdateModuleOptionStringResponse;
import com.vmware.vim25.UpdateNetworkConfigRequestType;
import com.vmware.vim25.UpdateNetworkConfigResponse;
import com.vmware.vim25.UpdateNetworkResourcePoolRequestType;
import com.vmware.vim25.UpdateNetworkResourcePoolResponse;
import com.vmware.vim25.UpdateOptionsRequestType;
import com.vmware.vim25.UpdateOptionsResponse;
import com.vmware.vim25.UpdatePassthruConfigRequestType;
import com.vmware.vim25.UpdatePassthruConfigResponse;
import com.vmware.vim25.UpdatePerfIntervalRequestType;
import com.vmware.vim25.UpdatePerfIntervalResponse;
import com.vmware.vim25.UpdatePhysicalNicLinkSpeedRequestType;
import com.vmware.vim25.UpdatePhysicalNicLinkSpeedResponse;
import com.vmware.vim25.UpdatePortGroupRequestType;
import com.vmware.vim25.UpdatePortGroupResponse;
import com.vmware.vim25.UpdateProductLockerLocationRequestType;
import com.vmware.vim25.UpdateProductLockerLocationTaskResponse;
import com.vmware.vim25.UpdateProgressRequestType;
import com.vmware.vim25.UpdateProgressResponse;
import com.vmware.vim25.UpdateReferenceHostRequestType;
import com.vmware.vim25.UpdateReferenceHostResponse;
import com.vmware.vim25.UpdateRulesetRequestType;
import com.vmware.vim25.UpdateRulesetResponse;
import com.vmware.vim25.UpdateScsiLunDisplayNameRequestType;
import com.vmware.vim25.UpdateScsiLunDisplayNameResponse;
import com.vmware.vim25.UpdateSelfSignedClientCertRequestType;
import com.vmware.vim25.UpdateSelfSignedClientCertResponse;
import com.vmware.vim25.UpdateServiceConsoleVirtualNicRequestType;
import com.vmware.vim25.UpdateServiceConsoleVirtualNicResponse;
import com.vmware.vim25.UpdateServiceMessageRequestType;
import com.vmware.vim25.UpdateServiceMessageResponse;
import com.vmware.vim25.UpdateServicePolicyRequestType;
import com.vmware.vim25.UpdateServicePolicyResponse;
import com.vmware.vim25.UpdateSet;
import com.vmware.vim25.UpdateSoftwareInternetScsiEnabledRequestType;
import com.vmware.vim25.UpdateSoftwareInternetScsiEnabledResponse;
import com.vmware.vim25.UpdateSystemResourcesRequestType;
import com.vmware.vim25.UpdateSystemResourcesResponse;
import com.vmware.vim25.UpdateSystemSwapConfigurationRequestType;
import com.vmware.vim25.UpdateSystemSwapConfigurationResponse;
import com.vmware.vim25.UpdateSystemUsersRequestType;
import com.vmware.vim25.UpdateSystemUsersResponse;
import com.vmware.vim25.UpdateUserRequestType;
import com.vmware.vim25.UpdateUserResponse;
import com.vmware.vim25.UpdateVAppConfigRequestType;
import com.vmware.vim25.UpdateVAppConfigResponse;
import com.vmware.vim25.UpdateVStorageInfrastructureObjectPolicyRequestType;
import com.vmware.vim25.UpdateVStorageInfrastructureObjectPolicyTaskResponse;
import com.vmware.vim25.UpdateVStorageObjectCryptoRequestType;
import com.vmware.vim25.UpdateVStorageObjectCryptoTaskResponse;
import com.vmware.vim25.UpdateVStorageObjectPolicyRequestType;
import com.vmware.vim25.UpdateVStorageObjectPolicyTaskResponse;
import com.vmware.vim25.UpdateVVolVirtualMachineFilesRequestType;
import com.vmware.vim25.UpdateVVolVirtualMachineFilesTaskResponse;
import com.vmware.vim25.UpdateVirtualMachineFilesRequestType;
import com.vmware.vim25.UpdateVirtualMachineFilesResult;
import com.vmware.vim25.UpdateVirtualMachineFilesResultFailedVmFileInfo;
import com.vmware.vim25.UpdateVirtualMachineFilesTaskResponse;
import com.vmware.vim25.UpdateVirtualNicRequestType;
import com.vmware.vim25.UpdateVirtualNicResponse;
import com.vmware.vim25.UpdateVirtualSwitchRequestType;
import com.vmware.vim25.UpdateVirtualSwitchResponse;
import com.vmware.vim25.UpdateVmfsUnmapBandwidthRequestType;
import com.vmware.vim25.UpdateVmfsUnmapBandwidthResponse;
import com.vmware.vim25.UpdateVmfsUnmapPriorityRequestType;
import com.vmware.vim25.UpdateVmfsUnmapPriorityResponse;
import com.vmware.vim25.UpdateVsanRequestType;
import com.vmware.vim25.UpdateVsanTaskResponse;
import com.vmware.vim25.UpdatedAgentBeingRestartedEvent;
import com.vmware.vim25.UpgradeEvent;
import com.vmware.vim25.UpgradeIoFilterRequestType;
import com.vmware.vim25.UpgradeIoFilterTaskResponse;
import com.vmware.vim25.UpgradeToolsRequestType;
import com.vmware.vim25.UpgradeToolsTaskResponse;
import com.vmware.vim25.UpgradeVMRequestType;
import com.vmware.vim25.UpgradeVMTaskResponse;
import com.vmware.vim25.UpgradeVmLayoutRequestType;
import com.vmware.vim25.UpgradeVmLayoutResponse;
import com.vmware.vim25.UpgradeVmfsRequestType;
import com.vmware.vim25.UpgradeVmfsResponse;
import com.vmware.vim25.UpgradeVsanObjectsRequestType;
import com.vmware.vim25.UpgradeVsanObjectsResponse;
import com.vmware.vim25.UplinkPortMtuNotSupportEvent;
import com.vmware.vim25.UplinkPortMtuSupportEvent;
import com.vmware.vim25.UplinkPortVlanTrunkedEvent;
import com.vmware.vim25.UplinkPortVlanUntrunkedEvent;
import com.vmware.vim25.UploadClientCertRequestType;
import com.vmware.vim25.UploadClientCertResponse;
import com.vmware.vim25.UploadKmipServerCertRequestType;
import com.vmware.vim25.UploadKmipServerCertResponse;
import com.vmware.vim25.UsbScanCodeSpec;
import com.vmware.vim25.UsbScanCodeSpecKeyEvent;
import com.vmware.vim25.UsbScanCodeSpecModifierType;
import com.vmware.vim25.UserAssignedToGroup;
import com.vmware.vim25.UserGroupProfile;
import com.vmware.vim25.UserInputRequiredParameterMetadata;
import com.vmware.vim25.UserLoginSessionEvent;
import com.vmware.vim25.UserLogoutSessionEvent;
import com.vmware.vim25.UserNotFound;
import com.vmware.vim25.UserPasswordChanged;
import com.vmware.vim25.UserPrivilegeResult;
import com.vmware.vim25.UserProfile;
import com.vmware.vim25.UserSearchResult;
import com.vmware.vim25.UserSession;
import com.vmware.vim25.UserUnassignedFromGroup;
import com.vmware.vim25.UserUpgradeEvent;
import com.vmware.vim25.VASAStorageArray;
import com.vmware.vim25.VAppCloneSpec;
import com.vmware.vim25.VAppCloneSpecNetworkMappingPair;
import com.vmware.vim25.VAppCloneSpecResourceMap;
import com.vmware.vim25.VAppConfigFault;
import com.vmware.vim25.VAppConfigInfo;
import com.vmware.vim25.VAppConfigSpec;
import com.vmware.vim25.VAppEntityConfigInfo;
import com.vmware.vim25.VAppIPAssignmentInfo;
import com.vmware.vim25.VAppNotRunning;
import com.vmware.vim25.VAppOperationInProgress;
import com.vmware.vim25.VAppOvfSectionInfo;
import com.vmware.vim25.VAppOvfSectionSpec;
import com.vmware.vim25.VAppProductInfo;
import com.vmware.vim25.VAppProductSpec;
import com.vmware.vim25.VAppPropertyFault;
import com.vmware.vim25.VAppPropertyInfo;
import com.vmware.vim25.VAppPropertySpec;
import com.vmware.vim25.VAppTaskInProgress;
import com.vmware.vim25.VFlashCacheHotConfigNotSupported;
import com.vmware.vim25.VFlashModuleNotSupported;
import com.vmware.vim25.VFlashModuleVersionIncompatible;
import com.vmware.vim25.VMFSDatastoreCreatedEvent;
import com.vmware.vim25.VMFSDatastoreExpandedEvent;
import com.vmware.vim25.VMFSDatastoreExtendedEvent;
import com.vmware.vim25.VMINotSupported;
import com.vmware.vim25.VMOnConflictDVPort;
import com.vmware.vim25.VMOnVirtualIntranet;
import com.vmware.vim25.VMotionAcrossNetworkNotSupported;
import com.vmware.vim25.VMotionInterfaceIssue;
import com.vmware.vim25.VMotionLicenseExpiredEvent;
import com.vmware.vim25.VMotionLinkCapacityLow;
import com.vmware.vim25.VMotionLinkDown;
import com.vmware.vim25.VMotionNotConfigured;
import com.vmware.vim25.VMotionNotLicensed;
import com.vmware.vim25.VMotionNotSupported;
import com.vmware.vim25.VMotionProtocolIncompatible;
import com.vmware.vim25.VMwareDVSConfigInfo;
import com.vmware.vim25.VMwareDVSConfigSpec;
import com.vmware.vim25.VMwareDVSFeatureCapability;
import com.vmware.vim25.VMwareDVSHealthCheckCapability;
import com.vmware.vim25.VMwareDVSHealthCheckConfig;
import com.vmware.vim25.VMwareDVSMtuHealthCheckResult;
import com.vmware.vim25.VMwareDVSPortSetting;
import com.vmware.vim25.VMwareDVSPortgroupPolicy;
import com.vmware.vim25.VMwareDVSPvlanConfigSpec;
import com.vmware.vim25.VMwareDVSPvlanMapEntry;
import com.vmware.vim25.VMwareDVSTeamingHealthCheckConfig;
import com.vmware.vim25.VMwareDVSTeamingHealthCheckResult;
import com.vmware.vim25.VMwareDVSVlanHealthCheckResult;
import com.vmware.vim25.VMwareDVSVlanMtuHealthCheckConfig;
import com.vmware.vim25.VMwareDVSVspanCapability;
import com.vmware.vim25.VMwareDVSVspanConfigSpec;
import com.vmware.vim25.VMwareDvsIpfixCapability;
import com.vmware.vim25.VMwareDvsLacpCapability;
import com.vmware.vim25.VMwareDvsLacpGroupConfig;
import com.vmware.vim25.VMwareDvsLacpGroupSpec;
import com.vmware.vim25.VMwareDvsLagIpfixConfig;
import com.vmware.vim25.VMwareDvsLagVlanConfig;
import com.vmware.vim25.VMwareIpfixConfig;
import com.vmware.vim25.VMwareUplinkLacpPolicy;
import com.vmware.vim25.VMwareUplinkPortOrderPolicy;
import com.vmware.vim25.VMwareVspanPort;
import com.vmware.vim25.VMwareVspanSession;
import com.vmware.vim25.VStorageObject;
import com.vmware.vim25.VStorageObjectAssociations;
import com.vmware.vim25.VStorageObjectAssociationsVmDiskAssociations;
import com.vmware.vim25.VStorageObjectConfigInfo;
import com.vmware.vim25.VStorageObjectCreateSnapshotRequestType;
import com.vmware.vim25.VStorageObjectCreateSnapshotTaskResponse;
import com.vmware.vim25.VStorageObjectSnapshotDetails;
import com.vmware.vim25.VStorageObjectSnapshotInfo;
import com.vmware.vim25.VStorageObjectSnapshotInfoVStorageObjectSnapshot;
import com.vmware.vim25.VStorageObjectStateInfo;
import com.vmware.vim25.VVolHostPE;
import com.vmware.vim25.VVolVmConfigFileUpdateResult;
import com.vmware.vim25.VVolVmConfigFileUpdateResultFailedVmConfigFileInfo;
import com.vmware.vim25.ValidateCredentialsInGuestRequestType;
import com.vmware.vim25.ValidateCredentialsInGuestResponse;
import com.vmware.vim25.ValidateHCIConfigurationRequestType;
import com.vmware.vim25.ValidateHCIConfigurationResponse;
import com.vmware.vim25.ValidateHostProfileCompositionRequestType;
import com.vmware.vim25.ValidateHostProfileCompositionTaskResponse;
import com.vmware.vim25.ValidateHostRequestType;
import com.vmware.vim25.ValidateHostResponse;
import com.vmware.vim25.ValidateMigrationRequestType;
import com.vmware.vim25.ValidateMigrationResponse;
import com.vmware.vim25.ValidateStoragePodConfigRequestType;
import com.vmware.vim25.ValidateStoragePodConfigResponse;
import com.vmware.vim25.VasaProviderContainerSpec;
import com.vmware.vim25.VcAgentUninstallFailedEvent;
import com.vmware.vim25.VcAgentUninstalledEvent;
import com.vmware.vim25.VcAgentUpgradeFailedEvent;
import com.vmware.vim25.VcAgentUpgradedEvent;
import com.vmware.vim25.VchaClusterConfigInfo;
import com.vmware.vim25.VchaClusterConfigSpec;
import com.vmware.vim25.VchaClusterDeploymentSpec;
import com.vmware.vim25.VchaClusterHealth;
import com.vmware.vim25.VchaClusterNetworkSpec;
import com.vmware.vim25.VchaClusterRuntimeInfo;
import com.vmware.vim25.VchaNodeRuntimeInfo;
import com.vmware.vim25.VimAccountPasswordChangedEvent;
import com.vmware.vim25.VimFault;
import com.vmware.vim25.VimVasaProvider;
import com.vmware.vim25.VimVasaProviderInfo;
import com.vmware.vim25.VimVasaProviderStatePerArray;
import com.vmware.vim25.VirtualAHCIController;
import com.vmware.vim25.VirtualAHCIControllerOption;
import com.vmware.vim25.VirtualAppImportSpec;
import com.vmware.vim25.VirtualAppLinkInfo;
import com.vmware.vim25.VirtualAppSummary;
import com.vmware.vim25.VirtualBusLogicController;
import com.vmware.vim25.VirtualBusLogicControllerOption;
import com.vmware.vim25.VirtualCdrom;
import com.vmware.vim25.VirtualCdromAtapiBackingInfo;
import com.vmware.vim25.VirtualCdromAtapiBackingOption;
import com.vmware.vim25.VirtualCdromIsoBackingInfo;
import com.vmware.vim25.VirtualCdromIsoBackingOption;
import com.vmware.vim25.VirtualCdromOption;
import com.vmware.vim25.VirtualCdromPassthroughBackingInfo;
import com.vmware.vim25.VirtualCdromPassthroughBackingOption;
import com.vmware.vim25.VirtualCdromRemoteAtapiBackingInfo;
import com.vmware.vim25.VirtualCdromRemoteAtapiBackingOption;
import com.vmware.vim25.VirtualCdromRemotePassthroughBackingInfo;
import com.vmware.vim25.VirtualCdromRemotePassthroughBackingOption;
import com.vmware.vim25.VirtualController;
import com.vmware.vim25.VirtualControllerOption;
import com.vmware.vim25.VirtualDevice;
import com.vmware.vim25.VirtualDeviceBackingInfo;
import com.vmware.vim25.VirtualDeviceBackingOption;
import com.vmware.vim25.VirtualDeviceBusSlotInfo;
import com.vmware.vim25.VirtualDeviceBusSlotOption;
import com.vmware.vim25.VirtualDeviceConfigSpec;
import com.vmware.vim25.VirtualDeviceConfigSpecBackingSpec;
import com.vmware.vim25.VirtualDeviceConnectInfo;
import com.vmware.vim25.VirtualDeviceConnectOption;
import com.vmware.vim25.VirtualDeviceDeviceBackingInfo;
import com.vmware.vim25.VirtualDeviceDeviceBackingOption;
import com.vmware.vim25.VirtualDeviceFileBackingInfo;
import com.vmware.vim25.VirtualDeviceFileBackingOption;
import com.vmware.vim25.VirtualDeviceOption;
import com.vmware.vim25.VirtualDevicePciBusSlotInfo;
import com.vmware.vim25.VirtualDevicePipeBackingInfo;
import com.vmware.vim25.VirtualDevicePipeBackingOption;
import com.vmware.vim25.VirtualDeviceRemoteDeviceBackingInfo;
import com.vmware.vim25.VirtualDeviceRemoteDeviceBackingOption;
import com.vmware.vim25.VirtualDeviceURIBackingInfo;
import com.vmware.vim25.VirtualDeviceURIBackingOption;
import com.vmware.vim25.VirtualDisk;
import com.vmware.vim25.VirtualDiskAntiAffinityRuleSpec;
import com.vmware.vim25.VirtualDiskBlocksNotFullyProvisioned;
import com.vmware.vim25.VirtualDiskConfigSpec;
import com.vmware.vim25.VirtualDiskDeltaDiskFormatsSupported;
import com.vmware.vim25.VirtualDiskFlatVer1BackingInfo;
import com.vmware.vim25.VirtualDiskFlatVer1BackingOption;
import com.vmware.vim25.VirtualDiskFlatVer2BackingInfo;
import com.vmware.vim25.VirtualDiskFlatVer2BackingOption;
import com.vmware.vim25.VirtualDiskId;
import com.vmware.vim25.VirtualDiskLocalPMemBackingInfo;
import com.vmware.vim25.VirtualDiskLocalPMemBackingOption;
import com.vmware.vim25.VirtualDiskModeNotSupported;
import com.vmware.vim25.VirtualDiskOption;
import com.vmware.vim25.VirtualDiskOptionVFlashCacheConfigOption;
import com.vmware.vim25.VirtualDiskPartitionedRawDiskVer2BackingInfo;
import com.vmware.vim25.VirtualDiskPartitionedRawDiskVer2BackingOption;
import com.vmware.vim25.VirtualDiskRawDiskMappingVer1BackingInfo;
import com.vmware.vim25.VirtualDiskRawDiskMappingVer1BackingOption;
import com.vmware.vim25.VirtualDiskRawDiskVer2BackingInfo;
import com.vmware.vim25.VirtualDiskRawDiskVer2BackingOption;
import com.vmware.vim25.VirtualDiskRuleSpec;
import com.vmware.vim25.VirtualDiskSeSparseBackingInfo;
import com.vmware.vim25.VirtualDiskSeSparseBackingOption;
import com.vmware.vim25.VirtualDiskSparseVer1BackingInfo;
import com.vmware.vim25.VirtualDiskSparseVer1BackingOption;
import com.vmware.vim25.VirtualDiskSparseVer2BackingInfo;
import com.vmware.vim25.VirtualDiskSparseVer2BackingOption;
import com.vmware.vim25.VirtualDiskSpec;
import com.vmware.vim25.VirtualDiskVFlashCacheConfigInfo;
import com.vmware.vim25.VirtualE1000;
import com.vmware.vim25.VirtualE1000E;
import com.vmware.vim25.VirtualE1000EOption;
import com.vmware.vim25.VirtualE1000Option;
import com.vmware.vim25.VirtualEnsoniq1371;
import com.vmware.vim25.VirtualEnsoniq1371Option;
import com.vmware.vim25.VirtualEthernetCard;
import com.vmware.vim25.VirtualEthernetCardDVPortBackingOption;
import com.vmware.vim25.VirtualEthernetCardDistributedVirtualPortBackingInfo;
import com.vmware.vim25.VirtualEthernetCardLegacyNetworkBackingInfo;
import com.vmware.vim25.VirtualEthernetCardLegacyNetworkBackingOption;
import com.vmware.vim25.VirtualEthernetCardNetworkBackingInfo;
import com.vmware.vim25.VirtualEthernetCardNetworkBackingOption;
import com.vmware.vim25.VirtualEthernetCardNotSupported;
import com.vmware.vim25.VirtualEthernetCardOpaqueNetworkBackingInfo;
import com.vmware.vim25.VirtualEthernetCardOpaqueNetworkBackingOption;
import com.vmware.vim25.VirtualEthernetCardOption;
import com.vmware.vim25.VirtualEthernetCardResourceAllocation;
import com.vmware.vim25.VirtualFloppy;
import com.vmware.vim25.VirtualFloppyDeviceBackingInfo;
import com.vmware.vim25.VirtualFloppyDeviceBackingOption;
import com.vmware.vim25.VirtualFloppyImageBackingInfo;
import com.vmware.vim25.VirtualFloppyImageBackingOption;
import com.vmware.vim25.VirtualFloppyOption;
import com.vmware.vim25.VirtualFloppyRemoteDeviceBackingInfo;
import com.vmware.vim25.VirtualFloppyRemoteDeviceBackingOption;
import com.vmware.vim25.VirtualHardware;
import com.vmware.vim25.VirtualHardwareCompatibilityIssue;
import com.vmware.vim25.VirtualHardwareOption;
import com.vmware.vim25.VirtualHardwareVersionNotSupported;
import com.vmware.vim25.VirtualHdAudioCard;
import com.vmware.vim25.VirtualHdAudioCardOption;
import com.vmware.vim25.VirtualIDEController;
import com.vmware.vim25.VirtualIDEControllerOption;
import com.vmware.vim25.VirtualKeyboard;
import com.vmware.vim25.VirtualKeyboardOption;
import com.vmware.vim25.VirtualLsiLogicController;
import com.vmware.vim25.VirtualLsiLogicControllerOption;
import com.vmware.vim25.VirtualLsiLogicSASController;
import com.vmware.vim25.VirtualLsiLogicSASControllerOption;
import com.vmware.vim25.VirtualMachineAffinityInfo;
import com.vmware.vim25.VirtualMachineBootOptions;
import com.vmware.vim25.VirtualMachineBootOptionsBootableCdromDevice;
import com.vmware.vim25.VirtualMachineBootOptionsBootableDevice;
import com.vmware.vim25.VirtualMachineBootOptionsBootableDiskDevice;
import com.vmware.vim25.VirtualMachineBootOptionsBootableEthernetDevice;
import com.vmware.vim25.VirtualMachineBootOptionsBootableFloppyDevice;
import com.vmware.vim25.VirtualMachineCapability;
import com.vmware.vim25.VirtualMachineCdromInfo;
import com.vmware.vim25.VirtualMachineCloneSpec;
import com.vmware.vim25.VirtualMachineConfigInfo;
import com.vmware.vim25.VirtualMachineConfigInfoDatastoreUrlPair;
import com.vmware.vim25.VirtualMachineConfigInfoOverheadInfo;
import com.vmware.vim25.VirtualMachineConfigOption;
import com.vmware.vim25.VirtualMachineConfigOptionDescriptor;
import com.vmware.vim25.VirtualMachineConfigSpec;
import com.vmware.vim25.VirtualMachineConfigSummary;
import com.vmware.vim25.VirtualMachineConsolePreferences;
import com.vmware.vim25.VirtualMachineContentLibraryItemInfo;
import com.vmware.vim25.VirtualMachineCpuIdInfoSpec;
import com.vmware.vim25.VirtualMachineDatastoreInfo;
import com.vmware.vim25.VirtualMachineDatastoreVolumeOption;
import com.vmware.vim25.VirtualMachineDefaultPowerOpInfo;
import com.vmware.vim25.VirtualMachineDefaultProfileSpec;
import com.vmware.vim25.VirtualMachineDefinedProfileSpec;
import com.vmware.vim25.VirtualMachineDeviceRuntimeInfo;
import com.vmware.vim25.VirtualMachineDeviceRuntimeInfoDeviceRuntimeState;
import com.vmware.vim25.VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState;
import com.vmware.vim25.VirtualMachineDiskDeviceInfo;
import com.vmware.vim25.VirtualMachineDisplayTopology;
import com.vmware.vim25.VirtualMachineDynamicPassthroughInfo;
import com.vmware.vim25.VirtualMachineEmptyProfileSpec;
import com.vmware.vim25.VirtualMachineFeatureRequirement;
import com.vmware.vim25.VirtualMachineFileInfo;
import com.vmware.vim25.VirtualMachineFileLayout;
import com.vmware.vim25.VirtualMachineFileLayoutDiskLayout;
import com.vmware.vim25.VirtualMachineFileLayoutEx;
import com.vmware.vim25.VirtualMachineFileLayoutExDiskLayout;
import com.vmware.vim25.VirtualMachineFileLayoutExDiskUnit;
import com.vmware.vim25.VirtualMachineFileLayoutExFileInfo;
import com.vmware.vim25.VirtualMachineFileLayoutExSnapshotLayout;
import com.vmware.vim25.VirtualMachineFileLayoutSnapshotLayout;
import com.vmware.vim25.VirtualMachineFlagInfo;
import com.vmware.vim25.VirtualMachineFloppyInfo;
import com.vmware.vim25.VirtualMachineForkConfigInfo;
import com.vmware.vim25.VirtualMachineGuestIntegrityInfo;
import com.vmware.vim25.VirtualMachineGuestMonitoringModeInfo;
import com.vmware.vim25.VirtualMachineGuestQuiesceSpec;
import com.vmware.vim25.VirtualMachineGuestSummary;
import com.vmware.vim25.VirtualMachineIdeDiskDeviceInfo;
import com.vmware.vim25.VirtualMachineIdeDiskDevicePartitionInfo;
import com.vmware.vim25.VirtualMachineImportSpec;
import com.vmware.vim25.VirtualMachineInstantCloneSpec;
import com.vmware.vim25.VirtualMachineLegacyNetworkSwitchInfo;
import com.vmware.vim25.VirtualMachineMemoryReservationInfo;
import com.vmware.vim25.VirtualMachineMemoryReservationSpec;
import com.vmware.vim25.VirtualMachineMessage;
import com.vmware.vim25.VirtualMachineMetadataManagerVmMetadata;
import com.vmware.vim25.VirtualMachineMetadataManagerVmMetadataInput;
import com.vmware.vim25.VirtualMachineMetadataManagerVmMetadataOwner;
import com.vmware.vim25.VirtualMachineMetadataManagerVmMetadataResult;
import com.vmware.vim25.VirtualMachineMksTicket;
import com.vmware.vim25.VirtualMachineNetworkInfo;
import com.vmware.vim25.VirtualMachineNetworkShaperInfo;
import com.vmware.vim25.VirtualMachineParallelInfo;
import com.vmware.vim25.VirtualMachinePciPassthroughInfo;
import com.vmware.vim25.VirtualMachinePciSharedGpuPassthroughInfo;
import com.vmware.vim25.VirtualMachinePrecisionClockInfo;
import com.vmware.vim25.VirtualMachineProfileDetails;
import com.vmware.vim25.VirtualMachineProfileDetailsDiskProfileDetails;
import com.vmware.vim25.VirtualMachineProfileRawData;
import com.vmware.vim25.VirtualMachineProfileSpec;
import com.vmware.vim25.VirtualMachinePropertyRelation;
import com.vmware.vim25.VirtualMachineQuestionInfo;
import com.vmware.vim25.VirtualMachineQuickStats;
import com.vmware.vim25.VirtualMachineRelocateSpec;
import com.vmware.vim25.VirtualMachineRelocateSpecDiskLocator;
import com.vmware.vim25.VirtualMachineRelocateSpecDiskLocatorBackingSpec;
import com.vmware.vim25.VirtualMachineRuntimeInfo;
import com.vmware.vim25.VirtualMachineRuntimeInfoDasProtectionState;
import com.vmware.vim25.VirtualMachineScsiDiskDeviceInfo;
import com.vmware.vim25.VirtualMachineScsiPassthroughInfo;
import com.vmware.vim25.VirtualMachineSerialInfo;
import com.vmware.vim25.VirtualMachineSgxInfo;
import com.vmware.vim25.VirtualMachineSgxTargetInfo;
import com.vmware.vim25.VirtualMachineSnapshotInfo;
import com.vmware.vim25.VirtualMachineSnapshotTree;
import com.vmware.vim25.VirtualMachineSoundInfo;
import com.vmware.vim25.VirtualMachineSriovDevicePoolInfo;
import com.vmware.vim25.VirtualMachineSriovInfo;
import com.vmware.vim25.VirtualMachineSriovNetworkDevicePoolInfo;
import com.vmware.vim25.VirtualMachineStorageInfo;
import com.vmware.vim25.VirtualMachineStorageSummary;
import com.vmware.vim25.VirtualMachineSummary;
import com.vmware.vim25.VirtualMachineTargetInfo;
import com.vmware.vim25.VirtualMachineTicket;
import com.vmware.vim25.VirtualMachineUsageOnDatastore;
import com.vmware.vim25.VirtualMachineUsbInfo;
import com.vmware.vim25.VirtualMachineVFlashModuleInfo;
import com.vmware.vim25.VirtualMachineVMCIDevice;
import com.vmware.vim25.VirtualMachineVMCIDeviceFilterInfo;
import com.vmware.vim25.VirtualMachineVMCIDeviceFilterSpec;
import com.vmware.vim25.VirtualMachineVMCIDeviceOption;
import com.vmware.vim25.VirtualMachineVMCIDeviceOptionFilterSpecOption;
import com.vmware.vim25.VirtualMachineVMIROM;
import com.vmware.vim25.VirtualMachineVcpuConfig;
import com.vmware.vim25.VirtualMachineVideoCard;
import com.vmware.vim25.VirtualMachineWindowsQuiesceSpec;
import com.vmware.vim25.VirtualMachineWipeResult;
import com.vmware.vim25.VirtualNVDIMM;
import com.vmware.vim25.VirtualNVDIMMBackingInfo;
import com.vmware.vim25.VirtualNVDIMMController;
import com.vmware.vim25.VirtualNVDIMMControllerOption;
import com.vmware.vim25.VirtualNVDIMMOption;
import com.vmware.vim25.VirtualNVMEController;
import com.vmware.vim25.VirtualNVMEControllerOption;
import com.vmware.vim25.VirtualNicManagerNetConfig;
import com.vmware.vim25.VirtualPCIController;
import com.vmware.vim25.VirtualPCIControllerOption;
import com.vmware.vim25.VirtualPCIPassthrough;
import com.vmware.vim25.VirtualPCIPassthroughAllowedDevice;
import com.vmware.vim25.VirtualPCIPassthroughDeviceBackingInfo;
import com.vmware.vim25.VirtualPCIPassthroughDeviceBackingOption;
import com.vmware.vim25.VirtualPCIPassthroughDynamicBackingInfo;
import com.vmware.vim25.VirtualPCIPassthroughDynamicBackingOption;
import com.vmware.vim25.VirtualPCIPassthroughOption;
import com.vmware.vim25.VirtualPCIPassthroughPluginBackingInfo;
import com.vmware.vim25.VirtualPCIPassthroughPluginBackingOption;
import com.vmware.vim25.VirtualPCIPassthroughVmiopBackingInfo;
import com.vmware.vim25.VirtualPCIPassthroughVmiopBackingOption;
import com.vmware.vim25.VirtualPCNet32;
import com.vmware.vim25.VirtualPCNet32Option;
import com.vmware.vim25.VirtualPS2Controller;
import com.vmware.vim25.VirtualPS2ControllerOption;
import com.vmware.vim25.VirtualParallelPort;
import com.vmware.vim25.VirtualParallelPortDeviceBackingInfo;
import com.vmware.vim25.VirtualParallelPortDeviceBackingOption;
import com.vmware.vim25.VirtualParallelPortFileBackingInfo;
import com.vmware.vim25.VirtualParallelPortFileBackingOption;
import com.vmware.vim25.VirtualParallelPortOption;
import com.vmware.vim25.VirtualPointingDevice;
import com.vmware.vim25.VirtualPointingDeviceBackingOption;
import com.vmware.vim25.VirtualPointingDeviceDeviceBackingInfo;
import com.vmware.vim25.VirtualPointingDeviceOption;
import com.vmware.vim25.VirtualPrecisionClock;
import com.vmware.vim25.VirtualPrecisionClockOption;
import com.vmware.vim25.VirtualPrecisionClockSystemClockBackingInfo;
import com.vmware.vim25.VirtualPrecisionClockSystemClockBackingOption;
import com.vmware.vim25.VirtualSATAController;
import com.vmware.vim25.VirtualSATAControllerOption;
import com.vmware.vim25.VirtualSCSIController;
import com.vmware.vim25.VirtualSCSIControllerOption;
import com.vmware.vim25.VirtualSCSIPassthrough;
import com.vmware.vim25.VirtualSCSIPassthroughDeviceBackingInfo;
import com.vmware.vim25.VirtualSCSIPassthroughDeviceBackingOption;
import com.vmware.vim25.VirtualSCSIPassthroughOption;
import com.vmware.vim25.VirtualSIOController;
import com.vmware.vim25.VirtualSIOControllerOption;
import com.vmware.vim25.VirtualSerialPort;
import com.vmware.vim25.VirtualSerialPortDeviceBackingInfo;
import com.vmware.vim25.VirtualSerialPortDeviceBackingOption;
import com.vmware.vim25.VirtualSerialPortFileBackingInfo;
import com.vmware.vim25.VirtualSerialPortFileBackingOption;
import com.vmware.vim25.VirtualSerialPortOption;
import com.vmware.vim25.VirtualSerialPortPipeBackingInfo;
import com.vmware.vim25.VirtualSerialPortPipeBackingOption;
import com.vmware.vim25.VirtualSerialPortThinPrintBackingInfo;
import com.vmware.vim25.VirtualSerialPortThinPrintBackingOption;
import com.vmware.vim25.VirtualSerialPortURIBackingInfo;
import com.vmware.vim25.VirtualSerialPortURIBackingOption;
import com.vmware.vim25.VirtualSoundBlaster16;
import com.vmware.vim25.VirtualSoundBlaster16Option;
import com.vmware.vim25.VirtualSoundCard;
import com.vmware.vim25.VirtualSoundCardDeviceBackingInfo;
import com.vmware.vim25.VirtualSoundCardDeviceBackingOption;
import com.vmware.vim25.VirtualSoundCardOption;
import com.vmware.vim25.VirtualSriovEthernetCard;
import com.vmware.vim25.VirtualSriovEthernetCardOption;
import com.vmware.vim25.VirtualSriovEthernetCardSriovBackingInfo;
import com.vmware.vim25.VirtualSriovEthernetCardSriovBackingOption;
import com.vmware.vim25.VirtualSwitchProfile;
import com.vmware.vim25.VirtualSwitchSelectionProfile;
import com.vmware.vim25.VirtualTPM;
import com.vmware.vim25.VirtualTPMOption;
import com.vmware.vim25.VirtualUSB;
import com.vmware.vim25.VirtualUSBController;
import com.vmware.vim25.VirtualUSBControllerOption;
import com.vmware.vim25.VirtualUSBControllerPciBusSlotInfo;
import com.vmware.vim25.VirtualUSBOption;
import com.vmware.vim25.VirtualUSBRemoteClientBackingInfo;
import com.vmware.vim25.VirtualUSBRemoteClientBackingOption;
import com.vmware.vim25.VirtualUSBRemoteHostBackingInfo;
import com.vmware.vim25.VirtualUSBRemoteHostBackingOption;
import com.vmware.vim25.VirtualUSBUSBBackingInfo;
import com.vmware.vim25.VirtualUSBUSBBackingOption;
import com.vmware.vim25.VirtualUSBXHCIController;
import com.vmware.vim25.VirtualUSBXHCIControllerOption;
import com.vmware.vim25.VirtualVMIROMOption;
import com.vmware.vim25.VirtualVideoCardOption;
import com.vmware.vim25.VirtualVmxnet;
import com.vmware.vim25.VirtualVmxnet2;
import com.vmware.vim25.VirtualVmxnet2Option;
import com.vmware.vim25.VirtualVmxnet3;
import com.vmware.vim25.VirtualVmxnet3Option;
import com.vmware.vim25.VirtualVmxnet3Vrdma;
import com.vmware.vim25.VirtualVmxnet3VrdmaOption;
import com.vmware.vim25.VirtualVmxnetOption;
import com.vmware.vim25.VirtualWDT;
import com.vmware.vim25.VirtualWDTOption;
import com.vmware.vim25.VlanProfile;
import com.vmware.vim25.VmAcquiredMksTicketEvent;
import com.vmware.vim25.VmAcquiredTicketEvent;
import com.vmware.vim25.VmAlreadyExistsInDatacenter;
import com.vmware.vim25.VmAutoRenameEvent;
import com.vmware.vim25.VmBeingClonedEvent;
import com.vmware.vim25.VmBeingClonedNoFolderEvent;
import com.vmware.vim25.VmBeingCreatedEvent;
import com.vmware.vim25.VmBeingDeployedEvent;
import com.vmware.vim25.VmBeingHotMigratedEvent;
import com.vmware.vim25.VmBeingMigratedEvent;
import com.vmware.vim25.VmBeingRelocatedEvent;
import com.vmware.vim25.VmCloneEvent;
import com.vmware.vim25.VmCloneFailedEvent;
import com.vmware.vim25.VmClonedEvent;
import com.vmware.vim25.VmConfigFault;
import com.vmware.vim25.VmConfigFileEncryptionInfo;
import com.vmware.vim25.VmConfigFileInfo;
import com.vmware.vim25.VmConfigFileQuery;
import com.vmware.vim25.VmConfigFileQueryFilter;
import com.vmware.vim25.VmConfigFileQueryFlags;
import com.vmware.vim25.VmConfigIncompatibleForFaultTolerance;
import com.vmware.vim25.VmConfigIncompatibleForRecordReplay;
import com.vmware.vim25.VmConfigInfo;
import com.vmware.vim25.VmConfigMissingEvent;
import com.vmware.vim25.VmConfigSpec;
import com.vmware.vim25.VmConnectedEvent;
import com.vmware.vim25.VmCreatedEvent;
import com.vmware.vim25.VmDasBeingResetEvent;
import com.vmware.vim25.VmDasBeingResetWithScreenshotEvent;
import com.vmware.vim25.VmDasResetFailedEvent;
import com.vmware.vim25.VmDasUpdateErrorEvent;
import com.vmware.vim25.VmDasUpdateOkEvent;
import com.vmware.vim25.VmDateRolledBackEvent;
import com.vmware.vim25.VmDeployFailedEvent;
import com.vmware.vim25.VmDeployedEvent;
import com.vmware.vim25.VmDisconnectedEvent;
import com.vmware.vim25.VmDiscoveredEvent;
import com.vmware.vim25.VmDiskFailedEvent;
import com.vmware.vim25.VmDiskFileEncryptionInfo;
import com.vmware.vim25.VmDiskFileInfo;
import com.vmware.vim25.VmDiskFileQuery;
import com.vmware.vim25.VmDiskFileQueryFilter;
import com.vmware.vim25.VmDiskFileQueryFlags;
import com.vmware.vim25.VmEmigratingEvent;
import com.vmware.vim25.VmEndRecordingEvent;
import com.vmware.vim25.VmEndReplayingEvent;
import com.vmware.vim25.VmEvent;
import com.vmware.vim25.VmEventArgument;
import com.vmware.vim25.VmFailedMigrateEvent;
import com.vmware.vim25.VmFailedRelayoutEvent;
import com.vmware.vim25.VmFailedRelayoutOnVmfs2DatastoreEvent;
import com.vmware.vim25.VmFailedStartingSecondaryEvent;
import com.vmware.vim25.VmFailedToPowerOffEvent;
import com.vmware.vim25.VmFailedToPowerOnEvent;
import com.vmware.vim25.VmFailedToRebootGuestEvent;
import com.vmware.vim25.VmFailedToResetEvent;
import com.vmware.vim25.VmFailedToShutdownGuestEvent;
import com.vmware.vim25.VmFailedToStandbyGuestEvent;
import com.vmware.vim25.VmFailedToSuspendEvent;
import com.vmware.vim25.VmFailedUpdatingSecondaryConfig;
import com.vmware.vim25.VmFailoverFailed;
import com.vmware.vim25.VmFaultToleranceConfigIssue;
import com.vmware.vim25.VmFaultToleranceConfigIssueWrapper;
import com.vmware.vim25.VmFaultToleranceInvalidFileBacking;
import com.vmware.vim25.VmFaultToleranceIssue;
import com.vmware.vim25.VmFaultToleranceOpIssuesList;
import com.vmware.vim25.VmFaultToleranceStateChangedEvent;
import com.vmware.vim25.VmFaultToleranceTooManyFtVcpusOnHost;
import com.vmware.vim25.VmFaultToleranceTooManyVMsOnHost;
import com.vmware.vim25.VmFaultToleranceTurnedOffEvent;
import com.vmware.vim25.VmFaultToleranceVmTerminatedEvent;
import com.vmware.vim25.VmGuestOSCrashedEvent;
import com.vmware.vim25.VmGuestRebootEvent;
import com.vmware.vim25.VmGuestShutdownEvent;
import com.vmware.vim25.VmGuestStandbyEvent;
import com.vmware.vim25.VmHealthMonitoringStateChangedEvent;
import com.vmware.vim25.VmHostAffinityRuleViolation;
import com.vmware.vim25.VmInstanceUuidAssignedEvent;
import com.vmware.vim25.VmInstanceUuidChangedEvent;
import com.vmware.vim25.VmInstanceUuidConflictEvent;
import com.vmware.vim25.VmLimitLicense;
import com.vmware.vim25.VmLogFileInfo;
import com.vmware.vim25.VmLogFileQuery;
import com.vmware.vim25.VmMacAssignedEvent;
import com.vmware.vim25.VmMacChangedEvent;
import com.vmware.vim25.VmMacConflictEvent;
import com.vmware.vim25.VmMaxFTRestartCountReached;
import com.vmware.vim25.VmMaxRestartCountReached;
import com.vmware.vim25.VmMessageErrorEvent;
import com.vmware.vim25.VmMessageEvent;
import com.vmware.vim25.VmMessageWarningEvent;
import com.vmware.vim25.VmMetadataManagerFault;
import com.vmware.vim25.VmMigratedEvent;
import com.vmware.vim25.VmMonitorIncompatibleForFaultTolerance;
import com.vmware.vim25.VmNoCompatibleHostForSecondaryEvent;
import com.vmware.vim25.VmNoNetworkAccessEvent;
import com.vmware.vim25.VmNvramFileInfo;
import com.vmware.vim25.VmNvramFileQuery;
import com.vmware.vim25.VmOrphanedEvent;
import com.vmware.vim25.VmPodConfigForPlacement;
import com.vmware.vim25.VmPortGroupProfile;
import com.vmware.vim25.VmPowerOffOnIsolationEvent;
import com.vmware.vim25.VmPowerOnDisabled;
import com.vmware.vim25.VmPoweredOffEvent;
import com.vmware.vim25.VmPoweredOnEvent;
import com.vmware.vim25.VmPoweringOnWithCustomizedDVPortEvent;
import com.vmware.vim25.VmPrimaryFailoverEvent;
import com.vmware.vim25.VmReconfiguredEvent;
import com.vmware.vim25.VmRegisteredEvent;
import com.vmware.vim25.VmRelayoutSuccessfulEvent;
import com.vmware.vim25.VmRelayoutUpToDateEvent;
import com.vmware.vim25.VmReloadFromPathEvent;
import com.vmware.vim25.VmReloadFromPathFailedEvent;
import com.vmware.vim25.VmRelocateFailedEvent;
import com.vmware.vim25.VmRelocateSpecEvent;
import com.vmware.vim25.VmRelocatedEvent;
import com.vmware.vim25.VmRemoteConsoleConnectedEvent;
import com.vmware.vim25.VmRemoteConsoleDisconnectedEvent;
import com.vmware.vim25.VmRemovedEvent;
import com.vmware.vim25.VmRenamedEvent;
import com.vmware.vim25.VmRequirementsExceedCurrentEVCModeEvent;
import com.vmware.vim25.VmResettingEvent;
import com.vmware.vim25.VmResourcePoolMovedEvent;
import com.vmware.vim25.VmResourceReallocatedEvent;
import com.vmware.vim25.VmRestartedOnAlternateHostEvent;
import com.vmware.vim25.VmResumingEvent;
import com.vmware.vim25.VmSecondaryAddedEvent;
import com.vmware.vim25.VmSecondaryDisabledBySystemEvent;
import com.vmware.vim25.VmSecondaryDisabledEvent;
import com.vmware.vim25.VmSecondaryEnabledEvent;
import com.vmware.vim25.VmSecondaryStartedEvent;
import com.vmware.vim25.VmShutdownOnIsolationEvent;
import com.vmware.vim25.VmSmpFaultToleranceTooManyVMsOnHost;
import com.vmware.vim25.VmSnapshotFileInfo;
import com.vmware.vim25.VmSnapshotFileQuery;
import com.vmware.vim25.VmStartRecordingEvent;
import com.vmware.vim25.VmStartReplayingEvent;
import com.vmware.vim25.VmStartingEvent;
import com.vmware.vim25.VmStartingSecondaryEvent;
import com.vmware.vim25.VmStaticMacConflictEvent;
import com.vmware.vim25.VmStoppingEvent;
import com.vmware.vim25.VmSuspendedEvent;
import com.vmware.vim25.VmSuspendingEvent;
import com.vmware.vim25.VmTimedoutStartingSecondaryEvent;
import com.vmware.vim25.VmToolsUpgradeFault;
import com.vmware.vim25.VmUnsupportedStartingEvent;
import com.vmware.vim25.VmUpgradeCompleteEvent;
import com.vmware.vim25.VmUpgradeFailedEvent;
import com.vmware.vim25.VmUpgradingEvent;
import com.vmware.vim25.VmUuidAssignedEvent;
import com.vmware.vim25.VmUuidChangedEvent;
import com.vmware.vim25.VmUuidConflictEvent;
import com.vmware.vim25.VmValidateMaxDevice;
import com.vmware.vim25.VmVnicPoolReservationViolationClearEvent;
import com.vmware.vim25.VmVnicPoolReservationViolationRaiseEvent;
import com.vmware.vim25.VmWwnAssignedEvent;
import com.vmware.vim25.VmWwnChangedEvent;
import com.vmware.vim25.VmWwnConflict;
import com.vmware.vim25.VmWwnConflictEvent;
import com.vmware.vim25.VmfsAlreadyMounted;
import com.vmware.vim25.VmfsAmbiguousMount;
import com.vmware.vim25.VmfsConfigOption;
import com.vmware.vim25.VmfsDatastoreAllExtentOption;
import com.vmware.vim25.VmfsDatastoreBaseOption;
import com.vmware.vim25.VmfsDatastoreCreateSpec;
import com.vmware.vim25.VmfsDatastoreExpandSpec;
import com.vmware.vim25.VmfsDatastoreExtendSpec;
import com.vmware.vim25.VmfsDatastoreInfo;
import com.vmware.vim25.VmfsDatastoreMultipleExtentOption;
import com.vmware.vim25.VmfsDatastoreOption;
import com.vmware.vim25.VmfsDatastoreSingleExtentOption;
import com.vmware.vim25.VmfsDatastoreSpec;
import com.vmware.vim25.VmfsMountFault;
import com.vmware.vim25.VmfsUnmapBandwidthSpec;
import com.vmware.vim25.VmotionInterfaceNotEnabled;
import com.vmware.vim25.VmwareDistributedVirtualSwitchPvlanSpec;
import com.vmware.vim25.VmwareDistributedVirtualSwitchTrunkVlanSpec;
import com.vmware.vim25.VmwareDistributedVirtualSwitchVlanIdSpec;
import com.vmware.vim25.VmwareDistributedVirtualSwitchVlanSpec;
import com.vmware.vim25.VmwareUplinkPortTeamingPolicy;
import com.vmware.vim25.VnicPortArgument;
import com.vmware.vim25.VolumeEditorError;
import com.vmware.vim25.VramLimitLicense;
import com.vmware.vim25.VsanClusterConfigInfo;
import com.vmware.vim25.VsanClusterConfigInfoHostDefaultInfo;
import com.vmware.vim25.VsanClusterUuidMismatch;
import com.vmware.vim25.VsanDiskFault;
import com.vmware.vim25.VsanFault;
import com.vmware.vim25.VsanHostClusterStatus;
import com.vmware.vim25.VsanHostClusterStatusState;
import com.vmware.vim25.VsanHostClusterStatusStateCompletionEstimate;
import com.vmware.vim25.VsanHostConfigInfo;
import com.vmware.vim25.VsanHostConfigInfoClusterInfo;
import com.vmware.vim25.VsanHostConfigInfoNetworkInfo;
import com.vmware.vim25.VsanHostConfigInfoNetworkInfoPortConfig;
import com.vmware.vim25.VsanHostConfigInfoStorageInfo;
import com.vmware.vim25.VsanHostDecommissionMode;
import com.vmware.vim25.VsanHostDiskMapInfo;
import com.vmware.vim25.VsanHostDiskMapResult;
import com.vmware.vim25.VsanHostDiskMapping;
import com.vmware.vim25.VsanHostDiskResult;
import com.vmware.vim25.VsanHostFaultDomainInfo;
import com.vmware.vim25.VsanHostIpConfig;
import com.vmware.vim25.VsanHostMembershipInfo;
import com.vmware.vim25.VsanHostRuntimeInfo;
import com.vmware.vim25.VsanHostRuntimeInfoDiskIssue;
import com.vmware.vim25.VsanHostVsanDiskInfo;
import com.vmware.vim25.VsanIncompatibleDiskMapping;
import com.vmware.vim25.VsanNewPolicyBatch;
import com.vmware.vim25.VsanPolicyChangeBatch;
import com.vmware.vim25.VsanPolicyCost;
import com.vmware.vim25.VsanPolicySatisfiability;
import com.vmware.vim25.VsanUpgradeSystemAPIBrokenIssue;
import com.vmware.vim25.VsanUpgradeSystemAutoClaimEnabledOnHostsIssue;
import com.vmware.vim25.VsanUpgradeSystemHostsDisconnectedIssue;
import com.vmware.vim25.VsanUpgradeSystemMissingHostsInClusterIssue;
import com.vmware.vim25.VsanUpgradeSystemNetworkPartitionInfo;
import com.vmware.vim25.VsanUpgradeSystemNetworkPartitionIssue;
import com.vmware.vim25.VsanUpgradeSystemNotEnoughFreeCapacityIssue;
import com.vmware.vim25.VsanUpgradeSystemPreflightCheckIssue;
import com.vmware.vim25.VsanUpgradeSystemPreflightCheckResult;
import com.vmware.vim25.VsanUpgradeSystemRogueHostsInClusterIssue;
import com.vmware.vim25.VsanUpgradeSystemUpgradeHistoryDiskGroupOp;
import com.vmware.vim25.VsanUpgradeSystemUpgradeHistoryItem;
import com.vmware.vim25.VsanUpgradeSystemUpgradeHistoryPreflightFail;
import com.vmware.vim25.VsanUpgradeSystemUpgradeStatus;
import com.vmware.vim25.VsanUpgradeSystemV2ObjectsPresentDuringDowngradeIssue;
import com.vmware.vim25.VsanUpgradeSystemWrongEsxVersionIssue;
import com.vmware.vim25.VslmCloneSpec;
import com.vmware.vim25.VslmCreateSpec;
import com.vmware.vim25.VslmCreateSpecBackingSpec;
import com.vmware.vim25.VslmCreateSpecDiskFileBackingSpec;
import com.vmware.vim25.VslmCreateSpecRawDiskMappingBackingSpec;
import com.vmware.vim25.VslmInfrastructureObjectPolicy;
import com.vmware.vim25.VslmInfrastructureObjectPolicySpec;
import com.vmware.vim25.VslmMigrateSpec;
import com.vmware.vim25.VslmRelocateSpec;
import com.vmware.vim25.VslmTagEntry;
import com.vmware.vim25.VspanDestPortConflict;
import com.vmware.vim25.VspanPortConflict;
import com.vmware.vim25.VspanPortMoveFault;
import com.vmware.vim25.VspanPortPromiscChangeFault;
import com.vmware.vim25.VspanPortgroupPromiscChangeFault;
import com.vmware.vim25.VspanPortgroupTypeChangeFault;
import com.vmware.vim25.VspanPromiscuousPortNotSupported;
import com.vmware.vim25.VspanSameSessionPortConflict;
import com.vmware.vim25.VstorageObjectVCenterQueryChangedDiskAreasRequestType;
import com.vmware.vim25.VstorageObjectVCenterQueryChangedDiskAreasResponse;
import com.vmware.vim25.VvolDatastoreInfo;
import com.vmware.vim25.WaitForUpdatesExRequestType;
import com.vmware.vim25.WaitForUpdatesExResponse;
import com.vmware.vim25.WaitForUpdatesRequestType;
import com.vmware.vim25.WaitForUpdatesResponse;
import com.vmware.vim25.WaitOptions;
import com.vmware.vim25.WakeOnLanNotSupported;
import com.vmware.vim25.WakeOnLanNotSupportedByVmotionNIC;
import com.vmware.vim25.WarningUpgradeEvent;
import com.vmware.vim25.WeeklyTaskScheduler;
import com.vmware.vim25.WillLoseHAProtection;
import com.vmware.vim25.WillModifyConfigCpuRequirements;
import com.vmware.vim25.WillResetSnapshotDirectory;
import com.vmware.vim25.WinNetBIOSConfigInfo;
import com.vmware.vim25.WipeDiskFault;
import com.vmware.vim25.WitnessNodeInfo;
import com.vmware.vim25.XmlToCustomizationSpecItemRequestType;
import com.vmware.vim25.XmlToCustomizationSpecItemResponse;
import com.vmware.vim25.ZeroFillVirtualDiskRequestType;
import com.vmware.vim25.ZeroFillVirtualDiskTaskResponse;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

@XmlRegistry
public class ObjectFactory {
  private static final QName _AddFilter_QNAME = new QName("urn:vim25", "AddFilter");
  
  private static final QName _UpdateCounterLevelMapping_QNAME = new QName("urn:vim25", "UpdateCounterLevelMapping");
  
  private static final QName _FilesystemQuiesceFaultFault_QNAME = new QName("urn:vim25", "FilesystemQuiesceFaultFault");
  
  private static final QName _GuestRegistryKeyAlreadyExistsFault_QNAME = new QName("urn:vim25", "GuestRegistryKeyAlreadyExistsFault");
  
  private static final QName _RectifyDvsOnHostTask_QNAME = new QName("urn:vim25", "RectifyDvsOnHost_Task");
  
  private static final QName _UpdateServiceMessage_QNAME = new QName("urn:vim25", "UpdateServiceMessage");
  
  private static final QName _EVCAdmissionFailedHostSoftwareFault_QNAME = new QName("urn:vim25", "EVCAdmissionFailedHostSoftwareFault");
  
  private static final QName _AcquireLocalTicket_QNAME = new QName("urn:vim25", "AcquireLocalTicket");
  
  private static final QName _QueryManagedBy_QNAME = new QName("urn:vim25", "QueryManagedBy");
  
  private static final QName _RetrieveAllPermissions_QNAME = new QName("urn:vim25", "RetrieveAllPermissions");
  
  private static final QName _UpdateAssignableHardwareConfig_QNAME = new QName("urn:vim25", "UpdateAssignableHardwareConfig");
  
  private static final QName _GuestRegistryFaultFault_QNAME = new QName("urn:vim25", "GuestRegistryFaultFault");
  
  private static final QName _UpdateVirtualMachineFilesTask_QNAME = new QName("urn:vim25", "UpdateVirtualMachineFiles_Task");
  
  private static final QName _QueryConfiguredModuleOptionString_QNAME = new QName("urn:vim25", "QueryConfiguredModuleOptionString");
  
  private static final QName _ValidateMigration_QNAME = new QName("urn:vim25", "ValidateMigration");
  
  private static final QName _UnmountForceMountedVmfsVolume_QNAME = new QName("urn:vim25", "UnmountForceMountedVmfsVolume");
  
  private static final QName _QueryVmfsDatastoreExpandOptions_QNAME = new QName("urn:vim25", "QueryVmfsDatastoreExpandOptions");
  
  private static final QName _OvfElementFault_QNAME = new QName("urn:vim25", "OvfElementFault");
  
  private static final QName _DoesCustomizationSpecExist_QNAME = new QName("urn:vim25", "DoesCustomizationSpecExist");
  
  private static final QName _QueryHostProfileMetadata_QNAME = new QName("urn:vim25", "QueryHostProfileMetadata");
  
  private static final QName _DVSRollbackTask_QNAME = new QName("urn:vim25", "DVSRollback_Task");
  
  private static final QName _CreateVvolDatastore_QNAME = new QName("urn:vim25", "CreateVvolDatastore");
  
  private static final QName _QueryDatacenterConfigOptionDescriptor_QNAME = new QName("urn:vim25", "queryDatacenterConfigOptionDescriptor");
  
  private static final QName _PowerOnFtSecondaryFailedFault_QNAME = new QName("urn:vim25", "PowerOnFtSecondaryFailedFault");
  
  private static final QName _QueryIORMConfigOption_QNAME = new QName("urn:vim25", "QueryIORMConfigOption");
  
  private static final QName _RefreshDatastoreStorageInfo_QNAME = new QName("urn:vim25", "RefreshDatastoreStorageInfo");
  
  private static final QName _InsufficientFailoverResourcesFaultFault_QNAME = new QName("urn:vim25", "InsufficientFailoverResourcesFaultFault");
  
  private static final QName _InvalidEventFault_QNAME = new QName("urn:vim25", "InvalidEventFault");
  
  private static final QName _ProfileUpdateFailedFault_QNAME = new QName("urn:vim25", "ProfileUpdateFailedFault");
  
  private static final QName _ExecuteSimpleCommand_QNAME = new QName("urn:vim25", "ExecuteSimpleCommand");
  
  private static final QName _ReadPreviousEvents_QNAME = new QName("urn:vim25", "ReadPreviousEvents");
  
  private static final QName _DeleteRegistryValueInGuest_QNAME = new QName("urn:vim25", "DeleteRegistryValueInGuest");
  
  private static final QName _NotSupportedHostInHAClusterFault_QNAME = new QName("urn:vim25", "NotSupportedHostInHAClusterFault");
  
  private static final QName _HasMonitoredEntity_QNAME = new QName("urn:vim25", "HasMonitoredEntity");
  
  private static final QName _EnableNetworkResourceManagement_QNAME = new QName("urn:vim25", "EnableNetworkResourceManagement");
  
  private static final QName _OvfPropertyNetworkExportFault_QNAME = new QName("urn:vim25", "OvfPropertyNetworkExportFault");
  
  private static final QName _CreateDVPortgroupTask_QNAME = new QName("urn:vim25", "CreateDVPortgroup_Task");
  
  private static final QName _StopReplayingTask_QNAME = new QName("urn:vim25", "StopReplaying_Task");
  
  private static final QName _InsufficientDisksFault_QNAME = new QName("urn:vim25", "InsufficientDisksFault");
  
  private static final QName _UpdateInternetScsiAlias_QNAME = new QName("urn:vim25", "UpdateInternetScsiAlias");
  
  private static final QName _RetrieveArgumentDescription_QNAME = new QName("urn:vim25", "RetrieveArgumentDescription");
  
  private static final QName _OvfHostValueNotParsedFault_QNAME = new QName("urn:vim25", "OvfHostValueNotParsedFault");
  
  private static final QName _InstallHostPatchTask_QNAME = new QName("urn:vim25", "InstallHostPatch_Task");
  
  private static final QName _SecondaryVmNotRegisteredFault_QNAME = new QName("urn:vim25", "SecondaryVmNotRegisteredFault");
  
  private static final QName _UpdateLicenseLabel_QNAME = new QName("urn:vim25", "UpdateLicenseLabel");
  
  private static final QName _HttpNfcLeaseProgress_QNAME = new QName("urn:vim25", "HttpNfcLeaseProgress");
  
  private static final QName _InaccessibleDatastoreFault_QNAME = new QName("urn:vim25", "InaccessibleDatastoreFault");
  
  private static final QName _GenerateLogBundlesTask_QNAME = new QName("urn:vim25", "GenerateLogBundles_Task");
  
  private static final QName _IscsiFaultVnicHasWrongUplinkFault_QNAME = new QName("urn:vim25", "IscsiFaultVnicHasWrongUplinkFault");
  
  private static final QName _MemorySizeNotSupportedFault_QNAME = new QName("urn:vim25", "MemorySizeNotSupportedFault");
  
  private static final QName _IsSharedGraphicsActive_QNAME = new QName("urn:vim25", "IsSharedGraphicsActive");
  
  private static final QName _ConfigureEvcModeTask_QNAME = new QName("urn:vim25", "ConfigureEvcMode_Task");
  
  private static final QName _DeltaDiskFormatNotSupportedFault_QNAME = new QName("urn:vim25", "DeltaDiskFormatNotSupportedFault");
  
  private static final QName _ContinueRetrievePropertiesEx_QNAME = new QName("urn:vim25", "ContinueRetrievePropertiesEx");
  
  private static final QName _HostRetrieveVStorageObjectState_QNAME = new QName("urn:vim25", "HostRetrieveVStorageObjectState");
  
  private static final QName _AddNetworkResourcePool_QNAME = new QName("urn:vim25", "AddNetworkResourcePool");
  
  private static final QName _AlreadyBeingManagedFault_QNAME = new QName("urn:vim25", "AlreadyBeingManagedFault");
  
  private static final QName _InstantCloneTask_QNAME = new QName("urn:vim25", "InstantClone_Task");
  
  private static final QName _StorageDrsDisabledOnVmFault_QNAME = new QName("urn:vim25", "StorageDrsDisabledOnVmFault");
  
  private static final QName _ExpiredFeatureLicenseFault_QNAME = new QName("urn:vim25", "ExpiredFeatureLicenseFault");
  
  private static final QName _OvfPropertyQualifierFault_QNAME = new QName("urn:vim25", "OvfPropertyQualifierFault");
  
  private static final QName _RetrieveDescription_QNAME = new QName("urn:vim25", "RetrieveDescription");
  
  private static final QName _AddServiceConsoleVirtualNic_QNAME = new QName("urn:vim25", "AddServiceConsoleVirtualNic");
  
  private static final QName _CertMgrRevokeCertificatesTask_QNAME = new QName("urn:vim25", "CertMgrRevokeCertificates_Task");
  
  private static final QName _VmMonitorIncompatibleForFaultToleranceFault_QNAME = new QName("urn:vim25", "VmMonitorIncompatibleForFaultToleranceFault");
  
  private static final QName _AttachScsiLunExTask_QNAME = new QName("urn:vim25", "AttachScsiLunEx_Task");
  
  private static final QName _OvfPropertyExportFault_QNAME = new QName("urn:vim25", "OvfPropertyExportFault");
  
  private static final QName _InflateVirtualDiskTask_QNAME = new QName("urn:vim25", "InflateVirtualDisk_Task");
  
  private static final QName _InvalidDatastoreStateFault_QNAME = new QName("urn:vim25", "InvalidDatastoreStateFault");
  
  private static final QName _CreateDiskFromSnapshotTask_QNAME = new QName("urn:vim25", "CreateDiskFromSnapshot_Task");
  
  private static final QName _GuestRegistryKeyFaultFault_QNAME = new QName("urn:vim25", "GuestRegistryKeyFaultFault");
  
  private static final QName _RestartService_QNAME = new QName("urn:vim25", "RestartService");
  
  private static final QName _DiskMoveTypeNotSupportedFault_QNAME = new QName("urn:vim25", "DiskMoveTypeNotSupportedFault");
  
  private static final QName _ReconfigureAlarm_QNAME = new QName("urn:vim25", "ReconfigureAlarm");
  
  private static final QName _SSPIChallengeFault_QNAME = new QName("urn:vim25", "SSPIChallengeFault");
  
  private static final QName _UpgradeVsanObjects_QNAME = new QName("urn:vim25", "UpgradeVsanObjects");
  
  private static final QName _VmConfigIncompatibleForFaultToleranceFault_QNAME = new QName("urn:vim25", "VmConfigIncompatibleForFaultToleranceFault");
  
  private static final QName _GatewayHostNotReachableFault_QNAME = new QName("urn:vim25", "GatewayHostNotReachableFault");
  
  private static final QName _ExpandVmfsExtent_QNAME = new QName("urn:vim25", "ExpandVmfsExtent");
  
  private static final QName _IncompatibleSettingFault_QNAME = new QName("urn:vim25", "IncompatibleSettingFault");
  
  private static final QName _CannotModifyConfigCpuRequirementsFault_QNAME = new QName("urn:vim25", "CannotModifyConfigCpuRequirementsFault");
  
  private static final QName _DirectoryNotEmptyFault_QNAME = new QName("urn:vim25", "DirectoryNotEmptyFault");
  
  private static final QName _InsufficientNetworkResourcePoolCapacityFault_QNAME = new QName("urn:vim25", "InsufficientNetworkResourcePoolCapacityFault");
  
  private static final QName _OvfPropertyQualifierIgnoredFault_QNAME = new QName("urn:vim25", "OvfPropertyQualifierIgnoredFault");
  
  private static final QName _AnswerVM_QNAME = new QName("urn:vim25", "AnswerVM");
  
  private static final QName _CanProvisionObjects_QNAME = new QName("urn:vim25", "CanProvisionObjects");
  
  private static final QName _LimitExceededFault_QNAME = new QName("urn:vim25", "LimitExceededFault");
  
  private static final QName _TerminateFaultTolerantVMTask_QNAME = new QName("urn:vim25", "TerminateFaultTolerantVM_Task");
  
  private static final QName _QueryPartitionCreateDesc_QNAME = new QName("urn:vim25", "QueryPartitionCreateDesc");
  
  private static final QName _VmValidateMaxDeviceFault_QNAME = new QName("urn:vim25", "VmValidateMaxDeviceFault");
  
  private static final QName _EVCConfigFaultFault_QNAME = new QName("urn:vim25", "EVCConfigFaultFault");
  
  private static final QName _AddVirtualSwitch_QNAME = new QName("urn:vim25", "AddVirtualSwitch");
  
  private static final QName _QueryEvents_QNAME = new QName("urn:vim25", "QueryEvents");
  
  private static final QName _UpdateSystemSwapConfiguration_QNAME = new QName("urn:vim25", "UpdateSystemSwapConfiguration");
  
  private static final QName _NotEnoughCpusFault_QNAME = new QName("urn:vim25", "NotEnoughCpusFault");
  
  private static final QName _InvalidCollectorVersionFault_QNAME = new QName("urn:vim25", "InvalidCollectorVersionFault");
  
  private static final QName _SecurityErrorFault_QNAME = new QName("urn:vim25", "SecurityErrorFault");
  
  private static final QName _MemorySizeNotSupportedByDatastoreFault_QNAME = new QName("urn:vim25", "MemorySizeNotSupportedByDatastoreFault");
  
  private static final QName _SnapshotLockedFault_QNAME = new QName("urn:vim25", "SnapshotLockedFault");
  
  private static final QName _UpdateClusterProfile_QNAME = new QName("urn:vim25", "UpdateClusterProfile");
  
  private static final QName _DeleteHostSubSpecification_QNAME = new QName("urn:vim25", "DeleteHostSubSpecification");
  
  private static final QName _RestartServiceConsoleVirtualNic_QNAME = new QName("urn:vim25", "RestartServiceConsoleVirtualNic");
  
  private static final QName _QuerySupportedFeatures_QNAME = new QName("urn:vim25", "QuerySupportedFeatures");
  
  private static final QName _QueryAvailableDisksForVmfs_QNAME = new QName("urn:vim25", "QueryAvailableDisksForVmfs");
  
  private static final QName _UpdateAnswerFileTask_QNAME = new QName("urn:vim25", "UpdateAnswerFile_Task");
  
  private static final QName _SnapshotRevertIssueFault_QNAME = new QName("urn:vim25", "SnapshotRevertIssueFault");
  
  private static final QName _StorageDrsCannotMoveDiskInMultiWriterModeFault_QNAME = new QName("urn:vim25", "StorageDrsCannotMoveDiskInMultiWriterModeFault");
  
  private static final QName _ScanHostPatchTask_QNAME = new QName("urn:vim25", "ScanHostPatch_Task");
  
  private static final QName _StandbyGuest_QNAME = new QName("urn:vim25", "StandbyGuest");
  
  private static final QName _RenameCustomizationSpec_QNAME = new QName("urn:vim25", "RenameCustomizationSpec");
  
  private static final QName _QueryNetConfig_QNAME = new QName("urn:vim25", "QueryNetConfig");
  
  private static final QName _HAErrorsAtDestFault_QNAME = new QName("urn:vim25", "HAErrorsAtDestFault");
  
  private static final QName _QueryConfigOption_QNAME = new QName("urn:vim25", "QueryConfigOption");
  
  private static final QName _UnmountToolsInstaller_QNAME = new QName("urn:vim25", "UnmountToolsInstaller");
  
  private static final QName _OvfHardwareExportFault_QNAME = new QName("urn:vim25", "OvfHardwareExportFault");
  
  private static final QName _VmToolsUpgradeFaultFault_QNAME = new QName("urn:vim25", "VmToolsUpgradeFaultFault");
  
  private static final QName _VirtualHardwareCompatibilityIssueFault_QNAME = new QName("urn:vim25", "VirtualHardwareCompatibilityIssueFault");
  
  private static final QName _VMotionNotConfiguredFault_QNAME = new QName("urn:vim25", "VMotionNotConfiguredFault");
  
  private static final QName _SoftRuleVioCorrectionImpactFault_QNAME = new QName("urn:vim25", "SoftRuleVioCorrectionImpactFault");
  
  private static final QName _UpdateVVolVirtualMachineFilesTask_QNAME = new QName("urn:vim25", "UpdateVVolVirtualMachineFiles_Task");
  
  private static final QName _DeleteNvdimmBlockNamespacesTask_QNAME = new QName("urn:vim25", "DeleteNvdimmBlockNamespaces_Task");
  
  private static final QName _DatastoreNotWritableOnHostFault_QNAME = new QName("urn:vim25", "DatastoreNotWritableOnHostFault");
  
  private static final QName _OvfConnectedDeviceIsoFault_QNAME = new QName("urn:vim25", "OvfConnectedDeviceIsoFault");
  
  private static final QName _OvfInvalidValueConfigurationFault_QNAME = new QName("urn:vim25", "OvfInvalidValueConfigurationFault");
  
  private static final QName _HostHasComponentFailureFault_QNAME = new QName("urn:vim25", "HostHasComponentFailureFault");
  
  private static final QName _QueryProviderName_QNAME = new QName("urn:vim25", "QueryProviderName");
  
  private static final QName _UpdateReferenceHost_QNAME = new QName("urn:vim25", "UpdateReferenceHost");
  
  private static final QName _OvfDiskMappingNotFoundFault_QNAME = new QName("urn:vim25", "OvfDiskMappingNotFoundFault");
  
  private static final QName _EnableFeature_QNAME = new QName("urn:vim25", "EnableFeature");
  
  private static final QName _ResetListViewFromView_QNAME = new QName("urn:vim25", "ResetListViewFromView");
  
  private static final QName _NonADUserRequiredFault_QNAME = new QName("urn:vim25", "NonADUserRequiredFault");
  
  private static final QName _ConfigureCryptoKey_QNAME = new QName("urn:vim25", "ConfigureCryptoKey");
  
  private static final QName _UnregisterKmsCluster_QNAME = new QName("urn:vim25", "UnregisterKmsCluster");
  
  private static final QName _RemoveFilter_QNAME = new QName("urn:vim25", "RemoveFilter");
  
  private static final QName _UpgradeIoFilterTask_QNAME = new QName("urn:vim25", "UpgradeIoFilter_Task");
  
  private static final QName _DVPortgroupRollbackTask_QNAME = new QName("urn:vim25", "DVPortgroupRollback_Task");
  
  private static final QName _RemoveNvmeOverRdmaAdapter_QNAME = new QName("urn:vim25", "RemoveNvmeOverRdmaAdapter");
  
  private static final QName _QueryVnicStatus_QNAME = new QName("urn:vim25", "QueryVnicStatus");
  
  private static final QName _QueryDvsFeatureCapability_QNAME = new QName("urn:vim25", "QueryDvsFeatureCapability");
  
  private static final QName _ZeroFillVirtualDiskTask_QNAME = new QName("urn:vim25", "ZeroFillVirtualDisk_Task");
  
  private static final QName _RetrieveAnswerFileForProfile_QNAME = new QName("urn:vim25", "RetrieveAnswerFileForProfile");
  
  private static final QName _DuplicateNameFault_QNAME = new QName("urn:vim25", "DuplicateNameFault");
  
  private static final QName _TaskInProgressFault_QNAME = new QName("urn:vim25", "TaskInProgressFault");
  
  private static final QName _QueryCryptoKeyStatus_QNAME = new QName("urn:vim25", "QueryCryptoKeyStatus");
  
  private static final QName _RuntimeFaultFault_QNAME = new QName("urn:vim25", "RuntimeFaultFault");
  
  private static final QName _ScheduleReconcileDatastoreInventory_QNAME = new QName("urn:vim25", "ScheduleReconcileDatastoreInventory");
  
  private static final QName _MigrationDisabledFault_QNAME = new QName("urn:vim25", "MigrationDisabledFault");
  
  private static final QName _MountVffsVolume_QNAME = new QName("urn:vim25", "MountVffsVolume");
  
  private static final QName _ResolveInstallationErrorsOnClusterTask_QNAME = new QName("urn:vim25", "ResolveInstallationErrorsOnCluster_Task");
  
  private static final QName _RemoveGuestAlias_QNAME = new QName("urn:vim25", "RemoveGuestAlias");
  
  private static final QName _PhysCompatRDMNotSupportedFault_QNAME = new QName("urn:vim25", "PhysCompatRDMNotSupportedFault");
  
  private static final QName _UpdateOptions_QNAME = new QName("urn:vim25", "UpdateOptions");
  
  private static final QName _SwapPlacementOverrideNotSupportedFault_QNAME = new QName("urn:vim25", "SwapPlacementOverrideNotSupportedFault");
  
  private static final QName _SetDefaultKmsCluster_QNAME = new QName("urn:vim25", "SetDefaultKmsCluster");
  
  private static final QName _MarkPerenniallyReservedExTask_QNAME = new QName("urn:vim25", "MarkPerenniallyReservedEx_Task");
  
  private static final QName _VersionURI_QNAME = new QName("urn:vim25", "versionURI");
  
  private static final QName _UncustomizableGuestFault_QNAME = new QName("urn:vim25", "UncustomizableGuestFault");
  
  private static final QName _InvalidPropertyTypeFault_QNAME = new QName("urn:vim25", "InvalidPropertyTypeFault");
  
  private static final QName _ResetFirmwareToFactoryDefaults_QNAME = new QName("urn:vim25", "ResetFirmwareToFactoryDefaults");
  
  private static final QName _UpdateDefaultPolicy_QNAME = new QName("urn:vim25", "UpdateDefaultPolicy");
  
  private static final QName _QueryVsanObjects_QNAME = new QName("urn:vim25", "QueryVsanObjects");
  
  private static final QName _MarkAsSsdTask_QNAME = new QName("urn:vim25", "MarkAsSsd_Task");
  
  private static final QName _OvfConsumerFaultFault_QNAME = new QName("urn:vim25", "OvfConsumerFaultFault");
  
  private static final QName _DestroyIpPool_QNAME = new QName("urn:vim25", "DestroyIpPool");
  
  private static final QName _DrsVmotionIncompatibleFaultFault_QNAME = new QName("urn:vim25", "DrsVmotionIncompatibleFaultFault");
  
  private static final QName _CheckCompatibilityTask_QNAME = new QName("urn:vim25", "CheckCompatibility_Task");
  
  private static final QName _VimFaultFault_QNAME = new QName("urn:vim25", "VimFaultFault");
  
  private static final QName _OvfPropertyTypeFault_QNAME = new QName("urn:vim25", "OvfPropertyTypeFault");
  
  private static final QName _CannotAccessVmDeviceFault_QNAME = new QName("urn:vim25", "CannotAccessVmDeviceFault");
  
  private static final QName _VspanPromiscuousPortNotSupportedFault_QNAME = new QName("urn:vim25", "VspanPromiscuousPortNotSupportedFault");
  
  private static final QName _OvfUnsupportedDeviceBackingInfoFault_QNAME = new QName("urn:vim25", "OvfUnsupportedDeviceBackingInfoFault");
  
  private static final QName _ImportCertificateForCAMTask_QNAME = new QName("urn:vim25", "ImportCertificateForCAM_Task");
  
  private static final QName _QueryHostStatus_QNAME = new QName("urn:vim25", "QueryHostStatus");
  
  private static final QName _DisableAlarm_QNAME = new QName("urn:vim25", "DisableAlarm");
  
  private static final QName _GetAlarm_QNAME = new QName("urn:vim25", "GetAlarm");
  
  private static final QName _ComputeDiskPartitionInfoForResize_QNAME = new QName("urn:vim25", "ComputeDiskPartitionInfoForResize");
  
  private static final QName _InsufficientStandbyMemoryResourceFault_QNAME = new QName("urn:vim25", "InsufficientStandbyMemoryResourceFault");
  
  private static final QName _VirtualHardwareVersionNotSupportedFault_QNAME = new QName("urn:vim25", "VirtualHardwareVersionNotSupportedFault");
  
  private static final QName _IDEDiskNotSupportedFault_QNAME = new QName("urn:vim25", "IDEDiskNotSupportedFault");
  
  private static final QName _DeployVchaTask_QNAME = new QName("urn:vim25", "deployVcha_Task");
  
  private static final QName _InvalidLoginFault_QNAME = new QName("urn:vim25", "InvalidLoginFault");
  
  private static final QName _RunScheduledTask_QNAME = new QName("urn:vim25", "RunScheduledTask");
  
  private static final QName _RenameVStorageObject_QNAME = new QName("urn:vim25", "RenameVStorageObject");
  
  private static final QName _SolutionUserRequiredFault_QNAME = new QName("urn:vim25", "SolutionUserRequiredFault");
  
  private static final QName _InitializeDisksTask_QNAME = new QName("urn:vim25", "InitializeDisks_Task");
  
  private static final QName _GetAlarmState_QNAME = new QName("urn:vim25", "GetAlarmState");
  
  private static final QName _InstallSmartCardTrustAnchor_QNAME = new QName("urn:vim25", "InstallSmartCardTrustAnchor");
  
  private static final QName _RefreshStorageInfo_QNAME = new QName("urn:vim25", "RefreshStorageInfo");
  
  private static final QName _VmMetadataManagerFaultFault_QNAME = new QName("urn:vim25", "VmMetadataManagerFaultFault");
  
  private static final QName _ResolveMultipleUnresolvedVmfsVolumes_QNAME = new QName("urn:vim25", "ResolveMultipleUnresolvedVmfsVolumes");
  
  private static final QName _PowerOnVMTask_QNAME = new QName("urn:vim25", "PowerOnVM_Task");
  
  private static final QName _NoPermissionOnHostFault_QNAME = new QName("urn:vim25", "NoPermissionOnHostFault");
  
  private static final QName _InvalidDasRestartPriorityForFtVmFault_QNAME = new QName("urn:vim25", "InvalidDasRestartPriorityForFtVmFault");
  
  private static final QName _ResetListView_QNAME = new QName("urn:vim25", "ResetListView");
  
  private static final QName _QueryFaultToleranceCompatibilityEx_QNAME = new QName("urn:vim25", "QueryFaultToleranceCompatibilityEx");
  
  private static final QName _OvfMissingHardwareFault_QNAME = new QName("urn:vim25", "OvfMissingHardwareFault");
  
  private static final QName _GatewayToHostTrustVerifyFaultFault_QNAME = new QName("urn:vim25", "GatewayToHostTrustVerifyFaultFault");
  
  private static final QName _OvfMissingElementNormalBoundaryFault_QNAME = new QName("urn:vim25", "OvfMissingElementNormalBoundaryFault");
  
  private static final QName _ResourceInUseFault_QNAME = new QName("urn:vim25", "ResourceInUseFault");
  
  private static final QName _ReconfigureComputeResourceTask_QNAME = new QName("urn:vim25", "ReconfigureComputeResource_Task");
  
  private static final QName _NoPermissionOnADFault_QNAME = new QName("urn:vim25", "NoPermissionOnADFault");
  
  private static final QName _ConcurrentAccessFault_QNAME = new QName("urn:vim25", "ConcurrentAccessFault");
  
  private static final QName _NonVmwareOuiMacNotSupportedHostFault_QNAME = new QName("urn:vim25", "NonVmwareOuiMacNotSupportedHostFault");
  
  private static final QName _InvalidDatastorePathFault_QNAME = new QName("urn:vim25", "InvalidDatastorePathFault");
  
  private static final QName _InvalidHostConnectionStateFault_QNAME = new QName("urn:vim25", "InvalidHostConnectionStateFault");
  
  private static final QName _QueryPnicStatus_QNAME = new QName("urn:vim25", "QueryPnicStatus");
  
  private static final QName _UpdateGraphicsConfig_QNAME = new QName("urn:vim25", "UpdateGraphicsConfig");
  
  private static final QName _GuestMultipleMappingsFault_QNAME = new QName("urn:vim25", "GuestMultipleMappingsFault");
  
  private static final QName _CancelRecommendation_QNAME = new QName("urn:vim25", "CancelRecommendation");
  
  private static final QName _InsufficientHostMemoryCapacityFaultFault_QNAME = new QName("urn:vim25", "InsufficientHostMemoryCapacityFaultFault");
  
  private static final QName _CompositeHostProfileTask_QNAME = new QName("urn:vim25", "CompositeHostProfile_Task");
  
  private static final QName _DeselectVnic_QNAME = new QName("urn:vim25", "DeselectVnic");
  
  private static final QName _InsufficientMemoryResourcesFaultFault_QNAME = new QName("urn:vim25", "InsufficientMemoryResourcesFaultFault");
  
  private static final QName _UpdateIpPool_QNAME = new QName("urn:vim25", "UpdateIpPool");
  
  private static final QName _MarkAsNonLocalTask_QNAME = new QName("urn:vim25", "MarkAsNonLocal_Task");
  
  private static final QName _CannotPowerOffVmInClusterFault_QNAME = new QName("urn:vim25", "CannotPowerOffVmInClusterFault");
  
  private static final QName _VstorageObjectVCenterQueryChangedDiskAreas_QNAME = new QName("urn:vim25", "VstorageObjectVCenterQueryChangedDiskAreas");
  
  private static final QName _FilterInUseFault_QNAME = new QName("urn:vim25", "FilterInUseFault");
  
  private static final QName _CannotAccessNetworkFault_QNAME = new QName("urn:vim25", "CannotAccessNetworkFault");
  
  private static final QName _VmfsAlreadyMountedFault_QNAME = new QName("urn:vim25", "VmfsAlreadyMountedFault");
  
  private static final QName _PowerDownHostToStandByTask_QNAME = new QName("urn:vim25", "PowerDownHostToStandBy_Task");
  
  private static final QName _VmAlreadyExistsInDatacenterFault_QNAME = new QName("urn:vim25", "VmAlreadyExistsInDatacenterFault");
  
  private static final QName _InsufficientHostCapacityFaultFault_QNAME = new QName("urn:vim25", "InsufficientHostCapacityFaultFault");
  
  private static final QName _EnableRuleset_QNAME = new QName("urn:vim25", "EnableRuleset");
  
  private static final QName _MountErrorFault_QNAME = new QName("urn:vim25", "MountErrorFault");
  
  private static final QName _CheckPowerOnTask_QNAME = new QName("urn:vim25", "CheckPowerOn_Task");
  
  private static final QName _QueryAvailablePerfMetric_QNAME = new QName("urn:vim25", "QueryAvailablePerfMetric");
  
  private static final QName _ActiveVMsBlockingEVCFault_QNAME = new QName("urn:vim25", "ActiveVMsBlockingEVCFault");
  
  private static final QName _GenericVmConfigFaultFault_QNAME = new QName("urn:vim25", "GenericVmConfigFaultFault");
  
  private static final QName _DuplicateCustomizationSpec_QNAME = new QName("urn:vim25", "DuplicateCustomizationSpec");
  
  private static final QName _OvfAttributeFault_QNAME = new QName("urn:vim25", "OvfAttributeFault");
  
  private static final QName _SnapshotMoveToNonHomeNotSupportedFault_QNAME = new QName("urn:vim25", "SnapshotMoveToNonHomeNotSupportedFault");
  
  private static final QName _HostSpecGetUpdatedHosts_QNAME = new QName("urn:vim25", "HostSpecGetUpdatedHosts");
  
  private static final QName _InsufficientVFlashResourcesFaultFault_QNAME = new QName("urn:vim25", "InsufficientVFlashResourcesFaultFault");
  
  private static final QName _QuerySyncingVsanObjects_QNAME = new QName("urn:vim25", "QuerySyncingVsanObjects");
  
  private static final QName _UninstallHostPatchTask_QNAME = new QName("urn:vim25", "UninstallHostPatch_Task");
  
  private static final QName _GetClusterMode_QNAME = new QName("urn:vim25", "getClusterMode");
  
  private static final QName _FetchDVPortKeys_QNAME = new QName("urn:vim25", "FetchDVPortKeys");
  
  private static final QName _PrepareCrypto_QNAME = new QName("urn:vim25", "PrepareCrypto");
  
  private static final QName _JoinDomainTask_QNAME = new QName("urn:vim25", "JoinDomain_Task");
  
  private static final QName _HostDeleteVStorageObjectTask_QNAME = new QName("urn:vim25", "HostDeleteVStorageObject_Task");
  
  private static final QName _SuspendedRelocateNotSupportedFault_QNAME = new QName("urn:vim25", "SuspendedRelocateNotSupportedFault");
  
  private static final QName _UnmountVmfsVolume_QNAME = new QName("urn:vim25", "UnmountVmfsVolume");
  
  private static final QName _DeviceNotSupportedFault_QNAME = new QName("urn:vim25", "DeviceNotSupportedFault");
  
  private static final QName _DeleteHostSpecification_QNAME = new QName("urn:vim25", "DeleteHostSpecification");
  
  private static final QName _OvfInternalErrorFault_QNAME = new QName("urn:vim25", "OvfInternalErrorFault");
  
  private static final QName _InvalidIpfixConfigFault_QNAME = new QName("urn:vim25", "InvalidIpfixConfigFault");
  
  private static final QName _IscsiFaultPnicInUseFault_QNAME = new QName("urn:vim25", "IscsiFaultPnicInUseFault");
  
  private static final QName _HostRegisterDisk_QNAME = new QName("urn:vim25", "HostRegisterDisk");
  
  private static final QName _HostConfigureVFlashResource_QNAME = new QName("urn:vim25", "HostConfigureVFlashResource");
  
  private static final QName _UpdateHostImageAcceptanceLevel_QNAME = new QName("urn:vim25", "UpdateHostImageAcceptanceLevel");
  
  private static final QName _QueryServiceList_QNAME = new QName("urn:vim25", "QueryServiceList");
  
  private static final QName _DisableClusteredVmdkSupport_QNAME = new QName("urn:vim25", "DisableClusteredVmdkSupport");
  
  private static final QName _BackupBlobWriteFailureFault_QNAME = new QName("urn:vim25", "BackupBlobWriteFailureFault");
  
  private static final QName _RetrieveServiceContent_QNAME = new QName("urn:vim25", "RetrieveServiceContent");
  
  private static final QName _UnbindVnic_QNAME = new QName("urn:vim25", "UnbindVnic");
  
  private static final QName _CreateDatacenter_QNAME = new QName("urn:vim25", "CreateDatacenter");
  
  private static final QName _RemoveKeys_QNAME = new QName("urn:vim25", "RemoveKeys");
  
  private static final QName _UpdateDateTime_QNAME = new QName("urn:vim25", "UpdateDateTime");
  
  private static final QName _SwapDatastoreUnsetFault_QNAME = new QName("urn:vim25", "SwapDatastoreUnsetFault");
  
  private static final QName _RemoveNetworkResourcePool_QNAME = new QName("urn:vim25", "RemoveNetworkResourcePool");
  
  private static final QName _GuestProcessNotFoundFault_QNAME = new QName("urn:vim25", "GuestProcessNotFoundFault");
  
  private static final QName _NoClientCertificateFault_QNAME = new QName("urn:vim25", "NoClientCertificateFault");
  
  private static final QName _ReplicationDiskConfigFaultFault_QNAME = new QName("urn:vim25", "ReplicationDiskConfigFaultFault");
  
  private static final QName _LoginExtensionByCertificate_QNAME = new QName("urn:vim25", "LoginExtensionByCertificate");
  
  private static final QName _DiskIsUSBFault_QNAME = new QName("urn:vim25", "DiskIsUSBFault");
  
  private static final QName _RemoveGuestAliasByCert_QNAME = new QName("urn:vim25", "RemoveGuestAliasByCert");
  
  private static final QName _QueryAvailableDvsSpec_QNAME = new QName("urn:vim25", "QueryAvailableDvsSpec");
  
  private static final QName _XmlToCustomizationSpecItem_QNAME = new QName("urn:vim25", "XmlToCustomizationSpecItem");
  
  private static final QName _NasConnectionLimitReachedFault_QNAME = new QName("urn:vim25", "NasConnectionLimitReachedFault");
  
  private static final QName _ToolsUnavailableFault_QNAME = new QName("urn:vim25", "ToolsUnavailableFault");
  
  private static final QName _CheckAddHostEvcTask_QNAME = new QName("urn:vim25", "CheckAddHostEvc_Task");
  
  private static final QName _UnmountVmfsVolumeExTask_QNAME = new QName("urn:vim25", "UnmountVmfsVolumeEx_Task");
  
  private static final QName _InvalidDeviceOperationFault_QNAME = new QName("urn:vim25", "InvalidDeviceOperationFault");
  
  private static final QName _SecondaryVmAlreadyDisabledFault_QNAME = new QName("urn:vim25", "SecondaryVmAlreadyDisabledFault");
  
  private static final QName _CreateSnapshotExTask_QNAME = new QName("urn:vim25", "CreateSnapshotEx_Task");
  
  private static final QName _MissingPowerOnConfigurationFault_QNAME = new QName("urn:vim25", "MissingPowerOnConfigurationFault");
  
  private static final QName _QueryExpressionMetadata_QNAME = new QName("urn:vim25", "QueryExpressionMetadata");
  
  private static final QName _DownloadDescriptionTree_QNAME = new QName("urn:vim25", "DownloadDescriptionTree");
  
  private static final QName _StampAllRulesWithUuidTask_QNAME = new QName("urn:vim25", "StampAllRulesWithUuid_Task");
  
  private static final QName _DisconnectNvmeController_QNAME = new QName("urn:vim25", "DisconnectNvmeController");
  
  private static final QName _IscsiFaultVnicHasActivePathsFault_QNAME = new QName("urn:vim25", "IscsiFaultVnicHasActivePathsFault");
  
  private static final QName _ListVStorageObjectsAttachedToTag_QNAME = new QName("urn:vim25", "ListVStorageObjectsAttachedToTag");
  
  private static final QName _ReconfigureScheduledTask_QNAME = new QName("urn:vim25", "ReconfigureScheduledTask");
  
  private static final QName _CertMgrRefreshCACertificatesAndCRLsTask_QNAME = new QName("urn:vim25", "CertMgrRefreshCACertificatesAndCRLs_Task");
  
  private static final QName _CryptoUnlockTask_QNAME = new QName("urn:vim25", "CryptoUnlock_Task");
  
  private static final QName _ReconfigureAutostart_QNAME = new QName("urn:vim25", "ReconfigureAutostart");
  
  private static final QName _UpdateLockdownExceptions_QNAME = new QName("urn:vim25", "UpdateLockdownExceptions");
  
  private static final QName _MoveHostIntoTask_QNAME = new QName("urn:vim25", "MoveHostInto_Task");
  
  private static final QName _InvalidHostStateFault_QNAME = new QName("urn:vim25", "InvalidHostStateFault");
  
  private static final QName _CheckProfileComplianceTask_QNAME = new QName("urn:vim25", "CheckProfileCompliance_Task");
  
  private static final QName _ClearComplianceStatus_QNAME = new QName("urn:vim25", "ClearComplianceStatus");
  
  private static final QName _NetworksMayNotBeTheSameFault_QNAME = new QName("urn:vim25", "NetworksMayNotBeTheSameFault");
  
  private static final QName _ConfigureVFlashResourceExTask_QNAME = new QName("urn:vim25", "ConfigureVFlashResourceEx_Task");
  
  private static final QName _CheckRelocateTask_QNAME = new QName("urn:vim25", "CheckRelocate_Task");
  
  private static final QName _FaultToleranceNotLicensedFault_QNAME = new QName("urn:vim25", "FaultToleranceNotLicensedFault");
  
  private static final QName _ReconnectHostTask_QNAME = new QName("urn:vim25", "ReconnectHost_Task");
  
  private static final QName _SetClusterModeTask_QNAME = new QName("urn:vim25", "setClusterMode_Task");
  
  private static final QName _CannotAccessVmConfigFault_QNAME = new QName("urn:vim25", "CannotAccessVmConfigFault");
  
  private static final QName _ListFilesInGuest_QNAME = new QName("urn:vim25", "ListFilesInGuest");
  
  private static final QName _FetchSoftwarePackages_QNAME = new QName("urn:vim25", "fetchSoftwarePackages");
  
  private static final QName _HostNotReachableFault_QNAME = new QName("urn:vim25", "HostNotReachableFault");
  
  private static final QName _IscsiFaultVnicAlreadyBoundFault_QNAME = new QName("urn:vim25", "IscsiFaultVnicAlreadyBoundFault");
  
  private static final QName _UpdateVirtualSwitch_QNAME = new QName("urn:vim25", "UpdateVirtualSwitch");
  
  private static final QName _GetDefaultKmsCluster_QNAME = new QName("urn:vim25", "GetDefaultKmsCluster");
  
  private static final QName _LookupDvPortGroup_QNAME = new QName("urn:vim25", "LookupDvPortGroup");
  
  private static final QName _MountVmfsVolumeExTask_QNAME = new QName("urn:vim25", "MountVmfsVolumeEx_Task");
  
  private static final QName _InvalidResourcePoolStructureFaultFault_QNAME = new QName("urn:vim25", "InvalidResourcePoolStructureFaultFault");
  
  private static final QName _WaitForUpdates_QNAME = new QName("urn:vim25", "WaitForUpdates");
  
  private static final QName _InsufficientStandbyCpuResourceFault_QNAME = new QName("urn:vim25", "InsufficientStandbyCpuResourceFault");
  
  private static final QName _AcquireGenericServiceTicket_QNAME = new QName("urn:vim25", "AcquireGenericServiceTicket");
  
  private static final QName _InUseFeatureManipulationDisallowedFault_QNAME = new QName("urn:vim25", "InUseFeatureManipulationDisallowedFault");
  
  private static final QName _SetPublicKey_QNAME = new QName("urn:vim25", "SetPublicKey");
  
  private static final QName _InvalidAffinitySettingFaultFault_QNAME = new QName("urn:vim25", "InvalidAffinitySettingFaultFault");
  
  private static final QName _WillLoseHAProtectionFault_QNAME = new QName("urn:vim25", "WillLoseHAProtectionFault");
  
  private static final QName _UpdateVmfsUnmapBandwidth_QNAME = new QName("urn:vim25", "UpdateVmfsUnmapBandwidth");
  
  private static final QName _OvfUnsupportedDeviceExportFault_QNAME = new QName("urn:vim25", "OvfUnsupportedDeviceExportFault");
  
  private static final QName _AddDisksTask_QNAME = new QName("urn:vim25", "AddDisks_Task");
  
  private static final QName _RDMNotSupportedOnDatastoreFault_QNAME = new QName("urn:vim25", "RDMNotSupportedOnDatastoreFault");
  
  private static final QName _SetCryptoMode_QNAME = new QName("urn:vim25", "SetCryptoMode");
  
  private static final QName _ClusterEnterMaintenanceMode_QNAME = new QName("urn:vim25", "ClusterEnterMaintenanceMode");
  
  private static final QName _RemoveUser_QNAME = new QName("urn:vim25", "RemoveUser");
  
  private static final QName _CancelTask_QNAME = new QName("urn:vim25", "CancelTask");
  
  private static final QName _EnableSecondaryVMTask_QNAME = new QName("urn:vim25", "EnableSecondaryVM_Task");
  
  private static final QName _InsufficientCpuResourcesFaultFault_QNAME = new QName("urn:vim25", "InsufficientCpuResourcesFaultFault");
  
  private static final QName _DisallowedChangeByServiceFault_QNAME = new QName("urn:vim25", "DisallowedChangeByServiceFault");
  
  private static final QName _MigrationFaultFault_QNAME = new QName("urn:vim25", "MigrationFaultFault");
  
  private static final QName _CheckInstantCloneTask_QNAME = new QName("urn:vim25", "CheckInstantClone_Task");
  
  private static final QName _MissingPowerOffConfigurationFault_QNAME = new QName("urn:vim25", "MissingPowerOffConfigurationFault");
  
  private static final QName _QueryAssignedLicenses_QNAME = new QName("urn:vim25", "QueryAssignedLicenses");
  
  private static final QName _NamespaceFullFault_QNAME = new QName("urn:vim25", "NamespaceFullFault");
  
  private static final QName _CreateDirectory_QNAME = new QName("urn:vim25", "CreateDirectory");
  
  private static final QName _GuestOperationsUnavailableFault_QNAME = new QName("urn:vim25", "GuestOperationsUnavailableFault");
  
  private static final QName _DvsNotAuthorizedFault_QNAME = new QName("urn:vim25", "DvsNotAuthorizedFault");
  
  private static final QName _CpuIncompatible1ECXFault_QNAME = new QName("urn:vim25", "CpuIncompatible1ECXFault");
  
  private static final QName _RegisterVMTask_QNAME = new QName("urn:vim25", "RegisterVM_Task");
  
  private static final QName _Refresh_QNAME = new QName("urn:vim25", "Refresh");
  
  private static final QName _NotSupportedHostInClusterFault_QNAME = new QName("urn:vim25", "NotSupportedHostInClusterFault");
  
  private static final QName _HostAccessRestrictedToManagementServerFault_QNAME = new QName("urn:vim25", "HostAccessRestrictedToManagementServerFault");
  
  private static final QName _CreateDiagnosticPartition_QNAME = new QName("urn:vim25", "CreateDiagnosticPartition");
  
  private static final QName _SystemErrorFault_QNAME = new QName("urn:vim25", "SystemErrorFault");
  
  private static final QName _HostRetrieveVStorageInfrastructureObjectPolicy_QNAME = new QName("urn:vim25", "HostRetrieveVStorageInfrastructureObjectPolicy");
  
  private static final QName _QueryBoundVnics_QNAME = new QName("urn:vim25", "QueryBoundVnics");
  
  private static final QName _AttachDiskTask_QNAME = new QName("urn:vim25", "AttachDisk_Task");
  
  private static final QName _FindAssociatedProfile_QNAME = new QName("urn:vim25", "FindAssociatedProfile");
  
  private static final QName _PatchMetadataCorruptedFault_QNAME = new QName("urn:vim25", "PatchMetadataCorruptedFault");
  
  private static final QName _SecondaryVmAlreadyRegisteredFault_QNAME = new QName("urn:vim25", "SecondaryVmAlreadyRegisteredFault");
  
  private static final QName _InitiateFileTransferFromGuest_QNAME = new QName("urn:vim25", "InitiateFileTransferFromGuest");
  
  private static final QName _VsanIncompatibleDiskMappingFault_QNAME = new QName("urn:vim25", "VsanIncompatibleDiskMappingFault");
  
  private static final QName _AbandonHciWorkflow_QNAME = new QName("urn:vim25", "AbandonHciWorkflow");
  
  private static final QName _CreateIpPool_QNAME = new QName("urn:vim25", "CreateIpPool");
  
  private static final QName _InvalidVmStateFault_QNAME = new QName("urn:vim25", "InvalidVmStateFault");
  
  private static final QName _FileAlreadyExistsFault_QNAME = new QName("urn:vim25", "FileAlreadyExistsFault");
  
  private static final QName _EnableHyperThreading_QNAME = new QName("urn:vim25", "EnableHyperThreading");
  
  private static final QName _AttachScsiLun_QNAME = new QName("urn:vim25", "AttachScsiLun");
  
  private static final QName _HostConfigFaultFault_QNAME = new QName("urn:vim25", "HostConfigFaultFault");
  
  private static final QName _AreAlarmActionsEnabled_QNAME = new QName("urn:vim25", "AreAlarmActionsEnabled");
  
  private static final QName _RetrieveAnswerFile_QNAME = new QName("urn:vim25", "RetrieveAnswerFile");
  
  private static final QName _DatastoreExitMaintenanceModeTask_QNAME = new QName("urn:vim25", "DatastoreExitMaintenanceMode_Task");
  
  private static final QName _PostEvent_QNAME = new QName("urn:vim25", "PostEvent");
  
  private static final QName _OvfConsumerUndeclaredSectionFault_QNAME = new QName("urn:vim25", "OvfConsumerUndeclaredSectionFault");
  
  private static final QName _WaitForUpdatesEx_QNAME = new QName("urn:vim25", "WaitForUpdatesEx");
  
  private static final QName _UpdateKmsSignedCsrClientCert_QNAME = new QName("urn:vim25", "UpdateKmsSignedCsrClientCert");
  
  private static final QName _HostListVStorageObject_QNAME = new QName("urn:vim25", "HostListVStorageObject");
  
  private static final QName _StorageDrsCannotMoveManuallyPlacedVmFault_QNAME = new QName("urn:vim25", "StorageDrsCannotMoveManuallyPlacedVmFault");
  
  private static final QName _QueryVMotionCompatibility_QNAME = new QName("urn:vim25", "QueryVMotionCompatibility");
  
  private static final QName _EstimateStorageForConsolidateSnapshotsTask_QNAME = new QName("urn:vim25", "EstimateStorageForConsolidateSnapshots_Task");
  
  private static final QName _UnregisterExtension_QNAME = new QName("urn:vim25", "UnregisterExtension");
  
  private static final QName _DisableSecondaryVMTask_QNAME = new QName("urn:vim25", "DisableSecondaryVM_Task");
  
  private static final QName _RDMPointsToInaccessibleDiskFault_QNAME = new QName("urn:vim25", "RDMPointsToInaccessibleDiskFault");
  
  private static final QName _SnapshotNoChangeFault_QNAME = new QName("urn:vim25", "SnapshotNoChangeFault");
  
  private static final QName _RelocateVMTask_QNAME = new QName("urn:vim25", "RelocateVM_Task");
  
  private static final QName _OvfInvalidValueReferenceFault_QNAME = new QName("urn:vim25", "OvfInvalidValueReferenceFault");
  
  private static final QName _DefragmentVirtualDiskTask_QNAME = new QName("urn:vim25", "DefragmentVirtualDisk_Task");
  
  private static final QName _LargeRDMNotSupportedOnDatastoreFault_QNAME = new QName("urn:vim25", "LargeRDMNotSupportedOnDatastoreFault");
  
  private static final QName _EstimateDatabaseSize_QNAME = new QName("urn:vim25", "EstimateDatabaseSize");
  
  private static final QName _ListRegistryKeysInGuest_QNAME = new QName("urn:vim25", "ListRegistryKeysInGuest");
  
  private static final QName _GenerateSelfSignedClientCert_QNAME = new QName("urn:vim25", "GenerateSelfSignedClientCert");
  
  private static final QName _QueryModules_QNAME = new QName("urn:vim25", "QueryModules");
  
  private static final QName _RetrieveDynamicPassthroughInfo_QNAME = new QName("urn:vim25", "RetrieveDynamicPassthroughInfo");
  
  private static final QName _RefreshStorageDrsRecommendationsForPodTask_QNAME = new QName("urn:vim25", "RefreshStorageDrsRecommendationsForPod_Task");
  
  private static final QName _CreateVMTask_QNAME = new QName("urn:vim25", "CreateVM_Task");
  
  private static final QName _EvcManager_QNAME = new QName("urn:vim25", "EvcManager");
  
  private static final QName _InvalidDatastoreFault_QNAME = new QName("urn:vim25", "InvalidDatastoreFault");
  
  private static final QName _ConfigureDatastoreIORMTask_QNAME = new QName("urn:vim25", "ConfigureDatastoreIORM_Task");
  
  private static final QName _PerformVsanUpgradeTask_QNAME = new QName("urn:vim25", "PerformVsanUpgrade_Task");
  
  private static final QName _UpdateDateTimeConfig_QNAME = new QName("urn:vim25", "UpdateDateTimeConfig");
  
  private static final QName _AddAuthorizationRole_QNAME = new QName("urn:vim25", "AddAuthorizationRole");
  
  private static final QName _QueryConfigTarget_QNAME = new QName("urn:vim25", "QueryConfigTarget");
  
  private static final QName _InvalidSnapshotFormatFault_QNAME = new QName("urn:vim25", "InvalidSnapshotFormatFault");
  
  private static final QName _ValidateHostProfileCompositionTask_QNAME = new QName("urn:vim25", "ValidateHostProfileComposition_Task");
  
  private static final QName _QuerySystemUsers_QNAME = new QName("urn:vim25", "QuerySystemUsers");
  
  private static final QName _TooManyNativeCloneLevelsFault_QNAME = new QName("urn:vim25", "TooManyNativeCloneLevelsFault");
  
  private static final QName _HostIncompatibleForFaultToleranceFault_QNAME = new QName("urn:vim25", "HostIncompatibleForFaultToleranceFault");
  
  private static final QName _InstallIoFilterTask_QNAME = new QName("urn:vim25", "InstallIoFilter_Task");
  
  private static final QName _WakeOnLanNotSupportedByVmotionNICFault_QNAME = new QName("urn:vim25", "WakeOnLanNotSupportedByVmotionNICFault");
  
  private static final QName _NamespaceLimitReachedFault_QNAME = new QName("urn:vim25", "NamespaceLimitReachedFault");
  
  private static final QName _StorageDrsCannotMoveSharedDiskFault_QNAME = new QName("urn:vim25", "StorageDrsCannotMoveSharedDiskFault");
  
  private static final QName _UnsupportedDatastoreFault_QNAME = new QName("urn:vim25", "UnsupportedDatastoreFault");
  
  private static final QName _UpdateInternetScsiDigestProperties_QNAME = new QName("urn:vim25", "UpdateInternetScsiDigestProperties");
  
  private static final QName _RetrieveObjectScheduledTask_QNAME = new QName("urn:vim25", "RetrieveObjectScheduledTask");
  
  private static final QName _ExpiredAddonLicenseFault_QNAME = new QName("urn:vim25", "ExpiredAddonLicenseFault");
  
  private static final QName _LoginByToken_QNAME = new QName("urn:vim25", "LoginByToken");
  
  private static final QName _SnapshotIncompatibleDeviceInVmFault_QNAME = new QName("urn:vim25", "SnapshotIncompatibleDeviceInVmFault");
  
  private static final QName _UpdateLocalSwapDatastore_QNAME = new QName("urn:vim25", "UpdateLocalSwapDatastore");
  
  private static final QName _UnmountDiskMappingTask_QNAME = new QName("urn:vim25", "UnmountDiskMapping_Task");
  
  private static final QName _QueryUnownedFiles_QNAME = new QName("urn:vim25", "QueryUnownedFiles");
  
  private static final QName _DasConfigFaultFault_QNAME = new QName("urn:vim25", "DasConfigFaultFault");
  
  private static final QName _StorageDrsCannotMoveVmWithNoFilesInLayoutFault_QNAME = new QName("urn:vim25", "StorageDrsCannotMoveVmWithNoFilesInLayoutFault");
  
  private static final QName _OvfFaultFault_QNAME = new QName("urn:vim25", "OvfFaultFault");
  
  private static final QName _TooManyConsecutiveOverridesFault_QNAME = new QName("urn:vim25", "TooManyConsecutiveOverridesFault");
  
  private static final QName _AllocateIpv4Address_QNAME = new QName("urn:vim25", "AllocateIpv4Address");
  
  private static final QName _AdminDisabledFault_QNAME = new QName("urn:vim25", "AdminDisabledFault");
  
  private static final QName _MultipleCertificatesVerifyFaultFault_QNAME = new QName("urn:vim25", "MultipleCertificatesVerifyFaultFault");
  
  private static final QName _VMINotSupportedFault_QNAME = new QName("urn:vim25", "VMINotSupportedFault");
  
  private static final QName _ApplyStorageDrsRecommendationToPodTask_QNAME = new QName("urn:vim25", "ApplyStorageDrsRecommendationToPod_Task");
  
  private static final QName _AddInternetScsiStaticTargets_QNAME = new QName("urn:vim25", "AddInternetScsiStaticTargets");
  
  private static final QName _CustomizationSpecItemToXml_QNAME = new QName("urn:vim25", "CustomizationSpecItemToXml");
  
  private static final QName _MigrationNotReadyFault_QNAME = new QName("urn:vim25", "MigrationNotReadyFault");
  
  private static final QName _DatabaseErrorFault_QNAME = new QName("urn:vim25", "DatabaseErrorFault");
  
  private static final QName _QueryVmfsConfigOption_QNAME = new QName("urn:vim25", "QueryVmfsConfigOption");
  
  private static final QName _ExpandVmfsDatastore_QNAME = new QName("urn:vim25", "ExpandVmfsDatastore");
  
  private static final QName _FailToLockFaultToleranceVMsFault_QNAME = new QName("urn:vim25", "FailToLockFaultToleranceVMsFault");
  
  private static final QName _RefreshFirewall_QNAME = new QName("urn:vim25", "RefreshFirewall");
  
  private static final QName _MissingControllerFault_QNAME = new QName("urn:vim25", "MissingControllerFault");
  
  private static final QName _IscsiFaultFault_QNAME = new QName("urn:vim25", "IscsiFaultFault");
  
  private static final QName _UnmarkServiceProviderEntities_QNAME = new QName("urn:vim25", "UnmarkServiceProviderEntities");
  
  private static final QName _UpdateInternetScsiIPProperties_QNAME = new QName("urn:vim25", "UpdateInternetScsiIPProperties");
  
  private static final QName _BindVnic_QNAME = new QName("urn:vim25", "BindVnic");
  
  private static final QName _FaultToleranceNotSameBuildFault_QNAME = new QName("urn:vim25", "FaultToleranceNotSameBuildFault");
  
  private static final QName _OperationDisabledByGuestFault_QNAME = new QName("urn:vim25", "OperationDisabledByGuestFault");
  
  private static final QName _RemoveFilterEntities_QNAME = new QName("urn:vim25", "RemoveFilterEntities");
  
  private static final QName _CreateResourcePool_QNAME = new QName("urn:vim25", "CreateResourcePool");
  
  private static final QName _CreateDiskTask_QNAME = new QName("urn:vim25", "CreateDisk_Task");
  
  private static final QName _HostVStorageObjectDeleteSnapshotTask_QNAME = new QName("urn:vim25", "HostVStorageObjectDeleteSnapshot_Task");
  
  private static final QName _InitiateFileTransferToGuest_QNAME = new QName("urn:vim25", "InitiateFileTransferToGuest");
  
  private static final QName _MultiWriterNotSupportedFault_QNAME = new QName("urn:vim25", "MultiWriterNotSupportedFault");
  
  private static final QName _InvalidPropertyFault_QNAME = new QName("urn:vim25", "InvalidPropertyFault");
  
  private static final QName _OvfPropertyQualifierDuplicateFault_QNAME = new QName("urn:vim25", "OvfPropertyQualifierDuplicateFault");
  
  private static final QName _InsufficientResourcesFaultFault_QNAME = new QName("urn:vim25", "InsufficientResourcesFaultFault");
  
  private static final QName _PowerOnMultiVMTask_QNAME = new QName("urn:vim25", "PowerOnMultiVM_Task");
  
  private static final QName _UpdateInternetScsiDiscoveryProperties_QNAME = new QName("urn:vim25", "UpdateInternetScsiDiscoveryProperties");
  
  private static final QName _RetrieveDiskPartitionInfo_QNAME = new QName("urn:vim25", "RetrieveDiskPartitionInfo");
  
  private static final QName _ReadPreviousTasks_QNAME = new QName("urn:vim25", "ReadPreviousTasks");
  
  private static final QName _StartProgramInGuest_QNAME = new QName("urn:vim25", "StartProgramInGuest");
  
  private static final QName _AllocateIpv6Address_QNAME = new QName("urn:vim25", "AllocateIpv6Address");
  
  private static final QName _LicenseDowngradeDisallowedFault_QNAME = new QName("urn:vim25", "LicenseDowngradeDisallowedFault");
  
  private static final QName _ListKmsClusters_QNAME = new QName("urn:vim25", "ListKmsClusters");
  
  private static final QName _CheckCustomizationSpec_QNAME = new QName("urn:vim25", "CheckCustomizationSpec");
  
  private static final QName _AcquireTicket_QNAME = new QName("urn:vim25", "AcquireTicket");
  
  private static final QName _UpdatePassthruConfig_QNAME = new QName("urn:vim25", "UpdatePassthruConfig");
  
  private static final QName _UnsupportedVmxLocationFault_QNAME = new QName("urn:vim25", "UnsupportedVmxLocationFault");
  
  private static final QName _ValidateHost_QNAME = new QName("urn:vim25", "ValidateHost");
  
  private static final QName _RetrieveHostCustomizations_QNAME = new QName("urn:vim25", "RetrieveHostCustomizations");
  
  private static final QName _SetTaskState_QNAME = new QName("urn:vim25", "SetTaskState");
  
  private static final QName _NasVolumeNotMountedFault_QNAME = new QName("urn:vim25", "NasVolumeNotMountedFault");
  
  private static final QName _OperationDisallowedOnHostFault_QNAME = new QName("urn:vim25", "OperationDisallowedOnHostFault");
  
  private static final QName _AgentInstallFailedFault_QNAME = new QName("urn:vim25", "AgentInstallFailedFault");
  
  private static final QName _UpdateHostCustomizationsTask_QNAME = new QName("urn:vim25", "UpdateHostCustomizations_Task");
  
  private static final QName _ReplicationNotSupportedOnHostFault_QNAME = new QName("urn:vim25", "ReplicationNotSupportedOnHostFault");
  
  private static final QName _QueryProductLockerLocation_QNAME = new QName("urn:vim25", "QueryProductLockerLocation");
  
  private static final QName _QueryCompatibleHostForExistingDvs_QNAME = new QName("urn:vim25", "QueryCompatibleHostForExistingDvs");
  
  private static final QName _HostRemoveVFlashResource_QNAME = new QName("urn:vim25", "HostRemoveVFlashResource");
  
  private static final QName _InvalidCAMServerFault_QNAME = new QName("urn:vim25", "InvalidCAMServerFault");
  
  private static final QName _RetrieveServiceProviderEntities_QNAME = new QName("urn:vim25", "RetrieveServiceProviderEntities");
  
  private static final QName _ToolsImageSignatureCheckFailedFault_QNAME = new QName("urn:vim25", "ToolsImageSignatureCheckFailedFault");
  
  private static final QName _CreateFilter_QNAME = new QName("urn:vim25", "CreateFilter");
  
  private static final QName _QueryTargetCapabilities_QNAME = new QName("urn:vim25", "QueryTargetCapabilities");
  
  private static final QName _CreateSecondaryVMExTask_QNAME = new QName("urn:vim25", "CreateSecondaryVMEx_Task");
  
  private static final QName _UpdateVAppConfig_QNAME = new QName("urn:vim25", "UpdateVAppConfig");
  
  private static final QName _EnableAlarmActions_QNAME = new QName("urn:vim25", "EnableAlarmActions");
  
  private static final QName _UpdateNetworkConfig_QNAME = new QName("urn:vim25", "UpdateNetworkConfig");
  
  private static final QName _NoCompatibleDatastoreFault_QNAME = new QName("urn:vim25", "NoCompatibleDatastoreFault");
  
  private static final QName _MoveDVPortTask_QNAME = new QName("urn:vim25", "MoveDVPort_Task");
  
  private static final QName _VmWwnConflictFault_QNAME = new QName("urn:vim25", "VmWwnConflictFault");
  
  private static final QName _VirtualDiskModeNotSupportedFault_QNAME = new QName("urn:vim25", "VirtualDiskModeNotSupportedFault");
  
  private static final QName _DatacenterMismatchFault_QNAME = new QName("urn:vim25", "DatacenterMismatchFault");
  
  private static final QName _SearchDatastoreSubFoldersTask_QNAME = new QName("urn:vim25", "SearchDatastoreSubFolders_Task");
  
  private static final QName _CreatePropertyCollector_QNAME = new QName("urn:vim25", "CreatePropertyCollector");
  
  private static final QName _DestroyProfile_QNAME = new QName("urn:vim25", "DestroyProfile");
  
  private static final QName _ReplicationVmFaultFault_QNAME = new QName("urn:vim25", "ReplicationVmFaultFault");
  
  private static final QName _UpdateHppMultipathLunPolicy_QNAME = new QName("urn:vim25", "UpdateHppMultipathLunPolicy");
  
  private static final QName _UpgradeVmfs_QNAME = new QName("urn:vim25", "UpgradeVmfs");
  
  private static final QName _QueryIoFilterInfo_QNAME = new QName("urn:vim25", "QueryIoFilterInfo");
  
  private static final QName _OvfConsumerCommunicationErrorFault_QNAME = new QName("urn:vim25", "OvfConsumerCommunicationErrorFault");
  
  private static final QName _VirtualDiskBlocksNotFullyProvisionedFault_QNAME = new QName("urn:vim25", "VirtualDiskBlocksNotFullyProvisionedFault");
  
  private static final QName _ReconfigureDVPortTask_QNAME = new QName("urn:vim25", "ReconfigureDVPort_Task");
  
  private static final QName _MarkAsLocalTask_QNAME = new QName("urn:vim25", "MarkAsLocal_Task");
  
  private static final QName _MergePermissions_QNAME = new QName("urn:vim25", "MergePermissions");
  
  private static final QName _OvfToXmlUnsupportedElementFault_QNAME = new QName("urn:vim25", "OvfToXmlUnsupportedElementFault");
  
  private static final QName _LogUserEvent_QNAME = new QName("urn:vim25", "LogUserEvent");
  
  private static final QName _AcquireMksTicket_QNAME = new QName("urn:vim25", "AcquireMksTicket");
  
  private static final QName _ConfigureLicenseSource_QNAME = new QName("urn:vim25", "ConfigureLicenseSource");
  
  private static final QName _RemoveInternetScsiSendTargets_QNAME = new QName("urn:vim25", "RemoveInternetScsiSendTargets");
  
  private static final QName _HostSpecificationOperationFailedFault_QNAME = new QName("urn:vim25", "HostSpecificationOperationFailedFault");
  
  private static final QName _VsanFaultFault_QNAME = new QName("urn:vim25", "VsanFaultFault");
  
  private static final QName _CustomizationFaultFault_QNAME = new QName("urn:vim25", "CustomizationFaultFault");
  
  private static final QName _SetRegistryValueInGuest_QNAME = new QName("urn:vim25", "SetRegistryValueInGuest");
  
  private static final QName _NamespaceWriteProtectedFault_QNAME = new QName("urn:vim25", "NamespaceWriteProtectedFault");
  
  private static final QName _StopService_QNAME = new QName("urn:vim25", "StopService");
  
  private static final QName _InsufficientStandbyResourceFault_QNAME = new QName("urn:vim25", "InsufficientStandbyResourceFault");
  
  private static final QName _OvfMissingElementFault_QNAME = new QName("urn:vim25", "OvfMissingElementFault");
  
  private static final QName _FindByIp_QNAME = new QName("urn:vim25", "FindByIp");
  
  private static final QName _FaultToleranceNeedsThickDiskFault_QNAME = new QName("urn:vim25", "FaultToleranceNeedsThickDiskFault");
  
  private static final QName _CreateGroup_QNAME = new QName("urn:vim25", "CreateGroup");
  
  private static final QName _QueryDvsConfigTarget_QNAME = new QName("urn:vim25", "QueryDvsConfigTarget");
  
  private static final QName _OvfUnknownEntityFault_QNAME = new QName("urn:vim25", "OvfUnknownEntityFault");
  
  private static final QName _DisableRuleset_QNAME = new QName("urn:vim25", "DisableRuleset");
  
  private static final QName _AcquireCredentialsInGuest_QNAME = new QName("urn:vim25", "AcquireCredentialsInGuest");
  
  private static final QName _RetrieveHostSpecification_QNAME = new QName("urn:vim25", "RetrieveHostSpecification");
  
  private static final QName _ShutdownGuest_QNAME = new QName("urn:vim25", "ShutdownGuest");
  
  private static final QName _RetrieveFreeEpcMemory_QNAME = new QName("urn:vim25", "RetrieveFreeEpcMemory");
  
  private static final QName _HostScheduleReconcileDatastoreInventory_QNAME = new QName("urn:vim25", "HostScheduleReconcileDatastoreInventory");
  
  private static final QName _UpgradeToolsTask_QNAME = new QName("urn:vim25", "UpgradeTools_Task");
  
  private static final QName _ImportHostAddFailureFault_QNAME = new QName("urn:vim25", "ImportHostAddFailureFault");
  
  private static final QName _DestroyPropertyFilter_QNAME = new QName("urn:vim25", "DestroyPropertyFilter");
  
  private static final QName _CreateNasDatastore_QNAME = new QName("urn:vim25", "CreateNasDatastore");
  
  private static final QName _PowerOnFtSecondaryTimedoutFault_QNAME = new QName("urn:vim25", "PowerOnFtSecondaryTimedoutFault");
  
  private static final QName _VMotionAcrossNetworkNotSupportedFault_QNAME = new QName("urn:vim25", "VMotionAcrossNetworkNotSupportedFault");
  
  private static final QName _NetworkInaccessibleFault_QNAME = new QName("urn:vim25", "NetworkInaccessibleFault");
  
  private static final QName _ChangePassword_QNAME = new QName("urn:vim25", "ChangePassword");
  
  private static final QName _OvfDiskOrderConstraintFault_QNAME = new QName("urn:vim25", "OvfDiskOrderConstraintFault");
  
  private static final QName _ThirdPartyLicenseAssignmentFailedFault_QNAME = new QName("urn:vim25", "ThirdPartyLicenseAssignmentFailedFault");
  
  private static final QName _UpdateExtension_QNAME = new QName("urn:vim25", "UpdateExtension");
  
  private static final QName _GetResourceUsage_QNAME = new QName("urn:vim25", "GetResourceUsage");
  
  private static final QName _VspanDestPortConflictFault_QNAME = new QName("urn:vim25", "VspanDestPortConflictFault");
  
  private static final QName _CancelStorageDrsRecommendation_QNAME = new QName("urn:vim25", "CancelStorageDrsRecommendation");
  
  private static final QName _QueryVsanStatistics_QNAME = new QName("urn:vim25", "QueryVsanStatistics");
  
  private static final QName _RetrieveKmipServersStatusTask_QNAME = new QName("urn:vim25", "RetrieveKmipServersStatus_Task");
  
  private static final QName _PatchMetadataNotFoundFault_QNAME = new QName("urn:vim25", "PatchMetadataNotFoundFault");
  
  private static final QName _RefreshDateTimeSystem_QNAME = new QName("urn:vim25", "RefreshDateTimeSystem");
  
  private static final QName _TurnOffFaultToleranceForVMTask_QNAME = new QName("urn:vim25", "TurnOffFaultToleranceForVM_Task");
  
  private static final QName _RemoveScheduledTask_QNAME = new QName("urn:vim25", "RemoveScheduledTask");
  
  private static final QName _NoAvailableIpFault_QNAME = new QName("urn:vim25", "NoAvailableIpFault");
  
  private static final QName _Logout_QNAME = new QName("urn:vim25", "Logout");
  
  private static final QName _ChangeOwner_QNAME = new QName("urn:vim25", "ChangeOwner");
  
  private static final QName _QueryOptions_QNAME = new QName("urn:vim25", "QueryOptions");
  
  private static final QName _RestrictedByAdministratorFault_QNAME = new QName("urn:vim25", "RestrictedByAdministratorFault");
  
  private static final QName _FcoeFaultFault_QNAME = new QName("urn:vim25", "FcoeFaultFault");
  
  private static final QName _IscsiFaultVnicNotBoundFault_QNAME = new QName("urn:vim25", "IscsiFaultVnicNotBoundFault");
  
  private static final QName _StorageDrsHmsMoveInProgressFault_QNAME = new QName("urn:vim25", "StorageDrsHmsMoveInProgressFault");
  
  private static final QName _DestroyCollector_QNAME = new QName("urn:vim25", "DestroyCollector");
  
  private static final QName _NotSupportedHostForVsanFault_QNAME = new QName("urn:vim25", "NotSupportedHostForVsanFault");
  
  private static final QName _CpuIncompatible81EDXFault_QNAME = new QName("urn:vim25", "CpuIncompatible81EDXFault");
  
  private static final QName _DisconnectedHostsBlockingEVCFault_QNAME = new QName("urn:vim25", "DisconnectedHostsBlockingEVCFault");
  
  private static final QName _DeleteSnapshotTask_QNAME = new QName("urn:vim25", "DeleteSnapshot_Task");
  
  private static final QName _SoftRuleVioCorrectionDisallowedFault_QNAME = new QName("urn:vim25", "SoftRuleVioCorrectionDisallowedFault");
  
  private static final QName _QueryProviderList_QNAME = new QName("urn:vim25", "QueryProviderList");
  
  private static final QName _OvfImportFailedFault_QNAME = new QName("urn:vim25", "OvfImportFailedFault");
  
  private static final QName _DvsApplyOperationFaultFault_QNAME = new QName("urn:vim25", "DvsApplyOperationFaultFault");
  
  private static final QName _NasConfigFaultFault_QNAME = new QName("urn:vim25", "NasConfigFaultFault");
  
  private static final QName _TooManyNativeClonesOnFileFault_QNAME = new QName("urn:vim25", "TooManyNativeClonesOnFileFault");
  
  private static final QName _UpdateDnsConfig_QNAME = new QName("urn:vim25", "UpdateDnsConfig");
  
  private static final QName _RemoveDiskMappingTask_QNAME = new QName("urn:vim25", "RemoveDiskMapping_Task");
  
  private static final QName _UpdateSystemResources_QNAME = new QName("urn:vim25", "UpdateSystemResources");
  
  private static final QName _SetMultipathLunPolicy_QNAME = new QName("urn:vim25", "SetMultipathLunPolicy");
  
  private static final QName _ReconfigureSnmpAgent_QNAME = new QName("urn:vim25", "ReconfigureSnmpAgent");
  
  private static final QName _ReconfigureHostForDASTask_QNAME = new QName("urn:vim25", "ReconfigureHostForDAS_Task");
  
  private static final QName _CreateRegistryKeyInGuest_QNAME = new QName("urn:vim25", "CreateRegistryKeyInGuest");
  
  private static final QName _DiskHasPartitionsFault_QNAME = new QName("urn:vim25", "DiskHasPartitionsFault");
  
  private static final QName _NotSupportedHostInDvsFault_QNAME = new QName("urn:vim25", "NotSupportedHostInDvsFault");
  
  private static final QName _VmSmpFaultToleranceTooManyVMsOnHostFault_QNAME = new QName("urn:vim25", "VmSmpFaultToleranceTooManyVMsOnHostFault");
  
  private static final QName _ConsolidateVMDisksTask_QNAME = new QName("urn:vim25", "ConsolidateVMDisks_Task");
  
  private static final QName _CheckAnswerFileStatusTask_QNAME = new QName("urn:vim25", "CheckAnswerFileStatus_Task");
  
  private static final QName _OvfCpuCompatibilityFault_QNAME = new QName("urn:vim25", "OvfCpuCompatibilityFault");
  
  private static final QName _GuestRegistryKeyParentVolatileFault_QNAME = new QName("urn:vim25", "GuestRegistryKeyParentVolatileFault");
  
  private static final QName _RemoveAuthorizationRole_QNAME = new QName("urn:vim25", "RemoveAuthorizationRole");
  
  private static final QName _StorageDrsCannotMoveVmInUserFolderFault_QNAME = new QName("urn:vim25", "StorageDrsCannotMoveVmInUserFolderFault");
  
  private static final QName _DestroyNetwork_QNAME = new QName("urn:vim25", "DestroyNetwork");
  
  private static final QName _UpdateInternetScsiAuthenticationProperties_QNAME = new QName("urn:vim25", "UpdateInternetScsiAuthenticationProperties");
  
  private static final QName _InvalidDasConfigArgumentFault_QNAME = new QName("urn:vim25", "InvalidDasConfigArgumentFault");
  
  private static final QName _HostCloneVStorageObjectTask_QNAME = new QName("urn:vim25", "HostCloneVStorageObject_Task");
  
  private static final QName _AutoStartPowerOff_QNAME = new QName("urn:vim25", "AutoStartPowerOff");
  
  private static final QName _NonHomeRDMVMotionNotSupportedFault_QNAME = new QName("urn:vim25", "NonHomeRDMVMotionNotSupportedFault");
  
  private static final QName _OvfUnsupportedTypeFault_QNAME = new QName("urn:vim25", "OvfUnsupportedTypeFault");
  
  private static final QName _ConfigureHostCacheTask_QNAME = new QName("urn:vim25", "ConfigureHostCache_Task");
  
  private static final QName _RetrieveDasAdvancedRuntimeInfo_QNAME = new QName("urn:vim25", "RetrieveDasAdvancedRuntimeInfo");
  
  private static final QName _AutoStartPowerOn_QNAME = new QName("urn:vim25", "AutoStartPowerOn");
  
  private static final QName _RetrieveVStorageObjectAssociations_QNAME = new QName("urn:vim25", "RetrieveVStorageObjectAssociations");
  
  private static final QName _InstallHostPatchV2Task_QNAME = new QName("urn:vim25", "InstallHostPatchV2_Task");
  
  private static final QName _ClearSystemEventLog_QNAME = new QName("urn:vim25", "ClearSystemEventLog");
  
  private static final QName _OvfUnknownDeviceFault_QNAME = new QName("urn:vim25", "OvfUnknownDeviceFault");
  
  private static final QName _DecodeLicense_QNAME = new QName("urn:vim25", "DecodeLicense");
  
  private static final QName _CreateTask_QNAME = new QName("urn:vim25", "CreateTask");
  
  private static final QName _ConfigureDatastorePrincipal_QNAME = new QName("urn:vim25", "ConfigureDatastorePrincipal");
  
  private static final QName _GuestAuthenticationChallengeFault_QNAME = new QName("urn:vim25", "GuestAuthenticationChallengeFault");
  
  private static final QName _GatewayToHostConnectFaultFault_QNAME = new QName("urn:vim25", "GatewayToHostConnectFaultFault");
  
  private static final QName _RefreshServices_QNAME = new QName("urn:vim25", "RefreshServices");
  
  private static final QName _IncompatibleHostForVmReplicationFault_QNAME = new QName("urn:vim25", "IncompatibleHostForVmReplicationFault");
  
  private static final QName _OvfDuplicatedElementBoundaryFault_QNAME = new QName("urn:vim25", "OvfDuplicatedElementBoundaryFault");
  
  private static final QName _NumVirtualCpusExceedsLimitFault_QNAME = new QName("urn:vim25", "NumVirtualCpusExceedsLimitFault");
  
  private static final QName _OvfNetworkMappingNotSupportedFault_QNAME = new QName("urn:vim25", "OvfNetworkMappingNotSupportedFault");
  
  private static final QName _RetrieveEntityPermissions_QNAME = new QName("urn:vim25", "RetrieveEntityPermissions");
  
  private static final QName _InvalidDrsBehaviorForFtVmFault_QNAME = new QName("urn:vim25", "InvalidDrsBehaviorForFtVmFault");
  
  private static final QName _StorageDrsCannotMoveVmWithMountedCDROMFault_QNAME = new QName("urn:vim25", "StorageDrsCannotMoveVmWithMountedCDROMFault");
  
  private static final QName _EnableMultipathPath_QNAME = new QName("urn:vim25", "EnableMultipathPath");
  
  private static final QName _RemoveAssignedLicense_QNAME = new QName("urn:vim25", "RemoveAssignedLicense");
  
  private static final QName _CreateInventoryView_QNAME = new QName("urn:vim25", "CreateInventoryView");
  
  private static final QName _ApplyHostConfigTask_QNAME = new QName("urn:vim25", "ApplyHostConfig_Task");
  
  private static final QName _ChangeAccessMode_QNAME = new QName("urn:vim25", "ChangeAccessMode");
  
  private static final QName _OvfDuplicatedPropertyIdImportFault_QNAME = new QName("urn:vim25", "OvfDuplicatedPropertyIdImportFault");
  
  private static final QName _SnapshotFaultFault_QNAME = new QName("urn:vim25", "SnapshotFaultFault");
  
  private static final QName _ComputeDiskPartitionInfo_QNAME = new QName("urn:vim25", "ComputeDiskPartitionInfo");
  
  private static final QName _AddMonitoredEntities_QNAME = new QName("urn:vim25", "AddMonitoredEntities");
  
  private static final QName _OvfNoSupportedHardwareFamilyFault_QNAME = new QName("urn:vim25", "OvfNoSupportedHardwareFamilyFault");
  
  private static final QName _ShutdownHostTask_QNAME = new QName("urn:vim25", "ShutdownHost_Task");
  
  private static final QName _NotEnoughLogicalCpusFault_QNAME = new QName("urn:vim25", "NotEnoughLogicalCpusFault");
  
  private static final QName _MissingWindowsCustResourcesFault_QNAME = new QName("urn:vim25", "MissingWindowsCustResourcesFault");
  
  private static final QName _GatewayNotReachableFault_QNAME = new QName("urn:vim25", "GatewayNotReachableFault");
  
  private static final QName _VmConfigFaultFault_QNAME = new QName("urn:vim25", "VmConfigFaultFault");
  
  private static final QName _SessionIsActive_QNAME = new QName("urn:vim25", "SessionIsActive");
  
  private static final QName _DisableEvcModeTask_QNAME = new QName("urn:vim25", "DisableEvcMode_Task");
  
  private static final QName _CannotDisableSnapshotFault_QNAME = new QName("urn:vim25", "CannotDisableSnapshotFault");
  
  private static final QName _DeviceUnsupportedForVmPlatformFault_QNAME = new QName("urn:vim25", "DeviceUnsupportedForVmPlatformFault");
  
  private static final QName _UnassignUserFromGroup_QNAME = new QName("urn:vim25", "UnassignUserFromGroup");
  
  private static final QName _VAppTaskInProgressFault_QNAME = new QName("urn:vim25", "VAppTaskInProgressFault");
  
  private static final QName _DVSManagerLookupDvPortGroup_QNAME = new QName("urn:vim25", "DVSManagerLookupDvPortGroup");
  
  private static final QName _ReleaseIpAllocation_QNAME = new QName("urn:vim25", "ReleaseIpAllocation");
  
  private static final QName _HostUpdateVStorageObjectMetadataTask_QNAME = new QName("urn:vim25", "HostUpdateVStorageObjectMetadata_Task");
  
  private static final QName _DvsFaultFault_QNAME = new QName("urn:vim25", "DvsFaultFault");
  
  private static final QName _OvfConstraintFault_QNAME = new QName("urn:vim25", "OvfConstraintFault");
  
  private static final QName _UpdateNetworkResourcePool_QNAME = new QName("urn:vim25", "UpdateNetworkResourcePool");
  
  private static final QName _GatewayOperationRefusedFault_QNAME = new QName("urn:vim25", "GatewayOperationRefusedFault");
  
  private static final QName _HostRenameVStorageObject_QNAME = new QName("urn:vim25", "HostRenameVStorageObject");
  
  private static final QName _OvfConsumerInvalidSectionFault_QNAME = new QName("urn:vim25", "OvfConsumerInvalidSectionFault");
  
  private static final QName _QueryFilterEntities_QNAME = new QName("urn:vim25", "QueryFilterEntities");
  
  private static final QName _GenerateConfigTaskList_QNAME = new QName("urn:vim25", "GenerateConfigTaskList");
  
  private static final QName _RemoveSmartCardTrustAnchor_QNAME = new QName("urn:vim25", "RemoveSmartCardTrustAnchor");
  
  private static final QName _ToolsImageCopyFailedFault_QNAME = new QName("urn:vim25", "ToolsImageCopyFailedFault");
  
  private static final QName _EnableAlarm_QNAME = new QName("urn:vim25", "EnableAlarm");
  
  private static final QName _OvfUnsupportedSubTypeFault_QNAME = new QName("urn:vim25", "OvfUnsupportedSubTypeFault");
  
  private static final QName _HostVStorageObjectRevertTask_QNAME = new QName("urn:vim25", "HostVStorageObjectRevert_Task");
  
  private static final QName _CannotAccessLocalSourceFault_QNAME = new QName("urn:vim25", "CannotAccessLocalSourceFault");
  
  private static final QName _UpdateVsanTask_QNAME = new QName("urn:vim25", "UpdateVsan_Task");
  
  private static final QName _ExportProfile_QNAME = new QName("urn:vim25", "ExportProfile");
  
  private static final QName _PostHealthUpdates_QNAME = new QName("urn:vim25", "PostHealthUpdates");
  
  private static final QName _CannotChangeDrsBehaviorForFtSecondaryFault_QNAME = new QName("urn:vim25", "CannotChangeDrsBehaviorForFtSecondaryFault");
  
  private static final QName _InvalidArgumentFault_QNAME = new QName("urn:vim25", "InvalidArgumentFault");
  
  private static final QName _CurrentTime_QNAME = new QName("urn:vim25", "CurrentTime");
  
  private static final QName _QueryTpmAttestationReport_QNAME = new QName("urn:vim25", "QueryTpmAttestationReport");
  
  private static final QName _ListGuestMappedAliases_QNAME = new QName("urn:vim25", "ListGuestMappedAliases");
  
  private static final QName _QueryUsedVlanIdInDvs_QNAME = new QName("urn:vim25", "QueryUsedVlanIdInDvs");
  
  private static final QName _TooManyConcurrentNativeClonesFault_QNAME = new QName("urn:vim25", "TooManyConcurrentNativeClonesFault");
  
  private static final QName _InvalidRequestFault_QNAME = new QName("urn:vim25", "InvalidRequestFault");
  
  private static final QName _QueryFilterName_QNAME = new QName("urn:vim25", "QueryFilterName");
  
  private static final QName _RegisterChildVMTask_QNAME = new QName("urn:vim25", "RegisterChildVM_Task");
  
  private static final QName _QueryResourceConfigOption_QNAME = new QName("urn:vim25", "QueryResourceConfigOption");
  
  private static final QName _NotADirectoryFault_QNAME = new QName("urn:vim25", "NotADirectoryFault");
  
  private static final QName _UpdateAuthorizationRole_QNAME = new QName("urn:vim25", "UpdateAuthorizationRole");
  
  private static final QName _UpdateHostSpecification_QNAME = new QName("urn:vim25", "UpdateHostSpecification");
  
  private static final QName _InvalidEditionLicenseFault_QNAME = new QName("urn:vim25", "InvalidEditionLicenseFault");
  
  private static final QName _RemoveEntityPermission_QNAME = new QName("urn:vim25", "RemoveEntityPermission");
  
  private static final QName _NotEnoughLicensesFault_QNAME = new QName("urn:vim25", "NotEnoughLicensesFault");
  
  private static final QName _VmHostAffinityRuleViolationFault_QNAME = new QName("urn:vim25", "VmHostAffinityRuleViolationFault");
  
  private static final QName _ActiveDirectoryFaultFault_QNAME = new QName("urn:vim25", "ActiveDirectoryFaultFault");
  
  private static final QName _NoPermissionFault_QNAME = new QName("urn:vim25", "NoPermissionFault");
  
  private static final QName _PatchAlreadyInstalledFault_QNAME = new QName("urn:vim25", "PatchAlreadyInstalledFault");
  
  private static final QName _DeselectVnicForNicType_QNAME = new QName("urn:vim25", "DeselectVnicForNicType");
  
  private static final QName _DestroyDatastore_QNAME = new QName("urn:vim25", "DestroyDatastore");
  
  private static final QName _QueryNetworkHint_QNAME = new QName("urn:vim25", "QueryNetworkHint");
  
  private static final QName _DisableFeature_QNAME = new QName("urn:vim25", "DisableFeature");
  
  private static final QName _NotSupportedHostForVmemFileFault_QNAME = new QName("urn:vim25", "NotSupportedHostForVmemFileFault");
  
  private static final QName _GenericDrsFaultFault_QNAME = new QName("urn:vim25", "GenericDrsFaultFault");
  
  private static final QName _HeterogenousHostsBlockingEVCFault_QNAME = new QName("urn:vim25", "HeterogenousHostsBlockingEVCFault");
  
  private static final QName _InvalidDeviceBackingFault_QNAME = new QName("urn:vim25", "InvalidDeviceBackingFault");
  
  private static final QName _QueryConfigOptionEx_QNAME = new QName("urn:vim25", "QueryConfigOptionEx");
  
  private static final QName _HasPrivilegeOnEntities_QNAME = new QName("urn:vim25", "HasPrivilegeOnEntities");
  
  private static final QName _UnregisterVM_QNAME = new QName("urn:vim25", "UnregisterVM");
  
  private static final QName _CloseInventoryViewFolder_QNAME = new QName("urn:vim25", "CloseInventoryViewFolder");
  
  private static final QName _CreateAlarm_QNAME = new QName("urn:vim25", "CreateAlarm");
  
  private static final QName _InvalidNasCredentialsFault_QNAME = new QName("urn:vim25", "InvalidNasCredentialsFault");
  
  private static final QName _QueryVirtualDiskGeometry_QNAME = new QName("urn:vim25", "QueryVirtualDiskGeometry");
  
  private static final QName _AbdicateDomOwnership_QNAME = new QName("urn:vim25", "AbdicateDomOwnership");
  
  private static final QName _CannotAddHostWithFTVmToNonHAClusterFault_QNAME = new QName("urn:vim25", "CannotAddHostWithFTVmToNonHAClusterFault");
  
  private static final QName _ReconfigurationSatisfiable_QNAME = new QName("urn:vim25", "ReconfigurationSatisfiable");
  
  private static final QName _SwapDatastoreNotWritableOnHostFault_QNAME = new QName("urn:vim25", "SwapDatastoreNotWritableOnHostFault");
  
  private static final QName _DestinationSwitchFullFault_QNAME = new QName("urn:vim25", "DestinationSwitchFullFault");
  
  private static final QName _RefreshGraphicsManager_QNAME = new QName("urn:vim25", "RefreshGraphicsManager");
  
  private static final QName _PowerOffVMTask_QNAME = new QName("urn:vim25", "PowerOffVM_Task");
  
  private static final QName _NotSupportedFault_QNAME = new QName("urn:vim25", "NotSupportedFault");
  
  private static final QName _OvfUnsupportedElementFault_QNAME = new QName("urn:vim25", "OvfUnsupportedElementFault");
  
  private static final QName _RemoveDiskTask_QNAME = new QName("urn:vim25", "RemoveDisk_Task");
  
  private static final QName _LoginExtensionBySubjectName_QNAME = new QName("urn:vim25", "LoginExtensionBySubjectName");
  
  private static final QName _CreatePerfInterval_QNAME = new QName("urn:vim25", "CreatePerfInterval");
  
  private static final QName _AddLicense_QNAME = new QName("urn:vim25", "AddLicense");
  
  private static final QName _QueryVsanUpgradeStatus_QNAME = new QName("urn:vim25", "QueryVsanUpgradeStatus");
  
  private static final QName _FormatVmfs_QNAME = new QName("urn:vim25", "FormatVmfs");
  
  private static final QName _CannotPlaceWithoutPrerequisiteMovesFault_QNAME = new QName("urn:vim25", "CannotPlaceWithoutPrerequisiteMovesFault");
  
  private static final QName _QueryDisksUsingFilter_QNAME = new QName("urn:vim25", "QueryDisksUsingFilter");
  
  private static final QName _VmotionInterfaceNotEnabledFault_QNAME = new QName("urn:vim25", "VmotionInterfaceNotEnabledFault");
  
  private static final QName _QueryLicenseSourceAvailability_QNAME = new QName("urn:vim25", "QueryLicenseSourceAvailability");
  
  private static final QName _RemoveDatastoreExTask_QNAME = new QName("urn:vim25", "RemoveDatastoreEx_Task");
  
  private static final QName _DestroyChildren_QNAME = new QName("urn:vim25", "DestroyChildren");
  
  private static final QName _DefragmentAllDisks_QNAME = new QName("urn:vim25", "DefragmentAllDisks");
  
  private static final QName _OvfInvalidValueEmptyFault_QNAME = new QName("urn:vim25", "OvfInvalidValueEmptyFault");
  
  private static final QName _EVCUnsupportedByHostHardwareFault_QNAME = new QName("urn:vim25", "EVCUnsupportedByHostHardwareFault");
  
  private static final QName _CreateListView_QNAME = new QName("urn:vim25", "CreateListView");
  
  private static final QName _RenameDatastore_QNAME = new QName("urn:vim25", "RenameDatastore");
  
  private static final QName _AuthMinimumAdminPermissionFault_QNAME = new QName("urn:vim25", "AuthMinimumAdminPermissionFault");
  
  private static final QName _NoGatewayFault_QNAME = new QName("urn:vim25", "NoGatewayFault");
  
  private static final QName _RegisterKmipServer_QNAME = new QName("urn:vim25", "RegisterKmipServer");
  
  private static final QName _DetachScsiLun_QNAME = new QName("urn:vim25", "DetachScsiLun");
  
  private static final QName _RefreshRecommendation_QNAME = new QName("urn:vim25", "RefreshRecommendation");
  
  private static final QName _MarkAsTemplate_QNAME = new QName("urn:vim25", "MarkAsTemplate");
  
  private static final QName _RecommissionVsanNodeTask_QNAME = new QName("urn:vim25", "RecommissionVsanNode_Task");
  
  private static final QName _JoinDomainWithCAMTask_QNAME = new QName("urn:vim25", "JoinDomainWithCAM_Task");
  
  private static final QName _RescanAllHba_QNAME = new QName("urn:vim25", "RescanAllHba");
  
  private static final QName _CreateImportSpec_QNAME = new QName("urn:vim25", "CreateImportSpec");
  
  private static final QName _RetrieveSnapshotDetails_QNAME = new QName("urn:vim25", "RetrieveSnapshotDetails");
  
  private static final QName _ConfigureVchaTask_QNAME = new QName("urn:vim25", "configureVcha_Task");
  
  private static final QName _CreateWitnessNodeTask_QNAME = new QName("urn:vim25", "createWitnessNode_Task");
  
  private static final QName _VspanPortPromiscChangeFaultFault_QNAME = new QName("urn:vim25", "VspanPortPromiscChangeFaultFault");
  
  private static final QName _MakeDirectory_QNAME = new QName("urn:vim25", "MakeDirectory");
  
  private static final QName _QueryVirtualDiskFragmentation_QNAME = new QName("urn:vim25", "QueryVirtualDiskFragmentation");
  
  private static final QName _OvfConsumerValidationFaultFault_QNAME = new QName("urn:vim25", "OvfConsumerValidationFaultFault");
  
  private static final QName _CreateDefaultProfile_QNAME = new QName("urn:vim25", "CreateDefaultProfile");
  
  private static final QName _ResolveMultipleUnresolvedVmfsVolumesExTask_QNAME = new QName("urn:vim25", "ResolveMultipleUnresolvedVmfsVolumesEx_Task");
  
  private static final QName _DeleteNvdimmNamespaceTask_QNAME = new QName("urn:vim25", "DeleteNvdimmNamespace_Task");
  
  private static final QName _HostConfigVFlashCache_QNAME = new QName("urn:vim25", "HostConfigVFlashCache");
  
  private static final QName _QueryPathSelectionPolicyOptions_QNAME = new QName("urn:vim25", "QueryPathSelectionPolicyOptions");
  
  private static final QName _OutOfBoundsFault_QNAME = new QName("urn:vim25", "OutOfBoundsFault");
  
  private static final QName _CannotUseNetworkFault_QNAME = new QName("urn:vim25", "CannotUseNetworkFault");
  
  private static final QName _ConfigureHCITask_QNAME = new QName("urn:vim25", "ConfigureHCI_Task");
  
  private static final QName _VMotionNotSupportedFault_QNAME = new QName("urn:vim25", "VMotionNotSupportedFault");
  
  private static final QName _FetchDVPorts_QNAME = new QName("urn:vim25", "FetchDVPorts");
  
  private static final QName _ListTagsAttachedToVStorageObject_QNAME = new QName("urn:vim25", "ListTagsAttachedToVStorageObject");
  
  private static final QName _UpdateRuleset_QNAME = new QName("urn:vim25", "UpdateRuleset");
  
  private static final QName _SendTestNotification_QNAME = new QName("urn:vim25", "SendTestNotification");
  
  private static final QName _DestroyPropertyCollector_QNAME = new QName("urn:vim25", "DestroyPropertyCollector");
  
  private static final QName _NoHostFault_QNAME = new QName("urn:vim25", "NoHostFault");
  
  private static final QName _ConnectedIsoFault_QNAME = new QName("urn:vim25", "ConnectedIsoFault");
  
  private static final QName _NoDiskSpaceFault_QNAME = new QName("urn:vim25", "NoDiskSpaceFault");
  
  private static final QName _TooManySnapshotLevelsFault_QNAME = new QName("urn:vim25", "TooManySnapshotLevelsFault");
  
  private static final QName _DeleteVStorageObjectTask_QNAME = new QName("urn:vim25", "DeleteVStorageObject_Task");
  
  private static final QName _OvfWrongElementFault_QNAME = new QName("urn:vim25", "OvfWrongElementFault");
  
  private static final QName _ListKeys_QNAME = new QName("urn:vim25", "ListKeys");
  
  private static final QName _RemovePerfInterval_QNAME = new QName("urn:vim25", "RemovePerfInterval");
  
  private static final QName _OvfHardwareCheckFault_QNAME = new QName("urn:vim25", "OvfHardwareCheckFault");
  
  private static final QName _UninstallService_QNAME = new QName("urn:vim25", "UninstallService");
  
  private static final QName _HostRetrieveVStorageObject_QNAME = new QName("urn:vim25", "HostRetrieveVStorageObject");
  
  private static final QName _MarkServiceProviderEntities_QNAME = new QName("urn:vim25", "MarkServiceProviderEntities");
  
  private static final QName _CannotMoveVmWithNativeDeltaDiskFault_QNAME = new QName("urn:vim25", "CannotMoveVmWithNativeDeltaDiskFault");
  
  private static final QName _IORMNotSupportedHostOnDatastoreFault_QNAME = new QName("urn:vim25", "IORMNotSupportedHostOnDatastoreFault");
  
  private static final QName _UploadKmipServerCert_QNAME = new QName("urn:vim25", "UploadKmipServerCert");
  
  private static final QName _NoVmInVAppFault_QNAME = new QName("urn:vim25", "NoVmInVAppFault");
  
  private static final QName _AlreadyUpgradedFault_QNAME = new QName("urn:vim25", "AlreadyUpgradedFault");
  
  private static final QName _DeleteVirtualDiskTask_QNAME = new QName("urn:vim25", "DeleteVirtualDisk_Task");
  
  private static final QName _NotSupportedDeviceForFTFault_QNAME = new QName("urn:vim25", "NotSupportedDeviceForFTFault");
  
  private static final QName _DisableAdminNotSupportedFault_QNAME = new QName("urn:vim25", "DisableAdminNotSupportedFault");
  
  private static final QName _QueryHealthUpdateInfos_QNAME = new QName("urn:vim25", "QueryHealthUpdateInfos");
  
  private static final QName _MakePrimaryVMTask_QNAME = new QName("urn:vim25", "MakePrimaryVM_Task");
  
  private static final QName _ChangeKeyTask_QNAME = new QName("urn:vim25", "ChangeKey_Task");
  
  private static final QName _DeviceNotFoundFault_QNAME = new QName("urn:vim25", "DeviceNotFoundFault");
  
  private static final QName _MethodNotFoundFault_QNAME = new QName("urn:vim25", "MethodNotFoundFault");
  
  private static final QName _RemoveVirtualNic_QNAME = new QName("urn:vim25", "RemoveVirtualNic");
  
  private static final QName _InitiateFailoverTask_QNAME = new QName("urn:vim25", "initiateFailover_Task");
  
  private static final QName _NotAFileFault_QNAME = new QName("urn:vim25", "NotAFileFault");
  
  private static final QName _ConflictingDatastoreFoundFault_QNAME = new QName("urn:vim25", "ConflictingDatastoreFoundFault");
  
  private static final QName _RebootHostTask_QNAME = new QName("urn:vim25", "RebootHost_Task");
  
  private static final QName _QuiesceDatastoreIOForHAFailedFault_QNAME = new QName("urn:vim25", "QuiesceDatastoreIOForHAFailedFault");
  
  private static final QName _GenerateCertificateSigningRequest_QNAME = new QName("urn:vim25", "GenerateCertificateSigningRequest");
  
  private static final QName _OperationNotSupportedByGuestFault_QNAME = new QName("urn:vim25", "OperationNotSupportedByGuestFault");
  
  private static final QName _QueryUnresolvedVmfsVolumes_QNAME = new QName("urn:vim25", "QueryUnresolvedVmfsVolumes");
  
  private static final QName _FindRulesForVm_QNAME = new QName("urn:vim25", "FindRulesForVm");
  
  private static final QName _SetExtensionCertificate_QNAME = new QName("urn:vim25", "SetExtensionCertificate");
  
  private static final QName _AffinityConfiguredFault_QNAME = new QName("urn:vim25", "AffinityConfiguredFault");
  
  private static final QName _UpdateVStorageObjectCryptoTask_QNAME = new QName("urn:vim25", "UpdateVStorageObjectCrypto_Task");
  
  private static final QName _UpdateScsiLunDisplayName_QNAME = new QName("urn:vim25", "UpdateScsiLunDisplayName");
  
  private static final QName _SnapshotMoveNotSupportedFault_QNAME = new QName("urn:vim25", "SnapshotMoveNotSupportedFault");
  
  private static final QName _BrowseDiagnosticLog_QNAME = new QName("urn:vim25", "BrowseDiagnosticLog");
  
  private static final QName _AddFilterEntities_QNAME = new QName("urn:vim25", "AddFilterEntities");
  
  private static final QName _IsKmsClusterActive_QNAME = new QName("urn:vim25", "IsKmsClusterActive");
  
  private static final QName _HostIncompatibleForRecordReplayFault_QNAME = new QName("urn:vim25", "HostIncompatibleForRecordReplayFault");
  
  private static final QName _CannotDeleteFileFault_QNAME = new QName("urn:vim25", "CannotDeleteFileFault");
  
  private static final QName _HasUserPrivilegeOnEntities_QNAME = new QName("urn:vim25", "HasUserPrivilegeOnEntities");
  
  private static final QName _DiskTooSmallFault_QNAME = new QName("urn:vim25", "DiskTooSmallFault");
  
  private static final QName _ReplicationInvalidOptionsFault_QNAME = new QName("urn:vim25", "ReplicationInvalidOptionsFault");
  
  private static final QName _HotSnapshotMoveNotSupportedFault_QNAME = new QName("urn:vim25", "HotSnapshotMoveNotSupportedFault");
  
  private static final QName _MoveVirtualDiskTask_QNAME = new QName("urn:vim25", "MoveVirtualDisk_Task");
  
  private static final QName _EnableSmartCardAuthentication_QNAME = new QName("urn:vim25", "EnableSmartCardAuthentication");
  
  private static final QName _UnusedVirtualDiskBlocksNotScrubbedFault_QNAME = new QName("urn:vim25", "UnusedVirtualDiskBlocksNotScrubbedFault");
  
  private static final QName _NoConnectedDatastoreFault_QNAME = new QName("urn:vim25", "NoConnectedDatastoreFault");
  
  private static final QName _IncompatibleHostForFtSecondaryFault_QNAME = new QName("urn:vim25", "IncompatibleHostForFtSecondaryFault");
  
  private static final QName _QueryDatastorePerformanceSummary_QNAME = new QName("urn:vim25", "QueryDatastorePerformanceSummary");
  
  private static final QName _UninstallIoFilterTask_QNAME = new QName("urn:vim25", "UninstallIoFilter_Task");
  
  private static final QName _CustomizationPendingFault_QNAME = new QName("urn:vim25", "CustomizationPendingFault");
  
  private static final QName _ExtractOvfEnvironment_QNAME = new QName("urn:vim25", "ExtractOvfEnvironment");
  
  private static final QName _NoDisksToCustomizeFault_QNAME = new QName("urn:vim25", "NoDisksToCustomizeFault");
  
  private static final QName _HostVStorageObjectCreateDiskFromSnapshotTask_QNAME = new QName("urn:vim25", "HostVStorageObjectCreateDiskFromSnapshot_Task");
  
  private static final QName _StorageDrsCannotMoveFTVmFault_QNAME = new QName("urn:vim25", "StorageDrsCannotMoveFTVmFault");
  
  private static final QName _UpdateAssignedLicense_QNAME = new QName("urn:vim25", "UpdateAssignedLicense");
  
  private static final QName _IncorrectFileTypeFault_QNAME = new QName("urn:vim25", "IncorrectFileTypeFault");
  
  private static final QName _StopRecordingTask_QNAME = new QName("urn:vim25", "StopRecording_Task");
  
  private static final QName _CreateVmfsDatastore_QNAME = new QName("urn:vim25", "CreateVmfsDatastore");
  
  private static final QName _PromoteDisksTask_QNAME = new QName("urn:vim25", "PromoteDisks_Task");
  
  private static final QName _VsanClusterUuidMismatchFault_QNAME = new QName("urn:vim25", "VsanClusterUuidMismatchFault");
  
  private static final QName _InvalidOperationOnSecondaryVmFault_QNAME = new QName("urn:vim25", "InvalidOperationOnSecondaryVmFault");
  
  private static final QName _EVCAdmissionFailedCPUVendorFault_QNAME = new QName("urn:vim25", "EVCAdmissionFailedCPUVendorFault");
  
  private static final QName _ResourceNotAvailableFault_QNAME = new QName("urn:vim25", "ResourceNotAvailableFault");
  
  private static final QName _OvfSystemFaultFault_QNAME = new QName("urn:vim25", "OvfSystemFaultFault");
  
  private static final QName _PerformDvsProductSpecOperationTask_QNAME = new QName("urn:vim25", "PerformDvsProductSpecOperation_Task");
  
  private static final QName _ResetSystemHealthInfo_QNAME = new QName("urn:vim25", "ResetSystemHealthInfo");
  
  private static final QName _IscsiFaultVnicNotFoundFault_QNAME = new QName("urn:vim25", "IscsiFaultVnicNotFoundFault");
  
  private static final QName _EVCAdmissionFailedVmActiveFault_QNAME = new QName("urn:vim25", "EVCAdmissionFailedVmActiveFault");
  
  private static final QName _RefreshStorageDrsRecommendation_QNAME = new QName("urn:vim25", "RefreshStorageDrsRecommendation");
  
  private static final QName _UserNotFoundFault_QNAME = new QName("urn:vim25", "UserNotFoundFault");
  
  private static final QName _ValidateStoragePodConfig_QNAME = new QName("urn:vim25", "ValidateStoragePodConfig");
  
  private static final QName _UpdateKmipServer_QNAME = new QName("urn:vim25", "UpdateKmipServer");
  
  private static final QName _VAppOperationInProgressFault_QNAME = new QName("urn:vim25", "VAppOperationInProgressFault");
  
  private static final QName _DissociateProfile_QNAME = new QName("urn:vim25", "DissociateProfile");
  
  private static final QName _MismatchedVMotionNetworkNamesFault_QNAME = new QName("urn:vim25", "MismatchedVMotionNetworkNamesFault");
  
  private static final QName _ReplaceCACertificatesAndCRLs_QNAME = new QName("urn:vim25", "ReplaceCACertificatesAndCRLs");
  
  private static final QName _EagerZeroVirtualDiskTask_QNAME = new QName("urn:vim25", "EagerZeroVirtualDisk_Task");
  
  private static final QName _ReconfigVMTask_QNAME = new QName("urn:vim25", "ReconfigVM_Task");
  
  private static final QName _CheckComplianceTask_QNAME = new QName("urn:vim25", "CheckCompliance_Task");
  
  private static final QName _HttpNfcLeaseSetManifestChecksumType_QNAME = new QName("urn:vim25", "HttpNfcLeaseSetManifestChecksumType");
  
  private static final QName _PatchNotApplicableFault_QNAME = new QName("urn:vim25", "PatchNotApplicableFault");
  
  private static final QName _DestroyVchaTask_QNAME = new QName("urn:vim25", "destroyVcha_Task");
  
  private static final QName _NumVirtualCoresPerSocketNotSupportedFault_QNAME = new QName("urn:vim25", "NumVirtualCoresPerSocketNotSupportedFault");
  
  private static final QName _ExtendHCITask_QNAME = new QName("urn:vim25", "ExtendHCI_Task");
  
  private static final QName _NoCompatibleHostWithAccessToDeviceFault_QNAME = new QName("urn:vim25", "NoCompatibleHostWithAccessToDeviceFault");
  
  private static final QName _OvfWrongNamespaceFault_QNAME = new QName("urn:vim25", "OvfWrongNamespaceFault");
  
  private static final QName _GenerateCertificateSigningRequestByDn_QNAME = new QName("urn:vim25", "GenerateCertificateSigningRequestByDn");
  
  private static final QName _MksConnectionLimitReachedFault_QNAME = new QName("urn:vim25", "MksConnectionLimitReachedFault");
  
  private static final QName _RetrieveProductComponents_QNAME = new QName("urn:vim25", "RetrieveProductComponents");
  
  private static final QName _MissingIpPoolFault_QNAME = new QName("urn:vim25", "MissingIpPoolFault");
  
  private static final QName _QueryPartitionCreateOptions_QNAME = new QName("urn:vim25", "QueryPartitionCreateOptions");
  
  private static final QName _PlatformConfigFaultFault_QNAME = new QName("urn:vim25", "PlatformConfigFaultFault");
  
  private static final QName _DuplicateDisksFault_QNAME = new QName("urn:vim25", "DuplicateDisksFault");
  
  private static final QName _RegisterExtension_QNAME = new QName("urn:vim25", "RegisterExtension");
  
  private static final QName _LicenseServerUnavailableFault_QNAME = new QName("urn:vim25", "LicenseServerUnavailableFault");
  
  private static final QName _KeyNotFoundFault_QNAME = new QName("urn:vim25", "KeyNotFoundFault");
  
  private static final QName _CreateSnapshotTask_QNAME = new QName("urn:vim25", "CreateSnapshot_Task");
  
  private static final QName _UnsupportedGuestFault_QNAME = new QName("urn:vim25", "UnsupportedGuestFault");
  
  private static final QName _DeleteScsiLunState_QNAME = new QName("urn:vim25", "DeleteScsiLunState");
  
  private static final QName _FullStorageVMotionNotSupportedFault_QNAME = new QName("urn:vim25", "FullStorageVMotionNotSupportedFault");
  
  private static final QName _QueryLockdownExceptions_QNAME = new QName("urn:vim25", "QueryLockdownExceptions");
  
  private static final QName _QueryHostPatchTask_QNAME = new QName("urn:vim25", "QueryHostPatch_Task");
  
  private static final QName _NicSettingMismatchFault_QNAME = new QName("urn:vim25", "NicSettingMismatchFault");
  
  private static final QName _CheckHostPatchTask_QNAME = new QName("urn:vim25", "CheckHostPatch_Task");
  
  private static final QName _CloneVAppTask_QNAME = new QName("urn:vim25", "CloneVApp_Task");
  
  private static final QName _VirtualEthernetCardNotSupportedFault_QNAME = new QName("urn:vim25", "VirtualEthernetCardNotSupportedFault");
  
  private static final QName _RescanVffs_QNAME = new QName("urn:vim25", "RescanVffs");
  
  private static final QName _ExpiredEditionLicenseFault_QNAME = new QName("urn:vim25", "ExpiredEditionLicenseFault");
  
  private static final QName _UnrecognizedHostFault_QNAME = new QName("urn:vim25", "UnrecognizedHostFault");
  
  private static final QName _OpenInventoryViewFolder_QNAME = new QName("urn:vim25", "OpenInventoryViewFolder");
  
  private static final QName _StageHostPatchTask_QNAME = new QName("urn:vim25", "StageHostPatch_Task");
  
  private static final QName _MarkPerenniallyReserved_QNAME = new QName("urn:vim25", "MarkPerenniallyReserved");
  
  private static final QName _VFlashModuleNotSupportedFault_QNAME = new QName("urn:vim25", "VFlashModuleNotSupportedFault");
  
  private static final QName _StartRecordingTask_QNAME = new QName("urn:vim25", "StartRecording_Task");
  
  private static final QName _CreateContainerView_QNAME = new QName("urn:vim25", "CreateContainerView");
  
  private static final QName _FailToEnableSPBMFault_QNAME = new QName("urn:vim25", "FailToEnableSPBMFault");
  
  private static final QName _FaultTolerancePrimaryPowerOnNotAttemptedFault_QNAME = new QName("urn:vim25", "FaultTolerancePrimaryPowerOnNotAttemptedFault");
  
  private static final QName _ToolsInstallationInProgressFault_QNAME = new QName("urn:vim25", "ToolsInstallationInProgressFault");
  
  private static final QName _SetLocale_QNAME = new QName("urn:vim25", "SetLocale");
  
  private static final QName _RemoveGroup_QNAME = new QName("urn:vim25", "RemoveGroup");
  
  private static final QName _QueryDisksForVsan_QNAME = new QName("urn:vim25", "QueryDisksForVsan");
  
  private static final QName _VspanPortgroupTypeChangeFaultFault_QNAME = new QName("urn:vim25", "VspanPortgroupTypeChangeFaultFault");
  
  private static final QName _ReconfigureDomObject_QNAME = new QName("urn:vim25", "ReconfigureDomObject");
  
  private static final QName _ClearNFSUser_QNAME = new QName("urn:vim25", "ClearNFSUser");
  
  private static final QName _CreateUser_QNAME = new QName("urn:vim25", "CreateUser");
  
  private static final QName _RefreshHealthStatusSystem_QNAME = new QName("urn:vim25", "RefreshHealthStatusSystem");
  
  private static final QName _CustomizeVMTask_QNAME = new QName("urn:vim25", "CustomizeVM_Task");
  
  private static final QName _CheckVmConfigTask_QNAME = new QName("urn:vim25", "CheckVmConfig_Task");
  
  private static final QName _DiskNotSupportedFault_QNAME = new QName("urn:vim25", "DiskNotSupportedFault");
  
  private static final QName _HostVStorageObjectRetrieveSnapshotInfo_QNAME = new QName("urn:vim25", "HostVStorageObjectRetrieveSnapshotInfo");
  
  private static final QName _NasSessionCredentialConflictFault_QNAME = new QName("urn:vim25", "NasSessionCredentialConflictFault");
  
  private static final QName _ReconfigureClusterTask_QNAME = new QName("urn:vim25", "ReconfigureCluster_Task");
  
  private static final QName _OvfConsumerUndefinedPrefixFault_QNAME = new QName("urn:vim25", "OvfConsumerUndefinedPrefixFault");
  
  private static final QName _UpdatePhysicalNicLinkSpeed_QNAME = new QName("urn:vim25", "UpdatePhysicalNicLinkSpeed");
  
  private static final QName _FileTooLargeFault_QNAME = new QName("urn:vim25", "FileTooLargeFault");
  
  private static final QName _CheckLicenseFeature_QNAME = new QName("urn:vim25", "CheckLicenseFeature");
  
  private static final QName _RetrieveSelfSignedClientCert_QNAME = new QName("urn:vim25", "RetrieveSelfSignedClientCert");
  
  private static final QName _OvfDuplicatedPropertyIdExportFault_QNAME = new QName("urn:vim25", "OvfDuplicatedPropertyIdExportFault");
  
  private static final QName _ReadHostResourcePoolTreeFailedFault_QNAME = new QName("urn:vim25", "ReadHostResourcePoolTreeFailedFault");
  
  private static final QName _OvfNoSpaceOnControllerFault_QNAME = new QName("urn:vim25", "OvfNoSpaceOnControllerFault");
  
  private static final QName _HostProfileResetValidationState_QNAME = new QName("urn:vim25", "HostProfileResetValidationState");
  
  private static final QName _TurnDiskLocatorLedOnTask_QNAME = new QName("urn:vim25", "TurnDiskLocatorLedOn_Task");
  
  private static final QName _AddKeys_QNAME = new QName("urn:vim25", "AddKeys");
  
  private static final QName _CreateLocalDatastore_QNAME = new QName("urn:vim25", "CreateLocalDatastore");
  
  private static final QName _NoCompatibleHardAffinityHostFault_QNAME = new QName("urn:vim25", "NoCompatibleHardAffinityHostFault");
  
  private static final QName _RemoveLicense_QNAME = new QName("urn:vim25", "RemoveLicense");
  
  private static final QName _EsxAgentHostManagerUpdateConfig_QNAME = new QName("urn:vim25", "EsxAgentHostManagerUpdateConfig");
  
  private static final QName _DisconnectHostTask_QNAME = new QName("urn:vim25", "DisconnectHost_Task");
  
  private static final QName _ApplyStorageDrsRecommendationTask_QNAME = new QName("urn:vim25", "ApplyStorageDrsRecommendation_Task");
  
  private static final QName _IscsiFaultInvalidVnicFault_QNAME = new QName("urn:vim25", "IscsiFaultInvalidVnicFault");
  
  private static final QName _QueryFaultToleranceCompatibility_QNAME = new QName("urn:vim25", "QueryFaultToleranceCompatibility");
  
  private static final QName _QueryBootDevices_QNAME = new QName("urn:vim25", "QueryBootDevices");
  
  private static final QName _UpdateIpRouteConfig_QNAME = new QName("urn:vim25", "UpdateIpRouteConfig");
  
  private static final QName _QuarantineModeFaultFault_QNAME = new QName("urn:vim25", "QuarantineModeFaultFault");
  
  private static final QName _ListGuestAliases_QNAME = new QName("urn:vim25", "ListGuestAliases");
  
  private static final QName _ResetEntityPermissions_QNAME = new QName("urn:vim25", "ResetEntityPermissions");
  
  private static final QName _CreateSecondaryVMTask_QNAME = new QName("urn:vim25", "CreateSecondaryVM_Task");
  
  private static final QName _RevertToCurrentSnapshotTask_QNAME = new QName("urn:vim25", "RevertToCurrentSnapshot_Task");
  
  private static final QName _UpdateSelfSignedClientCert_QNAME = new QName("urn:vim25", "UpdateSelfSignedClientCert");
  
  private static final QName _NoLicenseServerConfiguredFault_QNAME = new QName("urn:vim25", "NoLicenseServerConfiguredFault");
  
  private static final QName _BatchAddStandaloneHostsTask_QNAME = new QName("urn:vim25", "BatchAddStandaloneHosts_Task");
  
  private static final QName _CheckCustomizationResources_QNAME = new QName("urn:vim25", "CheckCustomizationResources");
  
  private static final QName _NotAuthenticatedFault_QNAME = new QName("urn:vim25", "NotAuthenticatedFault");
  
  private static final QName _EVCAdmissionFailedHostDisconnectedFault_QNAME = new QName("urn:vim25", "EVCAdmissionFailedHostDisconnectedFault");
  
  private static final QName _CreateNvdimmPMemNamespaceTask_QNAME = new QName("urn:vim25", "CreateNvdimmPMemNamespace_Task");
  
  private static final QName _EVCAdmissionFailedFault_QNAME = new QName("urn:vim25", "EVCAdmissionFailedFault");
  
  private static final QName _RemoveFailedFault_QNAME = new QName("urn:vim25", "RemoveFailedFault");
  
  private static final QName _RetrieveHardwareUptime_QNAME = new QName("urn:vim25", "RetrieveHardwareUptime");
  
  private static final QName _QueryConnectionInfoViaSpec_QNAME = new QName("urn:vim25", "QueryConnectionInfoViaSpec");
  
  private static final QName _DigestNotSupportedFault_QNAME = new QName("urn:vim25", "DigestNotSupportedFault");
  
  private static final QName _OvfInvalidVmNameFault_QNAME = new QName("urn:vim25", "OvfInvalidVmNameFault");
  
  private static final QName _ApplyEvcModeVMTask_QNAME = new QName("urn:vim25", "ApplyEvcModeVM_Task");
  
  private static final QName _PatchSupersededFault_QNAME = new QName("urn:vim25", "PatchSupersededFault");
  
  private static final QName _HostCommunicationFault_QNAME = new QName("urn:vim25", "HostCommunicationFault");
  
  private static final QName _CreateStoragePod_QNAME = new QName("urn:vim25", "CreateStoragePod");
  
  private static final QName _AlreadyConnectedFault_QNAME = new QName("urn:vim25", "AlreadyConnectedFault");
  
  private static final QName _MigrationFeatureNotSupportedFault_QNAME = new QName("urn:vim25", "MigrationFeatureNotSupportedFault");
  
  private static final QName _SwitchIpUnsetFault_QNAME = new QName("urn:vim25", "SwitchIpUnsetFault");
  
  private static final QName _GetVchaClusterHealth_QNAME = new QName("urn:vim25", "GetVchaClusterHealth");
  
  private static final QName _ValidateCredentialsInGuest_QNAME = new QName("urn:vim25", "ValidateCredentialsInGuest");
  
  private static final QName _VFlashModuleVersionIncompatibleFault_QNAME = new QName("urn:vim25", "VFlashModuleVersionIncompatibleFault");
  
  private static final QName _UpdateUser_QNAME = new QName("urn:vim25", "UpdateUser");
  
  private static final QName _MarkDefault_QNAME = new QName("urn:vim25", "MarkDefault");
  
  private static final QName _CreateCollectorForTasks_QNAME = new QName("urn:vim25", "CreateCollectorForTasks");
  
  private static final QName _FetchUserPrivilegeOnEntities_QNAME = new QName("urn:vim25", "FetchUserPrivilegeOnEntities");
  
  private static final QName _IncorrectHostInformationFault_QNAME = new QName("urn:vim25", "IncorrectHostInformationFault");
  
  private static final QName _BatchQueryConnectInfo_QNAME = new QName("urn:vim25", "BatchQueryConnectInfo");
  
  private static final QName _VmPowerOnDisabledFault_QNAME = new QName("urn:vim25", "VmPowerOnDisabledFault");
  
  private static final QName _RebootGuest_QNAME = new QName("urn:vim25", "RebootGuest");
  
  private static final QName _HttpNfcLeaseComplete_QNAME = new QName("urn:vim25", "HttpNfcLeaseComplete");
  
  private static final QName _RenameCustomFieldDef_QNAME = new QName("urn:vim25", "RenameCustomFieldDef");
  
  private static final QName _AddKey_QNAME = new QName("urn:vim25", "AddKey");
  
  private static final QName _EnterLockdownMode_QNAME = new QName("urn:vim25", "EnterLockdownMode");
  
  private static final QName _MarkAsVirtualMachine_QNAME = new QName("urn:vim25", "MarkAsVirtualMachine");
  
  private static final QName _DisallowedOperationOnFailoverHostFault_QNAME = new QName("urn:vim25", "DisallowedOperationOnFailoverHostFault");
  
  private static final QName _ExitMaintenanceModeTask_QNAME = new QName("urn:vim25", "ExitMaintenanceMode_Task");
  
  private static final QName _CreateScreenshotTask_QNAME = new QName("urn:vim25", "CreateScreenshot_Task");
  
  private static final QName _QueryFirmwareConfigUploadURL_QNAME = new QName("urn:vim25", "QueryFirmwareConfigUploadURL");
  
  private static final QName _LicenseRestrictedFault_QNAME = new QName("urn:vim25", "LicenseRestrictedFault");
  
  private static final QName _UpdateSystemUsers_QNAME = new QName("urn:vim25", "UpdateSystemUsers");
  
  private static final QName _StorageDrsDatacentersCannotShareDatastoreFault_QNAME = new QName("urn:vim25", "StorageDrsDatacentersCannotShareDatastoreFault");
  
  private static final QName _QueryAvailablePartition_QNAME = new QName("urn:vim25", "QueryAvailablePartition");
  
  private static final QName _FaultToleranceVmNotDasProtectedFault_QNAME = new QName("urn:vim25", "FaultToleranceVmNotDasProtectedFault");
  
  private static final QName _CannotComputeFTCompatibleHostsFault_QNAME = new QName("urn:vim25", "CannotComputeFTCompatibleHostsFault");
  
  private static final QName _UpdateSoftwareInternetScsiEnabled_QNAME = new QName("urn:vim25", "UpdateSoftwareInternetScsiEnabled");
  
  private static final QName _QueryMemoryOverhead_QNAME = new QName("urn:vim25", "QueryMemoryOverhead");
  
  private static final QName _QueryComplianceStatus_QNAME = new QName("urn:vim25", "QueryComplianceStatus");
  
  private static final QName _DeleteVmfsVolumeState_QNAME = new QName("urn:vim25", "DeleteVmfsVolumeState");
  
  private static final QName _OvfUnsupportedAttributeFault_QNAME = new QName("urn:vim25", "OvfUnsupportedAttributeFault");
  
  private static final QName _StorageDrsCannotMoveIndependentDiskFault_QNAME = new QName("urn:vim25", "StorageDrsCannotMoveIndependentDiskFault");
  
  private static final QName _NoCompatibleHostFault_QNAME = new QName("urn:vim25", "NoCompatibleHostFault");
  
  private static final QName _Login_QNAME = new QName("urn:vim25", "Login");
  
  private static final QName _InvalidPropertyValueFault_QNAME = new QName("urn:vim25", "InvalidPropertyValueFault");
  
  private static final QName _SetDisplayTopology_QNAME = new QName("urn:vim25", "SetDisplayTopology");
  
  private static final QName _QueryCompatibleHostForNewDvs_QNAME = new QName("urn:vim25", "QueryCompatibleHostForNewDvs");
  
  private static final QName _OvfInvalidPackageFault_QNAME = new QName("urn:vim25", "OvfInvalidPackageFault");
  
  private static final QName _UnsupportedVimApiVersionFault_QNAME = new QName("urn:vim25", "UnsupportedVimApiVersionFault");
  
  private static final QName _CryptoManagerHostPrepare_QNAME = new QName("urn:vim25", "CryptoManagerHostPrepare");
  
  private static final QName _NoCompatibleSoftAffinityHostFault_QNAME = new QName("urn:vim25", "NoCompatibleSoftAffinityHostFault");
  
  private static final QName _NotUserConfigurablePropertyFault_QNAME = new QName("urn:vim25", "NotUserConfigurablePropertyFault");
  
  private static final QName _ResolveInstallationErrorsOnHostTask_QNAME = new QName("urn:vim25", "ResolveInstallationErrorsOnHost_Task");
  
  private static final QName _InstallServerCertificate_QNAME = new QName("urn:vim25", "InstallServerCertificate");
  
  private static final QName _DeviceHotPlugNotSupportedFault_QNAME = new QName("urn:vim25", "DeviceHotPlugNotSupportedFault");
  
  private static final QName _CertMgrRefreshCertificatesTask_QNAME = new QName("urn:vim25", "CertMgrRefreshCertificates_Task");
  
  private static final QName _ExecuteHostProfile_QNAME = new QName("urn:vim25", "ExecuteHostProfile");
  
  private static final QName _QueryPerfProviderSummary_QNAME = new QName("urn:vim25", "QueryPerfProviderSummary");
  
  private static final QName _DisableMultipathPath_QNAME = new QName("urn:vim25", "DisableMultipathPath");
  
  private static final QName _UpdateDVSLacpGroupConfigTask_QNAME = new QName("urn:vim25", "UpdateDVSLacpGroupConfig_Task");
  
  private static final QName _UpdateConsoleIpRouteConfig_QNAME = new QName("urn:vim25", "UpdateConsoleIpRouteConfig");
  
  private static final QName _AddVirtualNic_QNAME = new QName("urn:vim25", "AddVirtualNic");
  
  private static final QName _LogBundlingFailedFault_QNAME = new QName("urn:vim25", "LogBundlingFailedFault");
  
  private static final QName _VmfsAmbiguousMountFault_QNAME = new QName("urn:vim25", "VmfsAmbiguousMountFault");
  
  private static final QName _UpdateHostProfile_QNAME = new QName("urn:vim25", "UpdateHostProfile");
  
  private static final QName _MethodFaultFault_QNAME = new QName("urn:vim25", "MethodFaultFault");
  
  private static final QName _AssignUserToGroup_QNAME = new QName("urn:vim25", "AssignUserToGroup");
  
  private static final QName _ConflictingConfigurationFault_QNAME = new QName("urn:vim25", "ConflictingConfigurationFault");
  
  private static final QName _ScanHostPatchV2Task_QNAME = new QName("urn:vim25", "ScanHostPatchV2_Task");
  
  private static final QName _GenerateHostProfileTaskListTask_QNAME = new QName("urn:vim25", "GenerateHostProfileTaskList_Task");
  
  private static final QName _ShrinkDiskFaultFault_QNAME = new QName("urn:vim25", "ShrinkDiskFaultFault");
  
  private static final QName _DatastoreEnterMaintenanceMode_QNAME = new QName("urn:vim25", "DatastoreEnterMaintenanceMode");
  
  private static final QName _DestroyView_QNAME = new QName("urn:vim25", "DestroyView");
  
  private static final QName _CloneFromSnapshotNotSupportedFault_QNAME = new QName("urn:vim25", "CloneFromSnapshotNotSupportedFault");
  
  private static final QName _FtIssuesOnHostFault_QNAME = new QName("urn:vim25", "FtIssuesOnHostFault");
  
  private static final QName _EVCUnsupportedByHostSoftwareFault_QNAME = new QName("urn:vim25", "EVCUnsupportedByHostSoftwareFault");
  
  private static final QName _VMOnVirtualIntranetFault_QNAME = new QName("urn:vim25", "VMOnVirtualIntranetFault");
  
  private static final QName _RevertVStorageObjectTask_QNAME = new QName("urn:vim25", "RevertVStorageObject_Task");
  
  private static final QName _CryptoManagerHostDisable_QNAME = new QName("urn:vim25", "CryptoManagerHostDisable");
  
  private static final QName _IscsiFaultVnicHasNoUplinksFault_QNAME = new QName("urn:vim25", "IscsiFaultVnicHasNoUplinksFault");
  
  private static final QName _FileBackedPortNotSupportedFault_QNAME = new QName("urn:vim25", "FileBackedPortNotSupportedFault");
  
  private static final QName _CannotEnableVmcpForClusterFault_QNAME = new QName("urn:vim25", "CannotEnableVmcpForClusterFault");
  
  private static final QName _InvalidPowerStateFault_QNAME = new QName("urn:vim25", "InvalidPowerStateFault");
  
  private static final QName _RemoveLicenseLabel_QNAME = new QName("urn:vim25", "RemoveLicenseLabel");
  
  private static final QName _QueryDateTime_QNAME = new QName("urn:vim25", "QueryDateTime");
  
  private static final QName _RecommendHostsForVm_QNAME = new QName("urn:vim25", "RecommendHostsForVm");
  
  private static final QName _ReplaceSmartCardTrustAnchors_QNAME = new QName("urn:vim25", "ReplaceSmartCardTrustAnchors");
  
  private static final QName _CpuCompatibilityUnknownFault_QNAME = new QName("urn:vim25", "CpuCompatibilityUnknownFault");
  
  private static final QName _QueryNFSUser_QNAME = new QName("urn:vim25", "QueryNFSUser");
  
  private static final QName _VStorageObjectCreateSnapshotTask_QNAME = new QName("urn:vim25", "VStorageObjectCreateSnapshot_Task");
  
  private static final QName _NotSupportedHostForVFlashFault_QNAME = new QName("urn:vim25", "NotSupportedHostForVFlashFault");
  
  private static final QName _QueryPerf_QNAME = new QName("urn:vim25", "QueryPerf");
  
  private static final QName _RequestCanceledFault_QNAME = new QName("urn:vim25", "RequestCanceledFault");
  
  private static final QName _DeviceUnsupportedForVmVersionFault_QNAME = new QName("urn:vim25", "DeviceUnsupportedForVmVersionFault");
  
  private static final QName _CAMServerRefusedConnectionFault_QNAME = new QName("urn:vim25", "CAMServerRefusedConnectionFault");
  
  private static final QName _DeleteDirectory_QNAME = new QName("urn:vim25", "DeleteDirectory");
  
  private static final QName _AttachTagToVStorageObject_QNAME = new QName("urn:vim25", "AttachTagToVStorageObject");
  
  private static final QName _OvfPropertyValueFault_QNAME = new QName("urn:vim25", "OvfPropertyValueFault");
  
  private static final QName _EightHostLimitViolatedFault_QNAME = new QName("urn:vim25", "EightHostLimitViolatedFault");
  
  private static final QName _VspanPortConflictFault_QNAME = new QName("urn:vim25", "VspanPortConflictFault");
  
  private static final QName _NumVirtualCpusIncompatibleFault_QNAME = new QName("urn:vim25", "NumVirtualCpusIncompatibleFault");
  
  private static final QName _QueryAnswerFileStatus_QNAME = new QName("urn:vim25", "QueryAnswerFileStatus");
  
  private static final QName _ToolsImageNotAvailableFault_QNAME = new QName("urn:vim25", "ToolsImageNotAvailableFault");
  
  private static final QName _GuestComponentsOutOfDateFault_QNAME = new QName("urn:vim25", "GuestComponentsOutOfDateFault");
  
  private static final QName _PerformVsanUpgradePreflightCheck_QNAME = new QName("urn:vim25", "PerformVsanUpgradePreflightCheck");
  
  private static final QName _ClockSkewFault_QNAME = new QName("urn:vim25", "ClockSkewFault");
  
  private static final QName _SetVirtualDiskUuid_QNAME = new QName("urn:vim25", "SetVirtualDiskUuid");
  
  private static final QName _NoActiveHostInClusterFault_QNAME = new QName("urn:vim25", "NoActiveHostInClusterFault");
  
  private static final QName _RelocateVStorageObjectTask_QNAME = new QName("urn:vim25", "RelocateVStorageObject_Task");
  
  private static final QName _VmFaultToleranceTooManyFtVcpusOnHostFault_QNAME = new QName("urn:vim25", "VmFaultToleranceTooManyFtVcpusOnHostFault");
  
  private static final QName _TurnDiskLocatorLedOffTask_QNAME = new QName("urn:vim25", "TurnDiskLocatorLedOff_Task");
  
  private static final QName _EVCModeIllegalByVendorFault_QNAME = new QName("urn:vim25", "EVCModeIllegalByVendorFault");
  
  private static final QName _EVCAdmissionFailedCPUFeaturesForModeFault_QNAME = new QName("urn:vim25", "EVCAdmissionFailedCPUFeaturesForModeFault");
  
  private static final QName _PrepareVchaTask_QNAME = new QName("urn:vim25", "prepareVcha_Task");
  
  private static final QName _AnswerFileUpdateFailedFault_QNAME = new QName("urn:vim25", "AnswerFileUpdateFailedFault");
  
  private static final QName _AddDVPortgroupTask_QNAME = new QName("urn:vim25", "AddDVPortgroup_Task");
  
  private static final QName _QueryStorageArrayTypePolicyOptions_QNAME = new QName("urn:vim25", "QueryStorageArrayTypePolicyOptions");
  
  private static final QName _NotSupportedHostFault_QNAME = new QName("urn:vim25", "NotSupportedHostFault");
  
  private static final QName _InvalidIpmiMacAddressFault_QNAME = new QName("urn:vim25", "InvalidIpmiMacAddressFault");
  
  private static final QName _UpdateVmfsUnmapPriority_QNAME = new QName("urn:vim25", "UpdateVmfsUnmapPriority");
  
  private static final QName _EVCAdmissionFailedCPUModelFault_QNAME = new QName("urn:vim25", "EVCAdmissionFailedCPUModelFault");
  
  public UpdateInternetScsiAuthenticationPropertiesResponse createUpdateInternetScsiAuthenticationPropertiesResponse() {
    return new UpdateInternetScsiAuthenticationPropertiesResponse();
  }
  
  public EnableClusteredVmdkSupportRequestType createEnableClusteredVmdkSupportRequestType() {
    return new EnableClusteredVmdkSupportRequestType();
  }
  
  public UpdateVVolVirtualMachineFilesTaskResponse createUpdateVVolVirtualMachineFilesTaskResponse() {
    return new UpdateVVolVirtualMachineFilesTaskResponse();
  }
  
  public ManagedObjectReference createManagedObjectReference() {
    return new ManagedObjectReference();
  }
  
  public PowerOffVAppRequestType createPowerOffVAppRequestType() {
    return new PowerOffVAppRequestType();
  }
  
  public RefreshDatastoreResponse createRefreshDatastoreResponse() {
    return new RefreshDatastoreResponse();
  }
  
  public QueryFilterInfoIdsRequestType createQueryFilterInfoIdsRequestType() {
    return new QueryFilterInfoIdsRequestType();
  }
  
  public ClearTriggeredAlarmsRequestType createClearTriggeredAlarmsRequestType() {
    return new ClearTriggeredAlarmsRequestType();
  }
  
  public ReconfigureAlarmResponse createReconfigureAlarmResponse() {
    return new ReconfigureAlarmResponse();
  }
  
  public CheckComplianceTaskResponse createCheckComplianceTaskResponse() {
    return new CheckComplianceTaskResponse();
  }
  
  public UpdateOptionsResponse createUpdateOptionsResponse() {
    return new UpdateOptionsResponse();
  }
  
  public MarkAsVirtualMachineResponse createMarkAsVirtualMachineResponse() {
    return new MarkAsVirtualMachineResponse();
  }
  
  public DVPortNotSupported createDVPortNotSupported() {
    return new DVPortNotSupported();
  }
  
  public IscsiFaultVnicHasMultipleUplinks createIscsiFaultVnicHasMultipleUplinks() {
    return new IscsiFaultVnicHasMultipleUplinks();
  }
  
  public QueryLicenseUsageRequestType createQueryLicenseUsageRequestType() {
    return new QueryLicenseUsageRequestType();
  }
  
  public SetEntityPermissionsRequestType createSetEntityPermissionsRequestType() {
    return new SetEntityPermissionsRequestType();
  }
  
  public RemoveKeyRequestType createRemoveKeyRequestType() {
    return new RemoveKeyRequestType();
  }
  
  public ChangeNFSUserPasswordRequestType createChangeNFSUserPasswordRequestType() {
    return new ChangeNFSUserPasswordRequestType();
  }
  
  public ClusterEnterMaintenanceModeResponse createClusterEnterMaintenanceModeResponse() {
    return new ClusterEnterMaintenanceModeResponse();
  }
  
  public ClusterEnterMaintenanceResult createClusterEnterMaintenanceResult() {
    return new ClusterEnterMaintenanceResult();
  }
  
  public FaultToleranceCpuIncompatible createFaultToleranceCpuIncompatible() {
    return new FaultToleranceCpuIncompatible();
  }
  
  public GetCustomizationSpecRequestType createGetCustomizationSpecRequestType() {
    return new GetCustomizationSpecRequestType();
  }
  
  public RegisterVMTaskResponse createRegisterVMTaskResponse() {
    return new RegisterVMTaskResponse();
  }
  
  public ValidateStoragePodConfigResponse createValidateStoragePodConfigResponse() {
    return new ValidateStoragePodConfigResponse();
  }
  
  public LocalizedMethodFault createLocalizedMethodFault() {
    return new LocalizedMethodFault();
  }
  
  public InstallIoFilterTaskResponse createInstallIoFilterTaskResponse() {
    return new InstallIoFilterTaskResponse();
  }
  
  public BlockedByFirewall createBlockedByFirewall() {
    return new BlockedByFirewall();
  }
  
  public ConfigureLicenseSourceResponse createConfigureLicenseSourceResponse() {
    return new ConfigureLicenseSourceResponse();
  }
  
  public QueryObjectsOnPhysicalVsanDiskRequestType createQueryObjectsOnPhysicalVsanDiskRequestType() {
    return new QueryObjectsOnPhysicalVsanDiskRequestType();
  }
  
  public UpdatePhysicalNicLinkSpeedResponse createUpdatePhysicalNicLinkSpeedResponse() {
    return new UpdatePhysicalNicLinkSpeedResponse();
  }
  
  public RetrieveVStorageInfrastructureObjectPolicyRequestType createRetrieveVStorageInfrastructureObjectPolicyRequestType() {
    return new RetrieveVStorageInfrastructureObjectPolicyRequestType();
  }
  
  public ApplyEvcModeVMTaskResponse createApplyEvcModeVMTaskResponse() {
    return new ApplyEvcModeVMTaskResponse();
  }
  
  public UpdatePortGroupRequestType createUpdatePortGroupRequestType() {
    return new UpdatePortGroupRequestType();
  }
  
  public CryptoManagerHostEnableRequestType createCryptoManagerHostEnableRequestType() {
    return new CryptoManagerHostEnableRequestType();
  }
  
  public SecondaryVmAlreadyEnabled createSecondaryVmAlreadyEnabled() {
    return new SecondaryVmAlreadyEnabled();
  }
  
  public PostHealthUpdatesResponse createPostHealthUpdatesResponse() {
    return new PostHealthUpdatesResponse();
  }
  
  public MountToolsInstallerResponse createMountToolsInstallerResponse() {
    return new MountToolsInstallerResponse();
  }
  
  public QueryDvsCheckCompatibilityResponse createQueryDvsCheckCompatibilityResponse() {
    return new QueryDvsCheckCompatibilityResponse();
  }
  
  public DistributedVirtualSwitchManagerCompatibilityResult createDistributedVirtualSwitchManagerCompatibilityResult() {
    return new DistributedVirtualSwitchManagerCompatibilityResult();
  }
  
  public CloneSessionResponse createCloneSessionResponse() {
    return new CloneSessionResponse();
  }
  
  public UserSession createUserSession() {
    return new UserSession();
  }
  
  public CancelRetrievePropertiesExRequestType createCancelRetrievePropertiesExRequestType() {
    return new CancelRetrievePropertiesExRequestType();
  }
  
  public UpdateProductLockerLocationTaskResponse createUpdateProductLockerLocationTaskResponse() {
    return new UpdateProductLockerLocationTaskResponse();
  }
  
  public HostGetVFlashModuleDefaultConfigRequestType createHostGetVFlashModuleDefaultConfigRequestType() {
    return new HostGetVFlashModuleDefaultConfigRequestType();
  }
  
  public CreateNvdimmNamespaceRequestType createCreateNvdimmNamespaceRequestType() {
    return new CreateNvdimmNamespaceRequestType();
  }
  
  public UnassignUserFromGroupResponse createUnassignUserFromGroupResponse() {
    return new UnassignUserFromGroupResponse();
  }
  
  public RestoreFirmwareConfigurationRequestType createRestoreFirmwareConfigurationRequestType() {
    return new RestoreFirmwareConfigurationRequestType();
  }
  
  public MoveIntoResourcePoolRequestType createMoveIntoResourcePoolRequestType() {
    return new MoveIntoResourcePoolRequestType();
  }
  
  public SelectVnicForNicTypeRequestType createSelectVnicForNicTypeRequestType() {
    return new SelectVnicForNicTypeRequestType();
  }
  
  public VAppPropertyFault createVAppPropertyFault() {
    return new VAppPropertyFault();
  }
  
  public UpdateGraphicsConfigResponse createUpdateGraphicsConfigResponse() {
    return new UpdateGraphicsConfigResponse();
  }
  
  public ManagedObjectNotFound createManagedObjectNotFound() {
    return new ManagedObjectNotFound();
  }
  
  public CreateVmfsDatastoreResponse createCreateVmfsDatastoreResponse() {
    return new CreateVmfsDatastoreResponse();
  }
  
  public QueryIoFilterIssuesRequestType createQueryIoFilterIssuesRequestType() {
    return new QueryIoFilterIssuesRequestType();
  }
  
  public VspanSameSessionPortConflict createVspanSameSessionPortConflict() {
    return new VspanSameSessionPortConflict();
  }
  
  public CheckMigrateRequestType createCheckMigrateRequestType() {
    return new CheckMigrateRequestType();
  }
  
  public HttpFault createHttpFault() {
    return new HttpFault();
  }
  
  public UnmountVmfsVolumeExTaskResponse createUnmountVmfsVolumeExTaskResponse() {
    return new UnmountVmfsVolumeExTaskResponse();
  }
  
  public CpuIncompatible createCpuIncompatible() {
    return new CpuIncompatible();
  }
  
  public NotFound createNotFound() {
    return new NotFound();
  }
  
  public HostVStorageObjectCreateSnapshotRequestType createHostVStorageObjectCreateSnapshotRequestType() {
    return new HostVStorageObjectCreateSnapshotRequestType();
  }
  
  public UpdateDVSHealthCheckConfigRequestType createUpdateDVSHealthCheckConfigRequestType() {
    return new UpdateDVSHealthCheckConfigRequestType();
  }
  
  public HostInDomain createHostInDomain() {
    return new HostInDomain();
  }
  
  public GetVsanObjExtAttrsRequestType createGetVsanObjExtAttrsRequestType() {
    return new GetVsanObjExtAttrsRequestType();
  }
  
  public IpHostnameGeneratorError createIpHostnameGeneratorError() {
    return new IpHostnameGeneratorError();
  }
  
  public UpgradeVmLayoutRequestType createUpgradeVmLayoutRequestType() {
    return new UpgradeVmLayoutRequestType();
  }
  
  public RemoveKeyResponse createRemoveKeyResponse() {
    return new RemoveKeyResponse();
  }
  
  public QueryMemoryOverheadExResponse createQueryMemoryOverheadExResponse() {
    return new QueryMemoryOverheadExResponse();
  }
  
  public AddDisksTaskResponse createAddDisksTaskResponse() {
    return new AddDisksTaskResponse();
  }
  
  public SnapshotCopyNotSupported createSnapshotCopyNotSupported() {
    return new SnapshotCopyNotSupported();
  }
  
  public MakePrimaryVMTaskResponse createMakePrimaryVMTaskResponse() {
    return new MakePrimaryVMTaskResponse();
  }
  
  public BatchAddHostsToClusterRequestType createBatchAddHostsToClusterRequestType() {
    return new BatchAddHostsToClusterRequestType();
  }
  
  public OvfUnsupportedPackage createOvfUnsupportedPackage() {
    return new OvfUnsupportedPackage();
  }
  
  public WillModifyConfigCpuRequirements createWillModifyConfigCpuRequirements() {
    return new WillModifyConfigCpuRequirements();
  }
  
  public VmFaultToleranceOpIssuesList createVmFaultToleranceOpIssuesList() {
    return new VmFaultToleranceOpIssuesList();
  }
  
  public QueryConnectionInfoRequestType createQueryConnectionInfoRequestType() {
    return new QueryConnectionInfoRequestType();
  }
  
  public VMotionLinkCapacityLow createVMotionLinkCapacityLow() {
    return new VMotionLinkCapacityLow();
  }
  
  public HostPowerOpFailed createHostPowerOpFailed() {
    return new HostPowerOpFailed();
  }
  
  public RelocateVStorageObjectTaskResponse createRelocateVStorageObjectTaskResponse() {
    return new RelocateVStorageObjectTaskResponse();
  }
  
  public CreateListViewFromViewResponse createCreateListViewFromViewResponse() {
    return new CreateListViewFromViewResponse();
  }
  
  public CollectorAddressUnset createCollectorAddressUnset() {
    return new CollectorAddressUnset();
  }
  
  public HostImageConfigGetProfileResponse createHostImageConfigGetProfileResponse() {
    return new HostImageConfigGetProfileResponse();
  }
  
  public HostImageProfileSummary createHostImageProfileSummary() {
    return new HostImageProfileSummary();
  }
  
  public RemoveMonitoredEntitiesRequestType createRemoveMonitoredEntitiesRequestType() {
    return new RemoveMonitoredEntitiesRequestType();
  }
  
  public QueryCompatibleHostForNewDvsResponse createQueryCompatibleHostForNewDvsResponse() {
    return new QueryCompatibleHostForNewDvsResponse();
  }
  
  public RevertToSnapshotRequestType createRevertToSnapshotRequestType() {
    return new RevertToSnapshotRequestType();
  }
  
  public UpgradeVmfsResponse createUpgradeVmfsResponse() {
    return new UpgradeVmfsResponse();
  }
  
  public StorageDrsStaleHmsCollection createStorageDrsStaleHmsCollection() {
    return new StorageDrsStaleHmsCollection();
  }
  
  public DVSManagerLookupDvPortGroupResponse createDVSManagerLookupDvPortGroupResponse() {
    return new DVSManagerLookupDvPortGroupResponse();
  }
  
  public InvalidType createInvalidType() {
    return new InvalidType();
  }
  
  public CannotDisableDrsOnClustersWithVApps createCannotDisableDrsOnClustersWithVApps() {
    return new CannotDisableDrsOnClustersWithVApps();
  }
  
  public FindChildRequestType createFindChildRequestType() {
    return new FindChildRequestType();
  }
  
  public InvalidFolder createInvalidFolder() {
    return new InvalidFolder();
  }
  
  public VStorageObjectCreateSnapshotTaskResponse createVStorageObjectCreateSnapshotTaskResponse() {
    return new VStorageObjectCreateSnapshotTaskResponse();
  }
  
  public SsdDiskNotAvailable createSsdDiskNotAvailable() {
    return new SsdDiskNotAvailable();
  }
  
  public VmFaultToleranceIssue createVmFaultToleranceIssue() {
    return new VmFaultToleranceIssue();
  }
  
  public QueryMigrationDependenciesResponse createQueryMigrationDependenciesResponse() {
    return new QueryMigrationDependenciesResponse();
  }
  
  public IscsiMigrationDependency createIscsiMigrationDependency() {
    return new IscsiMigrationDependency();
  }
  
  public GetSiteInfoRequestType createGetSiteInfoRequestType() {
    return new GetSiteInfoRequestType();
  }
  
  public ConnectNvmeControllerRequestType createConnectNvmeControllerRequestType() {
    return new ConnectNvmeControllerRequestType();
  }
  
  public QueryAvailableSsdsRequestType createQueryAvailableSsdsRequestType() {
    return new QueryAvailableSsdsRequestType();
  }
  
  public CannotMoveVmWithDeltaDisk createCannotMoveVmWithDeltaDisk() {
    return new CannotMoveVmWithDeltaDisk();
  }
  
  public DestroyViewResponse createDestroyViewResponse() {
    return new DestroyViewResponse();
  }
  
  public InsufficientPerCpuCapacity createInsufficientPerCpuCapacity() {
    return new InsufficientPerCpuCapacity();
  }
  
  public OvfDuplicateElement createOvfDuplicateElement() {
    return new OvfDuplicateElement();
  }
  
  public NetworkCopyFault createNetworkCopyFault() {
    return new NetworkCopyFault();
  }
  
  public AddInternetScsiSendTargetsRequestType createAddInternetScsiSendTargetsRequestType() {
    return new AddInternetScsiSendTargetsRequestType();
  }
  
  public SetTaskStateResponse createSetTaskStateResponse() {
    return new SetTaskStateResponse();
  }
  
  public UnregisterHealthUpdateProviderRequestType createUnregisterHealthUpdateProviderRequestType() {
    return new UnregisterHealthUpdateProviderRequestType();
  }
  
  public RetrieveDescriptionResponse createRetrieveDescriptionResponse() {
    return new RetrieveDescriptionResponse();
  }
  
  public ProfileDescription createProfileDescription() {
    return new ProfileDescription();
  }
  
  public LargeRDMConversionNotSupported createLargeRDMConversionNotSupported() {
    return new LargeRDMConversionNotSupported();
  }
  
  public QueryNetworkHintResponse createQueryNetworkHintResponse() {
    return new QueryNetworkHintResponse();
  }
  
  public PhysicalNicHintInfo createPhysicalNicHintInfo() {
    return new PhysicalNicHintInfo();
  }
  
  public CreateNvdimmNamespaceTaskResponse createCreateNvdimmNamespaceTaskResponse() {
    return new CreateNvdimmNamespaceTaskResponse();
  }
  
  public ReadNextEventsRequestType createReadNextEventsRequestType() {
    return new ReadNextEventsRequestType();
  }
  
  public QueryCandidateNicsRequestType createQueryCandidateNicsRequestType() {
    return new QueryCandidateNicsRequestType();
  }
  
  public OvfConnectedDeviceFloppy createOvfConnectedDeviceFloppy() {
    return new OvfConnectedDeviceFloppy();
  }
  
  public StartGuestNetworkRequestType createStartGuestNetworkRequestType() {
    return new StartGuestNetworkRequestType();
  }
  
  public HostConfigFailed createHostConfigFailed() {
    return new HostConfigFailed();
  }
  
  public CreateScheduledTaskRequestType createCreateScheduledTaskRequestType() {
    return new CreateScheduledTaskRequestType();
  }
  
  public HasUserPrivilegeOnEntitiesResponse createHasUserPrivilegeOnEntitiesResponse() {
    return new HasUserPrivilegeOnEntitiesResponse();
  }
  
  public EntityPrivilege createEntityPrivilege() {
    return new EntityPrivilege();
  }
  
  public ReconfigureDvsRequestType createReconfigureDvsRequestType() {
    return new ReconfigureDvsRequestType();
  }
  
  public OvfUnsupportedDeviceBackingOption createOvfUnsupportedDeviceBackingOption() {
    return new OvfUnsupportedDeviceBackingOption();
  }
  
  public UnSupportedDatastoreForVFlash createUnSupportedDatastoreForVFlash() {
    return new UnSupportedDatastoreForVFlash();
  }
  
  public ReplicationFault createReplicationFault() {
    return new ReplicationFault();
  }
  
  public VspanPortMoveFault createVspanPortMoveFault() {
    return new VspanPortMoveFault();
  }
  
  public UpdateInternetScsiAdvancedOptionsRequestType createUpdateInternetScsiAdvancedOptionsRequestType() {
    return new UpdateInternetScsiAdvancedOptionsRequestType();
  }
  
  public FetchSystemEventLogResponse createFetchSystemEventLogResponse() {
    return new FetchSystemEventLogResponse();
  }
  
  public SystemEventInfo createSystemEventInfo() {
    return new SystemEventInfo();
  }
  
  public HostInventoryFull createHostInventoryFull() {
    return new HostInventoryFull();
  }
  
  public InsufficientGraphicsResourcesFault createInsufficientGraphicsResourcesFault() {
    return new InsufficientGraphicsResourcesFault();
  }
  
  public QueryVmfsDatastoreCreateOptionsRequestType createQueryVmfsDatastoreCreateOptionsRequestType() {
    return new QueryVmfsDatastoreCreateOptionsRequestType();
  }
  
  public InvalidFormat createInvalidFormat() {
    return new InvalidFormat();
  }
  
  public HttpNfcLeasePullFromUrlsRequestType createHttpNfcLeasePullFromUrlsRequestType() {
    return new HttpNfcLeasePullFromUrlsRequestType();
  }
  
  public UnmountToolsInstallerResponse createUnmountToolsInstallerResponse() {
    return new UnmountToolsInstallerResponse();
  }
  
  public TerminateProcessInGuestResponse createTerminateProcessInGuestResponse() {
    return new TerminateProcessInGuestResponse();
  }
  
  public AnswerVMResponse createAnswerVMResponse() {
    return new AnswerVMResponse();
  }
  
  public DiscoverFcoeHbasRequestType createDiscoverFcoeHbasRequestType() {
    return new DiscoverFcoeHbasRequestType();
  }
  
  public FindExtensionRequestType createFindExtensionRequestType() {
    return new FindExtensionRequestType();
  }
  
  public GetVchaConfigRequestType createGetVchaConfigRequestType() {
    return new GetVchaConfigRequestType();
  }
  
  public WakeOnLanNotSupported createWakeOnLanNotSupported() {
    return new WakeOnLanNotSupported();
  }
  
  public UpgradeIoFilterTaskResponse createUpgradeIoFilterTaskResponse() {
    return new UpgradeIoFilterTaskResponse();
  }
  
  public RetrieveClientCertResponse createRetrieveClientCertResponse() {
    return new RetrieveClientCertResponse();
  }
  
  public CannotAccessVmDisk createCannotAccessVmDisk() {
    return new CannotAccessVmDisk();
  }
  
  public QueryVMotionCompatibilityResponse createQueryVMotionCompatibilityResponse() {
    return new QueryVMotionCompatibilityResponse();
  }
  
  public HostVMotionCompatibility createHostVMotionCompatibility() {
    return new HostVMotionCompatibility();
  }
  
  public InvalidController createInvalidController() {
    return new InvalidController();
  }
  
  public OvfMappedOsId createOvfMappedOsId() {
    return new OvfMappedOsId();
  }
  
  public RefreshRuntimeRequestType createRefreshRuntimeRequestType() {
    return new RefreshRuntimeRequestType();
  }
  
  public GuestPermissionDenied createGuestPermissionDenied() {
    return new GuestPermissionDenied();
  }
  
  public MoveFileInGuestRequestType createMoveFileInGuestRequestType() {
    return new MoveFileInGuestRequestType();
  }
  
  public CopyDatastoreFileRequestType createCopyDatastoreFileRequestType() {
    return new CopyDatastoreFileRequestType();
  }
  
  public RenameCustomizationSpecResponse createRenameCustomizationSpecResponse() {
    return new RenameCustomizationSpecResponse();
  }
  
  public ApplyStorageDrsRecommendationToPodTaskResponse createApplyStorageDrsRecommendationToPodTaskResponse() {
    return new ApplyStorageDrsRecommendationToPodTaskResponse();
  }
  
  public ShutdownHostTaskResponse createShutdownHostTaskResponse() {
    return new ShutdownHostTaskResponse();
  }
  
  public PowerOnVAppTaskResponse createPowerOnVAppTaskResponse() {
    return new PowerOnVAppTaskResponse();
  }
  
  public RetrieveUserGroupsRequestType createRetrieveUserGroupsRequestType() {
    return new RetrieveUserGroupsRequestType();
  }
  
  public CreateDVSRequestType createCreateDVSRequestType() {
    return new CreateDVSRequestType();
  }
  
  public EvacuateVsanNodeRequestType createEvacuateVsanNodeRequestType() {
    return new EvacuateVsanNodeRequestType();
  }
  
  public IscsiFaultVnicInUse createIscsiFaultVnicInUse() {
    return new IscsiFaultVnicInUse();
  }
  
  public LicenseKeyEntityMismatch createLicenseKeyEntityMismatch() {
    return new LicenseKeyEntityMismatch();
  }
  
  public OvfConnectedDevice createOvfConnectedDevice() {
    return new OvfConnectedDevice();
  }
  
  public MemorySnapshotOnIndependentDisk createMemorySnapshotOnIndependentDisk() {
    return new MemorySnapshotOnIndependentDisk();
  }
  
  public ExtendDiskRequestType createExtendDiskRequestType() {
    return new ExtendDiskRequestType();
  }
  
  public SetMultipathLunPolicyResponse createSetMultipathLunPolicyResponse() {
    return new SetMultipathLunPolicyResponse();
  }
  
  public UpdateIpmiRequestType createUpdateIpmiRequestType() {
    return new UpdateIpmiRequestType();
  }
  
  public RetrieveClientCertRequestType createRetrieveClientCertRequestType() {
    return new RetrieveClientCertRequestType();
  }
  
  public OvfUnableToExportDisk createOvfUnableToExportDisk() {
    return new OvfUnableToExportDisk();
  }
  
  public RescanHbaRequestType createRescanHbaRequestType() {
    return new RescanHbaRequestType();
  }
  
  public UpdateRulesetResponse createUpdateRulesetResponse() {
    return new UpdateRulesetResponse();
  }
  
  public ReconfigureDatacenterRequestType createReconfigureDatacenterRequestType() {
    return new ReconfigureDatacenterRequestType();
  }
  
  public AdminNotDisabled createAdminNotDisabled() {
    return new AdminNotDisabled();
  }
  
  public InvalidIndexArgument createInvalidIndexArgument() {
    return new InvalidIndexArgument();
  }
  
  public TerminateSessionRequestType createTerminateSessionRequestType() {
    return new TerminateSessionRequestType();
  }
  
  public ReleaseCredentialsInGuestResponse createReleaseCredentialsInGuestResponse() {
    return new ReleaseCredentialsInGuestResponse();
  }
  
  public QueryHostsWithAttachedLunRequestType createQueryHostsWithAttachedLunRequestType() {
    return new QueryHostsWithAttachedLunRequestType();
  }
  
  public EnterLockdownModeResponse createEnterLockdownModeResponse() {
    return new EnterLockdownModeResponse();
  }
  
  public DeviceControllerNotSupported createDeviceControllerNotSupported() {
    return new DeviceControllerNotSupported();
  }
  
  public RefreshNetworkSystemResponse createRefreshNetworkSystemResponse() {
    return new RefreshNetworkSystemResponse();
  }
  
  public QueryConfigOptionDescriptorResponse createQueryConfigOptionDescriptorResponse() {
    return new QueryConfigOptionDescriptorResponse();
  }
  
  public VirtualMachineConfigOptionDescriptor createVirtualMachineConfigOptionDescriptor() {
    return new VirtualMachineConfigOptionDescriptor();
  }
  
  public MarkPerenniallyReservedResponse createMarkPerenniallyReservedResponse() {
    return new MarkPerenniallyReservedResponse();
  }
  
  public StorageDrsRelocateDisabled createStorageDrsRelocateDisabled() {
    return new StorageDrsRelocateDisabled();
  }
  
  public CreateWitnessNodeTaskResponse createCreateWitnessNodeTaskResponse() {
    return new CreateWitnessNodeTaskResponse();
  }
  
  public QueryMonitoredEntitiesResponse createQueryMonitoredEntitiesResponse() {
    return new QueryMonitoredEntitiesResponse();
  }
  
  public SharedBusControllerNotSupported createSharedBusControllerNotSupported() {
    return new SharedBusControllerNotSupported();
  }
  
  public DeleteDirectoryInGuestRequestType createDeleteDirectoryInGuestRequestType() {
    return new DeleteDirectoryInGuestRequestType();
  }
  
  public UncommittedUndoableDisk createUncommittedUndoableDisk() {
    return new UncommittedUndoableDisk();
  }
  
  public MoveIntoRequestType createMoveIntoRequestType() {
    return new MoveIntoRequestType();
  }
  
  public QueryMemoryOverheadResponse createQueryMemoryOverheadResponse() {
    return new QueryMemoryOverheadResponse();
  }
  
  public QueryAvailableTimeZonesResponse createQueryAvailableTimeZonesResponse() {
    return new QueryAvailableTimeZonesResponse();
  }
  
  public HostDateTimeSystemTimeZone createHostDateTimeSystemTimeZone() {
    return new HostDateTimeSystemTimeZone();
  }
  
  public RDMConversionNotSupported createRDMConversionNotSupported() {
    return new RDMConversionNotSupported();
  }
  
  public UpdateServiceConsoleVirtualNicRequestType createUpdateServiceConsoleVirtualNicRequestType() {
    return new UpdateServiceConsoleVirtualNicRequestType();
  }
  
  public RemoveDatastoreResponse createRemoveDatastoreResponse() {
    return new RemoveDatastoreResponse();
  }
  
  public ReconfigureServiceConsoleReservationRequestType createReconfigureServiceConsoleReservationRequestType() {
    return new ReconfigureServiceConsoleReservationRequestType();
  }
  
  public RemoteDeviceNotSupported createRemoteDeviceNotSupported() {
    return new RemoteDeviceNotSupported();
  }
  
  public GenerateClientCsrRequestType createGenerateClientCsrRequestType() {
    return new GenerateClientCsrRequestType();
  }
  
  public HttpNfcLeaseGetManifestRequestType createHttpNfcLeaseGetManifestRequestType() {
    return new HttpNfcLeaseGetManifestRequestType();
  }
  
  public FindAllByIpRequestType createFindAllByIpRequestType() {
    return new FindAllByIpRequestType();
  }
  
  public SelectActivePartitionRequestType createSelectActivePartitionRequestType() {
    return new SelectActivePartitionRequestType();
  }
  
  public ListCACertificatesRequestType createListCACertificatesRequestType() {
    return new ListCACertificatesRequestType();
  }
  
  public UpdateCounterLevelMappingResponse createUpdateCounterLevelMappingResponse() {
    return new UpdateCounterLevelMappingResponse();
  }
  
  public GetAlarmResponse createGetAlarmResponse() {
    return new GetAlarmResponse();
  }
  
  public ApplyRecommendationRequestType createApplyRecommendationRequestType() {
    return new ApplyRecommendationRequestType();
  }
  
  public AddHostRequestType createAddHostRequestType() {
    return new AddHostRequestType();
  }
  
  public InvalidName createInvalidName() {
    return new InvalidName();
  }
  
  public UpdateModuleOptionStringRequestType createUpdateModuleOptionStringRequestType() {
    return new UpdateModuleOptionStringRequestType();
  }
  
  public EncryptionKeyRequired createEncryptionKeyRequired() {
    return new EncryptionKeyRequired();
  }
  
  public ExportVAppResponse createExportVAppResponse() {
    return new ExportVAppResponse();
  }
  
  public CreateClusterExRequestType createCreateClusterExRequestType() {
    return new CreateClusterExRequestType();
  }
  
  public RenameTaskResponse createRenameTaskResponse() {
    return new RenameTaskResponse();
  }
  
  public FileNotFound createFileNotFound() {
    return new FileNotFound();
  }
  
  public CheckProfileComplianceTaskResponse createCheckProfileComplianceTaskResponse() {
    return new CheckProfileComplianceTaskResponse();
  }
  
  public DeselectVnicForNicTypeResponse createDeselectVnicForNicTypeResponse() {
    return new DeselectVnicForNicTypeResponse();
  }
  
  public QueryVmfsDatastoreExtendOptionsRequestType createQueryVmfsDatastoreExtendOptionsRequestType() {
    return new QueryVmfsDatastoreExtendOptionsRequestType();
  }
  
  public MoveIntoTaskResponse createMoveIntoTaskResponse() {
    return new MoveIntoTaskResponse();
  }
  
  public RestrictedVersion createRestrictedVersion() {
    return new RestrictedVersion();
  }
  
  public InvalidPrivilege createInvalidPrivilege() {
    return new InvalidPrivilege();
  }
  
  public ClearVStorageObjectControlFlagsRequestType createClearVStorageObjectControlFlagsRequestType() {
    return new ClearVStorageObjectControlFlagsRequestType();
  }
  
  public UnregisterVAppRequestType createUnregisterVAppRequestType() {
    return new UnregisterVAppRequestType();
  }
  
  public OvfExport createOvfExport() {
    return new OvfExport();
  }
  
  public GenerateHostConfigTaskSpecRequestType createGenerateHostConfigTaskSpecRequestType() {
    return new GenerateHostConfigTaskSpecRequestType();
  }
  
  public FileLocked createFileLocked() {
    return new FileLocked();
  }
  
  public TooManyDevices createTooManyDevices() {
    return new TooManyDevices();
  }
  
  public RemoveScheduledTaskResponse createRemoveScheduledTaskResponse() {
    return new RemoveScheduledTaskResponse();
  }
  
  public SelectActivePartitionResponse createSelectActivePartitionResponse() {
    return new SelectActivePartitionResponse();
  }
  
  public FindByDnsNameRequestType createFindByDnsNameRequestType() {
    return new FindByDnsNameRequestType();
  }
  
  public UpdatePerfIntervalResponse createUpdatePerfIntervalResponse() {
    return new UpdatePerfIntervalResponse();
  }
  
  public SetNFSUserRequestType createSetNFSUserRequestType() {
    return new SetNFSUserRequestType();
  }
  
  public MigrateVMRequestType createMigrateVMRequestType() {
    return new MigrateVMRequestType();
  }
  
  public SearchDatastoreRequestType createSearchDatastoreRequestType() {
    return new SearchDatastoreRequestType();
  }
  
  public DvsOperationBulkFault createDvsOperationBulkFault() {
    return new DvsOperationBulkFault();
  }
  
  public UnbindVnicResponse createUnbindVnicResponse() {
    return new UnbindVnicResponse();
  }
  
  public MultipleSnapshotsNotSupported createMultipleSnapshotsNotSupported() {
    return new MultipleSnapshotsNotSupported();
  }
  
  public CancelRetrievePropertiesExResponse createCancelRetrievePropertiesExResponse() {
    return new CancelRetrievePropertiesExResponse();
  }
  
  public ReplicationIncompatibleWithFT createReplicationIncompatibleWithFT() {
    return new ReplicationIncompatibleWithFT();
  }
  
  public SnapshotCloneNotSupported createSnapshotCloneNotSupported() {
    return new SnapshotCloneNotSupported();
  }
  
  public RewindCollectorResponse createRewindCollectorResponse() {
    return new RewindCollectorResponse();
  }
  
  public CannotMoveVsanEnabledHost createCannotMoveVsanEnabledHost() {
    return new CannotMoveVsanEnabledHost();
  }
  
  public CheckConfigureEvcModeRequestType createCheckConfigureEvcModeRequestType() {
    return new CheckConfigureEvcModeRequestType();
  }
  
  public CpuHotPlugNotSupported createCpuHotPlugNotSupported() {
    return new CpuHotPlugNotSupported();
  }
  
  public CreateListViewFromViewRequestType createCreateListViewFromViewRequestType() {
    return new CreateListViewFromViewRequestType();
  }
  
  public LoginBySSPIResponse createLoginBySSPIResponse() {
    return new LoginBySSPIResponse();
  }
  
  public EnterMaintenanceModeRequestType createEnterMaintenanceModeRequestType() {
    return new EnterMaintenanceModeRequestType();
  }
  
  public RetrieveRolePermissionsRequestType createRetrieveRolePermissionsRequestType() {
    return new RetrieveRolePermissionsRequestType();
  }
  
  public FindByIpResponse createFindByIpResponse() {
    return new FindByIpResponse();
  }
  
  public CannotAddHostWithFTVmToDifferentCluster createCannotAddHostWithFTVmToDifferentCluster() {
    return new CannotAddHostWithFTVmToDifferentCluster();
  }
  
  public AddVirtualNicResponse createAddVirtualNicResponse() {
    return new AddVirtualNicResponse();
  }
  
  public ExtendVmfsDatastoreRequestType createExtendVmfsDatastoreRequestType() {
    return new ExtendVmfsDatastoreRequestType();
  }
  
  public MemorySizeNotRecommended createMemorySizeNotRecommended() {
    return new MemorySizeNotRecommended();
  }
  
  public ModifyListViewRequestType createModifyListViewRequestType() {
    return new ModifyListViewRequestType();
  }
  
  public DeleteRegistryKeyInGuestRequestType createDeleteRegistryKeyInGuestRequestType() {
    return new DeleteRegistryKeyInGuestRequestType();
  }
  
  public ListProcessesInGuestRequestType createListProcessesInGuestRequestType() {
    return new ListProcessesInGuestRequestType();
  }
  
  public AlreadyExists createAlreadyExists() {
    return new AlreadyExists();
  }
  
  public UpdateHostSubSpecificationResponse createUpdateHostSubSpecificationResponse() {
    return new UpdateHostSubSpecificationResponse();
  }
  
  public QueryLicenseUsageResponse createQueryLicenseUsageResponse() {
    return new QueryLicenseUsageResponse();
  }
  
  public LicenseUsageInfo createLicenseUsageInfo() {
    return new LicenseUsageInfo();
  }
  
  public InsufficientAgentVmsDeployed createInsufficientAgentVmsDeployed() {
    return new InsufficientAgentVmsDeployed();
  }
  
  public UpdateHostProfileResponse createUpdateHostProfileResponse() {
    return new UpdateHostProfileResponse();
  }
  
  public CreateVirtualDiskTaskResponse createCreateVirtualDiskTaskResponse() {
    return new CreateVirtualDiskTaskResponse();
  }
  
  public QueryConnectionInfoViaSpecResponse createQueryConnectionInfoViaSpecResponse() {
    return new QueryConnectionInfoViaSpecResponse();
  }
  
  public HostConnectInfo createHostConnectInfo() {
    return new HostConnectInfo();
  }
  
  public InsufficientNetworkCapacity createInsufficientNetworkCapacity() {
    return new InsufficientNetworkCapacity();
  }
  
  public UpdateVStorageInfrastructureObjectPolicyRequestType createUpdateVStorageInfrastructureObjectPolicyRequestType() {
    return new UpdateVStorageInfrastructureObjectPolicyRequestType();
  }
  
  public OverwriteCustomizationSpecResponse createOverwriteCustomizationSpecResponse() {
    return new OverwriteCustomizationSpecResponse();
  }
  
  public RecommissionVsanNodeTaskResponse createRecommissionVsanNodeTaskResponse() {
    return new RecommissionVsanNodeTaskResponse();
  }
  
  public VMotionLinkDown createVMotionLinkDown() {
    return new VMotionLinkDown();
  }
  
  public StorageDrsHmsUnreachable createStorageDrsHmsUnreachable() {
    return new StorageDrsHmsUnreachable();
  }
  
  public HostNotConnected createHostNotConnected() {
    return new HostNotConnected();
  }
  
  public RetrieveKmipServerCertResponse createRetrieveKmipServerCertResponse() {
    return new RetrieveKmipServerCertResponse();
  }
  
  public CryptoManagerKmipServerCertInfo createCryptoManagerKmipServerCertInfo() {
    return new CryptoManagerKmipServerCertInfo();
  }
  
  public RemoveDiskTaskResponse createRemoveDiskTaskResponse() {
    return new RemoveDiskTaskResponse();
  }
  
  public VramLimitLicense createVramLimitLicense() {
    return new VramLimitLicense();
  }
  
  public CloneVMRequestType createCloneVMRequestType() {
    return new CloneVMRequestType();
  }
  
  public LicenseAssignmentFailed createLicenseAssignmentFailed() {
    return new LicenseAssignmentFailed();
  }
  
  public StorageVmotionIncompatible createStorageVmotionIncompatible() {
    return new StorageVmotionIncompatible();
  }
  
  public AcquireCimServicesTicketResponse createAcquireCimServicesTicketResponse() {
    return new AcquireCimServicesTicketResponse();
  }
  
  public HostServiceTicket createHostServiceTicket() {
    return new HostServiceTicket();
  }
  
  public UpdateReferenceHostResponse createUpdateReferenceHostResponse() {
    return new UpdateReferenceHostResponse();
  }
  
  public VmfsMountFault createVmfsMountFault() {
    return new VmfsMountFault();
  }
  
  public CreateFolderRequestType createCreateFolderRequestType() {
    return new CreateFolderRequestType();
  }
  
  public ResetGuestInformationRequestType createResetGuestInformationRequestType() {
    return new ResetGuestInformationRequestType();
  }
  
  public OvfHostResourceConstraint createOvfHostResourceConstraint() {
    return new OvfHostResourceConstraint();
  }
  
  public MismatchedNetworkPolicies createMismatchedNetworkPolicies() {
    return new MismatchedNetworkPolicies();
  }
  
  public SetVStorageObjectControlFlagsResponse createSetVStorageObjectControlFlagsResponse() {
    return new SetVStorageObjectControlFlagsResponse();
  }
  
  public QueryObjectsOnPhysicalVsanDiskResponse createQueryObjectsOnPhysicalVsanDiskResponse() {
    return new QueryObjectsOnPhysicalVsanDiskResponse();
  }
  
  public CreateObjectScheduledTaskRequestType createCreateObjectScheduledTaskRequestType() {
    return new CreateObjectScheduledTaskRequestType();
  }
  
  public HostInflateDiskRequestType createHostInflateDiskRequestType() {
    return new HostInflateDiskRequestType();
  }
  
  public ResetSystemHealthInfoResponse createResetSystemHealthInfoResponse() {
    return new ResetSystemHealthInfoResponse();
  }
  
  public DetachScsiLunExRequestType createDetachScsiLunExRequestType() {
    return new DetachScsiLunExRequestType();
  }
  
  public NoPermissionOnNasVolume createNoPermissionOnNasVolume() {
    return new NoPermissionOnNasVolume();
  }
  
  public QueryVsanObjectUuidsByFilterRequestType createQueryVsanObjectUuidsByFilterRequestType() {
    return new QueryVsanObjectUuidsByFilterRequestType();
  }
  
  public RemoveAlarmRequestType createRemoveAlarmRequestType() {
    return new RemoveAlarmRequestType();
  }
  
  public RemoveGroupResponse createRemoveGroupResponse() {
    return new RemoveGroupResponse();
  }
  
  public ListKmipServersRequestType createListKmipServersRequestType() {
    return new ListKmipServersRequestType();
  }
  
  public PowerUpHostFromStandByRequestType createPowerUpHostFromStandByRequestType() {
    return new PowerUpHostFromStandByRequestType();
  }
  
  public CannotDisconnectHostWithFaultToleranceVm createCannotDisconnectHostWithFaultToleranceVm() {
    return new CannotDisconnectHostWithFaultToleranceVm();
  }
  
  public SelectVnicRequestType createSelectVnicRequestType() {
    return new SelectVnicRequestType();
  }
  
  public QueryModulesResponse createQueryModulesResponse() {
    return new QueryModulesResponse();
  }
  
  public KernelModuleInfo createKernelModuleInfo() {
    return new KernelModuleInfo();
  }
  
  public ReadOnlyDisksWithLegacyDestination createReadOnlyDisksWithLegacyDestination() {
    return new ReadOnlyDisksWithLegacyDestination();
  }
  
  public SSLVerifyFault createSSLVerifyFault() {
    return new SSLVerifyFault();
  }
  
  public StartGuestNetworkTaskResponse createStartGuestNetworkTaskResponse() {
    return new StartGuestNetworkTaskResponse();
  }
  
  public BackupBlobReadFailure createBackupBlobReadFailure() {
    return new BackupBlobReadFailure();
  }
  
  public RetrieveVStorageObjectStateResponse createRetrieveVStorageObjectStateResponse() {
    return new RetrieveVStorageObjectStateResponse();
  }
  
  public VStorageObjectStateInfo createVStorageObjectStateInfo() {
    return new VStorageObjectStateInfo();
  }
  
  public ApplyEntitiesConfigRequestType createApplyEntitiesConfigRequestType() {
    return new ApplyEntitiesConfigRequestType();
  }
  
  public UninstallIoFilterTaskResponse createUninstallIoFilterTaskResponse() {
    return new UninstallIoFilterTaskResponse();
  }
  
  public RefreshDVPortStateRequestType createRefreshDVPortStateRequestType() {
    return new RefreshDVPortStateRequestType();
  }
  
  public QueryNetConfigResponse createQueryNetConfigResponse() {
    return new QueryNetConfigResponse();
  }
  
  public VirtualNicManagerNetConfig createVirtualNicManagerNetConfig() {
    return new VirtualNicManagerNetConfig();
  }
  
  public InvalidDeviceSpec createInvalidDeviceSpec() {
    return new InvalidDeviceSpec();
  }
  
  public ImpersonateUserResponse createImpersonateUserResponse() {
    return new ImpersonateUserResponse();
  }
  
  public NetworkDisruptedAndConfigRolledBack createNetworkDisruptedAndConfigRolledBack() {
    return new NetworkDisruptedAndConfigRolledBack();
  }
  
  public NotSupportedHostForChecksum createNotSupportedHostForChecksum() {
    return new NotSupportedHostForChecksum();
  }
  
  public TerminateVMResponse createTerminateVMResponse() {
    return new TerminateVMResponse();
  }
  
  public LicenseExpired createLicenseExpired() {
    return new LicenseExpired();
  }
  
  public InvalidGuestLogin createInvalidGuestLogin() {
    return new InvalidGuestLogin();
  }
  
  public RewindCollectorRequestType createRewindCollectorRequestType() {
    return new RewindCollectorRequestType();
  }
  
  public RetrieveSnapshotInfoRequestType createRetrieveSnapshotInfoRequestType() {
    return new RetrieveSnapshotInfoRequestType();
  }
  
  public LookupVmOverheadMemoryRequestType createLookupVmOverheadMemoryRequestType() {
    return new LookupVmOverheadMemoryRequestType();
  }
  
  public CannotDecryptPasswords createCannotDecryptPasswords() {
    return new CannotDecryptPasswords();
  }
  
  public PatchMetadataInvalid createPatchMetadataInvalid() {
    return new PatchMetadataInvalid();
  }
  
  public ExtendVffsRequestType createExtendVffsRequestType() {
    return new ExtendVffsRequestType();
  }
  
  public AddPortGroupRequestType createAddPortGroupRequestType() {
    return new AddPortGroupRequestType();
  }
  
  public CloneSessionRequestType createCloneSessionRequestType() {
    return new CloneSessionRequestType();
  }
  
  public RemoveKeysResponse createRemoveKeysResponse() {
    return new RemoveKeysResponse();
  }
  
  public CryptoKeyResult createCryptoKeyResult() {
    return new CryptoKeyResult();
  }
  
  public InvalidVmConfig createInvalidVmConfig() {
    return new InvalidVmConfig();
  }
  
  public RetrievePropertiesExRequestType createRetrievePropertiesExRequestType() {
    return new RetrievePropertiesExRequestType();
  }
  
  public FindByInventoryPathRequestType createFindByInventoryPathRequestType() {
    return new FindByInventoryPathRequestType();
  }
  
  public LookupVmOverheadMemoryResponse createLookupVmOverheadMemoryResponse() {
    return new LookupVmOverheadMemoryResponse();
  }
  
  public DestroyRequestType createDestroyRequestType() {
    return new DestroyRequestType();
  }
  
  public UpdateLicenseLabelResponse createUpdateLicenseLabelResponse() {
    return new UpdateLicenseLabelResponse();
  }
  
  public UpgradeVmLayoutResponse createUpgradeVmLayoutResponse() {
    return new UpgradeVmLayoutResponse();
  }
  
  public CreateDiagnosticPartitionResponse createCreateDiagnosticPartitionResponse() {
    return new CreateDiagnosticPartitionResponse();
  }
  
  public DuplicateVsanNetworkInterface createDuplicateVsanNetworkInterface() {
    return new DuplicateVsanNetworkInterface();
  }
  
  public ReconfigureScheduledTaskResponse createReconfigureScheduledTaskResponse() {
    return new ReconfigureScheduledTaskResponse();
  }
  
  public ReadNextTasksRequestType createReadNextTasksRequestType() {
    return new ReadNextTasksRequestType();
  }
  
  public CreateCollectorForEventsRequestType createCreateCollectorForEventsRequestType() {
    return new CreateCollectorForEventsRequestType();
  }
  
  public CannotAddHostWithFTVmAsStandalone createCannotAddHostWithFTVmAsStandalone() {
    return new CannotAddHostWithFTVmAsStandalone();
  }
  
  public VAppNotRunning createVAppNotRunning() {
    return new VAppNotRunning();
  }
  
  public LicenseSourceUnavailable createLicenseSourceUnavailable() {
    return new LicenseSourceUnavailable();
  }
  
  public MakeDirectoryInGuestRequestType createMakeDirectoryInGuestRequestType() {
    return new MakeDirectoryInGuestRequestType();
  }
  
  public CheckCloneRequestType createCheckCloneRequestType() {
    return new CheckCloneRequestType();
  }
  
  public QueryIpPoolsRequestType createQueryIpPoolsRequestType() {
    return new QueryIpPoolsRequestType();
  }
  
  public SetLicenseEditionRequestType createSetLicenseEditionRequestType() {
    return new SetLicenseEditionRequestType();
  }
  
  public MoveDirectoryInGuestRequestType createMoveDirectoryInGuestRequestType() {
    return new MoveDirectoryInGuestRequestType();
  }
  
  public QueryConfigOptionDescriptorRequestType createQueryConfigOptionDescriptorRequestType() {
    return new QueryConfigOptionDescriptorRequestType();
  }
  
  public CryptoManagerHostDisableResponse createCryptoManagerHostDisableResponse() {
    return new CryptoManagerHostDisableResponse();
  }
  
  public GuestRegistryKeyInvalid createGuestRegistryKeyInvalid() {
    return new GuestRegistryKeyInvalid();
  }
  
  public ConfigureVFlashResourceExTaskResponse createConfigureVFlashResourceExTaskResponse() {
    return new ConfigureVFlashResourceExTaskResponse();
  }
  
  public LinuxVolumeNotClean createLinuxVolumeNotClean() {
    return new LinuxVolumeNotClean();
  }
  
  public UpdateInternetScsiIPPropertiesResponse createUpdateInternetScsiIPPropertiesResponse() {
    return new UpdateInternetScsiIPPropertiesResponse();
  }
  
  public LoginBySSPIRequestType createLoginBySSPIRequestType() {
    return new LoginBySSPIRequestType();
  }
  
  public MemoryFileFormatNotSupportedByDatastore createMemoryFileFormatNotSupportedByDatastore() {
    return new MemoryFileFormatNotSupportedByDatastore();
  }
  
  public RetrieveVStorageObjectStateRequestType createRetrieveVStorageObjectStateRequestType() {
    return new RetrieveVStorageObjectStateRequestType();
  }
  
  public VAppConfigFault createVAppConfigFault() {
    return new VAppConfigFault();
  }
  
  public PerformVsanUpgradeTaskResponse createPerformVsanUpgradeTaskResponse() {
    return new PerformVsanUpgradeTaskResponse();
  }
  
  public RemoveSmartCardTrustAnchorResponse createRemoveSmartCardTrustAnchorResponse() {
    return new RemoveSmartCardTrustAnchorResponse();
  }
  
  public SetCustomValueRequestType createSetCustomValueRequestType() {
    return new SetCustomValueRequestType();
  }
  
  public OvfConsumerPowerOnFault createOvfConsumerPowerOnFault() {
    return new OvfConsumerPowerOnFault();
  }
  
  public DeleteVmfsVolumeStateResponse createDeleteVmfsVolumeStateResponse() {
    return new DeleteVmfsVolumeStateResponse();
  }
  
  public UpdateIpRouteTableConfigRequestType createUpdateIpRouteTableConfigRequestType() {
    return new UpdateIpRouteTableConfigRequestType();
  }
  
  public AcknowledgeAlarmRequestType createAcknowledgeAlarmRequestType() {
    return new AcknowledgeAlarmRequestType();
  }
  
  public DVSManagerExportEntityRequestType createDVSManagerExportEntityRequestType() {
    return new DVSManagerExportEntityRequestType();
  }
  
  public RemoveAllSnapshotsRequestType createRemoveAllSnapshotsRequestType() {
    return new RemoveAllSnapshotsRequestType();
  }
  
  public CreateListViewResponse createCreateListViewResponse() {
    return new CreateListViewResponse();
  }
  
  public SetNFSUserResponse createSetNFSUserResponse() {
    return new SetNFSUserResponse();
  }
  
  public QueryUnresolvedVmfsVolumeResponse createQueryUnresolvedVmfsVolumeResponse() {
    return new QueryUnresolvedVmfsVolumeResponse();
  }
  
  public HostUnresolvedVmfsVolume createHostUnresolvedVmfsVolume() {
    return new HostUnresolvedVmfsVolume();
  }
  
  public MarkDefaultResponse createMarkDefaultResponse() {
    return new MarkDefaultResponse();
  }
  
  public AddGuestAliasRequestType createAddGuestAliasRequestType() {
    return new AddGuestAliasRequestType();
  }
  
  public RDMNotSupported createRDMNotSupported() {
    return new RDMNotSupported();
  }
  
  public ValidateHostProfileCompositionTaskResponse createValidateHostProfileCompositionTaskResponse() {
    return new ValidateHostProfileCompositionTaskResponse();
  }
  
  public LoginExtensionBySubjectNameResponse createLoginExtensionBySubjectNameResponse() {
    return new LoginExtensionBySubjectNameResponse();
  }
  
  public CheckConfigureEvcModeTaskResponse createCheckConfigureEvcModeTaskResponse() {
    return new CheckConfigureEvcModeTaskResponse();
  }
  
  public CurrentTimeResponse createCurrentTimeResponse() {
    return new CurrentTimeResponse();
  }
  
  public VsanDiskFault createVsanDiskFault() {
    return new VsanDiskFault();
  }
  
  public DisallowedMigrationDeviceAttached createDisallowedMigrationDeviceAttached() {
    return new DisallowedMigrationDeviceAttached();
  }
  
  public InventoryHasStandardAloneHosts createInventoryHasStandardAloneHosts() {
    return new InventoryHasStandardAloneHosts();
  }
  
  public DeleteVffsVolumeStateRequestType createDeleteVffsVolumeStateRequestType() {
    return new DeleteVffsVolumeStateRequestType();
  }
  
  public UpdateIpRouteTableConfigResponse createUpdateIpRouteTableConfigResponse() {
    return new UpdateIpRouteTableConfigResponse();
  }
  
  public IncompatibleDefaultDevice createIncompatibleDefaultDevice() {
    return new IncompatibleDefaultDevice();
  }
  
  public AttachVmfsExtentRequestType createAttachVmfsExtentRequestType() {
    return new AttachVmfsExtentRequestType();
  }
  
  public MoveDatastoreFileRequestType createMoveDatastoreFileRequestType() {
    return new MoveDatastoreFileRequestType();
  }
  
  public QueryDvsCompatibleHostSpecRequestType createQueryDvsCompatibleHostSpecRequestType() {
    return new QueryDvsCompatibleHostSpecRequestType();
  }
  
  public AddLicenseResponse createAddLicenseResponse() {
    return new AddLicenseResponse();
  }
  
  public LicenseManagerLicenseInfo createLicenseManagerLicenseInfo() {
    return new LicenseManagerLicenseInfo();
  }
  
  public FetchDVPortKeysResponse createFetchDVPortKeysResponse() {
    return new FetchDVPortKeysResponse();
  }
  
  public HostRetrieveVStorageObjectMetadataRequestType createHostRetrieveVStorageObjectMetadataRequestType() {
    return new HostRetrieveVStorageObjectMetadataRequestType();
  }
  
  public DoesCustomizationSpecExistResponse createDoesCustomizationSpecExistResponse() {
    return new DoesCustomizationSpecExistResponse();
  }
  
  public DvsReconfigureVmVnicNetworkResourcePoolTaskResponse createDvsReconfigureVmVnicNetworkResourcePoolTaskResponse() {
    return new DvsReconfigureVmVnicNetworkResourcePoolTaskResponse();
  }
  
  public ConfigureVchaTaskResponse createConfigureVchaTaskResponse() {
    return new ConfigureVchaTaskResponse();
  }
  
  public UpdateExtensionResponse createUpdateExtensionResponse() {
    return new UpdateExtensionResponse();
  }
  
  public RemoveDiskMappingTaskResponse createRemoveDiskMappingTaskResponse() {
    return new RemoveDiskMappingTaskResponse();
  }
  
  public DVPortgroupRollbackTaskResponse createDVPortgroupRollbackTaskResponse() {
    return new DVPortgroupRollbackTaskResponse();
  }
  
  public CloneVAppTaskResponse createCloneVAppTaskResponse() {
    return new CloneVAppTaskResponse();
  }
  
  public CreateNvmeOverRdmaAdapterRequestType createCreateNvmeOverRdmaAdapterRequestType() {
    return new CreateNvmeOverRdmaAdapterRequestType();
  }
  
  public AddKeyResponse createAddKeyResponse() {
    return new AddKeyResponse();
  }
  
  public MoveIntoFolderTaskResponse createMoveIntoFolderTaskResponse() {
    return new MoveIntoFolderTaskResponse();
  }
  
  public ImportVAppRequestType createImportVAppRequestType() {
    return new ImportVAppRequestType();
  }
  
  public ReconfigureDVPortTaskResponse createReconfigureDVPortTaskResponse() {
    return new ReconfigureDVPortTaskResponse();
  }
  
  public UpdateSelfSignedClientCertResponse createUpdateSelfSignedClientCertResponse() {
    return new UpdateSelfSignedClientCertResponse();
  }
  
  public CreateDirectoryResponse createCreateDirectoryResponse() {
    return new CreateDirectoryResponse();
  }
  
  public QueryFaultToleranceCompatibilityResponse createQueryFaultToleranceCompatibilityResponse() {
    return new QueryFaultToleranceCompatibilityResponse();
  }
  
  public CannotCreateFile createCannotCreateFile() {
    return new CannotCreateFile();
  }
  
  public PatchInstallFailed createPatchInstallFailed() {
    return new PatchInstallFailed();
  }
  
  public ChangeLockdownModeRequestType createChangeLockdownModeRequestType() {
    return new ChangeLockdownModeRequestType();
  }
  
  public RetrieveServiceContentResponse createRetrieveServiceContentResponse() {
    return new RetrieveServiceContentResponse();
  }
  
  public ServiceContent createServiceContent() {
    return new ServiceContent();
  }
  
  public StorageDrsIolbDisabledInternally createStorageDrsIolbDisabledInternally() {
    return new StorageDrsIolbDisabledInternally();
  }
  
  public DVSManagerImportEntityRequestType createDVSManagerImportEntityRequestType() {
    return new DVSManagerImportEntityRequestType();
  }
  
  public CannotMoveFaultToleranceVm createCannotMoveFaultToleranceVm() {
    return new CannotMoveFaultToleranceVm();
  }
  
  public PowerOffVAppTaskResponse createPowerOffVAppTaskResponse() {
    return new PowerOffVAppTaskResponse();
  }
  
  public ConnectNvmeControllerResponse createConnectNvmeControllerResponse() {
    return new ConnectNvmeControllerResponse();
  }
  
  public MarkAsNonLocalTaskResponse createMarkAsNonLocalTaskResponse() {
    return new MarkAsNonLocalTaskResponse();
  }
  
  public SetVStorageObjectControlFlagsRequestType createSetVStorageObjectControlFlagsRequestType() {
    return new SetVStorageObjectControlFlagsRequestType();
  }
  
  public QueryHostsWithAttachedLunResponse createQueryHostsWithAttachedLunResponse() {
    return new QueryHostsWithAttachedLunResponse();
  }
  
  public DeleteCustomizationSpecRequestType createDeleteCustomizationSpecRequestType() {
    return new DeleteCustomizationSpecRequestType();
  }
  
  public RemoveMonitoredEntitiesResponse createRemoveMonitoredEntitiesResponse() {
    return new RemoveMonitoredEntitiesResponse();
  }
  
  public ValidateHostResponse createValidateHostResponse() {
    return new ValidateHostResponse();
  }
  
  public OvfValidateHostResult createOvfValidateHostResult() {
    return new OvfValidateHostResult();
  }
  
  public UnmarkServiceProviderEntitiesResponse createUnmarkServiceProviderEntitiesResponse() {
    return new UnmarkServiceProviderEntitiesResponse();
  }
  
  public DiscoverNvmeControllersRequestType createDiscoverNvmeControllersRequestType() {
    return new DiscoverNvmeControllersRequestType();
  }
  
  public HostConnectFault createHostConnectFault() {
    return new HostConnectFault();
  }
  
  public InvalidNetworkInType createInvalidNetworkInType() {
    return new InvalidNetworkInType();
  }
  
  public QueryPerfCompositeRequestType createQueryPerfCompositeRequestType() {
    return new QueryPerfCompositeRequestType();
  }
  
  public ParseDescriptorRequestType createParseDescriptorRequestType() {
    return new ParseDescriptorRequestType();
  }
  
  public ResetListViewFromViewResponse createResetListViewFromViewResponse() {
    return new ResetListViewFromViewResponse();
  }
  
  public RegisterExtensionResponse createRegisterExtensionResponse() {
    return new RegisterExtensionResponse();
  }
  
  public NoVirtualNic createNoVirtualNic() {
    return new NoVirtualNic();
  }
  
  public HostRetrieveVStorageObjectMetadataValueRequestType createHostRetrieveVStorageObjectMetadataValueRequestType() {
    return new HostRetrieveVStorageObjectMetadataValueRequestType();
  }
  
  public AssociateProfileRequestType createAssociateProfileRequestType() {
    return new AssociateProfileRequestType();
  }
  
  public ClearComplianceStatusResponse createClearComplianceStatusResponse() {
    return new ClearComplianceStatusResponse();
  }
  
  public RenameRequestType createRenameRequestType() {
    return new RenameRequestType();
  }
  
  public AddCustomFieldDefRequestType createAddCustomFieldDefRequestType() {
    return new AddCustomFieldDefRequestType();
  }
  
  public RetrieveClientCsrRequestType createRetrieveClientCsrRequestType() {
    return new RetrieveClientCsrRequestType();
  }
  
  public ChangeFileAttributesInGuestResponse createChangeFileAttributesInGuestResponse() {
    return new ChangeFileAttributesInGuestResponse();
  }
  
  public RefreshStorageSystemRequestType createRefreshStorageSystemRequestType() {
    return new RefreshStorageSystemRequestType();
  }
  
  public RetrieveFreeEpcMemoryResponse createRetrieveFreeEpcMemoryResponse() {
    return new RetrieveFreeEpcMemoryResponse();
  }
  
  public FaultToleranceCannotEditMem createFaultToleranceCannotEditMem() {
    return new FaultToleranceCannotEditMem();
  }
  
  public GatewayNotFound createGatewayNotFound() {
    return new GatewayNotFound();
  }
  
  public VMOnConflictDVPort createVMOnConflictDVPort() {
    return new VMOnConflictDVPort();
  }
  
  public OvfImport createOvfImport() {
    return new OvfImport();
  }
  
  public DestroyPropertyFilterResponse createDestroyPropertyFilterResponse() {
    return new DestroyPropertyFilterResponse();
  }
  
  public ConfigurePowerPolicyRequestType createConfigurePowerPolicyRequestType() {
    return new ConfigurePowerPolicyRequestType();
  }
  
  public QueryPerfCounterByLevelRequestType createQueryPerfCounterByLevelRequestType() {
    return new QueryPerfCounterByLevelRequestType();
  }
  
  public CreateDefaultProfileResponse createCreateDefaultProfileResponse() {
    return new CreateDefaultProfileResponse();
  }
  
  public ApplyProfile createApplyProfile() {
    return new ApplyProfile();
  }
  
  public QueryDvsByUuidRequestType createQueryDvsByUuidRequestType() {
    return new QueryDvsByUuidRequestType();
  }
  
  public QueryVsanObjectUuidsByFilterResponse createQueryVsanObjectUuidsByFilterResponse() {
    return new QueryVsanObjectUuidsByFilterResponse();
  }
  
  public RetrieveSnapshotDetailsResponse createRetrieveSnapshotDetailsResponse() {
    return new RetrieveSnapshotDetailsResponse();
  }
  
  public VStorageObjectSnapshotDetails createVStorageObjectSnapshotDetails() {
    return new VStorageObjectSnapshotDetails();
  }
  
  public CreateTemporaryDirectoryInGuestResponse createCreateTemporaryDirectoryInGuestResponse() {
    return new CreateTemporaryDirectoryInGuestResponse();
  }
  
  public CannotReconfigureVsanWhenHaEnabled createCannotReconfigureVsanWhenHaEnabled() {
    return new CannotReconfigureVsanWhenHaEnabled();
  }
  
  public FileNameTooLong createFileNameTooLong() {
    return new FileNameTooLong();
  }
  
  public GuestRegistryValueNotFound createGuestRegistryValueNotFound() {
    return new GuestRegistryValueNotFound();
  }
  
  public QueryVirtualDiskUuidRequestType createQueryVirtualDiskUuidRequestType() {
    return new QueryVirtualDiskUuidRequestType();
  }
  
  public NoSubjectName createNoSubjectName() {
    return new NoSubjectName();
  }
  
  public BackupFirmwareConfigurationRequestType createBackupFirmwareConfigurationRequestType() {
    return new BackupFirmwareConfigurationRequestType();
  }
  
  public RecommendDatastoresRequestType createRecommendDatastoresRequestType() {
    return new RecommendDatastoresRequestType();
  }
  
  public DissociateProfileResponse createDissociateProfileResponse() {
    return new DissociateProfileResponse();
  }
  
  public GetAlarmStateResponse createGetAlarmStateResponse() {
    return new GetAlarmStateResponse();
  }
  
  public AlarmState createAlarmState() {
    return new AlarmState();
  }
  
  public FindAllByUuidRequestType createFindAllByUuidRequestType() {
    return new FindAllByUuidRequestType();
  }
  
  public UpdateAssignableHardwareConfigResponse createUpdateAssignableHardwareConfigResponse() {
    return new UpdateAssignableHardwareConfigResponse();
  }
  
  public StartServiceRequestType createStartServiceRequestType() {
    return new StartServiceRequestType();
  }
  
  public OvfInvalidValueFormatMalformed createOvfInvalidValueFormatMalformed() {
    return new OvfInvalidValueFormatMalformed();
  }
  
  public EnableCryptoRequestType createEnableCryptoRequestType() {
    return new EnableCryptoRequestType();
  }
  
  public DetachDiskRequestType createDetachDiskRequestType() {
    return new DetachDiskRequestType();
  }
  
  public UpdatePerfIntervalRequestType createUpdatePerfIntervalRequestType() {
    return new UpdatePerfIntervalRequestType();
  }
  
  public HasProviderRequestType createHasProviderRequestType() {
    return new HasProviderRequestType();
  }
  
  public UpdateFlagsRequestType createUpdateFlagsRequestType() {
    return new UpdateFlagsRequestType();
  }
  
  public CustomizeVMTaskResponse createCustomizeVMTaskResponse() {
    return new CustomizeVMTaskResponse();
  }
  
  public UpdateProgressRequestType createUpdateProgressRequestType() {
    return new UpdateProgressRequestType();
  }
  
  public FindByUuidRequestType createFindByUuidRequestType() {
    return new FindByUuidRequestType();
  }
  
  public StorageDrsHbrDiskNotMovable createStorageDrsHbrDiskNotMovable() {
    return new StorageDrsHbrDiskNotMovable();
  }
  
  public CustomizeGuestRequestType createCustomizeGuestRequestType() {
    return new CustomizeGuestRequestType();
  }
  
  public UnregisterVAppTaskResponse createUnregisterVAppTaskResponse() {
    return new UnregisterVAppTaskResponse();
  }
  
  public CreateUserResponse createCreateUserResponse() {
    return new CreateUserResponse();
  }
  
  public ResetCollectorRequestType createResetCollectorRequestType() {
    return new ResetCollectorRequestType();
  }
  
  public EagerZeroVirtualDiskTaskResponse createEagerZeroVirtualDiskTaskResponse() {
    return new EagerZeroVirtualDiskTaskResponse();
  }
  
  public QueryExtensionIpAllocationUsageRequestType createQueryExtensionIpAllocationUsageRequestType() {
    return new QueryExtensionIpAllocationUsageRequestType();
  }
  
  public FileNotWritable createFileNotWritable() {
    return new FileNotWritable();
  }
  
  public VMotionProtocolIncompatible createVMotionProtocolIncompatible() {
    return new VMotionProtocolIncompatible();
  }
  
  public QueryPerfProviderSummaryResponse createQueryPerfProviderSummaryResponse() {
    return new QueryPerfProviderSummaryResponse();
  }
  
  public PerfProviderSummary createPerfProviderSummary() {
    return new PerfProviderSummary();
  }
  
  public RefreshHealthStatusSystemResponse createRefreshHealthStatusSystemResponse() {
    return new RefreshHealthStatusSystemResponse();
  }
  
  public SuspendVMRequestType createSuspendVMRequestType() {
    return new SuspendVMRequestType();
  }
  
  public QueryUnresolvedVmfsVolumeRequestType createQueryUnresolvedVmfsVolumeRequestType() {
    return new QueryUnresolvedVmfsVolumeRequestType();
  }
  
  public VMotionInterfaceIssue createVMotionInterfaceIssue() {
    return new VMotionInterfaceIssue();
  }
  
  public AddInternetScsiSendTargetsResponse createAddInternetScsiSendTargetsResponse() {
    return new AddInternetScsiSendTargetsResponse();
  }
  
  public DisallowedDiskModeChange createDisallowedDiskModeChange() {
    return new DisallowedDiskModeChange();
  }
  
  public RemoveCustomFieldDefResponse createRemoveCustomFieldDefResponse() {
    return new RemoveCustomFieldDefResponse();
  }
  
  public MethodDisabled createMethodDisabled() {
    return new MethodDisabled();
  }
  
  public UpdateIpConfigRequestType createUpdateIpConfigRequestType() {
    return new UpdateIpConfigRequestType();
  }
  
  public UpdateSoftwareInternetScsiEnabledResponse createUpdateSoftwareInternetScsiEnabledResponse() {
    return new UpdateSoftwareInternetScsiEnabledResponse();
  }
  
  public InvalidLocale createInvalidLocale() {
    return new InvalidLocale();
  }
  
  public QueryHealthUpdatesRequestType createQueryHealthUpdatesRequestType() {
    return new QueryHealthUpdatesRequestType();
  }
  
  public HostExtendDiskRequestType createHostExtendDiskRequestType() {
    return new HostExtendDiskRequestType();
  }
  
  public IndependentDiskVMotionNotSupported createIndependentDiskVMotionNotSupported() {
    return new IndependentDiskVMotionNotSupported();
  }
  
  public ImpersonateUserRequestType createImpersonateUserRequestType() {
    return new ImpersonateUserRequestType();
  }
  
  public DetachTagFromVStorageObjectRequestType createDetachTagFromVStorageObjectRequestType() {
    return new DetachTagFromVStorageObjectRequestType();
  }
  
  public EVCModeUnsupportedByHosts createEVCModeUnsupportedByHosts() {
    return new EVCModeUnsupportedByHosts();
  }
  
  public OvfExportFailed createOvfExportFailed() {
    return new OvfExportFailed();
  }
  
  public ListTagsAttachedToVStorageObjectResponse createListTagsAttachedToVStorageObjectResponse() {
    return new ListTagsAttachedToVStorageObjectResponse();
  }
  
  public VslmTagEntry createVslmTagEntry() {
    return new VslmTagEntry();
  }
  
  public UpdateHostImageAcceptanceLevelResponse createUpdateHostImageAcceptanceLevelResponse() {
    return new UpdateHostImageAcceptanceLevelResponse();
  }
  
  public CreateObjectScheduledTaskResponse createCreateObjectScheduledTaskResponse() {
    return new CreateObjectScheduledTaskResponse();
  }
  
  public ResetFirmwareToFactoryDefaultsResponse createResetFirmwareToFactoryDefaultsResponse() {
    return new ResetFirmwareToFactoryDefaultsResponse();
  }
  
  public CertMgrRefreshCertificatesTaskResponse createCertMgrRefreshCertificatesTaskResponse() {
    return new CertMgrRefreshCertificatesTaskResponse();
  }
  
  public RetrieveArgumentDescriptionResponse createRetrieveArgumentDescriptionResponse() {
    return new RetrieveArgumentDescriptionResponse();
  }
  
  public EventArgDesc createEventArgDesc() {
    return new EventArgDesc();
  }
  
  public SuspendVMTaskResponse createSuspendVMTaskResponse() {
    return new SuspendVMTaskResponse();
  }
  
  public HostConfigureVFlashResourceResponse createHostConfigureVFlashResourceResponse() {
    return new HostConfigureVFlashResourceResponse();
  }
  
  public QueryHostConnectionInfoRequestType createQueryHostConnectionInfoRequestType() {
    return new QueryHostConnectionInfoRequestType();
  }
  
  public EVCAdmissionFailedHostSoftwareForMode createEVCAdmissionFailedHostSoftwareForMode() {
    return new EVCAdmissionFailedHostSoftwareForMode();
  }
  
  public RetrieveKmipServerCertRequestType createRetrieveKmipServerCertRequestType() {
    return new RetrieveKmipServerCertRequestType();
  }
  
  public SelectVnicForNicTypeResponse createSelectVnicForNicTypeResponse() {
    return new SelectVnicForNicTypeResponse();
  }
  
  public RetrievePropertiesRequestType createRetrievePropertiesRequestType() {
    return new RetrievePropertiesRequestType();
  }
  
  public UpdateBootDeviceRequestType createUpdateBootDeviceRequestType() {
    return new UpdateBootDeviceRequestType();
  }
  
  public CreateDiskFromSnapshotTaskResponse createCreateDiskFromSnapshotTaskResponse() {
    return new CreateDiskFromSnapshotTaskResponse();
  }
  
  public AddVirtualSwitchResponse createAddVirtualSwitchResponse() {
    return new AddVirtualSwitchResponse();
  }
  
  public AcquireCloneTicketRequestType createAcquireCloneTicketRequestType() {
    return new AcquireCloneTicketRequestType();
  }
  
  public QueryCmmdsRequestType createQueryCmmdsRequestType() {
    return new QueryCmmdsRequestType();
  }
  
  public LeaveCurrentDomainRequestType createLeaveCurrentDomainRequestType() {
    return new LeaveCurrentDomainRequestType();
  }
  
  public InvalidProfileReferenceHost createInvalidProfileReferenceHost() {
    return new InvalidProfileReferenceHost();
  }
  
  public UpdateVStorageObjectPolicyTaskResponse createUpdateVStorageObjectPolicyTaskResponse() {
    return new UpdateVStorageObjectPolicyTaskResponse();
  }
  
  public QueryConfigOptionResponse createQueryConfigOptionResponse() {
    return new QueryConfigOptionResponse();
  }
  
  public VirtualMachineConfigOption createVirtualMachineConfigOption() {
    return new VirtualMachineConfigOption();
  }
  
  public TurnDiskLocatorLedOffTaskResponse createTurnDiskLocatorLedOffTaskResponse() {
    return new TurnDiskLocatorLedOffTaskResponse();
  }
  
  public LicenseEntityNotFound createLicenseEntityNotFound() {
    return new LicenseEntityNotFound();
  }
  
  public MismatchedBundle createMismatchedBundle() {
    return new MismatchedBundle();
  }
  
  public DeleteDatastoreFileTaskResponse createDeleteDatastoreFileTaskResponse() {
    return new DeleteDatastoreFileTaskResponse();
  }
  
  public UnmountVffsVolumeRequestType createUnmountVffsVolumeRequestType() {
    return new UnmountVffsVolumeRequestType();
  }
  
  public HostClearVStorageObjectControlFlagsResponse createHostClearVStorageObjectControlFlagsResponse() {
    return new HostClearVStorageObjectControlFlagsResponse();
  }
  
  public RemoveNetworkResourcePoolResponse createRemoveNetworkResourcePoolResponse() {
    return new RemoveNetworkResourcePoolResponse();
  }
  
  public CheckCustomizationResourcesResponse createCheckCustomizationResourcesResponse() {
    return new CheckCustomizationResourcesResponse();
  }
  
  public QueryDescriptionsResponse createQueryDescriptionsResponse() {
    return new QueryDescriptionsResponse();
  }
  
  public DiagnosticManagerLogDescriptor createDiagnosticManagerLogDescriptor() {
    return new DiagnosticManagerLogDescriptor();
  }
  
  public RemoveFilterResponse createRemoveFilterResponse() {
    return new RemoveFilterResponse();
  }
  
  public InvalidIpmiLoginInfo createInvalidIpmiLoginInfo() {
    return new InvalidIpmiLoginInfo();
  }
  
  public QueryResourceConfigOptionResponse createQueryResourceConfigOptionResponse() {
    return new QueryResourceConfigOptionResponse();
  }
  
  public ResourceConfigOption createResourceConfigOption() {
    return new ResourceConfigOption();
  }
  
  public ResetVMRequestType createResetVMRequestType() {
    return new ResetVMRequestType();
  }
  
  public DetachScsiLunResponse createDetachScsiLunResponse() {
    return new DetachScsiLunResponse();
  }
  
  public MissingNetworkIpConfig createMissingNetworkIpConfig() {
    return new MissingNetworkIpConfig();
  }
  
  public StorageVMotionNotSupported createStorageVMotionNotSupported() {
    return new StorageVMotionNotSupported();
  }
  
  public CannotAccessVmComponent createCannotAccessVmComponent() {
    return new CannotAccessVmComponent();
  }
  
  public DeleteFileInGuestRequestType createDeleteFileInGuestRequestType() {
    return new DeleteFileInGuestRequestType();
  }
  
  public NoGuestHeartbeat createNoGuestHeartbeat() {
    return new NoGuestHeartbeat();
  }
  
  public ContinueRetrievePropertiesExResponse createContinueRetrievePropertiesExResponse() {
    return new ContinueRetrievePropertiesExResponse();
  }
  
  public RetrieveResult createRetrieveResult() {
    return new RetrieveResult();
  }
  
  public OvfNoHostNic createOvfNoHostNic() {
    return new OvfNoHostNic();
  }
  
  public HasPrivilegeOnEntityRequestType createHasPrivilegeOnEntityRequestType() {
    return new HasPrivilegeOnEntityRequestType();
  }
  
  public AbortCustomizationRequestType createAbortCustomizationRequestType() {
    return new AbortCustomizationRequestType();
  }
  
  public FindAllByUuidResponse createFindAllByUuidResponse() {
    return new FindAllByUuidResponse();
  }
  
  public OvfUnexpectedElement createOvfUnexpectedElement() {
    return new OvfUnexpectedElement();
  }
  
  public RescanAllHbaResponse createRescanAllHbaResponse() {
    return new RescanAllHbaResponse();
  }
  
  public TooManyHosts createTooManyHosts() {
    return new TooManyHosts();
  }
  
  public CheckForUpdatesRequestType createCheckForUpdatesRequestType() {
    return new CheckForUpdatesRequestType();
  }
  
  public UpdateDvsCapabilityRequestType createUpdateDvsCapabilityRequestType() {
    return new UpdateDvsCapabilityRequestType();
  }
  
  public DeleteRegistryKeyInGuestResponse createDeleteRegistryKeyInGuestResponse() {
    return new DeleteRegistryKeyInGuestResponse();
  }
  
  public CreateDescriptorRequestType createCreateDescriptorRequestType() {
    return new CreateDescriptorRequestType();
  }
  
  public ReloadVirtualMachineFromPathRequestType createReloadVirtualMachineFromPathRequestType() {
    return new ReloadVirtualMachineFromPathRequestType();
  }
  
  public StageHostPatchTaskResponse createStageHostPatchTaskResponse() {
    return new StageHostPatchTaskResponse();
  }
  
  public FindByUuidResponse createFindByUuidResponse() {
    return new FindByUuidResponse();
  }
  
  public InvalidBundle createInvalidBundle() {
    return new InvalidBundle();
  }
  
  public ExpandVmfsExtentResponse createExpandVmfsExtentResponse() {
    return new ExpandVmfsExtentResponse();
  }
  
  public CannotChangeHaSettingsForFtSecondary createCannotChangeHaSettingsForFtSecondary() {
    return new CannotChangeHaSettingsForFtSecondary();
  }
  
  public ClearSystemEventLogResponse createClearSystemEventLogResponse() {
    return new ClearSystemEventLogResponse();
  }
  
  public HttpNfcLeaseSetManifestChecksumTypeResponse createHttpNfcLeaseSetManifestChecksumTypeResponse() {
    return new HttpNfcLeaseSetManifestChecksumTypeResponse();
  }
  
  public QueryEventsResponse createQueryEventsResponse() {
    return new QueryEventsResponse();
  }
  
  public Event createEvent() {
    return new Event();
  }
  
  public DvsScopeViolated createDvsScopeViolated() {
    return new DvsScopeViolated();
  }
  
  public HostReconcileDatastoreInventoryTaskResponse createHostReconcileDatastoreInventoryTaskResponse() {
    return new HostReconcileDatastoreInventoryTaskResponse();
  }
  
  public ExportVmRequestType createExportVmRequestType() {
    return new ExportVmRequestType();
  }
  
  public InstallDateRequestType createInstallDateRequestType() {
    return new InstallDateRequestType();
  }
  
  public OvfConsumerCallbackFault createOvfConsumerCallbackFault() {
    return new OvfConsumerCallbackFault();
  }
  
  public PlaceVmRequestType createPlaceVmRequestType() {
    return new PlaceVmRequestType();
  }
  
  public PowerOnVAppRequestType createPowerOnVAppRequestType() {
    return new PowerOnVAppRequestType();
  }
  
  public CheckInstantCloneTaskResponse createCheckInstantCloneTaskResponse() {
    return new CheckInstantCloneTaskResponse();
  }
  
  public RegisterKmipServerResponse createRegisterKmipServerResponse() {
    return new RegisterKmipServerResponse();
  }
  
  public RemoveVirtualSwitchRequestType createRemoveVirtualSwitchRequestType() {
    return new RemoveVirtualSwitchRequestType();
  }
  
  public RecordReplayDisabled createRecordReplayDisabled() {
    return new RecordReplayDisabled();
  }
  
  public AcquireMksTicketResponse createAcquireMksTicketResponse() {
    return new AcquireMksTicketResponse();
  }
  
  public VirtualMachineMksTicket createVirtualMachineMksTicket() {
    return new VirtualMachineMksTicket();
  }
  
  public CreateVirtualDiskRequestType createCreateVirtualDiskRequestType() {
    return new CreateVirtualDiskRequestType();
  }
  
  public UnmapVmfsVolumeExTaskResponse createUnmapVmfsVolumeExTaskResponse() {
    return new UnmapVmfsVolumeExTaskResponse();
  }
  
  public CreateSnapshotTaskResponse createCreateSnapshotTaskResponse() {
    return new CreateSnapshotTaskResponse();
  }
  
  public UnregisterAndDestroyRequestType createUnregisterAndDestroyRequestType() {
    return new UnregisterAndDestroyRequestType();
  }
  
  public CreateClusterRequestType createCreateClusterRequestType() {
    return new CreateClusterRequestType();
  }
  
  public ReplicationVmInProgressFault createReplicationVmInProgressFault() {
    return new ReplicationVmInProgressFault();
  }
  
  public UpdateDiskPartitionsRequestType createUpdateDiskPartitionsRequestType() {
    return new UpdateDiskPartitionsRequestType();
  }
  
  public SetScreenResolutionRequestType createSetScreenResolutionRequestType() {
    return new SetScreenResolutionRequestType();
  }
  
  public InaccessibleFTMetadataDatastore createInaccessibleFTMetadataDatastore() {
    return new InaccessibleFTMetadataDatastore();
  }
  
  public ApplicationQuiesceFault createApplicationQuiesceFault() {
    return new ApplicationQuiesceFault();
  }
  
  public MissingBmcSupport createMissingBmcSupport() {
    return new MissingBmcSupport();
  }
  
  public RectifyDvsHostRequestType createRectifyDvsHostRequestType() {
    return new RectifyDvsHostRequestType();
  }
  
  public CannotChangeVsanClusterUuid createCannotChangeVsanClusterUuid() {
    return new CannotChangeVsanClusterUuid();
  }
  
  public CheckForUpdatesResponse createCheckForUpdatesResponse() {
    return new CheckForUpdatesResponse();
  }
  
  public UpdateSet createUpdateSet() {
    return new UpdateSet();
  }
  
  public AbdicateDomOwnershipResponse createAbdicateDomOwnershipResponse() {
    return new AbdicateDomOwnershipResponse();
  }
  
  public SSLDisabledFault createSSLDisabledFault() {
    return new SSLDisabledFault();
  }
  
  public CanProvisionObjectsResponse createCanProvisionObjectsResponse() {
    return new CanProvisionObjectsResponse();
  }
  
  public VsanPolicySatisfiability createVsanPolicySatisfiability() {
    return new VsanPolicySatisfiability();
  }
  
  public DisableClusteredVmdkSupportResponse createDisableClusteredVmdkSupportResponse() {
    return new DisableClusteredVmdkSupportResponse();
  }
  
  public CheckCustomizationSpecResponse createCheckCustomizationSpecResponse() {
    return new CheckCustomizationSpecResponse();
  }
  
  public CreateVMTaskResponse createCreateVMTaskResponse() {
    return new CreateVMTaskResponse();
  }
  
  public RollbackFailure createRollbackFailure() {
    return new RollbackFailure();
  }
  
  public DeleteDirectoryResponse createDeleteDirectoryResponse() {
    return new DeleteDirectoryResponse();
  }
  
  public UnmountDiskMappingTaskResponse createUnmountDiskMappingTaskResponse() {
    return new UnmountDiskMappingTaskResponse();
  }
  
  public ToolsAlreadyUpgraded createToolsAlreadyUpgraded() {
    return new ToolsAlreadyUpgraded();
  }
  
  public ToolsUpgradeCancelled createToolsUpgradeCancelled() {
    return new ToolsUpgradeCancelled();
  }
  
  public QueryDvsByUuidResponse createQueryDvsByUuidResponse() {
    return new QueryDvsByUuidResponse();
  }
  
  public MarkForRemovalRequestType createMarkForRemovalRequestType() {
    return new MarkForRemovalRequestType();
  }
  
  public QueryHostPatchTaskResponse createQueryHostPatchTaskResponse() {
    return new QueryHostPatchTaskResponse();
  }
  
  public RemoveInternetScsiSendTargetsResponse createRemoveInternetScsiSendTargetsResponse() {
    return new RemoveInternetScsiSendTargetsResponse();
  }
  
  public NoVcManagedIpConfigured createNoVcManagedIpConfigured() {
    return new NoVcManagedIpConfigured();
  }
  
  public SetClusterModeTaskResponse createSetClusterModeTaskResponse() {
    return new SetClusterModeTaskResponse();
  }
  
  public SetCollectorPageSizeRequestType createSetCollectorPageSizeRequestType() {
    return new SetCollectorPageSizeRequestType();
  }
  
  public FormatVffsRequestType createFormatVffsRequestType() {
    return new FormatVffsRequestType();
  }
  
  public DisableSmartCardAuthenticationRequestType createDisableSmartCardAuthenticationRequestType() {
    return new DisableSmartCardAuthenticationRequestType();
  }
  
  public UploadClientCertRequestType createUploadClientCertRequestType() {
    return new UploadClientCertRequestType();
  }
  
  public DiskIsNonLocal createDiskIsNonLocal() {
    return new DiskIsNonLocal();
  }
  
  public InsufficientStorageIops createInsufficientStorageIops() {
    return new InsufficientStorageIops();
  }
  
  public ExtendVmfsDatastoreResponse createExtendVmfsDatastoreResponse() {
    return new ExtendVmfsDatastoreResponse();
  }
  
  public UpdateServicePolicyRequestType createUpdateServicePolicyRequestType() {
    return new UpdateServicePolicyRequestType();
  }
  
  public PatchIntegrityError createPatchIntegrityError() {
    return new PatchIntegrityError();
  }
  
  public OvfUnknownDeviceBacking createOvfUnknownDeviceBacking() {
    return new OvfUnknownDeviceBacking();
  }
  
  public HttpNfcLeaseAbortRequestType createHttpNfcLeaseAbortRequestType() {
    return new HttpNfcLeaseAbortRequestType();
  }
  
  public PatchBinariesNotFound createPatchBinariesNotFound() {
    return new PatchBinariesNotFound();
  }
  
  public QueryProfileStructureRequestType createQueryProfileStructureRequestType() {
    return new QueryProfileStructureRequestType();
  }
  
  public NotImplemented createNotImplemented() {
    return new NotImplemented();
  }
  
  public RemoveLicenseResponse createRemoveLicenseResponse() {
    return new RemoveLicenseResponse();
  }
  
  public QueryVmfsDatastoreCreateOptionsResponse createQueryVmfsDatastoreCreateOptionsResponse() {
    return new QueryVmfsDatastoreCreateOptionsResponse();
  }
  
  public VmfsDatastoreOption createVmfsDatastoreOption() {
    return new VmfsDatastoreOption();
  }
  
  public ReplicationVmConfigFault createReplicationVmConfigFault() {
    return new ReplicationVmConfigFault();
  }
  
  public QueryDvsCheckCompatibilityRequestType createQueryDvsCheckCompatibilityRequestType() {
    return new QueryDvsCheckCompatibilityRequestType();
  }
  
  public GuestRegistryValueFault createGuestRegistryValueFault() {
    return new GuestRegistryValueFault();
  }
  
  public OvfCpuCompatibilityCheckNotSupported createOvfCpuCompatibilityCheckNotSupported() {
    return new OvfCpuCompatibilityCheckNotSupported();
  }
  
  public UpdateLinkedChildrenRequestType createUpdateLinkedChildrenRequestType() {
    return new UpdateLinkedChildrenRequestType();
  }
  
  public ListSmartCardTrustAnchorsRequestType createListSmartCardTrustAnchorsRequestType() {
    return new ListSmartCardTrustAnchorsRequestType();
  }
  
  public MoveIntoFolderRequestType createMoveIntoFolderRequestType() {
    return new MoveIntoFolderRequestType();
  }
  
  public MountToolsInstallerRequestType createMountToolsInstallerRequestType() {
    return new MountToolsInstallerRequestType();
  }
  
  public RenameSnapshotRequestType createRenameSnapshotRequestType() {
    return new RenameSnapshotRequestType();
  }
  
  public StartRecordingTaskResponse createStartRecordingTaskResponse() {
    return new StartRecordingTaskResponse();
  }
  
  public RebootRequired createRebootRequired() {
    return new RebootRequired();
  }
  
  public HostUpdateVStorageObjectMetadataTaskResponse createHostUpdateVStorageObjectMetadataTaskResponse() {
    return new HostUpdateVStorageObjectMetadataTaskResponse();
  }
  
  public RemoveCustomFieldDefRequestType createRemoveCustomFieldDefRequestType() {
    return new RemoveCustomFieldDefRequestType();
  }
  
  public DomainNotFound createDomainNotFound() {
    return new DomainNotFound();
  }
  
  public RemoveKmipServerRequestType createRemoveKmipServerRequestType() {
    return new RemoveKmipServerRequestType();
  }
  
  public SnapshotMoveFromNonHomeNotSupported createSnapshotMoveFromNonHomeNotSupported() {
    return new SnapshotMoveFromNonHomeNotSupported();
  }
  
  public FetchSystemEventLogRequestType createFetchSystemEventLogRequestType() {
    return new FetchSystemEventLogRequestType();
  }
  
  public QueryPerfResponse createQueryPerfResponse() {
    return new QueryPerfResponse();
  }
  
  public PerfEntityMetricBase createPerfEntityMetricBase() {
    return new PerfEntityMetricBase();
  }
  
  public VolumeEditorError createVolumeEditorError() {
    return new VolumeEditorError();
  }
  
  public StorageDrsCannotMoveManuallyPlacedSwapFile createStorageDrsCannotMoveManuallyPlacedSwapFile() {
    return new StorageDrsCannotMoveManuallyPlacedSwapFile();
  }
  
  public RecommendDatastoresResponse createRecommendDatastoresResponse() {
    return new RecommendDatastoresResponse();
  }
  
  public StoragePlacementResult createStoragePlacementResult() {
    return new StoragePlacementResult();
  }
  
  public GenerateClientCsrResponse createGenerateClientCsrResponse() {
    return new GenerateClientCsrResponse();
  }
  
  public QueryVirtualDiskGeometryResponse createQueryVirtualDiskGeometryResponse() {
    return new QueryVirtualDiskGeometryResponse();
  }
  
  public HostDiskDimensionsChs createHostDiskDimensionsChs() {
    return new HostDiskDimensionsChs();
  }
  
  public UpdateInternetScsiNameRequestType createUpdateInternetScsiNameRequestType() {
    return new UpdateInternetScsiNameRequestType();
  }
  
  public InitiateFailoverTaskResponse createInitiateFailoverTaskResponse() {
    return new InitiateFailoverTaskResponse();
  }
  
  public MethodAlreadyDisabledFault createMethodAlreadyDisabledFault() {
    return new MethodAlreadyDisabledFault();
  }
  
  public QueryProfileStructureResponse createQueryProfileStructureResponse() {
    return new QueryProfileStructureResponse();
  }
  
  public ProfileProfileStructure createProfileProfileStructure() {
    return new ProfileProfileStructure();
  }
  
  public PutUsbScanCodesRequestType createPutUsbScanCodesRequestType() {
    return new PutUsbScanCodesRequestType();
  }
  
  public GenerateSelfSignedClientCertResponse createGenerateSelfSignedClientCertResponse() {
    return new GenerateSelfSignedClientCertResponse();
  }
  
  public MemoryHotPlugNotSupported createMemoryHotPlugNotSupported() {
    return new MemoryHotPlugNotSupported();
  }
  
  public QueryDisksUsingFilterResponse createQueryDisksUsingFilterResponse() {
    return new QueryDisksUsingFilterResponse();
  }
  
  public VirtualDiskId createVirtualDiskId() {
    return new VirtualDiskId();
  }
  
  public DeployVchaTaskResponse createDeployVchaTaskResponse() {
    return new DeployVchaTaskResponse();
  }
  
  public UpdateDiskPartitionsResponse createUpdateDiskPartitionsResponse() {
    return new UpdateDiskPartitionsResponse();
  }
  
  public WillResetSnapshotDirectory createWillResetSnapshotDirectory() {
    return new WillResetSnapshotDirectory();
  }
  
  public HostVStorageObjectRetrieveSnapshotInfoResponse createHostVStorageObjectRetrieveSnapshotInfoResponse() {
    return new HostVStorageObjectRetrieveSnapshotInfoResponse();
  }
  
  public VStorageObjectSnapshotInfo createVStorageObjectSnapshotInfo() {
    return new VStorageObjectSnapshotInfo();
  }
  
  public RetrieveEntityScheduledTaskRequestType createRetrieveEntityScheduledTaskRequestType() {
    return new RetrieveEntityScheduledTaskRequestType();
  }
  
  public GatewayConnectFault createGatewayConnectFault() {
    return new GatewayConnectFault();
  }
  
  public DestroyVffsRequestType createDestroyVffsRequestType() {
    return new DestroyVffsRequestType();
  }
  
  public ListGuestAliasesResponse createListGuestAliasesResponse() {
    return new ListGuestAliasesResponse();
  }
  
  public GuestAliases createGuestAliases() {
    return new GuestAliases();
  }
  
  public UnregisterHealthUpdateProviderResponse createUnregisterHealthUpdateProviderResponse() {
    return new UnregisterHealthUpdateProviderResponse();
  }
  
  public InaccessibleVFlashSource createInaccessibleVFlashSource() {
    return new InaccessibleVFlashSource();
  }
  
  public RefreshNetworkSystemRequestType createRefreshNetworkSystemRequestType() {
    return new RefreshNetworkSystemRequestType();
  }
  
  public UpdateProductLockerLocationRequestType createUpdateProductLockerLocationRequestType() {
    return new UpdateProductLockerLocationRequestType();
  }
  
  public CreatePropertyCollectorResponse createCreatePropertyCollectorResponse() {
    return new CreatePropertyCollectorResponse();
  }
  
  public RunVsanPhysicalDiskDiagnosticsRequestType createRunVsanPhysicalDiskDiagnosticsRequestType() {
    return new RunVsanPhysicalDiskDiagnosticsRequestType();
  }
  
  public QueryVsanObjectsResponse createQueryVsanObjectsResponse() {
    return new QueryVsanObjectsResponse();
  }
  
  public OvfElementInvalidValue createOvfElementInvalidValue() {
    return new OvfElementInvalidValue();
  }
  
  public DetachDiskTaskResponse createDetachDiskTaskResponse() {
    return new DetachDiskTaskResponse();
  }
  
  public ExitMaintenanceModeTaskResponse createExitMaintenanceModeTaskResponse() {
    return new ExitMaintenanceModeTaskResponse();
  }
  
  public OvfUnsupportedAttributeValue createOvfUnsupportedAttributeValue() {
    return new OvfUnsupportedAttributeValue();
  }
  
  public InflateDiskRequestType createInflateDiskRequestType() {
    return new InflateDiskRequestType();
  }
  
  public RemoveDatastoreRequestType createRemoveDatastoreRequestType() {
    return new RemoveDatastoreRequestType();
  }
  
  public EVCAdmissionFailedCPUModelForMode createEVCAdmissionFailedCPUModelForMode() {
    return new EVCAdmissionFailedCPUModelForMode();
  }
  
  public InvalidClientCertificate createInvalidClientCertificate() {
    return new InvalidClientCertificate();
  }
  
  public VmFaultToleranceConfigIssueWrapper createVmFaultToleranceConfigIssueWrapper() {
    return new VmFaultToleranceConfigIssueWrapper();
  }
  
  public RetrieveAnswerFileResponse createRetrieveAnswerFileResponse() {
    return new RetrieveAnswerFileResponse();
  }
  
  public AnswerFile createAnswerFile() {
    return new AnswerFile();
  }
  
  public DeleteFileResponse createDeleteFileResponse() {
    return new DeleteFileResponse();
  }
  
  public QueryIPAllocationsRequestType createQueryIPAllocationsRequestType() {
    return new QueryIPAllocationsRequestType();
  }
  
  public RescanVmfsRequestType createRescanVmfsRequestType() {
    return new RescanVmfsRequestType();
  }
  
  public DestroyPropertyCollectorResponse createDestroyPropertyCollectorResponse() {
    return new DestroyPropertyCollectorResponse();
  }
  
  public ReconfigureClusterTaskResponse createReconfigureClusterTaskResponse() {
    return new ReconfigureClusterTaskResponse();
  }
  
  public FileFault createFileFault() {
    return new FileFault();
  }
  
  public InvalidHostName createInvalidHostName() {
    return new InvalidHostName();
  }
  
  public UpgradeVMRequestType createUpgradeVMRequestType() {
    return new UpgradeVMRequestType();
  }
  
  public NoPeerHostFound createNoPeerHostFound() {
    return new NoPeerHostFound();
  }
  
  public RemoveServiceConsoleVirtualNicRequestType createRemoveServiceConsoleVirtualNicRequestType() {
    return new RemoveServiceConsoleVirtualNicRequestType();
  }
  
  public GetVsanObjExtAttrsResponse createGetVsanObjExtAttrsResponse() {
    return new GetVsanObjExtAttrsResponse();
  }
  
  public QueryPhysicalVsanDisksRequestType createQueryPhysicalVsanDisksRequestType() {
    return new QueryPhysicalVsanDisksRequestType();
  }
  
  public SetTaskDescriptionRequestType createSetTaskDescriptionRequestType() {
    return new SetTaskDescriptionRequestType();
  }
  
  public UpdateHostSpecificationResponse createUpdateHostSpecificationResponse() {
    return new UpdateHostSpecificationResponse();
  }
  
  public CreateProfileRequestType createCreateProfileRequestType() {
    return new CreateProfileRequestType();
  }
  
  public DisableHyperThreadingRequestType createDisableHyperThreadingRequestType() {
    return new DisableHyperThreadingRequestType();
  }
  
  public ScheduleReconcileDatastoreInventoryResponse createScheduleReconcileDatastoreInventoryResponse() {
    return new ScheduleReconcileDatastoreInventoryResponse();
  }
  
  public ConvertNamespacePathToUuidPathRequestType createConvertNamespacePathToUuidPathRequestType() {
    return new ConvertNamespacePathToUuidPathRequestType();
  }
  
  public RemoveInternetScsiStaticTargetsRequestType createRemoveInternetScsiStaticTargetsRequestType() {
    return new RemoveInternetScsiStaticTargetsRequestType();
  }
  
  public InsufficientHostCpuCapacityFault createInsufficientHostCpuCapacityFault() {
    return new InsufficientHostCpuCapacityFault();
  }
  
  public HostReconcileDatastoreInventoryRequestType createHostReconcileDatastoreInventoryRequestType() {
    return new HostReconcileDatastoreInventoryRequestType();
  }
  
  public CloneVStorageObjectRequestType createCloneVStorageObjectRequestType() {
    return new CloneVStorageObjectRequestType();
  }
  
  public SnapshotDisabled createSnapshotDisabled() {
    return new SnapshotDisabled();
  }
  
  public ExportSnapshotRequestType createExportSnapshotRequestType() {
    return new ExportSnapshotRequestType();
  }
  
  public StorageDrsUnableToMoveFiles createStorageDrsUnableToMoveFiles() {
    return new StorageDrsUnableToMoveFiles();
  }
  
  public QueryVMotionCompatibilityExRequestType createQueryVMotionCompatibilityExRequestType() {
    return new QueryVMotionCompatibilityExRequestType();
  }
  
  public CreateVAppRequestType createCreateVAppRequestType() {
    return new CreateVAppRequestType();
  }
  
  public RuleViolation createRuleViolation() {
    return new RuleViolation();
  }
  
  public ReconcileDatastoreInventoryRequestType createReconcileDatastoreInventoryRequestType() {
    return new ReconcileDatastoreInventoryRequestType();
  }
  
  public StorageDrsCannotMoveTemplate createStorageDrsCannotMoveTemplate() {
    return new StorageDrsCannotMoveTemplate();
  }
  
  public ResetVMTaskResponse createResetVMTaskResponse() {
    return new ResetVMTaskResponse();
  }
  
  public ReleaseManagedSnapshotRequestType createReleaseManagedSnapshotRequestType() {
    return new ReleaseManagedSnapshotRequestType();
  }
  
  public UnexpectedFault createUnexpectedFault() {
    return new UnexpectedFault();
  }
  
  public TerminateFaultTolerantVMTaskResponse createTerminateFaultTolerantVMTaskResponse() {
    return new TerminateFaultTolerantVMTaskResponse();
  }
  
  public QueryMigrationDependenciesRequestType createQueryMigrationDependenciesRequestType() {
    return new QueryMigrationDependenciesRequestType();
  }
  
  public DiskIsLastRemainingNonSSD createDiskIsLastRemainingNonSSD() {
    return new DiskIsLastRemainingNonSSD();
  }
  
  public ExtendVirtualDiskTaskResponse createExtendVirtualDiskTaskResponse() {
    return new ExtendVirtualDiskTaskResponse();
  }
  
  public NumVirtualCpusNotSupported createNumVirtualCpusNotSupported() {
    return new NumVirtualCpusNotSupported();
  }
  
  public CannotChangeVsanNodeUuid createCannotChangeVsanNodeUuid() {
    return new CannotChangeVsanNodeUuid();
  }
  
  public GatewayToHostAuthFault createGatewayToHostAuthFault() {
    return new GatewayToHostAuthFault();
  }
  
  public NoDiskFound createNoDiskFound() {
    return new NoDiskFound();
  }
  
  public RemoveSnapshotRequestType createRemoveSnapshotRequestType() {
    return new RemoveSnapshotRequestType();
  }
  
  public DeleteVsanObjectsRequestType createDeleteVsanObjectsRequestType() {
    return new DeleteVsanObjectsRequestType();
  }
  
  public UpdateHostSubSpecificationRequestType createUpdateHostSubSpecificationRequestType() {
    return new UpdateHostSubSpecificationRequestType();
  }
  
  public MergeDvsRequestType createMergeDvsRequestType() {
    return new MergeDvsRequestType();
  }
  
  public ListRegistryValuesInGuestRequestType createListRegistryValuesInGuestRequestType() {
    return new ListRegistryValuesInGuestRequestType();
  }
  
  public HostImageConfigGetProfileRequestType createHostImageConfigGetProfileRequestType() {
    return new HostImageConfigGetProfileRequestType();
  }
  
  public CreatePerfIntervalResponse createCreatePerfIntervalResponse() {
    return new CreatePerfIntervalResponse();
  }
  
  public OvfUnsupportedSection createOvfUnsupportedSection() {
    return new OvfUnsupportedSection();
  }
  
  public PasswordExpired createPasswordExpired() {
    return new PasswordExpired();
  }
  
  public HostSetVStorageObjectControlFlagsRequestType createHostSetVStorageObjectControlFlagsRequestType() {
    return new HostSetVStorageObjectControlFlagsRequestType();
  }
  
  public SwitchNotInUpgradeMode createSwitchNotInUpgradeMode() {
    return new SwitchNotInUpgradeMode();
  }
  
  public InvalidBmcRole createInvalidBmcRole() {
    return new InvalidBmcRole();
  }
  
  public EnableAlarmResponse createEnableAlarmResponse() {
    return new EnableAlarmResponse();
  }
  
  public SuspendVAppRequestType createSuspendVAppRequestType() {
    return new SuspendVAppRequestType();
  }
  
  public PerformDvsProductSpecOperationTaskResponse createPerformDvsProductSpecOperationTaskResponse() {
    return new PerformDvsProductSpecOperationTaskResponse();
  }
  
  public FaultToleranceAntiAffinityViolated createFaultToleranceAntiAffinityViolated() {
    return new FaultToleranceAntiAffinityViolated();
  }
  
  public ChangeFileAttributesInGuestRequestType createChangeFileAttributesInGuestRequestType() {
    return new ChangeFileAttributesInGuestRequestType();
  }
  
  public CreatePassiveNodeRequestType createCreatePassiveNodeRequestType() {
    return new CreatePassiveNodeRequestType();
  }
  
  public QueryNFSUserResponse createQueryNFSUserResponse() {
    return new QueryNFSUserResponse();
  }
  
  public HostNasVolumeUserInfo createHostNasVolumeUserInfo() {
    return new HostNasVolumeUserInfo();
  }
  
  public CancelRecommendationResponse createCancelRecommendationResponse() {
    return new CancelRecommendationResponse();
  }
  
  public FindAllByDnsNameRequestType createFindAllByDnsNameRequestType() {
    return new FindAllByDnsNameRequestType();
  }
  
  public UpdateAnswerFileTaskResponse createUpdateAnswerFileTaskResponse() {
    return new UpdateAnswerFileTaskResponse();
  }
  
  public QueryConfigOptionExResponse createQueryConfigOptionExResponse() {
    return new QueryConfigOptionExResponse();
  }
  
  public CreateCustomizationSpecRequestType createCreateCustomizationSpecRequestType() {
    return new CreateCustomizationSpecRequestType();
  }
  
  public UpdateVirtualNicRequestType createUpdateVirtualNicRequestType() {
    return new UpdateVirtualNicRequestType();
  }
  
  public SetFieldRequestType createSetFieldRequestType() {
    return new SetFieldRequestType();
  }
  
  public ExportVAppRequestType createExportVAppRequestType() {
    return new ExportVAppRequestType();
  }
  
  public InitiateFileTransferToGuestResponse createInitiateFileTransferToGuestResponse() {
    return new InitiateFileTransferToGuestResponse();
  }
  
  public EVCAdmissionFailedCPUFeaturesForMode createEVCAdmissionFailedCPUFeaturesForMode() {
    return new EVCAdmissionFailedCPUFeaturesForMode();
  }
  
  public GenerateHostProfileTaskListTaskResponse createGenerateHostProfileTaskListTaskResponse() {
    return new GenerateHostProfileTaskListTaskResponse();
  }
  
  public QueryConfiguredModuleOptionStringResponse createQueryConfiguredModuleOptionStringResponse() {
    return new QueryConfiguredModuleOptionStringResponse();
  }
  
  public UpdateDVSLacpGroupConfigTaskResponse createUpdateDVSLacpGroupConfigTaskResponse() {
    return new UpdateDVSLacpGroupConfigTaskResponse();
  }
  
  public AddDVPortgroupRequestType createAddDVPortgroupRequestType() {
    return new AddDVPortgroupRequestType();
  }
  
  public DVSRollbackTaskResponse createDVSRollbackTaskResponse() {
    return new DVSRollbackTaskResponse();
  }
  
  public AnswerFileUpdateFailed createAnswerFileUpdateFailed() {
    return new AnswerFileUpdateFailed();
  }
  
  public PrepareVchaRequestType createPrepareVchaRequestType() {
    return new PrepareVchaRequestType();
  }
  
  public QueryStorageArrayTypePolicyOptionsRequestType createQueryStorageArrayTypePolicyOptionsRequestType() {
    return new QueryStorageArrayTypePolicyOptionsRequestType();
  }
  
  public InvalidIpmiMacAddress createInvalidIpmiMacAddress() {
    return new InvalidIpmiMacAddress();
  }
  
  public NotSupportedHost createNotSupportedHost() {
    return new NotSupportedHost();
  }
  
  public QueryStorageArrayTypePolicyOptionsResponse createQueryStorageArrayTypePolicyOptionsResponse() {
    return new QueryStorageArrayTypePolicyOptionsResponse();
  }
  
  public HostStorageArrayTypePolicyOption createHostStorageArrayTypePolicyOption() {
    return new HostStorageArrayTypePolicyOption();
  }
  
  public UpdateVmfsUnmapPriorityRequestType createUpdateVmfsUnmapPriorityRequestType() {
    return new UpdateVmfsUnmapPriorityRequestType();
  }
  
  public StopServiceResponse createStopServiceResponse() {
    return new StopServiceResponse();
  }
  
  public CreateTemporaryDirectoryInGuestRequestType createCreateTemporaryDirectoryInGuestRequestType() {
    return new CreateTemporaryDirectoryInGuestRequestType();
  }
  
  public EVCAdmissionFailedCPUModel createEVCAdmissionFailedCPUModel() {
    return new EVCAdmissionFailedCPUModel();
  }
  
  public ExportProfileResponse createExportProfileResponse() {
    return new ExportProfileResponse();
  }
  
  public OvfPropertyValue createOvfPropertyValue() {
    return new OvfPropertyValue();
  }
  
  public VspanPortConflict createVspanPortConflict() {
    return new VspanPortConflict();
  }
  
  public EightHostLimitViolated createEightHostLimitViolated() {
    return new EightHostLimitViolated();
  }
  
  public ToolsImageNotAvailable createToolsImageNotAvailable() {
    return new ToolsImageNotAvailable();
  }
  
  public QueryAnswerFileStatusRequestType createQueryAnswerFileStatusRequestType() {
    return new QueryAnswerFileStatusRequestType();
  }
  
  public NumVirtualCpusIncompatible createNumVirtualCpusIncompatible() {
    return new NumVirtualCpusIncompatible();
  }
  
  public GuestComponentsOutOfDate createGuestComponentsOutOfDate() {
    return new GuestComponentsOutOfDate();
  }
  
  public QueryDisksForVsanResponse createQueryDisksForVsanResponse() {
    return new QueryDisksForVsanResponse();
  }
  
  public VsanHostDiskResult createVsanHostDiskResult() {
    return new VsanHostDiskResult();
  }
  
  public HostRetrieveVStorageObjectMetadataResponse createHostRetrieveVStorageObjectMetadataResponse() {
    return new HostRetrieveVStorageObjectMetadataResponse();
  }
  
  public KeyValue createKeyValue() {
    return new KeyValue();
  }
  
  public PerformVsanUpgradePreflightCheckRequestType createPerformVsanUpgradePreflightCheckRequestType() {
    return new PerformVsanUpgradePreflightCheckRequestType();
  }
  
  public ClockSkew createClockSkew() {
    return new ClockSkew();
  }
  
  public SetVirtualDiskUuidRequestType createSetVirtualDiskUuidRequestType() {
    return new SetVirtualDiskUuidRequestType();
  }
  
  public RelocateVStorageObjectRequestType createRelocateVStorageObjectRequestType() {
    return new RelocateVStorageObjectRequestType();
  }
  
  public NoActiveHostInCluster createNoActiveHostInCluster() {
    return new NoActiveHostInCluster();
  }
  
  public VmFaultToleranceTooManyFtVcpusOnHost createVmFaultToleranceTooManyFtVcpusOnHost() {
    return new VmFaultToleranceTooManyFtVcpusOnHost();
  }
  
  public ReconfigureHostForDASTaskResponse createReconfigureHostForDASTaskResponse() {
    return new ReconfigureHostForDASTaskResponse();
  }
  
  public TurnDiskLocatorLedOffRequestType createTurnDiskLocatorLedOffRequestType() {
    return new TurnDiskLocatorLedOffRequestType();
  }
  
  public EVCModeIllegalByVendor createEVCModeIllegalByVendor() {
    return new EVCModeIllegalByVendor();
  }
  
  public CheckHostPatchTaskResponse createCheckHostPatchTaskResponse() {
    return new CheckHostPatchTaskResponse();
  }
  
  public WaitForUpdatesExResponse createWaitForUpdatesExResponse() {
    return new WaitForUpdatesExResponse();
  }
  
  public MaintenanceModeFileMove createMaintenanceModeFileMove() {
    return new MaintenanceModeFileMove();
  }
  
  public AbandonHciWorkflowResponse createAbandonHciWorkflowResponse() {
    return new AbandonHciWorkflowResponse();
  }
  
  public UpdatePortGroupResponse createUpdatePortGroupResponse() {
    return new UpdatePortGroupResponse();
  }
  
  public ListCACertificateRevocationListsRequestType createListCACertificateRevocationListsRequestType() {
    return new ListCACertificateRevocationListsRequestType();
  }
  
  public OvfUnsupportedDiskProvisioning createOvfUnsupportedDiskProvisioning() {
    return new OvfUnsupportedDiskProvisioning();
  }
  
  public HostRelocateVStorageObjectRequestType createHostRelocateVStorageObjectRequestType() {
    return new HostRelocateVStorageObjectRequestType();
  }
  
  public GetPublicKeyRequestType createGetPublicKeyRequestType() {
    return new GetPublicKeyRequestType();
  }
  
  public AddPortGroupResponse createAddPortGroupResponse() {
    return new AddPortGroupResponse();
  }
  
  public ResetCounterLevelMappingRequestType createResetCounterLevelMappingRequestType() {
    return new ResetCounterLevelMappingRequestType();
  }
  
  public RetrieveRolePermissionsResponse createRetrieveRolePermissionsResponse() {
    return new RetrieveRolePermissionsResponse();
  }
  
  public Permission createPermission() {
    return new Permission();
  }
  
  public ImportUnmanagedSnapshotResponse createImportUnmanagedSnapshotResponse() {
    return new ImportUnmanagedSnapshotResponse();
  }
  
  public QueryPnicStatusResponse createQueryPnicStatusResponse() {
    return new QueryPnicStatusResponse();
  }
  
  public IscsiStatus createIscsiStatus() {
    return new IscsiStatus();
  }
  
  public AddInternetScsiStaticTargetsResponse createAddInternetScsiStaticTargetsResponse() {
    return new AddInternetScsiStaticTargetsResponse();
  }
  
  public NotSupportedHostForVmcp createNotSupportedHostForVmcp() {
    return new NotSupportedHostForVmcp();
  }
  
  public UpdateSystemUsersResponse createUpdateSystemUsersResponse() {
    return new UpdateSystemUsersResponse();
  }
  
  public MarkAsNonSsdRequestType createMarkAsNonSsdRequestType() {
    return new MarkAsNonSsdRequestType();
  }
  
  public RefreshDateTimeSystemResponse createRefreshDateTimeSystemResponse() {
    return new RefreshDateTimeSystemResponse();
  }
  
  public RestartServiceConsoleVirtualNicResponse createRestartServiceConsoleVirtualNicResponse() {
    return new RestartServiceConsoleVirtualNicResponse();
  }
  
  public VMotionNotLicensed createVMotionNotLicensed() {
    return new VMotionNotLicensed();
  }
  
  public GuestRegistryKeyHasSubkeys createGuestRegistryKeyHasSubkeys() {
    return new GuestRegistryKeyHasSubkeys();
  }
  
  public ReconfigureDatacenterTaskResponse createReconfigureDatacenterTaskResponse() {
    return new ReconfigureDatacenterTaskResponse();
  }
  
  public ApplyEntitiesConfigTaskResponse createApplyEntitiesConfigTaskResponse() {
    return new ApplyEntitiesConfigTaskResponse();
  }
  
  public NonPersistentDisksNotSupported createNonPersistentDisksNotSupported() {
    return new NonPersistentDisksNotSupported();
  }
  
  public RetrieveVStorageObjectRequestType createRetrieveVStorageObjectRequestType() {
    return new RetrieveVStorageObjectRequestType();
  }
  
  public CreateChildVMRequestType createCreateChildVMRequestType() {
    return new CreateChildVMRequestType();
  }
  
  public RemoveAllSnapshotsTaskResponse createRemoveAllSnapshotsTaskResponse() {
    return new RemoveAllSnapshotsTaskResponse();
  }
  
  public DestroyChildrenResponse createDestroyChildrenResponse() {
    return new DestroyChildrenResponse();
  }
  
  public UpdateDateTimeConfigResponse createUpdateDateTimeConfigResponse() {
    return new UpdateDateTimeConfigResponse();
  }
  
  public CreateClusterExResponse createCreateClusterExResponse() {
    return new CreateClusterExResponse();
  }
  
  public ReconfigureVirtualMachineReservationRequestType createReconfigureVirtualMachineReservationRequestType() {
    return new ReconfigureVirtualMachineReservationRequestType();
  }
  
  public Timedout createTimedout() {
    return new Timedout();
  }
  
  public EVCAdmissionFailedCPUVendorUnknown createEVCAdmissionFailedCPUVendorUnknown() {
    return new EVCAdmissionFailedCPUVendorUnknown();
  }
  
  public InvalidNetworkResource createInvalidNetworkResource() {
    return new InvalidNetworkResource();
  }
  
  public RestoreFirmwareConfigurationResponse createRestoreFirmwareConfigurationResponse() {
    return new RestoreFirmwareConfigurationResponse();
  }
  
  public AttachScsiLunResponse createAttachScsiLunResponse() {
    return new AttachScsiLunResponse();
  }
  
  public ParseDescriptorResponse createParseDescriptorResponse() {
    return new ParseDescriptorResponse();
  }
  
  public OvfParseDescriptorResult createOvfParseDescriptorResult() {
    return new OvfParseDescriptorResult();
  }
  
  public UpdateHostCustomizationsTaskResponse createUpdateHostCustomizationsTaskResponse() {
    return new UpdateHostCustomizationsTaskResponse();
  }
  
  public InvalidCAMCertificate createInvalidCAMCertificate() {
    return new InvalidCAMCertificate();
  }
  
  public ResetListViewResponse createResetListViewResponse() {
    return new ResetListViewResponse();
  }
  
  public ReconfigureVirtualMachineReservationResponse createReconfigureVirtualMachineReservationResponse() {
    return new ReconfigureVirtualMachineReservationResponse();
  }
  
  public PatchMissingDependencies createPatchMissingDependencies() {
    return new PatchMissingDependencies();
  }
  
  public FormatVmfsResponse createFormatVmfsResponse() {
    return new FormatVmfsResponse();
  }
  
  public HostVmfsVolume createHostVmfsVolume() {
    return new HostVmfsVolume();
  }
  
  public QueryAvailableTimeZonesRequestType createQueryAvailableTimeZonesRequestType() {
    return new QueryAvailableTimeZonesRequestType();
  }
  
  public OvfMissingAttribute createOvfMissingAttribute() {
    return new OvfMissingAttribute();
  }
  
  public ExportAnswerFileRequestType createExportAnswerFileRequestType() {
    return new ExportAnswerFileRequestType();
  }
  
  public ResolveMultipleUnresolvedVmfsVolumesResponse createResolveMultipleUnresolvedVmfsVolumesResponse() {
    return new ResolveMultipleUnresolvedVmfsVolumesResponse();
  }
  
  public HostUnresolvedVmfsResolutionResult createHostUnresolvedVmfsResolutionResult() {
    return new HostUnresolvedVmfsResolutionResult();
  }
  
  public UpdateModuleOptionStringResponse createUpdateModuleOptionStringResponse() {
    return new UpdateModuleOptionStringResponse();
  }
  
  public UpdateAssignedLicenseResponse createUpdateAssignedLicenseResponse() {
    return new UpdateAssignedLicenseResponse();
  }
  
  public RegisterHealthUpdateProviderRequestType createRegisterHealthUpdateProviderRequestType() {
    return new RegisterHealthUpdateProviderRequestType();
  }
  
  public CreateSecondaryVMTaskResponse createCreateSecondaryVMTaskResponse() {
    return new CreateSecondaryVMTaskResponse();
  }
  
  public QueryPerfCounterRequestType createQueryPerfCounterRequestType() {
    return new QueryPerfCounterRequestType();
  }
  
  public OverwriteCustomizationSpecRequestType createOverwriteCustomizationSpecRequestType() {
    return new OverwriteCustomizationSpecRequestType();
  }
  
  public UpdateClusterProfileResponse createUpdateClusterProfileResponse() {
    return new UpdateClusterProfileResponse();
  }
  
  public UpdateConfigRequestType createUpdateConfigRequestType() {
    return new UpdateConfigRequestType();
  }
  
  public HostImageConfigGetAcceptanceRequestType createHostImageConfigGetAcceptanceRequestType() {
    return new HostImageConfigGetAcceptanceRequestType();
  }
  
  public CancelWaitForUpdatesRequestType createCancelWaitForUpdatesRequestType() {
    return new CancelWaitForUpdatesRequestType();
  }
  
  public ExtendedFault createExtendedFault() {
    return new ExtendedFault();
  }
  
  public OvfUnsupportedElementValue createOvfUnsupportedElementValue() {
    return new OvfUnsupportedElementValue();
  }
  
  public ReadEnvironmentVariableInGuestRequestType createReadEnvironmentVariableInGuestRequestType() {
    return new ReadEnvironmentVariableInGuestRequestType();
  }
  
  public DeviceBackingNotSupported createDeviceBackingNotSupported() {
    return new DeviceBackingNotSupported();
  }
  
  public ExitLockdownModeRequestType createExitLockdownModeRequestType() {
    return new ExitLockdownModeRequestType();
  }
  
  public RetrieveDiskPartitionInfoResponse createRetrieveDiskPartitionInfoResponse() {
    return new RetrieveDiskPartitionInfoResponse();
  }
  
  public HostDiskPartitionInfo createHostDiskPartitionInfo() {
    return new HostDiskPartitionInfo();
  }
  
  public VmFaultToleranceInvalidFileBacking createVmFaultToleranceInvalidFileBacking() {
    return new VmFaultToleranceInvalidFileBacking();
  }
  
  public VspanPortgroupPromiscChangeFault createVspanPortgroupPromiscChangeFault() {
    return new VspanPortgroupPromiscChangeFault();
  }
  
  public MountVmfsVolumeRequestType createMountVmfsVolumeRequestType() {
    return new MountVmfsVolumeRequestType();
  }
  
  public RetrieveHostCustomizationsForProfileRequestType createRetrieveHostCustomizationsForProfileRequestType() {
    return new RetrieveHostCustomizationsForProfileRequestType();
  }
  
  public ResignatureUnresolvedVmfsVolumeTaskResponse createResignatureUnresolvedVmfsVolumeTaskResponse() {
    return new ResignatureUnresolvedVmfsVolumeTaskResponse();
  }
  
  public AddHostTaskResponse createAddHostTaskResponse() {
    return new AddHostTaskResponse();
  }
  
  public CannotMoveHostWithFaultToleranceVm createCannotMoveHostWithFaultToleranceVm() {
    return new CannotMoveHostWithFaultToleranceVm();
  }
  
  public UpdateUserResponse createUpdateUserResponse() {
    return new UpdateUserResponse();
  }
  
  public HostConfigVFlashCacheResponse createHostConfigVFlashCacheResponse() {
    return new HostConfigVFlashCacheResponse();
  }
  
  public InvalidLicense createInvalidLicense() {
    return new InvalidLicense();
  }
  
  public UpdateVStorageObjectPolicyRequestType createUpdateVStorageObjectPolicyRequestType() {
    return new UpdateVStorageObjectPolicyRequestType();
  }
  
  public InvalidDiskFormat createInvalidDiskFormat() {
    return new InvalidDiskFormat();
  }
  
  public AddStandaloneHostRequestType createAddStandaloneHostRequestType() {
    return new AddStandaloneHostRequestType();
  }
  
  public RDMNotPreserved createRDMNotPreserved() {
    return new RDMNotPreserved();
  }
  
  public VmFaultToleranceTooManyVMsOnHost createVmFaultToleranceTooManyVMsOnHost() {
    return new VmFaultToleranceTooManyVMsOnHost();
  }
  
  public ReloadRequestType createReloadRequestType() {
    return new ReloadRequestType();
  }
  
  public VFlashCacheHotConfigNotSupported createVFlashCacheHotConfigNotSupported() {
    return new VFlashCacheHotConfigNotSupported();
  }
  
  public UpdateScsiLunDisplayNameResponse createUpdateScsiLunDisplayNameResponse() {
    return new UpdateScsiLunDisplayNameResponse();
  }
  
  public AttachVmfsExtentResponse createAttachVmfsExtentResponse() {
    return new AttachVmfsExtentResponse();
  }
  
  public QueryFilterListRequestType createQueryFilterListRequestType() {
    return new QueryFilterListRequestType();
  }
  
  public RetrieveProductComponentsResponse createRetrieveProductComponentsResponse() {
    return new RetrieveProductComponentsResponse();
  }
  
  public ProductComponentInfo createProductComponentInfo() {
    return new ProductComponentInfo();
  }
  
  public RetrieveDasAdvancedRuntimeInfoResponse createRetrieveDasAdvancedRuntimeInfoResponse() {
    return new RetrieveDasAdvancedRuntimeInfoResponse();
  }
  
  public ClusterDasAdvancedRuntimeInfo createClusterDasAdvancedRuntimeInfo() {
    return new ClusterDasAdvancedRuntimeInfo();
  }
  
  public CopyVirtualDiskRequestType createCopyVirtualDiskRequestType() {
    return new CopyVirtualDiskRequestType();
  }
  
  public DrsDisabledOnVm createDrsDisabledOnVm() {
    return new DrsDisabledOnVm();
  }
  
  public OvfXmlFormat createOvfXmlFormat() {
    return new OvfXmlFormat();
  }
  
  public RetrieveServiceProviderEntitiesResponse createRetrieveServiceProviderEntitiesResponse() {
    return new RetrieveServiceProviderEntitiesResponse();
  }
  
  public RegisterKmsClusterResponse createRegisterKmsClusterResponse() {
    return new RegisterKmsClusterResponse();
  }
  
  public RetrieveAnswerFileForProfileResponse createRetrieveAnswerFileForProfileResponse() {
    return new RetrieveAnswerFileForProfileResponse();
  }
  
  public DVSManagerImportEntityTaskResponse createDVSManagerImportEntityTaskResponse() {
    return new DVSManagerImportEntityTaskResponse();
  }
  
  public ImportUnmanagedSnapshotRequestType createImportUnmanagedSnapshotRequestType() {
    return new ImportUnmanagedSnapshotRequestType();
  }
  
  public SetCryptoModeResponse createSetCryptoModeResponse() {
    return new SetCryptoModeResponse();
  }
  
  public QueryMemoryOverheadExRequestType createQueryMemoryOverheadExRequestType() {
    return new QueryMemoryOverheadExRequestType();
  }
  
  public NoHostSuitableForFtSecondary createNoHostSuitableForFtSecondary() {
    return new NoHostSuitableForFtSecondary();
  }
  
  public DeleteFileRequestType createDeleteFileRequestType() {
    return new DeleteFileRequestType();
  }
  
  public DeleteDirectoryInGuestResponse createDeleteDirectoryInGuestResponse() {
    return new DeleteDirectoryInGuestResponse();
  }
  
  public WipeDiskFault createWipeDiskFault() {
    return new WipeDiskFault();
  }
  
  public UnsharedSwapVMotionNotSupported createUnsharedSwapVMotionNotSupported() {
    return new UnsharedSwapVMotionNotSupported();
  }
  
  public MoveIntoResourcePoolResponse createMoveIntoResourcePoolResponse() {
    return new MoveIntoResourcePoolResponse();
  }
  
  public QueryHealthUpdateInfosResponse createQueryHealthUpdateInfosResponse() {
    return new QueryHealthUpdateInfosResponse();
  }
  
  public HealthUpdateInfo createHealthUpdateInfo() {
    return new HealthUpdateInfo();
  }
  
  public SendNMIRequestType createSendNMIRequestType() {
    return new SendNMIRequestType();
  }
  
  public RegisterKmsClusterRequestType createRegisterKmsClusterRequestType() {
    return new RegisterKmsClusterRequestType();
  }
  
  public DisableMultipathPathResponse createDisableMultipathPathResponse() {
    return new DisableMultipathPathResponse();
  }
  
  public ConfigureStorageDrsForPodRequestType createConfigureStorageDrsForPodRequestType() {
    return new ConfigureStorageDrsForPodRequestType();
  }
  
  public StartReplayingRequestType createStartReplayingRequestType() {
    return new StartReplayingRequestType();
  }
  
  public VmLimitLicense createVmLimitLicense() {
    return new VmLimitLicense();
  }
  
  public QueryFilterEntitiesResponse createQueryFilterEntitiesResponse() {
    return new QueryFilterEntitiesResponse();
  }
  
  public VmFaultToleranceConfigIssue createVmFaultToleranceConfigIssue() {
    return new VmFaultToleranceConfigIssue();
  }
  
  public VmConfigIncompatibleForRecordReplay createVmConfigIncompatibleForRecordReplay() {
    return new VmConfigIncompatibleForRecordReplay();
  }
  
  public RectifyDvsOnHostTaskResponse createRectifyDvsOnHostTaskResponse() {
    return new RectifyDvsOnHostTaskResponse();
  }
  
  public RemoveSnapshotTaskResponse createRemoveSnapshotTaskResponse() {
    return new RemoveSnapshotTaskResponse();
  }
  
  public ToolsAutoUpgradeNotSupported createToolsAutoUpgradeNotSupported() {
    return new ToolsAutoUpgradeNotSupported();
  }
  
  public ListKmipServersResponse createListKmipServersResponse() {
    return new ListKmipServersResponse();
  }
  
  public KmipClusterInfo createKmipClusterInfo() {
    return new KmipClusterInfo();
  }
  
  public RawDiskNotSupported createRawDiskNotSupported() {
    return new RawDiskNotSupported();
  }
  
  public ReconfigureDVPortgroupRequestType createReconfigureDVPortgroupRequestType() {
    return new ReconfigureDVPortgroupRequestType();
  }
  
  public UnexpectedCustomizationFault createUnexpectedCustomizationFault() {
    return new UnexpectedCustomizationFault();
  }
  
  public FeatureRequirementsNotMet createFeatureRequirementsNotMet() {
    return new FeatureRequirementsNotMet();
  }
  
  public FindByDatastorePathRequestType createFindByDatastorePathRequestType() {
    return new FindByDatastorePathRequestType();
  }
  
  public CreateDiskTaskResponse createCreateDiskTaskResponse() {
    return new CreateDiskTaskResponse();
  }
  
  public ListFilesInGuestResponse createListFilesInGuestResponse() {
    return new ListFilesInGuestResponse();
  }
  
  public GuestListFileInfo createGuestListFileInfo() {
    return new GuestListFileInfo();
  }
  
  public DeleteDatastoreFileRequestType createDeleteDatastoreFileRequestType() {
    return new DeleteDatastoreFileRequestType();
  }
  
  public CancelWaitForUpdatesResponse createCancelWaitForUpdatesResponse() {
    return new CancelWaitForUpdatesResponse();
  }
  
  public ListSmartCardTrustAnchorsResponse createListSmartCardTrustAnchorsResponse() {
    return new ListSmartCardTrustAnchorsResponse();
  }
  
  public UpdateChildResourceConfigurationRequestType createUpdateChildResourceConfigurationRequestType() {
    return new UpdateChildResourceConfigurationRequestType();
  }
  
  public UnmapVmfsVolumeExRequestType createUnmapVmfsVolumeExRequestType() {
    return new UnmapVmfsVolumeExRequestType();
  }
  
  public DestroyIpPoolResponse createDestroyIpPoolResponse() {
    return new DestroyIpPoolResponse();
  }
  
  public HttpNfcLeaseAbortResponse createHttpNfcLeaseAbortResponse() {
    return new HttpNfcLeaseAbortResponse();
  }
  
  public QueryDescriptionsRequestType createQueryDescriptionsRequestType() {
    return new QueryDescriptionsRequestType();
  }
  
  public FindAllByDnsNameResponse createFindAllByDnsNameResponse() {
    return new FindAllByDnsNameResponse();
  }
  
  public RefreshDatastoreRequestType createRefreshDatastoreRequestType() {
    return new RefreshDatastoreRequestType();
  }
  
  public QueryPolicyMetadataRequestType createQueryPolicyMetadataRequestType() {
    return new QueryPolicyMetadataRequestType();
  }
  
  public ResetGuestInformationResponse createResetGuestInformationResponse() {
    return new ResetGuestInformationResponse();
  }
  
  public ExtractOvfEnvironmentResponse createExtractOvfEnvironmentResponse() {
    return new ExtractOvfEnvironmentResponse();
  }
  
  public ReplicationConfigFault createReplicationConfigFault() {
    return new ReplicationConfigFault();
  }
  
  public QueryUnmonitoredHostsRequestType createQueryUnmonitoredHostsRequestType() {
    return new QueryUnmonitoredHostsRequestType();
  }
  
  public ListVStorageObjectRequestType createListVStorageObjectRequestType() {
    return new ListVStorageObjectRequestType();
  }
  
  public DestinationVsanDisabled createDestinationVsanDisabled() {
    return new DestinationVsanDisabled();
  }
  
  public UpdateLicenseRequestType createUpdateLicenseRequestType() {
    return new UpdateLicenseRequestType();
  }
  
  public RefreshStorageInfoResponse createRefreshStorageInfoResponse() {
    return new RefreshStorageInfoResponse();
  }
  
  public RemoveSmartCardTrustAnchorByFingerprintRequestType createRemoveSmartCardTrustAnchorByFingerprintRequestType() {
    return new RemoveSmartCardTrustAnchorByFingerprintRequestType();
  }
  
  public ReleaseCredentialsInGuestRequestType createReleaseCredentialsInGuestRequestType() {
    return new ReleaseCredentialsInGuestRequestType();
  }
  
  public MissingLinuxCustResources createMissingLinuxCustResources() {
    return new MissingLinuxCustResources();
  }
  
  public PromoteDisksTaskResponse createPromoteDisksTaskResponse() {
    return new PromoteDisksTaskResponse();
  }
  
  public CannotAccessFile createCannotAccessFile() {
    return new CannotAccessFile();
  }
  
  public HostClearVStorageObjectControlFlagsRequestType createHostClearVStorageObjectControlFlagsRequestType() {
    return new HostClearVStorageObjectControlFlagsRequestType();
  }
  
  public RemovePortGroupRequestType createRemovePortGroupRequestType() {
    return new RemovePortGroupRequestType();
  }
  
  public GuestOperationsFault createGuestOperationsFault() {
    return new GuestOperationsFault();
  }
  
  public ImportOperationBulkFault createImportOperationBulkFault() {
    return new ImportOperationBulkFault();
  }
  
  public AcquireCimServicesTicketRequestType createAcquireCimServicesTicketRequestType() {
    return new AcquireCimServicesTicketRequestType();
  }
  
  public QueryAvailableDvsSpecResponse createQueryAvailableDvsSpecResponse() {
    return new QueryAvailableDvsSpecResponse();
  }
  
  public DistributedVirtualSwitchProductSpec createDistributedVirtualSwitchProductSpec() {
    return new DistributedVirtualSwitchProductSpec();
  }
  
  public UpdateVirtualSwitchResponse createUpdateVirtualSwitchResponse() {
    return new UpdateVirtualSwitchResponse();
  }
  
  public QueryMonitoredEntitiesRequestType createQueryMonitoredEntitiesRequestType() {
    return new QueryMonitoredEntitiesRequestType();
  }
  
  public ExtendVirtualDiskRequestType createExtendVirtualDiskRequestType() {
    return new ExtendVirtualDiskRequestType();
  }
  
  public ResignatureUnresolvedVmfsVolumeRequestType createResignatureUnresolvedVmfsVolumeRequestType() {
    return new ResignatureUnresolvedVmfsVolumeRequestType();
  }
  
  public TooManyGuestLogons createTooManyGuestLogons() {
    return new TooManyGuestLogons();
  }
  
  public RetrieveHostAccessControlEntriesRequestType createRetrieveHostAccessControlEntriesRequestType() {
    return new RetrieveHostAccessControlEntriesRequestType();
  }
  
  public RunVsanPhysicalDiskDiagnosticsResponse createRunVsanPhysicalDiskDiagnosticsResponse() {
    return new RunVsanPhysicalDiskDiagnosticsResponse();
  }
  
  public HostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult createHostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult() {
    return new HostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult();
  }
  
  public RegisterDiskRequestType createRegisterDiskRequestType() {
    return new RegisterDiskRequestType();
  }
  
  public DvsReconfigureVmVnicNetworkResourcePoolRequestType createDvsReconfigureVmVnicNetworkResourcePoolRequestType() {
    return new DvsReconfigureVmVnicNetworkResourcePoolRequestType();
  }
  
  public InsufficientStorageSpace createInsufficientStorageSpace() {
    return new InsufficientStorageSpace();
  }
  
  public CreateScheduledTaskResponse createCreateScheduledTaskResponse() {
    return new CreateScheduledTaskResponse();
  }
  
  public SelectVnicResponse createSelectVnicResponse() {
    return new SelectVnicResponse();
  }
  
  public CreateTemporaryFileInGuestRequestType createCreateTemporaryFileInGuestRequestType() {
    return new CreateTemporaryFileInGuestRequestType();
  }
  
  public QueryVnicStatusResponse createQueryVnicStatusResponse() {
    return new QueryVnicStatusResponse();
  }
  
  public QuestionPending createQuestionPending() {
    return new QuestionPending();
  }
  
  public AddKeysResponse createAddKeysResponse() {
    return new AddKeysResponse();
  }
  
  public ListCACertificatesResponse createListCACertificatesResponse() {
    return new ListCACertificatesResponse();
  }
  
  public XmlToCustomizationSpecItemResponse createXmlToCustomizationSpecItemResponse() {
    return new XmlToCustomizationSpecItemResponse();
  }
  
  public CustomizationSpecItem createCustomizationSpecItem() {
    return new CustomizationSpecItem();
  }
  
  public QueryChangedDiskAreasRequestType createQueryChangedDiskAreasRequestType() {
    return new QueryChangedDiskAreasRequestType();
  }
  
  public CheckPowerOnTaskResponse createCheckPowerOnTaskResponse() {
    return new CheckPowerOnTaskResponse();
  }
  
  public InvalidState createInvalidState() {
    return new InvalidState();
  }
  
  public HostSpecGetUpdatedHostsResponse createHostSpecGetUpdatedHostsResponse() {
    return new HostSpecGetUpdatedHostsResponse();
  }
  
  public ClearNFSUserResponse createClearNFSUserResponse() {
    return new ClearNFSUserResponse();
  }
  
  public OvfProperty createOvfProperty() {
    return new OvfProperty();
  }
  
  public OvfPropertyNetwork createOvfPropertyNetwork() {
    return new OvfPropertyNetwork();
  }
  
  public UpdateIpmiResponse createUpdateIpmiResponse() {
    return new UpdateIpmiResponse();
  }
  
  public GenerateKeyRequestType createGenerateKeyRequestType() {
    return new GenerateKeyRequestType();
  }
  
  public ValidateHCIConfigurationRequestType createValidateHCIConfigurationRequestType() {
    return new ValidateHCIConfigurationRequestType();
  }
  
  public TooManyDisksOnLegacyHost createTooManyDisksOnLegacyHost() {
    return new TooManyDisksOnLegacyHost();
  }
  
  public ShrinkVirtualDiskRequestType createShrinkVirtualDiskRequestType() {
    return new ShrinkVirtualDiskRequestType();
  }
  
  public AttachTagToVStorageObjectResponse createAttachTagToVStorageObjectResponse() {
    return new AttachTagToVStorageObjectResponse();
  }
  
  public QueryIPAllocationsResponse createQueryIPAllocationsResponse() {
    return new QueryIPAllocationsResponse();
  }
  
  public IpPoolManagerIpAllocation createIpPoolManagerIpAllocation() {
    return new IpPoolManagerIpAllocation();
  }
  
  public IscsiFaultVnicIsLastPath createIscsiFaultVnicIsLastPath() {
    return new IscsiFaultVnicIsLastPath();
  }
  
  public TerminateProcessInGuestRequestType createTerminateProcessInGuestRequestType() {
    return new TerminateProcessInGuestRequestType();
  }
  
  public OvfInvalidValue createOvfInvalidValue() {
    return new OvfInvalidValue();
  }
  
  public HostCreateDiskRequestType createHostCreateDiskRequestType() {
    return new HostCreateDiskRequestType();
  }
  
  public ResetCollectorResponse createResetCollectorResponse() {
    return new ResetCollectorResponse();
  }
  
  public LegacyNetworkInterfaceInUse createLegacyNetworkInterfaceInUse() {
    return new LegacyNetworkInterfaceInUse();
  }
  
  public QueryBoundVnicsResponse createQueryBoundVnicsResponse() {
    return new QueryBoundVnicsResponse();
  }
  
  public IscsiPortInfo createIscsiPortInfo() {
    return new IscsiPortInfo();
  }
  
  public UnconfiguredPropertyValue createUnconfiguredPropertyValue() {
    return new UnconfiguredPropertyValue();
  }
  
  public FcoeFaultPnicHasNoPortSet createFcoeFaultPnicHasNoPortSet() {
    return new FcoeFaultPnicHasNoPortSet();
  }
  
  public SetVirtualDiskUuidResponse createSetVirtualDiskUuidResponse() {
    return new SetVirtualDiskUuidResponse();
  }
  
  public TerminateVMRequestType createTerminateVMRequestType() {
    return new TerminateVMRequestType();
  }
  
  public EsxAgentHostManagerUpdateConfigRequestType createEsxAgentHostManagerUpdateConfigRequestType() {
    return new EsxAgentHostManagerUpdateConfigRequestType();
  }
  
  public UpdateVAppConfigResponse createUpdateVAppConfigResponse() {
    return new UpdateVAppConfigResponse();
  }
  
  public ApplyStorageDrsRecommendationRequestType createApplyStorageDrsRecommendationRequestType() {
    return new ApplyStorageDrsRecommendationRequestType();
  }
  
  public DisconnectHostRequestType createDisconnectHostRequestType() {
    return new DisconnectHostRequestType();
  }
  
  public RetrieveHostCustomizationsResponse createRetrieveHostCustomizationsResponse() {
    return new RetrieveHostCustomizationsResponse();
  }
  
  public StructuredCustomizations createStructuredCustomizations() {
    return new StructuredCustomizations();
  }
  
  public AutoStartPowerOnResponse createAutoStartPowerOnResponse() {
    return new AutoStartPowerOnResponse();
  }
  
  public QueryFaultToleranceCompatibilityRequestType createQueryFaultToleranceCompatibilityRequestType() {
    return new QueryFaultToleranceCompatibilityRequestType();
  }
  
  public BatchAddStandaloneHostsTaskResponse createBatchAddStandaloneHostsTaskResponse() {
    return new BatchAddStandaloneHostsTaskResponse();
  }
  
  public IscsiFaultInvalidVnic createIscsiFaultInvalidVnic() {
    return new IscsiFaultInvalidVnic();
  }
  
  public AddNetworkResourcePoolResponse createAddNetworkResourcePoolResponse() {
    return new AddNetworkResourcePoolResponse();
  }
  
  public UpdateIpRouteConfigRequestType createUpdateIpRouteConfigRequestType() {
    return new UpdateIpRouteConfigRequestType();
  }
  
  public QueryBootDevicesRequestType createQueryBootDevicesRequestType() {
    return new QueryBootDevicesRequestType();
  }
  
  public ListGuestAliasesRequestType createListGuestAliasesRequestType() {
    return new ListGuestAliasesRequestType();
  }
  
  public QuarantineModeFault createQuarantineModeFault() {
    return new QuarantineModeFault();
  }
  
  public CreateSecondaryVMRequestType createCreateSecondaryVMRequestType() {
    return new CreateSecondaryVMRequestType();
  }
  
  public ResetEntityPermissionsRequestType createResetEntityPermissionsRequestType() {
    return new ResetEntityPermissionsRequestType();
  }
  
  public LoginByTokenResponse createLoginByTokenResponse() {
    return new LoginByTokenResponse();
  }
  
  public RevertToCurrentSnapshotRequestType createRevertToCurrentSnapshotRequestType() {
    return new RevertToCurrentSnapshotRequestType();
  }
  
  public RetrieveObjectScheduledTaskResponse createRetrieveObjectScheduledTaskResponse() {
    return new RetrieveObjectScheduledTaskResponse();
  }
  
  public SetPublicKeyResponse createSetPublicKeyResponse() {
    return new SetPublicKeyResponse();
  }
  
  public UpdatePhysicalNicLinkSpeedRequestType createUpdatePhysicalNicLinkSpeedRequestType() {
    return new UpdatePhysicalNicLinkSpeedRequestType();
  }
  
  public OvfConsumerUndefinedPrefix createOvfConsumerUndefinedPrefix() {
    return new OvfConsumerUndefinedPrefix();
  }
  
  public EnterMaintenanceModeTaskResponse createEnterMaintenanceModeTaskResponse() {
    return new EnterMaintenanceModeTaskResponse();
  }
  
  public FileTooLarge createFileTooLarge() {
    return new FileTooLarge();
  }
  
  public CheckLicenseFeatureRequestType createCheckLicenseFeatureRequestType() {
    return new CheckLicenseFeatureRequestType();
  }
  
  public RetrieveSelfSignedClientCertRequestType createRetrieveSelfSignedClientCertRequestType() {
    return new RetrieveSelfSignedClientCertRequestType();
  }
  
  public OvfDuplicatedPropertyIdExport createOvfDuplicatedPropertyIdExport() {
    return new OvfDuplicatedPropertyIdExport();
  }
  
  public ReadHostResourcePoolTreeFailed createReadHostResourcePoolTreeFailed() {
    return new ReadHostResourcePoolTreeFailed();
  }
  
  public HostProfileResetValidationStateRequestType createHostProfileResetValidationStateRequestType() {
    return new HostProfileResetValidationStateRequestType();
  }
  
  public OvfNoSpaceOnController createOvfNoSpaceOnController() {
    return new OvfNoSpaceOnController();
  }
  
  public TurnDiskLocatorLedOnRequestType createTurnDiskLocatorLedOnRequestType() {
    return new TurnDiskLocatorLedOnRequestType();
  }
  
  public CertMgrRevokeCertificatesTaskResponse createCertMgrRevokeCertificatesTaskResponse() {
    return new CertMgrRevokeCertificatesTaskResponse();
  }
  
  public ConsolidateVMDisksTaskResponse createConsolidateVMDisksTaskResponse() {
    return new ConsolidateVMDisksTaskResponse();
  }
  
  public CreateLocalDatastoreRequestType createCreateLocalDatastoreRequestType() {
    return new CreateLocalDatastoreRequestType();
  }
  
  public AddKeysRequestType createAddKeysRequestType() {
    return new AddKeysRequestType();
  }
  
  public QueryManagedByResponse createQueryManagedByResponse() {
    return new QueryManagedByResponse();
  }
  
  public RemoveLicenseRequestType createRemoveLicenseRequestType() {
    return new RemoveLicenseRequestType();
  }
  
  public NoCompatibleHardAffinityHost createNoCompatibleHardAffinityHost() {
    return new NoCompatibleHardAffinityHost();
  }
  
  public RevertToCurrentSnapshotTaskResponse createRevertToCurrentSnapshotTaskResponse() {
    return new RevertToCurrentSnapshotTaskResponse();
  }
  
  public ApplyEvcModeVMRequestType createApplyEvcModeVMRequestType() {
    return new ApplyEvcModeVMRequestType();
  }
  
  public OvfInvalidVmName createOvfInvalidVmName() {
    return new OvfInvalidVmName();
  }
  
  public QueryProviderNameResponse createQueryProviderNameResponse() {
    return new QueryProviderNameResponse();
  }
  
  public PatchSuperseded createPatchSuperseded() {
    return new PatchSuperseded();
  }
  
  public HostCommunication createHostCommunication() {
    return new HostCommunication();
  }
  
  public CreateStoragePodRequestType createCreateStoragePodRequestType() {
    return new CreateStoragePodRequestType();
  }
  
  public AlreadyConnected createAlreadyConnected() {
    return new AlreadyConnected();
  }
  
  public SwitchIpUnset createSwitchIpUnset() {
    return new SwitchIpUnset();
  }
  
  public FetchSoftwarePackagesResponse createFetchSoftwarePackagesResponse() {
    return new FetchSoftwarePackagesResponse();
  }
  
  public SoftwarePackage createSoftwarePackage() {
    return new SoftwarePackage();
  }
  
  public MigrationFeatureNotSupported createMigrationFeatureNotSupported() {
    return new MigrationFeatureNotSupported();
  }
  
  public ValidateCredentialsInGuestRequestType createValidateCredentialsInGuestRequestType() {
    return new ValidateCredentialsInGuestRequestType();
  }
  
  public GetVchaClusterHealthRequestType createGetVchaClusterHealthRequestType() {
    return new GetVchaClusterHealthRequestType();
  }
  
  public GenerateLogBundlesTaskResponse createGenerateLogBundlesTaskResponse() {
    return new GenerateLogBundlesTaskResponse();
  }
  
  public RemoveAuthorizationRoleResponse createRemoveAuthorizationRoleResponse() {
    return new RemoveAuthorizationRoleResponse();
  }
  
  public ReconfigurationSatisfiableResponse createReconfigurationSatisfiableResponse() {
    return new ReconfigurationSatisfiableResponse();
  }
  
  public UpdateUserRequestType createUpdateUserRequestType() {
    return new UpdateUserRequestType();
  }
  
  public VFlashModuleVersionIncompatible createVFlashModuleVersionIncompatible() {
    return new VFlashModuleVersionIncompatible();
  }
  
  public MarkAsTemplateResponse createMarkAsTemplateResponse() {
    return new MarkAsTemplateResponse();
  }
  
  public UpdateSelfSignedClientCertRequestType createUpdateSelfSignedClientCertRequestType() {
    return new UpdateSelfSignedClientCertRequestType();
  }
  
  public IsSharedGraphicsActiveResponse createIsSharedGraphicsActiveResponse() {
    return new IsSharedGraphicsActiveResponse();
  }
  
  public HasPrivilegeOnEntityResponse createHasPrivilegeOnEntityResponse() {
    return new HasPrivilegeOnEntityResponse();
  }
  
  public ListCACertificateRevocationListsResponse createListCACertificateRevocationListsResponse() {
    return new ListCACertificateRevocationListsResponse();
  }
  
  public CheckCustomizationResourcesRequestType createCheckCustomizationResourcesRequestType() {
    return new CheckCustomizationResourcesRequestType();
  }
  
  public BatchAddStandaloneHostsRequestType createBatchAddStandaloneHostsRequestType() {
    return new BatchAddStandaloneHostsRequestType();
  }
  
  public InitiateFileTransferFromGuestResponse createInitiateFileTransferFromGuestResponse() {
    return new InitiateFileTransferFromGuestResponse();
  }
  
  public FileTransferInformation createFileTransferInformation() {
    return new FileTransferInformation();
  }
  
  public NoLicenseServerConfigured createNoLicenseServerConfigured() {
    return new NoLicenseServerConfigured();
  }
  
  public EstimateDatabaseSizeResponse createEstimateDatabaseSizeResponse() {
    return new EstimateDatabaseSizeResponse();
  }
  
  public DatabaseSizeEstimate createDatabaseSizeEstimate() {
    return new DatabaseSizeEstimate();
  }
  
  public EVCAdmissionFailedHostDisconnected createEVCAdmissionFailedHostDisconnected() {
    return new EVCAdmissionFailedHostDisconnected();
  }
  
  public NotAuthenticated createNotAuthenticated() {
    return new NotAuthenticated();
  }
  
  public GetSiteInfoResponse createGetSiteInfoResponse() {
    return new GetSiteInfoResponse();
  }
  
  public SiteInfo createSiteInfo() {
    return new SiteInfo();
  }
  
  public EVCAdmissionFailed createEVCAdmissionFailed() {
    return new EVCAdmissionFailed();
  }
  
  public CreateNvdimmPMemNamespaceRequestType createCreateNvdimmPMemNamespaceRequestType() {
    return new CreateNvdimmPMemNamespaceRequestType();
  }
  
  public RetrieveHardwareUptimeRequestType createRetrieveHardwareUptimeRequestType() {
    return new RetrieveHardwareUptimeRequestType();
  }
  
  public RemoveFailed createRemoveFailed() {
    return new RemoveFailed();
  }
  
  public MoveDVPortTaskResponse createMoveDVPortTaskResponse() {
    return new MoveDVPortTaskResponse();
  }
  
  public QueryConnectionInfoViaSpecRequestType createQueryConnectionInfoViaSpecRequestType() {
    return new QueryConnectionInfoViaSpecRequestType();
  }
  
  public DigestNotSupported createDigestNotSupported() {
    return new DigestNotSupported();
  }
  
  public AddAuthorizationRoleResponse createAddAuthorizationRoleResponse() {
    return new AddAuthorizationRoleResponse();
  }
  
  public QueryProviderListResponse createQueryProviderListResponse() {
    return new QueryProviderListResponse();
  }
  
  public GenerateCertificateSigningRequestByDnRequestType createGenerateCertificateSigningRequestByDnRequestType() {
    return new GenerateCertificateSigningRequestByDnRequestType();
  }
  
  public RemoveSmartCardTrustAnchorByFingerprintResponse createRemoveSmartCardTrustAnchorByFingerprintResponse() {
    return new RemoveSmartCardTrustAnchorByFingerprintResponse();
  }
  
  public OvfWrongNamespace createOvfWrongNamespace() {
    return new OvfWrongNamespace();
  }
  
  public RetrieveProductComponentsRequestType createRetrieveProductComponentsRequestType() {
    return new RetrieveProductComponentsRequestType();
  }
  
  public MksConnectionLimitReached createMksConnectionLimitReached() {
    return new MksConnectionLimitReached();
  }
  
  public MissingIpPool createMissingIpPool() {
    return new MissingIpPool();
  }
  
  public QueryPartitionCreateOptionsRequestType createQueryPartitionCreateOptionsRequestType() {
    return new QueryPartitionCreateOptionsRequestType();
  }
  
  public ApplyRecommendationResponse createApplyRecommendationResponse() {
    return new ApplyRecommendationResponse();
  }
  
  public DuplicateDisks createDuplicateDisks() {
    return new DuplicateDisks();
  }
  
  public PlatformConfigFault createPlatformConfigFault() {
    return new PlatformConfigFault();
  }
  
  public QueryCompatibleHostForExistingDvsResponse createQueryCompatibleHostForExistingDvsResponse() {
    return new QueryCompatibleHostForExistingDvsResponse();
  }
  
  public RetrieveVStorageObjectResponse createRetrieveVStorageObjectResponse() {
    return new RetrieveVStorageObjectResponse();
  }
  
  public VStorageObject createVStorageObject() {
    return new VStorageObject();
  }
  
  public RegisterExtensionRequestType createRegisterExtensionRequestType() {
    return new RegisterExtensionRequestType();
  }
  
  public MarkForRemovalResponse createMarkForRemovalResponse() {
    return new MarkForRemovalResponse();
  }
  
  public QueryDvsFeatureCapabilityResponse createQueryDvsFeatureCapabilityResponse() {
    return new QueryDvsFeatureCapabilityResponse();
  }
  
  public DVSFeatureCapability createDVSFeatureCapability() {
    return new DVSFeatureCapability();
  }
  
  public LicenseServerUnavailable createLicenseServerUnavailable() {
    return new LicenseServerUnavailable();
  }
  
  public DeleteScsiLunStateRequestType createDeleteScsiLunStateRequestType() {
    return new DeleteScsiLunStateRequestType();
  }
  
  public UnsupportedGuest createUnsupportedGuest() {
    return new UnsupportedGuest();
  }
  
  public CreateSnapshotRequestType createCreateSnapshotRequestType() {
    return new CreateSnapshotRequestType();
  }
  
  public KeyNotFound createKeyNotFound() {
    return new KeyNotFound();
  }
  
  public QueryLockdownExceptionsRequestType createQueryLockdownExceptionsRequestType() {
    return new QueryLockdownExceptionsRequestType();
  }
  
  public FullStorageVMotionNotSupported createFullStorageVMotionNotSupported() {
    return new FullStorageVMotionNotSupported();
  }
  
  public QueryIpPoolsResponse createQueryIpPoolsResponse() {
    return new QueryIpPoolsResponse();
  }
  
  public IpPool createIpPool() {
    return new IpPool();
  }
  
  public MismatchedVMotionNetworkNames createMismatchedVMotionNetworkNames() {
    return new MismatchedVMotionNetworkNames();
  }
  
  public RefreshResponse createRefreshResponse() {
    return new RefreshResponse();
  }
  
  public ReplaceCACertificatesAndCRLsRequestType createReplaceCACertificatesAndCRLsRequestType() {
    return new ReplaceCACertificatesAndCRLsRequestType();
  }
  
  public EagerZeroVirtualDiskRequestType createEagerZeroVirtualDiskRequestType() {
    return new EagerZeroVirtualDiskRequestType();
  }
  
  public ReconfigureDVPortgroupTaskResponse createReconfigureDVPortgroupTaskResponse() {
    return new ReconfigureDVPortgroupTaskResponse();
  }
  
  public ReplaceCACertificatesAndCRLsResponse createReplaceCACertificatesAndCRLsResponse() {
    return new ReplaceCACertificatesAndCRLsResponse();
  }
  
  public QueryVmfsDatastoreExpandOptionsResponse createQueryVmfsDatastoreExpandOptionsResponse() {
    return new QueryVmfsDatastoreExpandOptionsResponse();
  }
  
  public CheckComplianceRequestType createCheckComplianceRequestType() {
    return new CheckComplianceRequestType();
  }
  
  public RemoveGuestAliasResponse createRemoveGuestAliasResponse() {
    return new RemoveGuestAliasResponse();
  }
  
  public ReconfigVMRequestType createReconfigVMRequestType() {
    return new ReconfigVMRequestType();
  }
  
  public QueryBootDevicesResponse createQueryBootDevicesResponse() {
    return new QueryBootDevicesResponse();
  }
  
  public HostBootDeviceInfo createHostBootDeviceInfo() {
    return new HostBootDeviceInfo();
  }
  
  public HttpNfcLeaseSetManifestChecksumTypeRequestType createHttpNfcLeaseSetManifestChecksumTypeRequestType() {
    return new HttpNfcLeaseSetManifestChecksumTypeRequestType();
  }
  
  public PatchNotApplicable createPatchNotApplicable() {
    return new PatchNotApplicable();
  }
  
  public NumVirtualCoresPerSocketNotSupported createNumVirtualCoresPerSocketNotSupported() {
    return new NumVirtualCoresPerSocketNotSupported();
  }
  
  public DestroyVchaRequestType createDestroyVchaRequestType() {
    return new DestroyVchaRequestType();
  }
  
  public ExtendHCIRequestType createExtendHCIRequestType() {
    return new ExtendHCIRequestType();
  }
  
  public NoCompatibleHostWithAccessToDevice createNoCompatibleHostWithAccessToDevice() {
    return new NoCompatibleHostWithAccessToDevice();
  }
  
  public DownloadDescriptionTreeResponse createDownloadDescriptionTreeResponse() {
    return new DownloadDescriptionTreeResponse();
  }
  
  public CompositeHostProfileTaskResponse createCompositeHostProfileTaskResponse() {
    return new CompositeHostProfileTaskResponse();
  }
  
  public FailToEnableSPBM createFailToEnableSPBM() {
    return new FailToEnableSPBM();
  }
  
  public RemoveInternetScsiStaticTargetsResponse createRemoveInternetScsiStaticTargetsResponse() {
    return new RemoveInternetScsiStaticTargetsResponse();
  }
  
  public ToolsInstallationInProgress createToolsInstallationInProgress() {
    return new ToolsInstallationInProgress();
  }
  
  public AddCustomFieldDefResponse createAddCustomFieldDefResponse() {
    return new AddCustomFieldDefResponse();
  }
  
  public CustomFieldDef createCustomFieldDef() {
    return new CustomFieldDef();
  }
  
  public FaultTolerancePrimaryPowerOnNotAttempted createFaultTolerancePrimaryPowerOnNotAttempted() {
    return new FaultTolerancePrimaryPowerOnNotAttempted();
  }
  
  public ReloadResponse createReloadResponse() {
    return new ReloadResponse();
  }
  
  public MergeDvsTaskResponse createMergeDvsTaskResponse() {
    return new MergeDvsTaskResponse();
  }
  
  public QueryDisksForVsanRequestType createQueryDisksForVsanRequestType() {
    return new QueryDisksForVsanRequestType();
  }
  
  public RemoveGroupRequestType createRemoveGroupRequestType() {
    return new RemoveGroupRequestType();
  }
  
  public SetLocaleRequestType createSetLocaleRequestType() {
    return new SetLocaleRequestType();
  }
  
  public UpdateLocalSwapDatastoreResponse createUpdateLocalSwapDatastoreResponse() {
    return new UpdateLocalSwapDatastoreResponse();
  }
  
  public ReconfigureDomObjectRequestType createReconfigureDomObjectRequestType() {
    return new ReconfigureDomObjectRequestType();
  }
  
  public VspanPortgroupTypeChangeFault createVspanPortgroupTypeChangeFault() {
    return new VspanPortgroupTypeChangeFault();
  }
  
  public ClearNFSUserRequestType createClearNFSUserRequestType() {
    return new ClearNFSUserRequestType();
  }
  
  public CreateUserRequestType createCreateUserRequestType() {
    return new CreateUserRequestType();
  }
  
  public UpdateLicenseResponse createUpdateLicenseResponse() {
    return new UpdateLicenseResponse();
  }
  
  public AcquireLocalTicketResponse createAcquireLocalTicketResponse() {
    return new AcquireLocalTicketResponse();
  }
  
  public SessionManagerLocalTicket createSessionManagerLocalTicket() {
    return new SessionManagerLocalTicket();
  }
  
  public CustomizeVMRequestType createCustomizeVMRequestType() {
    return new CustomizeVMRequestType();
  }
  
  public DecodeLicenseResponse createDecodeLicenseResponse() {
    return new DecodeLicenseResponse();
  }
  
  public RefreshHealthStatusSystemRequestType createRefreshHealthStatusSystemRequestType() {
    return new RefreshHealthStatusSystemRequestType();
  }
  
  public DiskNotSupported createDiskNotSupported() {
    return new DiskNotSupported();
  }
  
  public CheckVmConfigRequestType createCheckVmConfigRequestType() {
    return new CheckVmConfigRequestType();
  }
  
  public EnableRulesetResponse createEnableRulesetResponse() {
    return new EnableRulesetResponse();
  }
  
  public SetExtensionCertificateResponse createSetExtensionCertificateResponse() {
    return new SetExtensionCertificateResponse();
  }
  
  public HostVStorageObjectRetrieveSnapshotInfoRequestType createHostVStorageObjectRetrieveSnapshotInfoRequestType() {
    return new HostVStorageObjectRetrieveSnapshotInfoRequestType();
  }
  
  public ReconfigureClusterRequestType createReconfigureClusterRequestType() {
    return new ReconfigureClusterRequestType();
  }
  
  public NasSessionCredentialConflict createNasSessionCredentialConflict() {
    return new NasSessionCredentialConflict();
  }
  
  public QueryHostPatchRequestType createQueryHostPatchRequestType() {
    return new QueryHostPatchRequestType();
  }
  
  public ShutdownGuestResponse createShutdownGuestResponse() {
    return new ShutdownGuestResponse();
  }
  
  public GetPublicKeyResponse createGetPublicKeyResponse() {
    return new GetPublicKeyResponse();
  }
  
  public NicSettingMismatch createNicSettingMismatch() {
    return new NicSettingMismatch();
  }
  
  public CheckHostPatchRequestType createCheckHostPatchRequestType() {
    return new CheckHostPatchRequestType();
  }
  
  public CreateGroupResponse createCreateGroupResponse() {
    return new CreateGroupResponse();
  }
  
  public ExpiredEditionLicense createExpiredEditionLicense() {
    return new ExpiredEditionLicense();
  }
  
  public CreateInventoryViewResponse createCreateInventoryViewResponse() {
    return new CreateInventoryViewResponse();
  }
  
  public RescanVffsRequestType createRescanVffsRequestType() {
    return new RescanVffsRequestType();
  }
  
  public VirtualEthernetCardNotSupported createVirtualEthernetCardNotSupported() {
    return new VirtualEthernetCardNotSupported();
  }
  
  public CloneVAppRequestType createCloneVAppRequestType() {
    return new CloneVAppRequestType();
  }
  
  public UnrecognizedHost createUnrecognizedHost() {
    return new UnrecognizedHost();
  }
  
  public OpenInventoryViewFolderRequestType createOpenInventoryViewFolderRequestType() {
    return new OpenInventoryViewFolderRequestType();
  }
  
  public StageHostPatchRequestType createStageHostPatchRequestType() {
    return new StageHostPatchRequestType();
  }
  
  public MarkPerenniallyReservedRequestType createMarkPerenniallyReservedRequestType() {
    return new MarkPerenniallyReservedRequestType();
  }
  
  public QueryDatacenterConfigOptionDescriptorResponse createQueryDatacenterConfigOptionDescriptorResponse() {
    return new QueryDatacenterConfigOptionDescriptorResponse();
  }
  
  public VFlashModuleNotSupported createVFlashModuleNotSupported() {
    return new VFlashModuleNotSupported();
  }
  
  public CreateContainerViewRequestType createCreateContainerViewRequestType() {
    return new CreateContainerViewRequestType();
  }
  
  public StartRecordingRequestType createStartRecordingRequestType() {
    return new StartRecordingRequestType();
  }
  
  public ExportAnswerFileTaskResponse createExportAnswerFileTaskResponse() {
    return new ExportAnswerFileTaskResponse();
  }
  
  public ChangePasswordResponse createChangePasswordResponse() {
    return new ChangePasswordResponse();
  }
  
  public LeaveCurrentDomainTaskResponse createLeaveCurrentDomainTaskResponse() {
    return new LeaveCurrentDomainTaskResponse();
  }
  
  public ScanHostPatchV2RequestType createScanHostPatchV2RequestType() {
    return new ScanHostPatchV2RequestType();
  }
  
  public ConflictingConfiguration createConflictingConfiguration() {
    return new ConflictingConfiguration();
  }
  
  public GenerateHostConfigTaskSpecTaskResponse createGenerateHostConfigTaskSpecTaskResponse() {
    return new GenerateHostConfigTaskSpecTaskResponse();
  }
  
  public GenerateHostProfileTaskListRequestType createGenerateHostProfileTaskListRequestType() {
    return new GenerateHostProfileTaskListRequestType();
  }
  
  public EnableHyperThreadingResponse createEnableHyperThreadingResponse() {
    return new EnableHyperThreadingResponse();
  }
  
  public DisableEvcModeTaskResponse createDisableEvcModeTaskResponse() {
    return new DisableEvcModeTaskResponse();
  }
  
  public ApplyHostConfigTaskResponse createApplyHostConfigTaskResponse() {
    return new ApplyHostConfigTaskResponse();
  }
  
  public FormatVffsResponse createFormatVffsResponse() {
    return new FormatVffsResponse();
  }
  
  public HostVffsVolume createHostVffsVolume() {
    return new HostVffsVolume();
  }
  
  public ShrinkDiskFault createShrinkDiskFault() {
    return new ShrinkDiskFault();
  }
  
  public DestroyViewRequestType createDestroyViewRequestType() {
    return new DestroyViewRequestType();
  }
  
  public DatastoreEnterMaintenanceModeRequestType createDatastoreEnterMaintenanceModeRequestType() {
    return new DatastoreEnterMaintenanceModeRequestType();
  }
  
  public FtIssuesOnHost createFtIssuesOnHost() {
    return new FtIssuesOnHost();
  }
  
  public CloneFromSnapshotNotSupported createCloneFromSnapshotNotSupported() {
    return new CloneFromSnapshotNotSupported();
  }
  
  public EVCUnsupportedByHostSoftware createEVCUnsupportedByHostSoftware() {
    return new EVCUnsupportedByHostSoftware();
  }
  
  public GetCustomizationSpecResponse createGetCustomizationSpecResponse() {
    return new GetCustomizationSpecResponse();
  }
  
  public RefreshStorageSystemResponse createRefreshStorageSystemResponse() {
    return new RefreshStorageSystemResponse();
  }
  
  public VMOnVirtualIntranet createVMOnVirtualIntranet() {
    return new VMOnVirtualIntranet();
  }
  
  public TurnDiskLocatorLedOnTaskResponse createTurnDiskLocatorLedOnTaskResponse() {
    return new TurnDiskLocatorLedOnTaskResponse();
  }
  
  public QueryPerfProviderSummaryRequestType createQueryPerfProviderSummaryRequestType() {
    return new QueryPerfProviderSummaryRequestType();
  }
  
  public DisableMultipathPathRequestType createDisableMultipathPathRequestType() {
    return new DisableMultipathPathRequestType();
  }
  
  public UpdateConsoleIpRouteConfigRequestType createUpdateConsoleIpRouteConfigRequestType() {
    return new UpdateConsoleIpRouteConfigRequestType();
  }
  
  public CreateImportSpecResponse createCreateImportSpecResponse() {
    return new CreateImportSpecResponse();
  }
  
  public OvfCreateImportSpecResult createOvfCreateImportSpecResult() {
    return new OvfCreateImportSpecResult();
  }
  
  public UpdateDVSLacpGroupConfigRequestType createUpdateDVSLacpGroupConfigRequestType() {
    return new UpdateDVSLacpGroupConfigRequestType();
  }
  
  public AddVirtualNicRequestType createAddVirtualNicRequestType() {
    return new AddVirtualNicRequestType();
  }
  
  public LogBundlingFailed createLogBundlingFailed() {
    return new LogBundlingFailed();
  }
  
  public VmfsAmbiguousMount createVmfsAmbiguousMount() {
    return new VmfsAmbiguousMount();
  }
  
  public UpdateHostProfileRequestType createUpdateHostProfileRequestType() {
    return new UpdateHostProfileRequestType();
  }
  
  public PutUsbScanCodesResponse createPutUsbScanCodesResponse() {
    return new PutUsbScanCodesResponse();
  }
  
  public QuerySyncingVsanObjectsResponse createQuerySyncingVsanObjectsResponse() {
    return new QuerySyncingVsanObjectsResponse();
  }
  
  public HostGetVFlashModuleDefaultConfigResponse createHostGetVFlashModuleDefaultConfigResponse() {
    return new HostGetVFlashModuleDefaultConfigResponse();
  }
  
  public VirtualDiskVFlashCacheConfigInfo createVirtualDiskVFlashCacheConfigInfo() {
    return new VirtualDiskVFlashCacheConfigInfo();
  }
  
  public MethodFault createMethodFault() {
    return new MethodFault();
  }
  
  public AssignUserToGroupRequestType createAssignUserToGroupRequestType() {
    return new AssignUserToGroupRequestType();
  }
  
  public VStorageObjectCreateSnapshotRequestType createVStorageObjectCreateSnapshotRequestType() {
    return new VStorageObjectCreateSnapshotRequestType();
  }
  
  public NotSupportedHostForVFlash createNotSupportedHostForVFlash() {
    return new NotSupportedHostForVFlash();
  }
  
  public QueryPerfRequestType createQueryPerfRequestType() {
    return new QueryPerfRequestType();
  }
  
  public RequestCanceled createRequestCanceled() {
    return new RequestCanceled();
  }
  
  public CreateCustomizationSpecResponse createCreateCustomizationSpecResponse() {
    return new CreateCustomizationSpecResponse();
  }
  
  public DeleteDirectoryRequestType createDeleteDirectoryRequestType() {
    return new DeleteDirectoryRequestType();
  }
  
  public CAMServerRefusedConnection createCAMServerRefusedConnection() {
    return new CAMServerRefusedConnection();
  }
  
  public DeviceUnsupportedForVmVersion createDeviceUnsupportedForVmVersion() {
    return new DeviceUnsupportedForVmVersion();
  }
  
  public AttachTagToVStorageObjectRequestType createAttachTagToVStorageObjectRequestType() {
    return new AttachTagToVStorageObjectRequestType();
  }
  
  public RevertVStorageObjectRequestType createRevertVStorageObjectRequestType() {
    return new RevertVStorageObjectRequestType();
  }
  
  public RetrieveHardwareUptimeResponse createRetrieveHardwareUptimeResponse() {
    return new RetrieveHardwareUptimeResponse();
  }
  
  public CryptoManagerHostDisableRequestType createCryptoManagerHostDisableRequestType() {
    return new CryptoManagerHostDisableRequestType();
  }
  
  public FileBackedPortNotSupported createFileBackedPortNotSupported() {
    return new FileBackedPortNotSupported();
  }
  
  public IscsiFaultVnicHasNoUplinks createIscsiFaultVnicHasNoUplinks() {
    return new IscsiFaultVnicHasNoUplinks();
  }
  
  public CreateCollectorForEventsResponse createCreateCollectorForEventsResponse() {
    return new CreateCollectorForEventsResponse();
  }
  
  public CannotEnableVmcpForCluster createCannotEnableVmcpForCluster() {
    return new CannotEnableVmcpForCluster();
  }
  
  public InstantCloneTaskResponse createInstantCloneTaskResponse() {
    return new InstantCloneTaskResponse();
  }
  
  public HttpNfcLeaseProgressResponse createHttpNfcLeaseProgressResponse() {
    return new HttpNfcLeaseProgressResponse();
  }
  
  public InvalidPowerState createInvalidPowerState() {
    return new InvalidPowerState();
  }
  
  public QueryExpressionMetadataResponse createQueryExpressionMetadataResponse() {
    return new QueryExpressionMetadataResponse();
  }
  
  public ProfileExpressionMetadata createProfileExpressionMetadata() {
    return new ProfileExpressionMetadata();
  }
  
  public RemoveLicenseLabelRequestType createRemoveLicenseLabelRequestType() {
    return new RemoveLicenseLabelRequestType();
  }
  
  public QueryDateTimeRequestType createQueryDateTimeRequestType() {
    return new QueryDateTimeRequestType();
  }
  
  public RecommendHostsForVmRequestType createRecommendHostsForVmRequestType() {
    return new RecommendHostsForVmRequestType();
  }
  
  public ReplaceSmartCardTrustAnchorsRequestType createReplaceSmartCardTrustAnchorsRequestType() {
    return new ReplaceSmartCardTrustAnchorsRequestType();
  }
  
  public QueryVmfsDatastoreExtendOptionsResponse createQueryVmfsDatastoreExtendOptionsResponse() {
    return new QueryVmfsDatastoreExtendOptionsResponse();
  }
  
  public QueryTpmAttestationReportResponse createQueryTpmAttestationReportResponse() {
    return new QueryTpmAttestationReportResponse();
  }
  
  public HostTpmAttestationReport createHostTpmAttestationReport() {
    return new HostTpmAttestationReport();
  }
  
  public QueryCmmdsResponse createQueryCmmdsResponse() {
    return new QueryCmmdsResponse();
  }
  
  public CpuCompatibilityUnknown createCpuCompatibilityUnknown() {
    return new CpuCompatibilityUnknown();
  }
  
  public ReadNextTasksResponse createReadNextTasksResponse() {
    return new ReadNextTasksResponse();
  }
  
  public TaskInfo createTaskInfo() {
    return new TaskInfo();
  }
  
  public QueryAvailablePartitionResponse createQueryAvailablePartitionResponse() {
    return new QueryAvailablePartitionResponse();
  }
  
  public HostDiagnosticPartition createHostDiagnosticPartition() {
    return new HostDiagnosticPartition();
  }
  
  public QueryNFSUserRequestType createQueryNFSUserRequestType() {
    return new QueryNFSUserRequestType();
  }
  
  public DisallowedOperationOnFailoverHost createDisallowedOperationOnFailoverHost() {
    return new DisallowedOperationOnFailoverHost();
  }
  
  public ExitMaintenanceModeRequestType createExitMaintenanceModeRequestType() {
    return new ExitMaintenanceModeRequestType();
  }
  
  public CreateScreenshotRequestType createCreateScreenshotRequestType() {
    return new CreateScreenshotRequestType();
  }
  
  public QueryFirmwareConfigUploadURLRequestType createQueryFirmwareConfigUploadURLRequestType() {
    return new QueryFirmwareConfigUploadURLRequestType();
  }
  
  public UpdateSystemUsersRequestType createUpdateSystemUsersRequestType() {
    return new UpdateSystemUsersRequestType();
  }
  
  public LicenseRestricted createLicenseRestricted() {
    return new LicenseRestricted();
  }
  
  public QueryAvailablePartitionRequestType createQueryAvailablePartitionRequestType() {
    return new QueryAvailablePartitionRequestType();
  }
  
  public RetrieveDynamicPassthroughInfoResponse createRetrieveDynamicPassthroughInfoResponse() {
    return new RetrieveDynamicPassthroughInfoResponse();
  }
  
  public VirtualMachineDynamicPassthroughInfo createVirtualMachineDynamicPassthroughInfo() {
    return new VirtualMachineDynamicPassthroughInfo();
  }
  
  public StorageDrsDatacentersCannotShareDatastore createStorageDrsDatacentersCannotShareDatastore() {
    return new StorageDrsDatacentersCannotShareDatastore();
  }
  
  public FaultToleranceVmNotDasProtected createFaultToleranceVmNotDasProtected() {
    return new FaultToleranceVmNotDasProtected();
  }
  
  public HostVStorageObjectCreateDiskFromSnapshotTaskResponse createHostVStorageObjectCreateDiskFromSnapshotTaskResponse() {
    return new HostVStorageObjectCreateDiskFromSnapshotTaskResponse();
  }
  
  public CannotComputeFTCompatibleHosts createCannotComputeFTCompatibleHosts() {
    return new CannotComputeFTCompatibleHosts();
  }
  
  public UpdateSoftwareInternetScsiEnabledRequestType createUpdateSoftwareInternetScsiEnabledRequestType() {
    return new UpdateSoftwareInternetScsiEnabledRequestType();
  }
  
  public RetrieveVStorageInfrastructureObjectPolicyResponse createRetrieveVStorageInfrastructureObjectPolicyResponse() {
    return new RetrieveVStorageInfrastructureObjectPolicyResponse();
  }
  
  public VslmInfrastructureObjectPolicy createVslmInfrastructureObjectPolicy() {
    return new VslmInfrastructureObjectPolicy();
  }
  
  public MarkDefaultRequestType createMarkDefaultRequestType() {
    return new MarkDefaultRequestType();
  }
  
  public QueryAvailableDisksForVmfsResponse createQueryAvailableDisksForVmfsResponse() {
    return new QueryAvailableDisksForVmfsResponse();
  }
  
  public HostScsiDisk createHostScsiDisk() {
    return new HostScsiDisk();
  }
  
  public CreateCollectorForTasksRequestType createCreateCollectorForTasksRequestType() {
    return new CreateCollectorForTasksRequestType();
  }
  
  public FetchUserPrivilegeOnEntitiesRequestType createFetchUserPrivilegeOnEntitiesRequestType() {
    return new FetchUserPrivilegeOnEntitiesRequestType();
  }
  
  public IncorrectHostInformation createIncorrectHostInformation() {
    return new IncorrectHostInformation();
  }
  
  public BatchQueryConnectInfoRequestType createBatchQueryConnectInfoRequestType() {
    return new BatchQueryConnectInfoRequestType();
  }
  
  public HttpNfcLeaseGetManifestResponse createHttpNfcLeaseGetManifestResponse() {
    return new HttpNfcLeaseGetManifestResponse();
  }
  
  public HttpNfcLeaseManifestEntry createHttpNfcLeaseManifestEntry() {
    return new HttpNfcLeaseManifestEntry();
  }
  
  public VmPowerOnDisabled createVmPowerOnDisabled() {
    return new VmPowerOnDisabled();
  }
  
  public RebootGuestRequestType createRebootGuestRequestType() {
    return new RebootGuestRequestType();
  }
  
  public StampAllRulesWithUuidTaskResponse createStampAllRulesWithUuidTaskResponse() {
    return new StampAllRulesWithUuidTaskResponse();
  }
  
  public HttpNfcLeaseCompleteRequestType createHttpNfcLeaseCompleteRequestType() {
    return new HttpNfcLeaseCompleteRequestType();
  }
  
  public EnterLockdownModeRequestType createEnterLockdownModeRequestType() {
    return new EnterLockdownModeRequestType();
  }
  
  public RenameCustomFieldDefRequestType createRenameCustomFieldDefRequestType() {
    return new RenameCustomFieldDefRequestType();
  }
  
  public AddKeyRequestType createAddKeyRequestType() {
    return new AddKeyRequestType();
  }
  
  public MarkAsVirtualMachineRequestType createMarkAsVirtualMachineRequestType() {
    return new MarkAsVirtualMachineRequestType();
  }
  
  public LoginRequestType createLoginRequestType() {
    return new LoginRequestType();
  }
  
  public HostSetVStorageObjectControlFlagsResponse createHostSetVStorageObjectControlFlagsResponse() {
    return new HostSetVStorageObjectControlFlagsResponse();
  }
  
  public SetDisplayTopologyRequestType createSetDisplayTopologyRequestType() {
    return new SetDisplayTopologyRequestType();
  }
  
  public InvalidPropertyValue createInvalidPropertyValue() {
    return new InvalidPropertyValue();
  }
  
  public OvfInvalidPackage createOvfInvalidPackage() {
    return new OvfInvalidPackage();
  }
  
  public QueryCompatibleHostForNewDvsRequestType createQueryCompatibleHostForNewDvsRequestType() {
    return new QueryCompatibleHostForNewDvsRequestType();
  }
  
  public UnsupportedVimApiVersion createUnsupportedVimApiVersion() {
    return new UnsupportedVimApiVersion();
  }
  
  public CryptoManagerHostPrepareRequestType createCryptoManagerHostPrepareRequestType() {
    return new CryptoManagerHostPrepareRequestType();
  }
  
  public NoCompatibleSoftAffinityHost createNoCompatibleSoftAffinityHost() {
    return new NoCompatibleSoftAffinityHost();
  }
  
  public NotUserConfigurableProperty createNotUserConfigurableProperty() {
    return new NotUserConfigurableProperty();
  }
  
  public QueryUsedVlanIdInDvsResponse createQueryUsedVlanIdInDvsResponse() {
    return new QueryUsedVlanIdInDvsResponse();
  }
  
  public DuplicateCustomizationSpecResponse createDuplicateCustomizationSpecResponse() {
    return new DuplicateCustomizationSpecResponse();
  }
  
  public ResolveInstallationErrorsOnHostRequestType createResolveInstallationErrorsOnHostRequestType() {
    return new ResolveInstallationErrorsOnHostRequestType();
  }
  
  public InstallServerCertificateRequestType createInstallServerCertificateRequestType() {
    return new InstallServerCertificateRequestType();
  }
  
  public DeviceHotPlugNotSupported createDeviceHotPlugNotSupported() {
    return new DeviceHotPlugNotSupported();
  }
  
  public CertMgrRefreshCertificatesRequestType createCertMgrRefreshCertificatesRequestType() {
    return new CertMgrRefreshCertificatesRequestType();
  }
  
  public ExecuteHostProfileRequestType createExecuteHostProfileRequestType() {
    return new ExecuteHostProfileRequestType();
  }
  
  public QueryMemoryOverheadRequestType createQueryMemoryOverheadRequestType() {
    return new QueryMemoryOverheadRequestType();
  }
  
  public QueryComplianceStatusRequestType createQueryComplianceStatusRequestType() {
    return new QueryComplianceStatusRequestType();
  }
  
  public DeleteVmfsVolumeStateRequestType createDeleteVmfsVolumeStateRequestType() {
    return new DeleteVmfsVolumeStateRequestType();
  }
  
  public OvfUnsupportedAttribute createOvfUnsupportedAttribute() {
    return new OvfUnsupportedAttribute();
  }
  
  public StorageDrsCannotMoveIndependentDisk createStorageDrsCannotMoveIndependentDisk() {
    return new StorageDrsCannotMoveIndependentDisk();
  }
  
  public NoCompatibleHost createNoCompatibleHost() {
    return new NoCompatibleHost();
  }
  
  public InflateDiskTaskResponse createInflateDiskTaskResponse() {
    return new InflateDiskTaskResponse();
  }
  
  public QueryHealthUpdatesResponse createQueryHealthUpdatesResponse() {
    return new QueryHealthUpdatesResponse();
  }
  
  public HealthUpdate createHealthUpdate() {
    return new HealthUpdate();
  }
  
  public MoveDatastoreFileTaskResponse createMoveDatastoreFileTaskResponse() {
    return new MoveDatastoreFileTaskResponse();
  }
  
  public DestroyProfileResponse createDestroyProfileResponse() {
    return new DestroyProfileResponse();
  }
  
  public CreateRegistryKeyInGuestResponse createCreateRegistryKeyInGuestResponse() {
    return new CreateRegistryKeyInGuestResponse();
  }
  
  public RefreshRuntimeResponse createRefreshRuntimeResponse() {
    return new RefreshRuntimeResponse();
  }
  
  public CreateStoragePodResponse createCreateStoragePodResponse() {
    return new CreateStoragePodResponse();
  }
  
  public ChangeNFSUserPasswordResponse createChangeNFSUserPasswordResponse() {
    return new ChangeNFSUserPasswordResponse();
  }
  
  public QueryDatastorePerformanceSummaryResponse createQueryDatastorePerformanceSummaryResponse() {
    return new QueryDatastorePerformanceSummaryResponse();
  }
  
  public StoragePerformanceSummary createStoragePerformanceSummary() {
    return new StoragePerformanceSummary();
  }
  
  public QueryHostProfileMetadataResponse createQueryHostProfileMetadataResponse() {
    return new QueryHostProfileMetadataResponse();
  }
  
  public ProfileMetadata createProfileMetadata() {
    return new ProfileMetadata();
  }
  
  public QueryAvailableSsdsResponse createQueryAvailableSsdsResponse() {
    return new QueryAvailableSsdsResponse();
  }
  
  public HasPrivilegeOnEntitiesRequestType createHasPrivilegeOnEntitiesRequestType() {
    return new HasPrivilegeOnEntitiesRequestType();
  }
  
  public BatchAddHostsToClusterTaskResponse createBatchAddHostsToClusterTaskResponse() {
    return new BatchAddHostsToClusterTaskResponse();
  }
  
  public UnregisterVMRequestType createUnregisterVMRequestType() {
    return new UnregisterVMRequestType();
  }
  
  public StartServiceResponse createStartServiceResponse() {
    return new StartServiceResponse();
  }
  
  public CloseInventoryViewFolderRequestType createCloseInventoryViewFolderRequestType() {
    return new CloseInventoryViewFolderRequestType();
  }
  
  public CreateAlarmRequestType createCreateAlarmRequestType() {
    return new CreateAlarmRequestType();
  }
  
  public InitializeDisksTaskResponse createInitializeDisksTaskResponse() {
    return new InitializeDisksTaskResponse();
  }
  
  public InvalidNasCredentials createInvalidNasCredentials() {
    return new InvalidNasCredentials();
  }
  
  public GenerateCertificateSigningRequestResponse createGenerateCertificateSigningRequestResponse() {
    return new GenerateCertificateSigningRequestResponse();
  }
  
  public QueryHostConnectionInfoResponse createQueryHostConnectionInfoResponse() {
    return new QueryHostConnectionInfoResponse();
  }
  
  public DeleteNvdimmNamespaceTaskResponse createDeleteNvdimmNamespaceTaskResponse() {
    return new DeleteNvdimmNamespaceTaskResponse();
  }
  
  public QueryVirtualDiskGeometryRequestType createQueryVirtualDiskGeometryRequestType() {
    return new QueryVirtualDiskGeometryRequestType();
  }
  
  public AbdicateDomOwnershipRequestType createAbdicateDomOwnershipRequestType() {
    return new AbdicateDomOwnershipRequestType();
  }
  
  public CannotAddHostWithFTVmToNonHACluster createCannotAddHostWithFTVmToNonHACluster() {
    return new CannotAddHostWithFTVmToNonHACluster();
  }
  
  public ReconfigurationSatisfiableRequestType createReconfigurationSatisfiableRequestType() {
    return new ReconfigurationSatisfiableRequestType();
  }
  
  public RegisterChildVMTaskResponse createRegisterChildVMTaskResponse() {
    return new RegisterChildVMTaskResponse();
  }
  
  public DestroyDatastoreRequestType createDestroyDatastoreRequestType() {
    return new DestroyDatastoreRequestType();
  }
  
  public DeselectVnicForNicTypeRequestType createDeselectVnicForNicTypeRequestType() {
    return new DeselectVnicForNicTypeRequestType();
  }
  
  public QueryNetworkHintRequestType createQueryNetworkHintRequestType() {
    return new QueryNetworkHintRequestType();
  }
  
  public ValidateHCIConfigurationResponse createValidateHCIConfigurationResponse() {
    return new ValidateHCIConfigurationResponse();
  }
  
  public ClusterComputeResourceValidationResultBase createClusterComputeResourceValidationResultBase() {
    return new ClusterComputeResourceValidationResultBase();
  }
  
  public DisableFeatureRequestType createDisableFeatureRequestType() {
    return new DisableFeatureRequestType();
  }
  
  public NotSupportedHostForVmemFile createNotSupportedHostForVmemFile() {
    return new NotSupportedHostForVmemFile();
  }
  
  public MakeDirectoryResponse createMakeDirectoryResponse() {
    return new MakeDirectoryResponse();
  }
  
  public GenericDrsFault createGenericDrsFault() {
    return new GenericDrsFault();
  }
  
  public HeterogenousHostsBlockingEVC createHeterogenousHostsBlockingEVC() {
    return new HeterogenousHostsBlockingEVC();
  }
  
  public UpgradeToolsTaskResponse createUpgradeToolsTaskResponse() {
    return new UpgradeToolsTaskResponse();
  }
  
  public InvalidDeviceBacking createInvalidDeviceBacking() {
    return new InvalidDeviceBacking();
  }
  
  public MountVmfsVolumeResponse createMountVmfsVolumeResponse() {
    return new MountVmfsVolumeResponse();
  }
  
  public QueryConfigOptionExRequestType createQueryConfigOptionExRequestType() {
    return new QueryConfigOptionExRequestType();
  }
  
  public FindAllByIpResponse createFindAllByIpResponse() {
    return new FindAllByIpResponse();
  }
  
  public QueryLicenseSourceAvailabilityRequestType createQueryLicenseSourceAvailabilityRequestType() {
    return new QueryLicenseSourceAvailabilityRequestType();
  }
  
  public ConfigureEvcModeTaskResponse createConfigureEvcModeTaskResponse() {
    return new ConfigureEvcModeTaskResponse();
  }
  
  public RemoveDatastoreExRequestType createRemoveDatastoreExRequestType() {
    return new RemoveDatastoreExRequestType();
  }
  
  public RefreshStorageDrsRecommendationsForPodTaskResponse createRefreshStorageDrsRecommendationsForPodTaskResponse() {
    return new RefreshStorageDrsRecommendationsForPodTaskResponse();
  }
  
  public DestroyChildrenRequestType createDestroyChildrenRequestType() {
    return new DestroyChildrenRequestType();
  }
  
  public DefragmentAllDisksRequestType createDefragmentAllDisksRequestType() {
    return new DefragmentAllDisksRequestType();
  }
  
  public OvfInvalidValueEmpty createOvfInvalidValueEmpty() {
    return new OvfInvalidValueEmpty();
  }
  
  public EVCUnsupportedByHostHardware createEVCUnsupportedByHostHardware() {
    return new EVCUnsupportedByHostHardware();
  }
  
  public EvacuateVsanNodeTaskResponse createEvacuateVsanNodeTaskResponse() {
    return new EvacuateVsanNodeTaskResponse();
  }
  
  public CreateListViewRequestType createCreateListViewRequestType() {
    return new CreateListViewRequestType();
  }
  
  public RenameDatastoreRequestType createRenameDatastoreRequestType() {
    return new RenameDatastoreRequestType();
  }
  
  public AuthMinimumAdminPermission createAuthMinimumAdminPermission() {
    return new AuthMinimumAdminPermission();
  }
  
  public QueryComplianceStatusResponse createQueryComplianceStatusResponse() {
    return new QueryComplianceStatusResponse();
  }
  
  public ComplianceResult createComplianceResult() {
    return new ComplianceResult();
  }
  
  public NoGateway createNoGateway() {
    return new NoGateway();
  }
  
  public RefreshGraphicsManagerResponse createRefreshGraphicsManagerResponse() {
    return new RefreshGraphicsManagerResponse();
  }
  
  public RegisterKmipServerRequestType createRegisterKmipServerRequestType() {
    return new RegisterKmipServerRequestType();
  }
  
  public DetachScsiLunRequestType createDetachScsiLunRequestType() {
    return new DetachScsiLunRequestType();
  }
  
  public RefreshRecommendationRequestType createRefreshRecommendationRequestType() {
    return new RefreshRecommendationRequestType();
  }
  
  public SwapDatastoreNotWritableOnHost createSwapDatastoreNotWritableOnHost() {
    return new SwapDatastoreNotWritableOnHost();
  }
  
  public DestinationSwitchFull createDestinationSwitchFull() {
    return new DestinationSwitchFull();
  }
  
  public CreateSnapshotExTaskResponse createCreateSnapshotExTaskResponse() {
    return new CreateSnapshotExTaskResponse();
  }
  
  public RefreshGraphicsManagerRequestType createRefreshGraphicsManagerRequestType() {
    return new RefreshGraphicsManagerRequestType();
  }
  
  public AddStandaloneHostTaskResponse createAddStandaloneHostTaskResponse() {
    return new AddStandaloneHostTaskResponse();
  }
  
  public DisconnectHostTaskResponse createDisconnectHostTaskResponse() {
    return new DisconnectHostTaskResponse();
  }
  
  public PowerOffVMRequestType createPowerOffVMRequestType() {
    return new PowerOffVMRequestType();
  }
  
  public GetVchaConfigResponse createGetVchaConfigResponse() {
    return new GetVchaConfigResponse();
  }
  
  public VchaClusterConfigInfo createVchaClusterConfigInfo() {
    return new VchaClusterConfigInfo();
  }
  
  public NotSupported createNotSupported() {
    return new NotSupported();
  }
  
  public QuerySupportedFeaturesResponse createQuerySupportedFeaturesResponse() {
    return new QuerySupportedFeaturesResponse();
  }
  
  public LicenseFeatureInfo createLicenseFeatureInfo() {
    return new LicenseFeatureInfo();
  }
  
  public OvfUnsupportedElement createOvfUnsupportedElement() {
    return new OvfUnsupportedElement();
  }
  
  public RetrieveAllPermissionsResponse createRetrieveAllPermissionsResponse() {
    return new RetrieveAllPermissionsResponse();
  }
  
  public RemoveDiskRequestType createRemoveDiskRequestType() {
    return new RemoveDiskRequestType();
  }
  
  public LoginExtensionBySubjectNameRequestType createLoginExtensionBySubjectNameRequestType() {
    return new LoginExtensionBySubjectNameRequestType();
  }
  
  public ScanHostPatchTaskResponse createScanHostPatchTaskResponse() {
    return new ScanHostPatchTaskResponse();
  }
  
  public StartProgramInGuestResponse createStartProgramInGuestResponse() {
    return new StartProgramInGuestResponse();
  }
  
  public CreatePerfIntervalRequestType createCreatePerfIntervalRequestType() {
    return new CreatePerfIntervalRequestType();
  }
  
  public AddLicenseRequestType createAddLicenseRequestType() {
    return new AddLicenseRequestType();
  }
  
  public DisableFeatureResponse createDisableFeatureResponse() {
    return new DisableFeatureResponse();
  }
  
  public QueryVsanUpgradeStatusRequestType createQueryVsanUpgradeStatusRequestType() {
    return new QueryVsanUpgradeStatusRequestType();
  }
  
  public CannotPlaceWithoutPrerequisiteMoves createCannotPlaceWithoutPrerequisiteMoves() {
    return new CannotPlaceWithoutPrerequisiteMoves();
  }
  
  public FormatVmfsRequestType createFormatVmfsRequestType() {
    return new FormatVmfsRequestType();
  }
  
  public VmotionInterfaceNotEnabled createVmotionInterfaceNotEnabled() {
    return new VmotionInterfaceNotEnabled();
  }
  
  public QueryDisksUsingFilterRequestType createQueryDisksUsingFilterRequestType() {
    return new QueryDisksUsingFilterRequestType();
  }
  
  public RegisterHealthUpdateProviderResponse createRegisterHealthUpdateProviderResponse() {
    return new RegisterHealthUpdateProviderResponse();
  }
  
  public GenerateConfigTaskListRequestType createGenerateConfigTaskListRequestType() {
    return new GenerateConfigTaskListRequestType();
  }
  
  public RecommendHostsForVmResponse createRecommendHostsForVmResponse() {
    return new RecommendHostsForVmResponse();
  }
  
  public ClusterHostRecommendation createClusterHostRecommendation() {
    return new ClusterHostRecommendation();
  }
  
  public HostVStorageObjectDeleteSnapshotTaskResponse createHostVStorageObjectDeleteSnapshotTaskResponse() {
    return new HostVStorageObjectDeleteSnapshotTaskResponse();
  }
  
  public RemoveSmartCardTrustAnchorRequestType createRemoveSmartCardTrustAnchorRequestType() {
    return new RemoveSmartCardTrustAnchorRequestType();
  }
  
  public ReleaseManagedSnapshotResponse createReleaseManagedSnapshotResponse() {
    return new ReleaseManagedSnapshotResponse();
  }
  
  public ToolsImageCopyFailed createToolsImageCopyFailed() {
    return new ToolsImageCopyFailed();
  }
  
  public AutoStartPowerOffResponse createAutoStartPowerOffResponse() {
    return new AutoStartPowerOffResponse();
  }
  
  public EnableAlarmRequestType createEnableAlarmRequestType() {
    return new EnableAlarmRequestType();
  }
  
  public QueryPathSelectionPolicyOptionsResponse createQueryPathSelectionPolicyOptionsResponse() {
    return new QueryPathSelectionPolicyOptionsResponse();
  }
  
  public HostPathSelectionPolicyOption createHostPathSelectionPolicyOption() {
    return new HostPathSelectionPolicyOption();
  }
  
  public DVSManagerLookupDvPortGroupRequestType createDVSManagerLookupDvPortGroupRequestType() {
    return new DVSManagerLookupDvPortGroupRequestType();
  }
  
  public HostRetrieveVStorageInfrastructureObjectPolicyResponse createHostRetrieveVStorageInfrastructureObjectPolicyResponse() {
    return new HostRetrieveVStorageInfrastructureObjectPolicyResponse();
  }
  
  public ReleaseIpAllocationRequestType createReleaseIpAllocationRequestType() {
    return new ReleaseIpAllocationRequestType();
  }
  
  public HostUpdateVStorageObjectMetadataRequestType createHostUpdateVStorageObjectMetadataRequestType() {
    return new HostUpdateVStorageObjectMetadataRequestType();
  }
  
  public ExtendHCITaskResponse createExtendHCITaskResponse() {
    return new ExtendHCITaskResponse();
  }
  
  public CopyDatastoreFileTaskResponse createCopyDatastoreFileTaskResponse() {
    return new CopyDatastoreFileTaskResponse();
  }
  
  public DvsFault createDvsFault() {
    return new DvsFault();
  }
  
  public OvfConstraint createOvfConstraint() {
    return new OvfConstraint();
  }
  
  public UpdateNetworkResourcePoolRequestType createUpdateNetworkResourcePoolRequestType() {
    return new UpdateNetworkResourcePoolRequestType();
  }
  
  public DefragmentAllDisksResponse createDefragmentAllDisksResponse() {
    return new DefragmentAllDisksResponse();
  }
  
  public AreAlarmActionsEnabledResponse createAreAlarmActionsEnabledResponse() {
    return new AreAlarmActionsEnabledResponse();
  }
  
  public GatewayOperationRefused createGatewayOperationRefused() {
    return new GatewayOperationRefused();
  }
  
  public HostRenameVStorageObjectRequestType createHostRenameVStorageObjectRequestType() {
    return new HostRenameVStorageObjectRequestType();
  }
  
  public FetchDVPortsResponse createFetchDVPortsResponse() {
    return new FetchDVPortsResponse();
  }
  
  public DistributedVirtualPort createDistributedVirtualPort() {
    return new DistributedVirtualPort();
  }
  
  public QueryIoFilterIssuesResponse createQueryIoFilterIssuesResponse() {
    return new QueryIoFilterIssuesResponse();
  }
  
  public IoFilterQueryIssueResult createIoFilterQueryIssueResult() {
    return new IoFilterQueryIssueResult();
  }
  
  public OvfConsumerInvalidSection createOvfConsumerInvalidSection() {
    return new OvfConsumerInvalidSection();
  }
  
  public QueryFilterEntitiesRequestType createQueryFilterEntitiesRequestType() {
    return new QueryFilterEntitiesRequestType();
  }
  
  public QueryResourceConfigOptionRequestType createQueryResourceConfigOptionRequestType() {
    return new QueryResourceConfigOptionRequestType();
  }
  
  public EvcManagerResponse createEvcManagerResponse() {
    return new EvcManagerResponse();
  }
  
  public RegisterChildVMRequestType createRegisterChildVMRequestType() {
    return new RegisterChildVMRequestType();
  }
  
  public RescanHbaResponse createRescanHbaResponse() {
    return new RescanHbaResponse();
  }
  
  public UpdateVsanTaskResponse createUpdateVsanTaskResponse() {
    return new UpdateVsanTaskResponse();
  }
  
  public SetEntityPermissionsResponse createSetEntityPermissionsResponse() {
    return new SetEntityPermissionsResponse();
  }
  
  public UpdateConfigResponse createUpdateConfigResponse() {
    return new UpdateConfigResponse();
  }
  
  public ListRegistryValuesInGuestResponse createListRegistryValuesInGuestResponse() {
    return new ListRegistryValuesInGuestResponse();
  }
  
  public GuestRegValueSpec createGuestRegValueSpec() {
    return new GuestRegValueSpec();
  }
  
  public ReconfigureDomObjectResponse createReconfigureDomObjectResponse() {
    return new ReconfigureDomObjectResponse();
  }
  
  public NotADirectory createNotADirectory() {
    return new NotADirectory();
  }
  
  public UpdateNetworkResourcePoolResponse createUpdateNetworkResourcePoolResponse() {
    return new UpdateNetworkResourcePoolResponse();
  }
  
  public UpdateAuthorizationRoleRequestType createUpdateAuthorizationRoleRequestType() {
    return new UpdateAuthorizationRoleRequestType();
  }
  
  public UnregisterExtensionResponse createUnregisterExtensionResponse() {
    return new UnregisterExtensionResponse();
  }
  
  public UpdateHostSpecificationRequestType createUpdateHostSpecificationRequestType() {
    return new UpdateHostSpecificationRequestType();
  }
  
  public InvalidEditionLicense createInvalidEditionLicense() {
    return new InvalidEditionLicense();
  }
  
  public NotEnoughLicenses createNotEnoughLicenses() {
    return new NotEnoughLicenses();
  }
  
  public RemoveEntityPermissionRequestType createRemoveEntityPermissionRequestType() {
    return new RemoveEntityPermissionRequestType();
  }
  
  public VmHostAffinityRuleViolation createVmHostAffinityRuleViolation() {
    return new VmHostAffinityRuleViolation();
  }
  
  public ActiveDirectoryFault createActiveDirectoryFault() {
    return new ActiveDirectoryFault();
  }
  
  public NoPermission createNoPermission() {
    return new NoPermission();
  }
  
  public RetrieveSelfSignedClientCertResponse createRetrieveSelfSignedClientCertResponse() {
    return new RetrieveSelfSignedClientCertResponse();
  }
  
  public AcquireCloneTicketResponse createAcquireCloneTicketResponse() {
    return new AcquireCloneTicketResponse();
  }
  
  public PatchAlreadyInstalled createPatchAlreadyInstalled() {
    return new PatchAlreadyInstalled();
  }
  
  public ExecuteSimpleCommandResponse createExecuteSimpleCommandResponse() {
    return new ExecuteSimpleCommandResponse();
  }
  
  public OvfUnsupportedSubType createOvfUnsupportedSubType() {
    return new OvfUnsupportedSubType();
  }
  
  public HostVStorageObjectRevertRequestType createHostVStorageObjectRevertRequestType() {
    return new HostVStorageObjectRevertRequestType();
  }
  
  public CannotAccessLocalSource createCannotAccessLocalSource() {
    return new CannotAccessLocalSource();
  }
  
  public HostRetrieveVStorageObjectMetadataValueResponse createHostRetrieveVStorageObjectMetadataValueResponse() {
    return new HostRetrieveVStorageObjectMetadataValueResponse();
  }
  
  public UpdateVsanRequestType createUpdateVsanRequestType() {
    return new UpdateVsanRequestType();
  }
  
  public PostHealthUpdatesRequestType createPostHealthUpdatesRequestType() {
    return new PostHealthUpdatesRequestType();
  }
  
  public CannotChangeDrsBehaviorForFtSecondary createCannotChangeDrsBehaviorForFtSecondary() {
    return new CannotChangeDrsBehaviorForFtSecondary();
  }
  
  public ExportProfileRequestType createExportProfileRequestType() {
    return new ExportProfileRequestType();
  }
  
  public CreateDescriptorResponse createCreateDescriptorResponse() {
    return new CreateDescriptorResponse();
  }
  
  public OvfCreateDescriptorResult createOvfCreateDescriptorResult() {
    return new OvfCreateDescriptorResult();
  }
  
  public InvalidArgument createInvalidArgument() {
    return new InvalidArgument();
  }
  
  public QueryTpmAttestationReportRequestType createQueryTpmAttestationReportRequestType() {
    return new QueryTpmAttestationReportRequestType();
  }
  
  public CurrentTimeRequestType createCurrentTimeRequestType() {
    return new CurrentTimeRequestType();
  }
  
  public AcknowledgeAlarmResponse createAcknowledgeAlarmResponse() {
    return new AcknowledgeAlarmResponse();
  }
  
  public TooManyConcurrentNativeClones createTooManyConcurrentNativeClones() {
    return new TooManyConcurrentNativeClones();
  }
  
  public ListGuestMappedAliasesRequestType createListGuestMappedAliasesRequestType() {
    return new ListGuestMappedAliasesRequestType();
  }
  
  public QueryUsedVlanIdInDvsRequestType createQueryUsedVlanIdInDvsRequestType() {
    return new QueryUsedVlanIdInDvsRequestType();
  }
  
  public QueryVmfsConfigOptionResponse createQueryVmfsConfigOptionResponse() {
    return new QueryVmfsConfigOptionResponse();
  }
  
  public VmfsConfigOption createVmfsConfigOption() {
    return new VmfsConfigOption();
  }
  
  public InvalidRequest createInvalidRequest() {
    return new InvalidRequest();
  }
  
  public QueryFilterNameRequestType createQueryFilterNameRequestType() {
    return new QueryFilterNameRequestType();
  }
  
  public AffinityConfigured createAffinityConfigured() {
    return new AffinityConfigured();
  }
  
  public UpdateVStorageObjectCryptoRequestType createUpdateVStorageObjectCryptoRequestType() {
    return new UpdateVStorageObjectCryptoRequestType();
  }
  
  public DeleteVffsVolumeStateResponse createDeleteVffsVolumeStateResponse() {
    return new DeleteVffsVolumeStateResponse();
  }
  
  public MountVmfsVolumeExTaskResponse createMountVmfsVolumeExTaskResponse() {
    return new MountVmfsVolumeExTaskResponse();
  }
  
  public UpdateScsiLunDisplayNameRequestType createUpdateScsiLunDisplayNameRequestType() {
    return new UpdateScsiLunDisplayNameRequestType();
  }
  
  public SnapshotMoveNotSupported createSnapshotMoveNotSupported() {
    return new SnapshotMoveNotSupported();
  }
  
  public BrowseDiagnosticLogRequestType createBrowseDiagnosticLogRequestType() {
    return new BrowseDiagnosticLogRequestType();
  }
  
  public AddFilterEntitiesRequestType createAddFilterEntitiesRequestType() {
    return new AddFilterEntitiesRequestType();
  }
  
  public IsKmsClusterActiveRequestType createIsKmsClusterActiveRequestType() {
    return new IsKmsClusterActiveRequestType();
  }
  
  public HostIncompatibleForRecordReplay createHostIncompatibleForRecordReplay() {
    return new HostIncompatibleForRecordReplay();
  }
  
  public UpdateIpPoolResponse createUpdateIpPoolResponse() {
    return new UpdateIpPoolResponse();
  }
  
  public CannotDeleteFile createCannotDeleteFile() {
    return new CannotDeleteFile();
  }
  
  public ListRegistryKeysInGuestResponse createListRegistryKeysInGuestResponse() {
    return new ListRegistryKeysInGuestResponse();
  }
  
  public GuestRegKeyRecordSpec createGuestRegKeyRecordSpec() {
    return new GuestRegKeyRecordSpec();
  }
  
  public AddFilterResponse createAddFilterResponse() {
    return new AddFilterResponse();
  }
  
  public QuiesceDatastoreIOForHAFailed createQuiesceDatastoreIOForHAFailed() {
    return new QuiesceDatastoreIOForHAFailed();
  }
  
  public RefreshServicesResponse createRefreshServicesResponse() {
    return new RefreshServicesResponse();
  }
  
  public FindByDatastorePathResponse createFindByDatastorePathResponse() {
    return new FindByDatastorePathResponse();
  }
  
  public GenerateCertificateSigningRequestRequestType createGenerateCertificateSigningRequestRequestType() {
    return new GenerateCertificateSigningRequestRequestType();
  }
  
  public OperationNotSupportedByGuest createOperationNotSupportedByGuest() {
    return new OperationNotSupportedByGuest();
  }
  
  public ReconfigureComputeResourceTaskResponse createReconfigureComputeResourceTaskResponse() {
    return new ReconfigureComputeResourceTaskResponse();
  }
  
  public QueryUnresolvedVmfsVolumesRequestType createQueryUnresolvedVmfsVolumesRequestType() {
    return new QueryUnresolvedVmfsVolumesRequestType();
  }
  
  public FindRulesForVmRequestType createFindRulesForVmRequestType() {
    return new FindRulesForVmRequestType();
  }
  
  public ExportSnapshotResponse createExportSnapshotResponse() {
    return new ExportSnapshotResponse();
  }
  
  public SetExtensionCertificateRequestType createSetExtensionCertificateRequestType() {
    return new SetExtensionCertificateRequestType();
  }
  
  public UnregisterVMResponse createUnregisterVMResponse() {
    return new UnregisterVMResponse();
  }
  
  public ConvertNamespacePathToUuidPathResponse createConvertNamespacePathToUuidPathResponse() {
    return new ConvertNamespacePathToUuidPathResponse();
  }
  
  public ModifyListViewResponse createModifyListViewResponse() {
    return new ModifyListViewResponse();
  }
  
  public DetachScsiLunExTaskResponse createDetachScsiLunExTaskResponse() {
    return new DetachScsiLunExTaskResponse();
  }
  
  public CloseInventoryViewFolderResponse createCloseInventoryViewFolderResponse() {
    return new CloseInventoryViewFolderResponse();
  }
  
  public EVCAdmissionFailedCPUVendor createEVCAdmissionFailedCPUVendor() {
    return new EVCAdmissionFailedCPUVendor();
  }
  
  public ResourceNotAvailable createResourceNotAvailable() {
    return new ResourceNotAvailable();
  }
  
  public HostDeleteVStorageObjectTaskResponse createHostDeleteVStorageObjectTaskResponse() {
    return new HostDeleteVStorageObjectTaskResponse();
  }
  
  public VsanClusterUuidMismatch createVsanClusterUuidMismatch() {
    return new VsanClusterUuidMismatch();
  }
  
  public InvalidOperationOnSecondaryVm createInvalidOperationOnSecondaryVm() {
    return new InvalidOperationOnSecondaryVm();
  }
  
  public OvfSystemFault createOvfSystemFault() {
    return new OvfSystemFault();
  }
  
  public DestroyVchaTaskResponse createDestroyVchaTaskResponse() {
    return new DestroyVchaTaskResponse();
  }
  
  public PerformDvsProductSpecOperationRequestType createPerformDvsProductSpecOperationRequestType() {
    return new PerformDvsProductSpecOperationRequestType();
  }
  
  public SetDefaultKmsClusterResponse createSetDefaultKmsClusterResponse() {
    return new SetDefaultKmsClusterResponse();
  }
  
  public EVCAdmissionFailedVmActive createEVCAdmissionFailedVmActive() {
    return new EVCAdmissionFailedVmActive();
  }
  
  public ResetSystemHealthInfoRequestType createResetSystemHealthInfoRequestType() {
    return new ResetSystemHealthInfoRequestType();
  }
  
  public IscsiFaultVnicNotFound createIscsiFaultVnicNotFound() {
    return new IscsiFaultVnicNotFound();
  }
  
  public RefreshStorageDrsRecommendationRequestType createRefreshStorageDrsRecommendationRequestType() {
    return new RefreshStorageDrsRecommendationRequestType();
  }
  
  public UserNotFound createUserNotFound() {
    return new UserNotFound();
  }
  
  public ValidateStoragePodConfigRequestType createValidateStoragePodConfigRequestType() {
    return new ValidateStoragePodConfigRequestType();
  }
  
  public UpdateKmipServerRequestType createUpdateKmipServerRequestType() {
    return new UpdateKmipServerRequestType();
  }
  
  public VAppOperationInProgress createVAppOperationInProgress() {
    return new VAppOperationInProgress();
  }
  
  public DissociateProfileRequestType createDissociateProfileRequestType() {
    return new DissociateProfileRequestType();
  }
  
  public HasUserPrivilegeOnEntitiesRequestType createHasUserPrivilegeOnEntitiesRequestType() {
    return new HasUserPrivilegeOnEntitiesRequestType();
  }
  
  public DiskTooSmall createDiskTooSmall() {
    return new DiskTooSmall();
  }
  
  public ImportVAppResponse createImportVAppResponse() {
    return new ImportVAppResponse();
  }
  
  public ReplicationInvalidOptions createReplicationInvalidOptions() {
    return new ReplicationInvalidOptions();
  }
  
  public RemoveFilterEntitiesResponse createRemoveFilterEntitiesResponse() {
    return new RemoveFilterEntitiesResponse();
  }
  
  public HotSnapshotMoveNotSupported createHotSnapshotMoveNotSupported() {
    return new HotSnapshotMoveNotSupported();
  }
  
  public RemoveAlarmResponse createRemoveAlarmResponse() {
    return new RemoveAlarmResponse();
  }
  
  public MoveVirtualDiskRequestType createMoveVirtualDiskRequestType() {
    return new MoveVirtualDiskRequestType();
  }
  
  public RetrieveVStorageObjectAssociationsResponse createRetrieveVStorageObjectAssociationsResponse() {
    return new RetrieveVStorageObjectAssociationsResponse();
  }
  
  public VStorageObjectAssociations createVStorageObjectAssociations() {
    return new VStorageObjectAssociations();
  }
  
  public UnusedVirtualDiskBlocksNotScrubbed createUnusedVirtualDiskBlocksNotScrubbed() {
    return new UnusedVirtualDiskBlocksNotScrubbed();
  }
  
  public NoConnectedDatastore createNoConnectedDatastore() {
    return new NoConnectedDatastore();
  }
  
  public EnableSmartCardAuthenticationRequestType createEnableSmartCardAuthenticationRequestType() {
    return new EnableSmartCardAuthenticationRequestType();
  }
  
  public QueryDatastorePerformanceSummaryRequestType createQueryDatastorePerformanceSummaryRequestType() {
    return new QueryDatastorePerformanceSummaryRequestType();
  }
  
  public IncompatibleHostForFtSecondary createIncompatibleHostForFtSecondary() {
    return new IncompatibleHostForFtSecondary();
  }
  
  public UninstallIoFilterRequestType createUninstallIoFilterRequestType() {
    return new UninstallIoFilterRequestType();
  }
  
  public CustomizationPending createCustomizationPending() {
    return new CustomizationPending();
  }
  
  public ExtractOvfEnvironmentRequestType createExtractOvfEnvironmentRequestType() {
    return new ExtractOvfEnvironmentRequestType();
  }
  
  public NoDisksToCustomize createNoDisksToCustomize() {
    return new NoDisksToCustomize();
  }
  
  public QueryExtensionIpAllocationUsageResponse createQueryExtensionIpAllocationUsageResponse() {
    return new QueryExtensionIpAllocationUsageResponse();
  }
  
  public ExtensionManagerIpAllocationUsage createExtensionManagerIpAllocationUsage() {
    return new ExtensionManagerIpAllocationUsage();
  }
  
  public StorageDrsCannotMoveFTVm createStorageDrsCannotMoveFTVm() {
    return new StorageDrsCannotMoveFTVm();
  }
  
  public HostVStorageObjectCreateDiskFromSnapshotRequestType createHostVStorageObjectCreateDiskFromSnapshotRequestType() {
    return new HostVStorageObjectCreateDiskFromSnapshotRequestType();
  }
  
  public UpdateInternetScsiAdvancedOptionsResponse createUpdateInternetScsiAdvancedOptionsResponse() {
    return new UpdateInternetScsiAdvancedOptionsResponse();
  }
  
  public UpdateAssignedLicenseRequestType createUpdateAssignedLicenseRequestType() {
    return new UpdateAssignedLicenseRequestType();
  }
  
  public IncorrectFileType createIncorrectFileType() {
    return new IncorrectFileType();
  }
  
  public CreateVmfsDatastoreRequestType createCreateVmfsDatastoreRequestType() {
    return new CreateVmfsDatastoreRequestType();
  }
  
  public StopRecordingRequestType createStopRecordingRequestType() {
    return new StopRecordingRequestType();
  }
  
  public DetachTagFromVStorageObjectResponse createDetachTagFromVStorageObjectResponse() {
    return new DetachTagFromVStorageObjectResponse();
  }
  
  public PromoteDisksRequestType createPromoteDisksRequestType() {
    return new PromoteDisksRequestType();
  }
  
  public ClearVStorageObjectControlFlagsResponse createClearVStorageObjectControlFlagsResponse() {
    return new ClearVStorageObjectControlFlagsResponse();
  }
  
  public HostConfigVFlashCacheRequestType createHostConfigVFlashCacheRequestType() {
    return new HostConfigVFlashCacheRequestType();
  }
  
  public QueryPathSelectionPolicyOptionsRequestType createQueryPathSelectionPolicyOptionsRequestType() {
    return new QueryPathSelectionPolicyOptionsRequestType();
  }
  
  public QuerySystemUsersResponse createQuerySystemUsersResponse() {
    return new QuerySystemUsersResponse();
  }
  
  public OutOfBounds createOutOfBounds() {
    return new OutOfBounds();
  }
  
  public CannotUseNetwork createCannotUseNetwork() {
    return new CannotUseNetwork();
  }
  
  public InstallDateResponse createInstallDateResponse() {
    return new InstallDateResponse();
  }
  
  public QueryLicenseSourceAvailabilityResponse createQueryLicenseSourceAvailabilityResponse() {
    return new QueryLicenseSourceAvailabilityResponse();
  }
  
  public LicenseAvailabilityInfo createLicenseAvailabilityInfo() {
    return new LicenseAvailabilityInfo();
  }
  
  public ConfigureHCIRequestType createConfigureHCIRequestType() {
    return new ConfigureHCIRequestType();
  }
  
  public DeleteVStorageObjectTaskResponse createDeleteVStorageObjectTaskResponse() {
    return new DeleteVStorageObjectTaskResponse();
  }
  
  public VMotionNotSupported createVMotionNotSupported() {
    return new VMotionNotSupported();
  }
  
  public FetchDVPortsRequestType createFetchDVPortsRequestType() {
    return new FetchDVPortsRequestType();
  }
  
  public SendTestNotificationRequestType createSendTestNotificationRequestType() {
    return new SendTestNotificationRequestType();
  }
  
  public SetLicenseEditionResponse createSetLicenseEditionResponse() {
    return new SetLicenseEditionResponse();
  }
  
  public ListTagsAttachedToVStorageObjectRequestType createListTagsAttachedToVStorageObjectRequestType() {
    return new ListTagsAttachedToVStorageObjectRequestType();
  }
  
  public UpdateRulesetRequestType createUpdateRulesetRequestType() {
    return new UpdateRulesetRequestType();
  }
  
  public DestroyPropertyCollectorRequestType createDestroyPropertyCollectorRequestType() {
    return new DestroyPropertyCollectorRequestType();
  }
  
  public NoHost createNoHost() {
    return new NoHost();
  }
  
  public ConnectedIso createConnectedIso() {
    return new ConnectedIso();
  }
  
  public NoDiskSpace createNoDiskSpace() {
    return new NoDiskSpace();
  }
  
  public TooManySnapshotLevels createTooManySnapshotLevels() {
    return new TooManySnapshotLevels();
  }
  
  public MarkAsTemplateRequestType createMarkAsTemplateRequestType() {
    return new MarkAsTemplateRequestType();
  }
  
  public GenerateCertificateSigningRequestByDnResponse createGenerateCertificateSigningRequestByDnResponse() {
    return new GenerateCertificateSigningRequestByDnResponse();
  }
  
  public RecommissionVsanNodeRequestType createRecommissionVsanNodeRequestType() {
    return new RecommissionVsanNodeRequestType();
  }
  
  public JoinDomainWithCAMRequestType createJoinDomainWithCAMRequestType() {
    return new JoinDomainWithCAMRequestType();
  }
  
  public CreateImportSpecRequestType createCreateImportSpecRequestType() {
    return new CreateImportSpecRequestType();
  }
  
  public RescanAllHbaRequestType createRescanAllHbaRequestType() {
    return new RescanAllHbaRequestType();
  }
  
  public RetrieveSnapshotDetailsRequestType createRetrieveSnapshotDetailsRequestType() {
    return new RetrieveSnapshotDetailsRequestType();
  }
  
  public ConfigureVchaRequestType createConfigureVchaRequestType() {
    return new ConfigureVchaRequestType();
  }
  
  public VspanPortPromiscChangeFault createVspanPortPromiscChangeFault() {
    return new VspanPortPromiscChangeFault();
  }
  
  public CreateWitnessNodeRequestType createCreateWitnessNodeRequestType() {
    return new CreateWitnessNodeRequestType();
  }
  
  public ChangeAccessModeResponse createChangeAccessModeResponse() {
    return new ChangeAccessModeResponse();
  }
  
  public QueryPerfCompositeResponse createQueryPerfCompositeResponse() {
    return new QueryPerfCompositeResponse();
  }
  
  public PerfCompositeMetric createPerfCompositeMetric() {
    return new PerfCompositeMetric();
  }
  
  public MakeDirectoryRequestType createMakeDirectoryRequestType() {
    return new MakeDirectoryRequestType();
  }
  
  public ReadNextEventsResponse createReadNextEventsResponse() {
    return new ReadNextEventsResponse();
  }
  
  public QueryVirtualDiskFragmentationRequestType createQueryVirtualDiskFragmentationRequestType() {
    return new QueryVirtualDiskFragmentationRequestType();
  }
  
  public OvfConsumerValidationFault createOvfConsumerValidationFault() {
    return new OvfConsumerValidationFault();
  }
  
  public CreateDefaultProfileRequestType createCreateDefaultProfileRequestType() {
    return new CreateDefaultProfileRequestType();
  }
  
  public ResolveMultipleUnresolvedVmfsVolumesExRequestType createResolveMultipleUnresolvedVmfsVolumesExRequestType() {
    return new ResolveMultipleUnresolvedVmfsVolumesExRequestType();
  }
  
  public DeleteNvdimmNamespaceRequestType createDeleteNvdimmNamespaceRequestType() {
    return new DeleteNvdimmNamespaceRequestType();
  }
  
  public AddFilterEntitiesResponse createAddFilterEntitiesResponse() {
    return new AddFilterEntitiesResponse();
  }
  
  public NoVmInVApp createNoVmInVApp() {
    return new NoVmInVApp();
  }
  
  public AlreadyUpgraded createAlreadyUpgraded() {
    return new AlreadyUpgraded();
  }
  
  public DeleteVirtualDiskRequestType createDeleteVirtualDiskRequestType() {
    return new DeleteVirtualDiskRequestType();
  }
  
  public RescanVffsResponse createRescanVffsResponse() {
    return new RescanVffsResponse();
  }
  
  public DisableAdminNotSupported createDisableAdminNotSupported() {
    return new DisableAdminNotSupported();
  }
  
  public NotSupportedDeviceForFT createNotSupportedDeviceForFT() {
    return new NotSupportedDeviceForFT();
  }
  
  public QueryHealthUpdateInfosRequestType createQueryHealthUpdateInfosRequestType() {
    return new QueryHealthUpdateInfosRequestType();
  }
  
  public MakePrimaryVMRequestType createMakePrimaryVMRequestType() {
    return new MakePrimaryVMRequestType();
  }
  
  public ChangeKeyRequestType createChangeKeyRequestType() {
    return new ChangeKeyRequestType();
  }
  
  public DeviceNotFound createDeviceNotFound() {
    return new DeviceNotFound();
  }
  
  public MethodNotFound createMethodNotFound() {
    return new MethodNotFound();
  }
  
  public SetTaskDescriptionResponse createSetTaskDescriptionResponse() {
    return new SetTaskDescriptionResponse();
  }
  
  public QueryChangedDiskAreasResponse createQueryChangedDiskAreasResponse() {
    return new QueryChangedDiskAreasResponse();
  }
  
  public DiskChangeInfo createDiskChangeInfo() {
    return new DiskChangeInfo();
  }
  
  public InitiateFailoverRequestType createInitiateFailoverRequestType() {
    return new InitiateFailoverRequestType();
  }
  
  public RemoveVirtualNicRequestType createRemoveVirtualNicRequestType() {
    return new RemoveVirtualNicRequestType();
  }
  
  public PowerOffVMTaskResponse createPowerOffVMTaskResponse() {
    return new PowerOffVMTaskResponse();
  }
  
  public NotAFile createNotAFile() {
    return new NotAFile();
  }
  
  public ConflictingDatastoreFound createConflictingDatastoreFound() {
    return new ConflictingDatastoreFound();
  }
  
  public RebootHostRequestType createRebootHostRequestType() {
    return new RebootHostRequestType();
  }
  
  public DeleteVStorageObjectRequestType createDeleteVStorageObjectRequestType() {
    return new DeleteVStorageObjectRequestType();
  }
  
  public ConfigureStorageDrsForPodTaskResponse createConfigureStorageDrsForPodTaskResponse() {
    return new ConfigureStorageDrsForPodTaskResponse();
  }
  
  public OvfWrongElement createOvfWrongElement() {
    return new OvfWrongElement();
  }
  
  public PlaceVmResponse createPlaceVmResponse() {
    return new PlaceVmResponse();
  }
  
  public PlacementResult createPlacementResult() {
    return new PlacementResult();
  }
  
  public ListKeysRequestType createListKeysRequestType() {
    return new ListKeysRequestType();
  }
  
  public RemovePerfIntervalRequestType createRemovePerfIntervalRequestType() {
    return new RemovePerfIntervalRequestType();
  }
  
  public DeleteCustomizationSpecResponse createDeleteCustomizationSpecResponse() {
    return new DeleteCustomizationSpecResponse();
  }
  
  public OvfHardwareCheck createOvfHardwareCheck() {
    return new OvfHardwareCheck();
  }
  
  public ConfigureCryptoKeyResponse createConfigureCryptoKeyResponse() {
    return new ConfigureCryptoKeyResponse();
  }
  
  public HostRetrieveVStorageObjectRequestType createHostRetrieveVStorageObjectRequestType() {
    return new HostRetrieveVStorageObjectRequestType();
  }
  
  public MarkServiceProviderEntitiesRequestType createMarkServiceProviderEntitiesRequestType() {
    return new MarkServiceProviderEntitiesRequestType();
  }
  
  public ZeroFillVirtualDiskTaskResponse createZeroFillVirtualDiskTaskResponse() {
    return new ZeroFillVirtualDiskTaskResponse();
  }
  
  public SetFieldResponse createSetFieldResponse() {
    return new SetFieldResponse();
  }
  
  public UninstallServiceRequestType createUninstallServiceRequestType() {
    return new UninstallServiceRequestType();
  }
  
  public CannotMoveVmWithNativeDeltaDisk createCannotMoveVmWithNativeDeltaDisk() {
    return new CannotMoveVmWithNativeDeltaDisk();
  }
  
  public CreateIpPoolResponse createCreateIpPoolResponse() {
    return new CreateIpPoolResponse();
  }
  
  public UploadKmipServerCertRequestType createUploadKmipServerCertRequestType() {
    return new UploadKmipServerCertRequestType();
  }
  
  public IORMNotSupportedHostOnDatastore createIORMNotSupportedHostOnDatastore() {
    return new IORMNotSupportedHostOnDatastore();
  }
  
  public CreateResourcePoolResponse createCreateResourcePoolResponse() {
    return new CreateResourcePoolResponse();
  }
  
  public QueryIoFilterInfoRequestType createQueryIoFilterInfoRequestType() {
    return new QueryIoFilterInfoRequestType();
  }
  
  public OvfConsumerCommunicationError createOvfConsumerCommunicationError() {
    return new OvfConsumerCommunicationError();
  }
  
  public VirtualDiskBlocksNotFullyProvisioned createVirtualDiskBlocksNotFullyProvisioned() {
    return new VirtualDiskBlocksNotFullyProvisioned();
  }
  
  public ReconfigureDVPortRequestType createReconfigureDVPortRequestType() {
    return new ReconfigureDVPortRequestType();
  }
  
  public QueryAssignedLicensesResponse createQueryAssignedLicensesResponse() {
    return new QueryAssignedLicensesResponse();
  }
  
  public LicenseAssignmentManagerLicenseAssignment createLicenseAssignmentManagerLicenseAssignment() {
    return new LicenseAssignmentManagerLicenseAssignment();
  }
  
  public StopRecordingTaskResponse createStopRecordingTaskResponse() {
    return new StopRecordingTaskResponse();
  }
  
  public MarkAsLocalRequestType createMarkAsLocalRequestType() {
    return new MarkAsLocalRequestType();
  }
  
  public MergePermissionsRequestType createMergePermissionsRequestType() {
    return new MergePermissionsRequestType();
  }
  
  public OvfToXmlUnsupportedElement createOvfToXmlUnsupportedElement() {
    return new OvfToXmlUnsupportedElement();
  }
  
  public QueryVirtualDiskUuidResponse createQueryVirtualDiskUuidResponse() {
    return new QueryVirtualDiskUuidResponse();
  }
  
  public ReloadVirtualMachineFromPathTaskResponse createReloadVirtualMachineFromPathTaskResponse() {
    return new ReloadVirtualMachineFromPathTaskResponse();
  }
  
  public LogUserEventRequestType createLogUserEventRequestType() {
    return new LogUserEventRequestType();
  }
  
  public AcquireMksTicketRequestType createAcquireMksTicketRequestType() {
    return new AcquireMksTicketRequestType();
  }
  
  public ConfigureLicenseSourceRequestType createConfigureLicenseSourceRequestType() {
    return new ConfigureLicenseSourceRequestType();
  }
  
  public CreateDVSTaskResponse createCreateDVSTaskResponse() {
    return new CreateDVSTaskResponse();
  }
  
  public RemoveInternetScsiSendTargetsRequestType createRemoveInternetScsiSendTargetsRequestType() {
    return new RemoveInternetScsiSendTargetsRequestType();
  }
  
  public HostSpecificationOperationFailed createHostSpecificationOperationFailed() {
    return new HostSpecificationOperationFailed();
  }
  
  public CustomizationFault createCustomizationFault() {
    return new CustomizationFault();
  }
  
  public VsanFault createVsanFault() {
    return new VsanFault();
  }
  
  public QueryFilterNameResponse createQueryFilterNameResponse() {
    return new QueryFilterNameResponse();
  }
  
  public RemoveGuestAliasByCertResponse createRemoveGuestAliasByCertResponse() {
    return new RemoveGuestAliasByCertResponse();
  }
  
  public ReconfigureServiceConsoleReservationResponse createReconfigureServiceConsoleReservationResponse() {
    return new ReconfigureServiceConsoleReservationResponse();
  }
  
  public UpdateNetworkConfigRequestType createUpdateNetworkConfigRequestType() {
    return new UpdateNetworkConfigRequestType();
  }
  
  public AddDVPortgroupTaskResponse createAddDVPortgroupTaskResponse() {
    return new AddDVPortgroupTaskResponse();
  }
  
  public NoCompatibleDatastore createNoCompatibleDatastore() {
    return new NoCompatibleDatastore();
  }
  
  public InstallServerCertificateResponse createInstallServerCertificateResponse() {
    return new InstallServerCertificateResponse();
  }
  
  public HostListVStorageObjectResponse createHostListVStorageObjectResponse() {
    return new HostListVStorageObjectResponse();
  }
  
  public ID createID() {
    return new ID();
  }
  
  public MoveDVPortRequestType createMoveDVPortRequestType() {
    return new MoveDVPortRequestType();
  }
  
  public ReconfigureAutostartResponse createReconfigureAutostartResponse() {
    return new ReconfigureAutostartResponse();
  }
  
  public VmWwnConflict createVmWwnConflict() {
    return new VmWwnConflict();
  }
  
  public VirtualDiskModeNotSupported createVirtualDiskModeNotSupported() {
    return new VirtualDiskModeNotSupported();
  }
  
  public DatacenterMismatch createDatacenterMismatch() {
    return new DatacenterMismatch();
  }
  
  public CreatePropertyCollectorRequestType createCreatePropertyCollectorRequestType() {
    return new CreatePropertyCollectorRequestType();
  }
  
  public SearchDatastoreSubFoldersRequestType createSearchDatastoreSubFoldersRequestType() {
    return new SearchDatastoreSubFoldersRequestType();
  }
  
  public HostRelocateVStorageObjectTaskResponse createHostRelocateVStorageObjectTaskResponse() {
    return new HostRelocateVStorageObjectTaskResponse();
  }
  
  public DiscoverFcoeHbasResponse createDiscoverFcoeHbasResponse() {
    return new DiscoverFcoeHbasResponse();
  }
  
  public DestroyProfileRequestType createDestroyProfileRequestType() {
    return new DestroyProfileRequestType();
  }
  
  public ReplicationVmFault createReplicationVmFault() {
    return new ReplicationVmFault();
  }
  
  public QueryDvsCompatibleHostSpecResponse createQueryDvsCompatibleHostSpecResponse() {
    return new QueryDvsCompatibleHostSpecResponse();
  }
  
  public DistributedVirtualSwitchHostProductSpec createDistributedVirtualSwitchHostProductSpec() {
    return new DistributedVirtualSwitchHostProductSpec();
  }
  
  public UpdateHppMultipathLunPolicyRequestType createUpdateHppMultipathLunPolicyRequestType() {
    return new UpdateHppMultipathLunPolicyRequestType();
  }
  
  public UpgradeVmfsRequestType createUpgradeVmfsRequestType() {
    return new UpgradeVmfsRequestType();
  }
  
  public RenameCustomFieldDefResponse createRenameCustomFieldDefResponse() {
    return new RenameCustomFieldDefResponse();
  }
  
  public ShutdownGuestRequestType createShutdownGuestRequestType() {
    return new ShutdownGuestRequestType();
  }
  
  public AcquireCredentialsInGuestRequestType createAcquireCredentialsInGuestRequestType() {
    return new AcquireCredentialsInGuestRequestType();
  }
  
  public RetrieveHostSpecificationRequestType createRetrieveHostSpecificationRequestType() {
    return new RetrieveHostSpecificationRequestType();
  }
  
  public HostExtendDiskTaskResponse createHostExtendDiskTaskResponse() {
    return new HostExtendDiskTaskResponse();
  }
  
  public RetrieveFreeEpcMemoryRequestType createRetrieveFreeEpcMemoryRequestType() {
    return new RetrieveFreeEpcMemoryRequestType();
  }
  
  public HostScheduleReconcileDatastoreInventoryRequestType createHostScheduleReconcileDatastoreInventoryRequestType() {
    return new HostScheduleReconcileDatastoreInventoryRequestType();
  }
  
  public UpgradeToolsRequestType createUpgradeToolsRequestType() {
    return new UpgradeToolsRequestType();
  }
  
  public ImportHostAddFailure createImportHostAddFailure() {
    return new ImportHostAddFailure();
  }
  
  public DisconnectNvmeControllerResponse createDisconnectNvmeControllerResponse() {
    return new DisconnectNvmeControllerResponse();
  }
  
  public UpdateKmipServerResponse createUpdateKmipServerResponse() {
    return new UpdateKmipServerResponse();
  }
  
  public DestroyPropertyFilterRequestType createDestroyPropertyFilterRequestType() {
    return new DestroyPropertyFilterRequestType();
  }
  
  public HostCreateDiskTaskResponse createHostCreateDiskTaskResponse() {
    return new HostCreateDiskTaskResponse();
  }
  
  public CreateNasDatastoreRequestType createCreateNasDatastoreRequestType() {
    return new CreateNasDatastoreRequestType();
  }
  
  public InstallSmartCardTrustAnchorResponse createInstallSmartCardTrustAnchorResponse() {
    return new InstallSmartCardTrustAnchorResponse();
  }
  
  public ResetEntityPermissionsResponse createResetEntityPermissionsResponse() {
    return new ResetEntityPermissionsResponse();
  }
  
  public PowerOnFtSecondaryTimedout createPowerOnFtSecondaryTimedout() {
    return new PowerOnFtSecondaryTimedout();
  }
  
  public UpdateIpConfigResponse createUpdateIpConfigResponse() {
    return new UpdateIpConfigResponse();
  }
  
  public HostScheduleReconcileDatastoreInventoryResponse createHostScheduleReconcileDatastoreInventoryResponse() {
    return new HostScheduleReconcileDatastoreInventoryResponse();
  }
  
  public VMotionAcrossNetworkNotSupported createVMotionAcrossNetworkNotSupported() {
    return new VMotionAcrossNetworkNotSupported();
  }
  
  public NetworkInaccessible createNetworkInaccessible() {
    return new NetworkInaccessible();
  }
  
  public PostEventResponse createPostEventResponse() {
    return new PostEventResponse();
  }
  
  public StopServiceRequestType createStopServiceRequestType() {
    return new StopServiceRequestType();
  }
  
  public SetRegistryValueInGuestRequestType createSetRegistryValueInGuestRequestType() {
    return new SetRegistryValueInGuestRequestType();
  }
  
  public NamespaceWriteProtected createNamespaceWriteProtected() {
    return new NamespaceWriteProtected();
  }
  
  public InsufficientStandbyResource createInsufficientStandbyResource() {
    return new InsufficientStandbyResource();
  }
  
  public MoveFileInGuestResponse createMoveFileInGuestResponse() {
    return new MoveFileInGuestResponse();
  }
  
  public OvfMissingElement createOvfMissingElement() {
    return new OvfMissingElement();
  }
  
  public HostVStorageObjectRevertTaskResponse createHostVStorageObjectRevertTaskResponse() {
    return new HostVStorageObjectRevertTaskResponse();
  }
  
  public FindByIpRequestType createFindByIpRequestType() {
    return new FindByIpRequestType();
  }
  
  public FaultToleranceNeedsThickDisk createFaultToleranceNeedsThickDisk() {
    return new FaultToleranceNeedsThickDisk();
  }
  
  public AcquireGenericServiceTicketResponse createAcquireGenericServiceTicketResponse() {
    return new AcquireGenericServiceTicketResponse();
  }
  
  public SessionManagerGenericServiceTicket createSessionManagerGenericServiceTicket() {
    return new SessionManagerGenericServiceTicket();
  }
  
  public UpdateServiceConsoleVirtualNicResponse createUpdateServiceConsoleVirtualNicResponse() {
    return new UpdateServiceConsoleVirtualNicResponse();
  }
  
  public CreateGroupRequestType createCreateGroupRequestType() {
    return new CreateGroupRequestType();
  }
  
  public QueryDvsConfigTargetRequestType createQueryDvsConfigTargetRequestType() {
    return new QueryDvsConfigTargetRequestType();
  }
  
  public OvfUnknownEntity createOvfUnknownEntity() {
    return new OvfUnknownEntity();
  }
  
  public CloneVStorageObjectTaskResponse createCloneVStorageObjectTaskResponse() {
    return new CloneVStorageObjectTaskResponse();
  }
  
  public MergePermissionsResponse createMergePermissionsResponse() {
    return new MergePermissionsResponse();
  }
  
  public DisableRulesetRequestType createDisableRulesetRequestType() {
    return new DisableRulesetRequestType();
  }
  
  public RemoveAssignedLicenseResponse createRemoveAssignedLicenseResponse() {
    return new RemoveAssignedLicenseResponse();
  }
  
  public InflateVirtualDiskTaskResponse createInflateVirtualDiskTaskResponse() {
    return new InflateVirtualDiskTaskResponse();
  }
  
  public HasProviderResponse createHasProviderResponse() {
    return new HasProviderResponse();
  }
  
  public UpdateServiceMessageResponse createUpdateServiceMessageResponse() {
    return new UpdateServiceMessageResponse();
  }
  
  public OperationDisabledByGuest createOperationDisabledByGuest() {
    return new OperationDisabledByGuest();
  }
  
  public FaultToleranceNotSameBuild createFaultToleranceNotSameBuild() {
    return new FaultToleranceNotSameBuild();
  }
  
  public RemoveFilterEntitiesRequestType createRemoveFilterEntitiesRequestType() {
    return new RemoveFilterEntitiesRequestType();
  }
  
  public RenameSnapshotResponse createRenameSnapshotResponse() {
    return new RenameSnapshotResponse();
  }
  
  public CloneVMTaskResponse createCloneVMTaskResponse() {
    return new CloneVMTaskResponse();
  }
  
  public CreateResourcePoolRequestType createCreateResourcePoolRequestType() {
    return new CreateResourcePoolRequestType();
  }
  
  public CreateDiskRequestType createCreateDiskRequestType() {
    return new CreateDiskRequestType();
  }
  
  public QueryAnswerFileStatusResponse createQueryAnswerFileStatusResponse() {
    return new QueryAnswerFileStatusResponse();
  }
  
  public AnswerFileStatusResult createAnswerFileStatusResult() {
    return new AnswerFileStatusResult();
  }
  
  public InitiateFileTransferToGuestRequestType createInitiateFileTransferToGuestRequestType() {
    return new InitiateFileTransferToGuestRequestType();
  }
  
  public HostVStorageObjectDeleteSnapshotRequestType createHostVStorageObjectDeleteSnapshotRequestType() {
    return new HostVStorageObjectDeleteSnapshotRequestType();
  }
  
  public MultiWriterNotSupported createMultiWriterNotSupported() {
    return new MultiWriterNotSupported();
  }
  
  public InvalidProperty createInvalidProperty() {
    return new InvalidProperty();
  }
  
  public OvfPropertyQualifierDuplicate createOvfPropertyQualifierDuplicate() {
    return new OvfPropertyQualifierDuplicate();
  }
  
  public PowerOnMultiVMRequestType createPowerOnMultiVMRequestType() {
    return new PowerOnMultiVMRequestType();
  }
  
  public InsufficientResourcesFault createInsufficientResourcesFault() {
    return new InsufficientResourcesFault();
  }
  
  public CreateSecondaryVMExTaskResponse createCreateSecondaryVMExTaskResponse() {
    return new CreateSecondaryVMExTaskResponse();
  }
  
  public UpdateInternetScsiDiscoveryPropertiesRequestType createUpdateInternetScsiDiscoveryPropertiesRequestType() {
    return new UpdateInternetScsiDiscoveryPropertiesRequestType();
  }
  
  public RetrieveDiskPartitionInfoRequestType createRetrieveDiskPartitionInfoRequestType() {
    return new RetrieveDiskPartitionInfoRequestType();
  }
  
  public ConfigureDatastoreIORMTaskResponse createConfigureDatastoreIORMTaskResponse() {
    return new ConfigureDatastoreIORMTaskResponse();
  }
  
  public StartProgramInGuestRequestType createStartProgramInGuestRequestType() {
    return new StartProgramInGuestRequestType();
  }
  
  public ReadPreviousTasksRequestType createReadPreviousTasksRequestType() {
    return new ReadPreviousTasksRequestType();
  }
  
  public AllocateIpv6AddressRequestType createAllocateIpv6AddressRequestType() {
    return new AllocateIpv6AddressRequestType();
  }
  
  public LicenseDowngradeDisallowed createLicenseDowngradeDisallowed() {
    return new LicenseDowngradeDisallowed();
  }
  
  public ApplyStorageDrsRecommendationToPodRequestType createApplyStorageDrsRecommendationToPodRequestType() {
    return new ApplyStorageDrsRecommendationToPodRequestType();
  }
  
  public GenerateKeyResponse createGenerateKeyResponse() {
    return new GenerateKeyResponse();
  }
  
  public AddInternetScsiStaticTargetsRequestType createAddInternetScsiStaticTargetsRequestType() {
    return new AddInternetScsiStaticTargetsRequestType();
  }
  
  public CustomizationSpecItemToXmlRequestType createCustomizationSpecItemToXmlRequestType() {
    return new CustomizationSpecItemToXmlRequestType();
  }
  
  public MigrationNotReady createMigrationNotReady() {
    return new MigrationNotReady();
  }
  
  public PowerOnMultiVMTaskResponse createPowerOnMultiVMTaskResponse() {
    return new PowerOnMultiVMTaskResponse();
  }
  
  public DatabaseError createDatabaseError() {
    return new DatabaseError();
  }
  
  public QueryVmfsConfigOptionRequestType createQueryVmfsConfigOptionRequestType() {
    return new QueryVmfsConfigOptionRequestType();
  }
  
  public ExpandVmfsDatastoreRequestType createExpandVmfsDatastoreRequestType() {
    return new ExpandVmfsDatastoreRequestType();
  }
  
  public ChangeKeyTaskResponse createChangeKeyTaskResponse() {
    return new ChangeKeyTaskResponse();
  }
  
  public FailToLockFaultToleranceVMs createFailToLockFaultToleranceVMs() {
    return new FailToLockFaultToleranceVMs();
  }
  
  public UpdateLinkedChildrenResponse createUpdateLinkedChildrenResponse() {
    return new UpdateLinkedChildrenResponse();
  }
  
  public MissingController createMissingController() {
    return new MissingController();
  }
  
  public RefreshFirewallRequestType createRefreshFirewallRequestType() {
    return new RefreshFirewallRequestType();
  }
  
  public IscsiFault createIscsiFault() {
    return new IscsiFault();
  }
  
  public SearchDatastoreTaskResponse createSearchDatastoreTaskResponse() {
    return new SearchDatastoreTaskResponse();
  }
  
  public UnmarkServiceProviderEntitiesRequestType createUnmarkServiceProviderEntitiesRequestType() {
    return new UnmarkServiceProviderEntitiesRequestType();
  }
  
  public ApplyStorageDrsRecommendationTaskResponse createApplyStorageDrsRecommendationTaskResponse() {
    return new ApplyStorageDrsRecommendationTaskResponse();
  }
  
  public UninstallHostPatchTaskResponse createUninstallHostPatchTaskResponse() {
    return new UninstallHostPatchTaskResponse();
  }
  
  public BindVnicRequestType createBindVnicRequestType() {
    return new BindVnicRequestType();
  }
  
  public UpdateInternetScsiIPPropertiesRequestType createUpdateInternetScsiIPPropertiesRequestType() {
    return new UpdateInternetScsiIPPropertiesRequestType();
  }
  
  public RetrieveHostAccessControlEntriesResponse createRetrieveHostAccessControlEntriesResponse() {
    return new RetrieveHostAccessControlEntriesResponse();
  }
  
  public HostAccessControlEntry createHostAccessControlEntry() {
    return new HostAccessControlEntry();
  }
  
  public CreateLocalDatastoreResponse createCreateLocalDatastoreResponse() {
    return new CreateLocalDatastoreResponse();
  }
  
  public InvalidCAMServer createInvalidCAMServer() {
    return new InvalidCAMServer();
  }
  
  public RetrieveServiceProviderEntitiesRequestType createRetrieveServiceProviderEntitiesRequestType() {
    return new RetrieveServiceProviderEntitiesRequestType();
  }
  
  public ToolsImageSignatureCheckFailed createToolsImageSignatureCheckFailed() {
    return new ToolsImageSignatureCheckFailed();
  }
  
  public QueryVirtualDiskFragmentationResponse createQueryVirtualDiskFragmentationResponse() {
    return new QueryVirtualDiskFragmentationResponse();
  }
  
  public QueryTargetCapabilitiesRequestType createQueryTargetCapabilitiesRequestType() {
    return new QueryTargetCapabilitiesRequestType();
  }
  
  public CreateFilterRequestType createCreateFilterRequestType() {
    return new CreateFilterRequestType();
  }
  
  public SetCustomValueResponse createSetCustomValueResponse() {
    return new SetCustomValueResponse();
  }
  
  public CreateSecondaryVMExRequestType createCreateSecondaryVMExRequestType() {
    return new CreateSecondaryVMExRequestType();
  }
  
  public ChangeOwnerResponse createChangeOwnerResponse() {
    return new ChangeOwnerResponse();
  }
  
  public ExitLockdownModeResponse createExitLockdownModeResponse() {
    return new ExitLockdownModeResponse();
  }
  
  public UpdateVAppConfigRequestType createUpdateVAppConfigRequestType() {
    return new UpdateVAppConfigRequestType();
  }
  
  public AttachScsiLunExTaskResponse createAttachScsiLunExTaskResponse() {
    return new AttachScsiLunExTaskResponse();
  }
  
  public DestroyDatastoreResponse createDestroyDatastoreResponse() {
    return new DestroyDatastoreResponse();
  }
  
  public EnableAlarmActionsRequestType createEnableAlarmActionsRequestType() {
    return new EnableAlarmActionsRequestType();
  }
  
  public ValidateCredentialsInGuestResponse createValidateCredentialsInGuestResponse() {
    return new ValidateCredentialsInGuestResponse();
  }
  
  public DeleteNvdimmBlockNamespacesTaskResponse createDeleteNvdimmBlockNamespacesTaskResponse() {
    return new DeleteNvdimmBlockNamespacesTaskResponse();
  }
  
  public ListKmsClustersRequestType createListKmsClustersRequestType() {
    return new ListKmsClustersRequestType();
  }
  
  public CreateNvdimmPMemNamespaceTaskResponse createCreateNvdimmPMemNamespaceTaskResponse() {
    return new CreateNvdimmPMemNamespaceTaskResponse();
  }
  
  public AcquireTicketRequestType createAcquireTicketRequestType() {
    return new AcquireTicketRequestType();
  }
  
  public CheckCustomizationSpecRequestType createCheckCustomizationSpecRequestType() {
    return new CheckCustomizationSpecRequestType();
  }
  
  public UpdatePassthruConfigRequestType createUpdatePassthruConfigRequestType() {
    return new UpdatePassthruConfigRequestType();
  }
  
  public UnsupportedVmxLocation createUnsupportedVmxLocation() {
    return new UnsupportedVmxLocation();
  }
  
  public ValidateHostRequestType createValidateHostRequestType() {
    return new ValidateHostRequestType();
  }
  
  public SetRegistryValueInGuestResponse createSetRegistryValueInGuestResponse() {
    return new SetRegistryValueInGuestResponse();
  }
  
  public RetrieveHostCustomizationsRequestType createRetrieveHostCustomizationsRequestType() {
    return new RetrieveHostCustomizationsRequestType();
  }
  
  public SetTaskStateRequestType createSetTaskStateRequestType() {
    return new SetTaskStateRequestType();
  }
  
  public ReconfigVMTaskResponse createReconfigVMTaskResponse() {
    return new ReconfigVMTaskResponse();
  }
  
  public NasVolumeNotMounted createNasVolumeNotMounted() {
    return new NasVolumeNotMounted();
  }
  
  public AgentInstallFailed createAgentInstallFailed() {
    return new AgentInstallFailed();
  }
  
  public OperationDisallowedOnHost createOperationDisallowedOnHost() {
    return new OperationDisallowedOnHost();
  }
  
  public UpdateHostCustomizationsRequestType createUpdateHostCustomizationsRequestType() {
    return new UpdateHostCustomizationsRequestType();
  }
  
  public ReplicationNotSupportedOnHost createReplicationNotSupportedOnHost() {
    return new ReplicationNotSupportedOnHost();
  }
  
  public QueryProductLockerLocationRequestType createQueryProductLockerLocationRequestType() {
    return new QueryProductLockerLocationRequestType();
  }
  
  public QueryCompatibleHostForExistingDvsRequestType createQueryCompatibleHostForExistingDvsRequestType() {
    return new QueryCompatibleHostForExistingDvsRequestType();
  }
  
  public QueryPartitionCreateDescResponse createQueryPartitionCreateDescResponse() {
    return new QueryPartitionCreateDescResponse();
  }
  
  public HostDiagnosticPartitionCreateDescription createHostDiagnosticPartitionCreateDescription() {
    return new HostDiagnosticPartitionCreateDescription();
  }
  
  public HostRemoveVFlashResourceRequestType createHostRemoveVFlashResourceRequestType() {
    return new HostRemoveVFlashResourceRequestType();
  }
  
  public MigrateVMTaskResponse createMigrateVMTaskResponse() {
    return new MigrateVMTaskResponse();
  }
  
  public InstallHostPatchV2RequestType createInstallHostPatchV2RequestType() {
    return new InstallHostPatchV2RequestType();
  }
  
  public RetrieveVStorageObjectAssociationsRequestType createRetrieveVStorageObjectAssociationsRequestType() {
    return new RetrieveVStorageObjectAssociationsRequestType();
  }
  
  public ClearSystemEventLogRequestType createClearSystemEventLogRequestType() {
    return new ClearSystemEventLogRequestType();
  }
  
  public HasPrivilegeOnEntitiesResponse createHasPrivilegeOnEntitiesResponse() {
    return new HasPrivilegeOnEntitiesResponse();
  }
  
  public OvfUnknownDevice createOvfUnknownDevice() {
    return new OvfUnknownDevice();
  }
  
  public CreateTaskRequestType createCreateTaskRequestType() {
    return new CreateTaskRequestType();
  }
  
  public ValidateMigrationResponse createValidateMigrationResponse() {
    return new ValidateMigrationResponse();
  }
  
  public DecodeLicenseRequestType createDecodeLicenseRequestType() {
    return new DecodeLicenseRequestType();
  }
  
  public ConfigureDatastorePrincipalRequestType createConfigureDatastorePrincipalRequestType() {
    return new ConfigureDatastorePrincipalRequestType();
  }
  
  public GenerateConfigTaskListResponse createGenerateConfigTaskListResponse() {
    return new GenerateConfigTaskListResponse();
  }
  
  public HostProfileManagerConfigTaskList createHostProfileManagerConfigTaskList() {
    return new HostProfileManagerConfigTaskList();
  }
  
  public RemovePortGroupResponse createRemovePortGroupResponse() {
    return new RemovePortGroupResponse();
  }
  
  public RetrieveUserGroupsResponse createRetrieveUserGroupsResponse() {
    return new RetrieveUserGroupsResponse();
  }
  
  public UserSearchResult createUserSearchResult() {
    return new UserSearchResult();
  }
  
  public GatewayToHostConnectFault createGatewayToHostConnectFault() {
    return new GatewayToHostConnectFault();
  }
  
  public GuestAuthenticationChallenge createGuestAuthenticationChallenge() {
    return new GuestAuthenticationChallenge();
  }
  
  public RefreshServicesRequestType createRefreshServicesRequestType() {
    return new RefreshServicesRequestType();
  }
  
  public OpenInventoryViewFolderResponse createOpenInventoryViewFolderResponse() {
    return new OpenInventoryViewFolderResponse();
  }
  
  public IncompatibleHostForVmReplication createIncompatibleHostForVmReplication() {
    return new IncompatibleHostForVmReplication();
  }
  
  public OvfDuplicatedElementBoundary createOvfDuplicatedElementBoundary() {
    return new OvfDuplicatedElementBoundary();
  }
  
  public RefreshRecommendationResponse createRefreshRecommendationResponse() {
    return new RefreshRecommendationResponse();
  }
  
  public OvfCpuCompatibility createOvfCpuCompatibility() {
    return new OvfCpuCompatibility();
  }
  
  public GuestRegistryKeyParentVolatile createGuestRegistryKeyParentVolatile() {
    return new GuestRegistryKeyParentVolatile();
  }
  
  public RemoveAuthorizationRoleRequestType createRemoveAuthorizationRoleRequestType() {
    return new RemoveAuthorizationRoleRequestType();
  }
  
  public StorageDrsCannotMoveVmInUserFolder createStorageDrsCannotMoveVmInUserFolder() {
    return new StorageDrsCannotMoveVmInUserFolder();
  }
  
  public DestroyNetworkRequestType createDestroyNetworkRequestType() {
    return new DestroyNetworkRequestType();
  }
  
  public UpdateInternetScsiAuthenticationPropertiesRequestType createUpdateInternetScsiAuthenticationPropertiesRequestType() {
    return new UpdateInternetScsiAuthenticationPropertiesRequestType();
  }
  
  public InvalidDasConfigArgument createInvalidDasConfigArgument() {
    return new InvalidDasConfigArgument();
  }
  
  public QueryUnownedFilesResponse createQueryUnownedFilesResponse() {
    return new QueryUnownedFilesResponse();
  }
  
  public HostCloneVStorageObjectRequestType createHostCloneVStorageObjectRequestType() {
    return new HostCloneVStorageObjectRequestType();
  }
  
  public AutoStartPowerOffRequestType createAutoStartPowerOffRequestType() {
    return new AutoStartPowerOffRequestType();
  }
  
  public NonHomeRDMVMotionNotSupported createNonHomeRDMVMotionNotSupported() {
    return new NonHomeRDMVMotionNotSupported();
  }
  
  public OvfUnsupportedType createOvfUnsupportedType() {
    return new OvfUnsupportedType();
  }
  
  public RebootGuestResponse createRebootGuestResponse() {
    return new RebootGuestResponse();
  }
  
  public ConfigureHCITaskResponse createConfigureHCITaskResponse() {
    return new ConfigureHCITaskResponse();
  }
  
  public ConfigureHostCacheRequestType createConfigureHostCacheRequestType() {
    return new ConfigureHostCacheRequestType();
  }
  
  public CreateDVPortgroupTaskResponse createCreateDVPortgroupTaskResponse() {
    return new CreateDVPortgroupTaskResponse();
  }
  
  public MakeDirectoryInGuestResponse createMakeDirectoryInGuestResponse() {
    return new MakeDirectoryInGuestResponse();
  }
  
  public AutoStartPowerOnRequestType createAutoStartPowerOnRequestType() {
    return new AutoStartPowerOnRequestType();
  }
  
  public RetrieveDasAdvancedRuntimeInfoRequestType createRetrieveDasAdvancedRuntimeInfoRequestType() {
    return new RetrieveDasAdvancedRuntimeInfoRequestType();
  }
  
  public OvfNoSupportedHardwareFamily createOvfNoSupportedHardwareFamily() {
    return new OvfNoSupportedHardwareFamily();
  }
  
  public AcquireCredentialsInGuestResponse createAcquireCredentialsInGuestResponse() {
    return new AcquireCredentialsInGuestResponse();
  }
  
  public GuestAuthentication createGuestAuthentication() {
    return new GuestAuthentication();
  }
  
  public ExportVmResponse createExportVmResponse() {
    return new ExportVmResponse();
  }
  
  public DisableRulesetResponse createDisableRulesetResponse() {
    return new DisableRulesetResponse();
  }
  
  public ShutdownHostRequestType createShutdownHostRequestType() {
    return new ShutdownHostRequestType();
  }
  
  public DeleteHostSubSpecificationResponse createDeleteHostSubSpecificationResponse() {
    return new DeleteHostSubSpecificationResponse();
  }
  
  public NotEnoughLogicalCpus createNotEnoughLogicalCpus() {
    return new NotEnoughLogicalCpus();
  }
  
  public FindByInventoryPathResponse createFindByInventoryPathResponse() {
    return new FindByInventoryPathResponse();
  }
  
  public CreateCollectorForTasksResponse createCreateCollectorForTasksResponse() {
    return new CreateCollectorForTasksResponse();
  }
  
  public MissingWindowsCustResources createMissingWindowsCustResources() {
    return new MissingWindowsCustResources();
  }
  
  public PerformVsanUpgradePreflightCheckResponse createPerformVsanUpgradePreflightCheckResponse() {
    return new PerformVsanUpgradePreflightCheckResponse();
  }
  
  public VsanUpgradeSystemPreflightCheckResult createVsanUpgradeSystemPreflightCheckResult() {
    return new VsanUpgradeSystemPreflightCheckResult();
  }
  
  public GatewayNotReachable createGatewayNotReachable() {
    return new GatewayNotReachable();
  }
  
  public QueryVsanStatisticsResponse createQueryVsanStatisticsResponse() {
    return new QueryVsanStatisticsResponse();
  }
  
  public VmConfigFault createVmConfigFault() {
    return new VmConfigFault();
  }
  
  public UpdateDVSHealthCheckConfigTaskResponse createUpdateDVSHealthCheckConfigTaskResponse() {
    return new UpdateDVSHealthCheckConfigTaskResponse();
  }
  
  public ImportCertificateForCAMTaskResponse createImportCertificateForCAMTaskResponse() {
    return new ImportCertificateForCAMTaskResponse();
  }
  
  public SessionIsActiveRequestType createSessionIsActiveRequestType() {
    return new SessionIsActiveRequestType();
  }
  
  public DisableEvcModeRequestType createDisableEvcModeRequestType() {
    return new DisableEvcModeRequestType();
  }
  
  public RescanVmfsResponse createRescanVmfsResponse() {
    return new RescanVmfsResponse();
  }
  
  public CannotDisableSnapshot createCannotDisableSnapshot() {
    return new CannotDisableSnapshot();
  }
  
  public DeviceUnsupportedForVmPlatform createDeviceUnsupportedForVmPlatform() {
    return new DeviceUnsupportedForVmPlatform();
  }
  
  public UnassignUserFromGroupRequestType createUnassignUserFromGroupRequestType() {
    return new UnassignUserFromGroupRequestType();
  }
  
  public VAppTaskInProgress createVAppTaskInProgress() {
    return new VAppTaskInProgress();
  }
  
  public NumVirtualCpusExceedsLimit createNumVirtualCpusExceedsLimit() {
    return new NumVirtualCpusExceedsLimit();
  }
  
  public OvfNetworkMappingNotSupported createOvfNetworkMappingNotSupported() {
    return new OvfNetworkMappingNotSupported();
  }
  
  public RetrieveEntityPermissionsRequestType createRetrieveEntityPermissionsRequestType() {
    return new RetrieveEntityPermissionsRequestType();
  }
  
  public UnregisterAndDestroyTaskResponse createUnregisterAndDestroyTaskResponse() {
    return new UnregisterAndDestroyTaskResponse();
  }
  
  public InvalidDrsBehaviorForFtVm createInvalidDrsBehaviorForFtVm() {
    return new InvalidDrsBehaviorForFtVm();
  }
  
  public StorageDrsCannotMoveVmWithMountedCDROM createStorageDrsCannotMoveVmWithMountedCDROM() {
    return new StorageDrsCannotMoveVmWithMountedCDROM();
  }
  
  public EnableMultipathPathRequestType createEnableMultipathPathRequestType() {
    return new EnableMultipathPathRequestType();
  }
  
  public RemoveAssignedLicenseRequestType createRemoveAssignedLicenseRequestType() {
    return new RemoveAssignedLicenseRequestType();
  }
  
  public ApplyHostConfigRequestType createApplyHostConfigRequestType() {
    return new ApplyHostConfigRequestType();
  }
  
  public CreateInventoryViewRequestType createCreateInventoryViewRequestType() {
    return new CreateInventoryViewRequestType();
  }
  
  public ChangeLockdownModeResponse createChangeLockdownModeResponse() {
    return new ChangeLockdownModeResponse();
  }
  
  public ChangeAccessModeRequestType createChangeAccessModeRequestType() {
    return new ChangeAccessModeRequestType();
  }
  
  public OvfDuplicatedPropertyIdImport createOvfDuplicatedPropertyIdImport() {
    return new OvfDuplicatedPropertyIdImport();
  }
  
  public SnapshotFault createSnapshotFault() {
    return new SnapshotFault();
  }
  
  public UnmountVffsVolumeResponse createUnmountVffsVolumeResponse() {
    return new UnmountVffsVolumeResponse();
  }
  
  public CreateVAppResponse createCreateVAppResponse() {
    return new CreateVAppResponse();
  }
  
  public ComputeDiskPartitionInfoRequestType createComputeDiskPartitionInfoRequestType() {
    return new ComputeDiskPartitionInfoRequestType();
  }
  
  public AddMonitoredEntitiesRequestType createAddMonitoredEntitiesRequestType() {
    return new AddMonitoredEntitiesRequestType();
  }
  
  public TurnOffFaultToleranceForVMRequestType createTurnOffFaultToleranceForVMRequestType() {
    return new TurnOffFaultToleranceForVMRequestType();
  }
  
  public RemoveScheduledTaskRequestType createRemoveScheduledTaskRequestType() {
    return new RemoveScheduledTaskRequestType();
  }
  
  public NoAvailableIp createNoAvailableIp() {
    return new NoAvailableIp();
  }
  
  public LogoutRequestType createLogoutRequestType() {
    return new LogoutRequestType();
  }
  
  public QueryOptionsRequestType createQueryOptionsRequestType() {
    return new QueryOptionsRequestType();
  }
  
  public ChangeOwnerRequestType createChangeOwnerRequestType() {
    return new ChangeOwnerRequestType();
  }
  
  public RestrictedByAdministrator createRestrictedByAdministrator() {
    return new RestrictedByAdministrator();
  }
  
  public RemovePerfIntervalResponse createRemovePerfIntervalResponse() {
    return new RemovePerfIntervalResponse();
  }
  
  public FcoeFault createFcoeFault() {
    return new FcoeFault();
  }
  
  public IscsiFaultVnicNotBound createIscsiFaultVnicNotBound() {
    return new IscsiFaultVnicNotBound();
  }
  
  public StorageDrsHmsMoveInProgress createStorageDrsHmsMoveInProgress() {
    return new StorageDrsHmsMoveInProgress();
  }
  
  public CpuIncompatible81EDX createCpuIncompatible81EDX() {
    return new CpuIncompatible81EDX();
  }
  
  public DisconnectedHostsBlockingEVC createDisconnectedHostsBlockingEVC() {
    return new DisconnectedHostsBlockingEVC();
  }
  
  public DestroyCollectorRequestType createDestroyCollectorRequestType() {
    return new DestroyCollectorRequestType();
  }
  
  public NotSupportedHostForVsan createNotSupportedHostForVsan() {
    return new NotSupportedHostForVsan();
  }
  
  public SoftRuleVioCorrectionDisallowed createSoftRuleVioCorrectionDisallowed() {
    return new SoftRuleVioCorrectionDisallowed();
  }
  
  public DeleteSnapshotRequestType createDeleteSnapshotRequestType() {
    return new DeleteSnapshotRequestType();
  }
  
  public QueryProviderListRequestType createQueryProviderListRequestType() {
    return new QueryProviderListRequestType();
  }
  
  public OvfImportFailed createOvfImportFailed() {
    return new OvfImportFailed();
  }
  
  public UpdateAuthorizationRoleResponse createUpdateAuthorizationRoleResponse() {
    return new UpdateAuthorizationRoleResponse();
  }
  
  public ChangePasswordRequestType createChangePasswordRequestType() {
    return new ChangePasswordRequestType();
  }
  
  public OvfDiskOrderConstraint createOvfDiskOrderConstraint() {
    return new OvfDiskOrderConstraint();
  }
  
  public ThirdPartyLicenseAssignmentFailed createThirdPartyLicenseAssignmentFailed() {
    return new ThirdPartyLicenseAssignmentFailed();
  }
  
  public BatchQueryConnectInfoResponse createBatchQueryConnectInfoResponse() {
    return new BatchQueryConnectInfoResponse();
  }
  
  public DatacenterBasicConnectInfo createDatacenterBasicConnectInfo() {
    return new DatacenterBasicConnectInfo();
  }
  
  public UpdateExtensionRequestType createUpdateExtensionRequestType() {
    return new UpdateExtensionRequestType();
  }
  
  public DeleteFileInGuestResponse createDeleteFileInGuestResponse() {
    return new DeleteFileInGuestResponse();
  }
  
  public GetResourceUsageRequestType createGetResourceUsageRequestType() {
    return new GetResourceUsageRequestType();
  }
  
  public DisableSecondaryVMTaskResponse createDisableSecondaryVMTaskResponse() {
    return new DisableSecondaryVMTaskResponse();
  }
  
  public DeleteSnapshotTaskResponse createDeleteSnapshotTaskResponse() {
    return new DeleteSnapshotTaskResponse();
  }
  
  public VspanDestPortConflict createVspanDestPortConflict() {
    return new VspanDestPortConflict();
  }
  
  public PowerOnVMTaskResponse createPowerOnVMTaskResponse() {
    return new PowerOnVMTaskResponse();
  }
  
  public CancelStorageDrsRecommendationRequestType createCancelStorageDrsRecommendationRequestType() {
    return new CancelStorageDrsRecommendationRequestType();
  }
  
  public QueryVsanStatisticsRequestType createQueryVsanStatisticsRequestType() {
    return new QueryVsanStatisticsRequestType();
  }
  
  public RetrieveKmipServersStatusRequestType createRetrieveKmipServersStatusRequestType() {
    return new RetrieveKmipServersStatusRequestType();
  }
  
  public CreateProfileResponse createCreateProfileResponse() {
    return new CreateProfileResponse();
  }
  
  public PatchMetadataNotFound createPatchMetadataNotFound() {
    return new PatchMetadataNotFound();
  }
  
  public RefreshDateTimeSystemRequestType createRefreshDateTimeSystemRequestType() {
    return new RefreshDateTimeSystemRequestType();
  }
  
  public QueryServiceListResponse createQueryServiceListResponse() {
    return new QueryServiceListResponse();
  }
  
  public ServiceManagerServiceInfo createServiceManagerServiceInfo() {
    return new ServiceManagerServiceInfo();
  }
  
  public RebootHostTaskResponse createRebootHostTaskResponse() {
    return new RebootHostTaskResponse();
  }
  
  public ReadPreviousEventsResponse createReadPreviousEventsResponse() {
    return new ReadPreviousEventsResponse();
  }
  
  public RectifyDvsHostTaskResponse createRectifyDvsHostTaskResponse() {
    return new RectifyDvsHostTaskResponse();
  }
  
  public PowerUpHostFromStandByTaskResponse createPowerUpHostFromStandByTaskResponse() {
    return new PowerUpHostFromStandByTaskResponse();
  }
  
  public DiskHasPartitions createDiskHasPartitions() {
    return new DiskHasPartitions();
  }
  
  public CreateRegistryKeyInGuestRequestType createCreateRegistryKeyInGuestRequestType() {
    return new CreateRegistryKeyInGuestRequestType();
  }
  
  public CreateFolderResponse createCreateFolderResponse() {
    return new CreateFolderResponse();
  }
  
  public NotSupportedHostInDvs createNotSupportedHostInDvs() {
    return new NotSupportedHostInDvs();
  }
  
  public VmSmpFaultToleranceTooManyVMsOnHost createVmSmpFaultToleranceTooManyVMsOnHost() {
    return new VmSmpFaultToleranceTooManyVMsOnHost();
  }
  
  public ConsolidateVMDisksRequestType createConsolidateVMDisksRequestType() {
    return new ConsolidateVMDisksRequestType();
  }
  
  public DatastoreEnterMaintenanceModeResponse createDatastoreEnterMaintenanceModeResponse() {
    return new DatastoreEnterMaintenanceModeResponse();
  }
  
  public CheckAnswerFileStatusRequestType createCheckAnswerFileStatusRequestType() {
    return new CheckAnswerFileStatusRequestType();
  }
  
  public QueryPolicyMetadataResponse createQueryPolicyMetadataResponse() {
    return new QueryPolicyMetadataResponse();
  }
  
  public ProfilePolicyMetadata createProfilePolicyMetadata() {
    return new ProfilePolicyMetadata();
  }
  
  public BackupFirmwareConfigurationResponse createBackupFirmwareConfigurationResponse() {
    return new BackupFirmwareConfigurationResponse();
  }
  
  public LoginResponse createLoginResponse() {
    return new LoginResponse();
  }
  
  public DvsApplyOperationFault createDvsApplyOperationFault() {
    return new DvsApplyOperationFault();
  }
  
  public QueryConnectionInfoResponse createQueryConnectionInfoResponse() {
    return new QueryConnectionInfoResponse();
  }
  
  public NasConfigFault createNasConfigFault() {
    return new NasConfigFault();
  }
  
  public TooManyNativeClonesOnFile createTooManyNativeClonesOnFile() {
    return new TooManyNativeClonesOnFile();
  }
  
  public QueryVMotionCompatibilityExTaskResponse createQueryVMotionCompatibilityExTaskResponse() {
    return new QueryVMotionCompatibilityExTaskResponse();
  }
  
  public UpdateDnsConfigRequestType createUpdateDnsConfigRequestType() {
    return new UpdateDnsConfigRequestType();
  }
  
  public RemoveDiskMappingRequestType createRemoveDiskMappingRequestType() {
    return new RemoveDiskMappingRequestType();
  }
  
  public UpdateServicePolicyResponse createUpdateServicePolicyResponse() {
    return new UpdateServicePolicyResponse();
  }
  
  public PrepareCryptoResponse createPrepareCryptoResponse() {
    return new PrepareCryptoResponse();
  }
  
  public CheckAnswerFileStatusTaskResponse createCheckAnswerFileStatusTaskResponse() {
    return new CheckAnswerFileStatusTaskResponse();
  }
  
  public UpdateSystemResourcesRequestType createUpdateSystemResourcesRequestType() {
    return new UpdateSystemResourcesRequestType();
  }
  
  public DatastoreExitMaintenanceModeTaskResponse createDatastoreExitMaintenanceModeTaskResponse() {
    return new DatastoreExitMaintenanceModeTaskResponse();
  }
  
  public SetMultipathLunPolicyRequestType createSetMultipathLunPolicyRequestType() {
    return new SetMultipathLunPolicyRequestType();
  }
  
  public ReconfigureSnmpAgentRequestType createReconfigureSnmpAgentRequestType() {
    return new ReconfigureSnmpAgentRequestType();
  }
  
  public ReconfigureHostForDASRequestType createReconfigureHostForDASRequestType() {
    return new ReconfigureHostForDASRequestType();
  }
  
  public QueryPerfCounterByLevelResponse createQueryPerfCounterByLevelResponse() {
    return new QueryPerfCounterByLevelResponse();
  }
  
  public PerfCounterInfo createPerfCounterInfo() {
    return new PerfCounterInfo();
  }
  
  public NoClientCertificate createNoClientCertificate() {
    return new NoClientCertificate();
  }
  
  public ComputeDiskPartitionInfoResponse createComputeDiskPartitionInfoResponse() {
    return new ComputeDiskPartitionInfoResponse();
  }
  
  public ReplicationDiskConfigFault createReplicationDiskConfigFault() {
    return new ReplicationDiskConfigFault();
  }
  
  public LoginExtensionByCertificateRequestType createLoginExtensionByCertificateRequestType() {
    return new LoginExtensionByCertificateRequestType();
  }
  
  public DiskIsUSB createDiskIsUSB() {
    return new DiskIsUSB();
  }
  
  public XmlToCustomizationSpecItemRequestType createXmlToCustomizationSpecItemRequestType() {
    return new XmlToCustomizationSpecItemRequestType();
  }
  
  public RemoveGuestAliasByCertRequestType createRemoveGuestAliasByCertRequestType() {
    return new RemoveGuestAliasByCertRequestType();
  }
  
  public QueryAvailableDvsSpecRequestType createQueryAvailableDvsSpecRequestType() {
    return new QueryAvailableDvsSpecRequestType();
  }
  
  public ToolsUnavailable createToolsUnavailable() {
    return new ToolsUnavailable();
  }
  
  public CheckAddHostEvcRequestType createCheckAddHostEvcRequestType() {
    return new CheckAddHostEvcRequestType();
  }
  
  public NasConnectionLimitReached createNasConnectionLimitReached() {
    return new NasConnectionLimitReached();
  }
  
  public SetCollectorPageSizeResponse createSetCollectorPageSizeResponse() {
    return new SetCollectorPageSizeResponse();
  }
  
  public UnmountVmfsVolumeExRequestType createUnmountVmfsVolumeExRequestType() {
    return new UnmountVmfsVolumeExRequestType();
  }
  
  public CheckMigrateTaskResponse createCheckMigrateTaskResponse() {
    return new CheckMigrateTaskResponse();
  }
  
  public InvalidDeviceOperation createInvalidDeviceOperation() {
    return new InvalidDeviceOperation();
  }
  
  public SetLocaleResponse createSetLocaleResponse() {
    return new SetLocaleResponse();
  }
  
  public AddServiceConsoleVirtualNicResponse createAddServiceConsoleVirtualNicResponse() {
    return new AddServiceConsoleVirtualNicResponse();
  }
  
  public ReleaseIpAllocationResponse createReleaseIpAllocationResponse() {
    return new ReleaseIpAllocationResponse();
  }
  
  public GetClusterModeResponse createGetClusterModeResponse() {
    return new GetClusterModeResponse();
  }
  
  public SecondaryVmAlreadyDisabled createSecondaryVmAlreadyDisabled() {
    return new SecondaryVmAlreadyDisabled();
  }
  
  public CreateSnapshotExRequestType createCreateSnapshotExRequestType() {
    return new CreateSnapshotExRequestType();
  }
  
  public MissingPowerOnConfiguration createMissingPowerOnConfiguration() {
    return new MissingPowerOnConfiguration();
  }
  
  public UpdateInternetScsiAliasResponse createUpdateInternetScsiAliasResponse() {
    return new UpdateInternetScsiAliasResponse();
  }
  
  public BackupBlobWriteFailure createBackupBlobWriteFailure() {
    return new BackupBlobWriteFailure();
  }
  
  public ListProcessesInGuestResponse createListProcessesInGuestResponse() {
    return new ListProcessesInGuestResponse();
  }
  
  public GuestProcessInfo createGuestProcessInfo() {
    return new GuestProcessInfo();
  }
  
  public RetrieveServiceContentRequestType createRetrieveServiceContentRequestType() {
    return new RetrieveServiceContentRequestType();
  }
  
  public ListVStorageObjectResponse createListVStorageObjectResponse() {
    return new ListVStorageObjectResponse();
  }
  
  public HostCloneVStorageObjectTaskResponse createHostCloneVStorageObjectTaskResponse() {
    return new HostCloneVStorageObjectTaskResponse();
  }
  
  public CreateDatacenterRequestType createCreateDatacenterRequestType() {
    return new CreateDatacenterRequestType();
  }
  
  public UnbindVnicRequestType createUnbindVnicRequestType() {
    return new UnbindVnicRequestType();
  }
  
  public RemoveKeysRequestType createRemoveKeysRequestType() {
    return new RemoveKeysRequestType();
  }
  
  public UpdateDateTimeRequestType createUpdateDateTimeRequestType() {
    return new UpdateDateTimeRequestType();
  }
  
  public SwapDatastoreUnset createSwapDatastoreUnset() {
    return new SwapDatastoreUnset();
  }
  
  public GuestProcessNotFound createGuestProcessNotFound() {
    return new GuestProcessNotFound();
  }
  
  public RemoveNetworkResourcePoolRequestType createRemoveNetworkResourcePoolRequestType() {
    return new RemoveNetworkResourcePoolRequestType();
  }
  
  public HostImageConfigGetAcceptanceResponse createHostImageConfigGetAcceptanceResponse() {
    return new HostImageConfigGetAcceptanceResponse();
  }
  
  public ReconcileDatastoreInventoryTaskResponse createReconcileDatastoreInventoryTaskResponse() {
    return new ReconcileDatastoreInventoryTaskResponse();
  }
  
  public NetworksMayNotBeTheSame createNetworksMayNotBeTheSame() {
    return new NetworksMayNotBeTheSame();
  }
  
  public CheckRelocateRequestType createCheckRelocateRequestType() {
    return new CheckRelocateRequestType();
  }
  
  public ConfigureVFlashResourceExRequestType createConfigureVFlashResourceExRequestType() {
    return new ConfigureVFlashResourceExRequestType();
  }
  
  public AssignUserToGroupResponse createAssignUserToGroupResponse() {
    return new AssignUserToGroupResponse();
  }
  
  public FaultToleranceNotLicensed createFaultToleranceNotLicensed() {
    return new FaultToleranceNotLicensed();
  }
  
  public CheckLicenseFeatureResponse createCheckLicenseFeatureResponse() {
    return new CheckLicenseFeatureResponse();
  }
  
  public FindAssociatedProfileResponse createFindAssociatedProfileResponse() {
    return new FindAssociatedProfileResponse();
  }
  
  public CopyVirtualDiskTaskResponse createCopyVirtualDiskTaskResponse() {
    return new CopyVirtualDiskTaskResponse();
  }
  
  public DestroyTaskResponse createDestroyTaskResponse() {
    return new DestroyTaskResponse();
  }
  
  public ReconnectHostRequestType createReconnectHostRequestType() {
    return new ReconnectHostRequestType();
  }
  
  public ConfigureHostCacheTaskResponse createConfigureHostCacheTaskResponse() {
    return new ConfigureHostCacheTaskResponse();
  }
  
  public CannotAccessVmConfig createCannotAccessVmConfig() {
    return new CannotAccessVmConfig();
  }
  
  public SetClusterModeRequestType createSetClusterModeRequestType() {
    return new SetClusterModeRequestType();
  }
  
  public FetchSoftwarePackagesRequestType createFetchSoftwarePackagesRequestType() {
    return new FetchSoftwarePackagesRequestType();
  }
  
  public ListFilesInGuestRequestType createListFilesInGuestRequestType() {
    return new ListFilesInGuestRequestType();
  }
  
  public DeleteVsanObjectsResponse createDeleteVsanObjectsResponse() {
    return new DeleteVsanObjectsResponse();
  }
  
  public HostVsanInternalSystemDeleteVsanObjectsResult createHostVsanInternalSystemDeleteVsanObjectsResult() {
    return new HostVsanInternalSystemDeleteVsanObjectsResult();
  }
  
  public CustomizationSpecItemToXmlResponse createCustomizationSpecItemToXmlResponse() {
    return new CustomizationSpecItemToXmlResponse();
  }
  
  public HostNotReachable createHostNotReachable() {
    return new HostNotReachable();
  }
  
  public FindChildResponse createFindChildResponse() {
    return new FindChildResponse();
  }
  
  public RetrieveHostCustomizationsForProfileResponse createRetrieveHostCustomizationsForProfileResponse() {
    return new RetrieveHostCustomizationsForProfileResponse();
  }
  
  public CreateChildVMTaskResponse createCreateChildVMTaskResponse() {
    return new CreateChildVMTaskResponse();
  }
  
  public IscsiFaultVnicAlreadyBound createIscsiFaultVnicAlreadyBound() {
    return new IscsiFaultVnicAlreadyBound();
  }
  
  public RefreshFirewallResponse createRefreshFirewallResponse() {
    return new RefreshFirewallResponse();
  }
  
  public UpdateVirtualSwitchRequestType createUpdateVirtualSwitchRequestType() {
    return new UpdateVirtualSwitchRequestType();
  }
  
  public QueryExpressionMetadataRequestType createQueryExpressionMetadataRequestType() {
    return new QueryExpressionMetadataRequestType();
  }
  
  public DownloadDescriptionTreeRequestType createDownloadDescriptionTreeRequestType() {
    return new DownloadDescriptionTreeRequestType();
  }
  
  public StampAllRulesWithUuidRequestType createStampAllRulesWithUuidRequestType() {
    return new StampAllRulesWithUuidRequestType();
  }
  
  public DisconnectNvmeControllerRequestType createDisconnectNvmeControllerRequestType() {
    return new DisconnectNvmeControllerRequestType();
  }
  
  public QueryProductLockerLocationResponse createQueryProductLockerLocationResponse() {
    return new QueryProductLockerLocationResponse();
  }
  
  public UpdateFlagsResponse createUpdateFlagsResponse() {
    return new UpdateFlagsResponse();
  }
  
  public IscsiFaultVnicHasActivePaths createIscsiFaultVnicHasActivePaths() {
    return new IscsiFaultVnicHasActivePaths();
  }
  
  public MoveDirectoryInGuestResponse createMoveDirectoryInGuestResponse() {
    return new MoveDirectoryInGuestResponse();
  }
  
  public DestroyCollectorResponse createDestroyCollectorResponse() {
    return new DestroyCollectorResponse();
  }
  
  public ShrinkVirtualDiskTaskResponse createShrinkVirtualDiskTaskResponse() {
    return new ShrinkVirtualDiskTaskResponse();
  }
  
  public ReconfigureScheduledTaskRequestType createReconfigureScheduledTaskRequestType() {
    return new ReconfigureScheduledTaskRequestType();
  }
  
  public CertMgrRefreshCACertificatesAndCRLsRequestType createCertMgrRefreshCACertificatesAndCRLsRequestType() {
    return new CertMgrRefreshCACertificatesAndCRLsRequestType();
  }
  
  public CryptoUnlockRequestType createCryptoUnlockRequestType() {
    return new CryptoUnlockRequestType();
  }
  
  public ListVStorageObjectsAttachedToTagRequestType createListVStorageObjectsAttachedToTagRequestType() {
    return new ListVStorageObjectsAttachedToTagRequestType();
  }
  
  public UpdateDnsConfigResponse createUpdateDnsConfigResponse() {
    return new UpdateDnsConfigResponse();
  }
  
  public ReconfigureAutostartRequestType createReconfigureAutostartRequestType() {
    return new ReconfigureAutostartRequestType();
  }
  
  public HostVStorageObjectCreateSnapshotTaskResponse createHostVStorageObjectCreateSnapshotTaskResponse() {
    return new HostVStorageObjectCreateSnapshotTaskResponse();
  }
  
  public UpdateLockdownExceptionsRequestType createUpdateLockdownExceptionsRequestType() {
    return new UpdateLockdownExceptionsRequestType();
  }
  
  public MoveHostIntoRequestType createMoveHostIntoRequestType() {
    return new MoveHostIntoRequestType();
  }
  
  public InvalidHostState createInvalidHostState() {
    return new InvalidHostState();
  }
  
  public CheckProfileComplianceRequestType createCheckProfileComplianceRequestType() {
    return new CheckProfileComplianceRequestType();
  }
  
  public ClearComplianceStatusRequestType createClearComplianceStatusRequestType() {
    return new ClearComplianceStatusRequestType();
  }
  
  public UpdateLockdownExceptionsResponse createUpdateLockdownExceptionsResponse() {
    return new UpdateLockdownExceptionsResponse();
  }
  
  public DeleteHostSpecificationResponse createDeleteHostSpecificationResponse() {
    return new DeleteHostSpecificationResponse();
  }
  
  public EnableSmartCardAuthenticationResponse createEnableSmartCardAuthenticationResponse() {
    return new EnableSmartCardAuthenticationResponse();
  }
  
  public GuestMultipleMappings createGuestMultipleMappings() {
    return new GuestMultipleMappings();
  }
  
  public InsufficientHostMemoryCapacityFault createInsufficientHostMemoryCapacityFault() {
    return new InsufficientHostMemoryCapacityFault();
  }
  
  public CancelRecommendationRequestType createCancelRecommendationRequestType() {
    return new CancelRecommendationRequestType();
  }
  
  public CompositeHostProfileRequestType createCompositeHostProfileRequestType() {
    return new CompositeHostProfileRequestType();
  }
  
  public InsufficientMemoryResourcesFault createInsufficientMemoryResourcesFault() {
    return new InsufficientMemoryResourcesFault();
  }
  
  public DeselectVnicRequestType createDeselectVnicRequestType() {
    return new DeselectVnicRequestType();
  }
  
  public ResetCounterLevelMappingResponse createResetCounterLevelMappingResponse() {
    return new ResetCounterLevelMappingResponse();
  }
  
  public UpdateIpPoolRequestType createUpdateIpPoolRequestType() {
    return new UpdateIpPoolRequestType();
  }
  
  public MarkAsNonLocalRequestType createMarkAsNonLocalRequestType() {
    return new MarkAsNonLocalRequestType();
  }
  
  public CreateTaskResponse createCreateTaskResponse() {
    return new CreateTaskResponse();
  }
  
  public CannotPowerOffVmInCluster createCannotPowerOffVmInCluster() {
    return new CannotPowerOffVmInCluster();
  }
  
  public VstorageObjectVCenterQueryChangedDiskAreasRequestType createVstorageObjectVCenterQueryChangedDiskAreasRequestType() {
    return new VstorageObjectVCenterQueryChangedDiskAreasRequestType();
  }
  
  public AcquireTicketResponse createAcquireTicketResponse() {
    return new AcquireTicketResponse();
  }
  
  public VirtualMachineTicket createVirtualMachineTicket() {
    return new VirtualMachineTicket();
  }
  
  public CannotAccessNetwork createCannotAccessNetwork() {
    return new CannotAccessNetwork();
  }
  
  public FilterInUse createFilterInUse() {
    return new FilterInUse();
  }
  
  public VmfsAlreadyMounted createVmfsAlreadyMounted() {
    return new VmfsAlreadyMounted();
  }
  
  public GatewayToHostTrustVerifyFault createGatewayToHostTrustVerifyFault() {
    return new GatewayToHostTrustVerifyFault();
  }
  
  public OvfMissingElementNormalBoundary createOvfMissingElementNormalBoundary() {
    return new OvfMissingElementNormalBoundary();
  }
  
  public RevertToSnapshotTaskResponse createRevertToSnapshotTaskResponse() {
    return new RevertToSnapshotTaskResponse();
  }
  
  public ResourceInUse createResourceInUse() {
    return new ResourceInUse();
  }
  
  public ReconfigureComputeResourceRequestType createReconfigureComputeResourceRequestType() {
    return new ReconfigureComputeResourceRequestType();
  }
  
  public NoPermissionOnAD createNoPermissionOnAD() {
    return new NoPermissionOnAD();
  }
  
  public UninstallServiceResponse createUninstallServiceResponse() {
    return new UninstallServiceResponse();
  }
  
  public CreateNasDatastoreResponse createCreateNasDatastoreResponse() {
    return new CreateNasDatastoreResponse();
  }
  
  public InvalidDatastorePath createInvalidDatastorePath() {
    return new InvalidDatastorePath();
  }
  
  public RetrieveSnapshotInfoResponse createRetrieveSnapshotInfoResponse() {
    return new RetrieveSnapshotInfoResponse();
  }
  
  public ReplaceSmartCardTrustAnchorsResponse createReplaceSmartCardTrustAnchorsResponse() {
    return new ReplaceSmartCardTrustAnchorsResponse();
  }
  
  public ConcurrentAccess createConcurrentAccess() {
    return new ConcurrentAccess();
  }
  
  public NonVmwareOuiMacNotSupportedHost createNonVmwareOuiMacNotSupportedHost() {
    return new NonVmwareOuiMacNotSupportedHost();
  }
  
  public QueryUnresolvedVmfsVolumesResponse createQueryUnresolvedVmfsVolumesResponse() {
    return new QueryUnresolvedVmfsVolumesResponse();
  }
  
  public InvalidHostConnectionState createInvalidHostConnectionState() {
    return new InvalidHostConnectionState();
  }
  
  public QueryAvailablePerfMetricResponse createQueryAvailablePerfMetricResponse() {
    return new QueryAvailablePerfMetricResponse();
  }
  
  public PerfMetricId createPerfMetricId() {
    return new PerfMetricId();
  }
  
  public QueryLockdownExceptionsResponse createQueryLockdownExceptionsResponse() {
    return new QueryLockdownExceptionsResponse();
  }
  
  public UpdateVmfsUnmapPriorityResponse createUpdateVmfsUnmapPriorityResponse() {
    return new UpdateVmfsUnmapPriorityResponse();
  }
  
  public QueryPnicStatusRequestType createQueryPnicStatusRequestType() {
    return new QueryPnicStatusRequestType();
  }
  
  public UpdateGraphicsConfigRequestType createUpdateGraphicsConfigRequestType() {
    return new UpdateGraphicsConfigRequestType();
  }
  
  public ExpandVmfsDatastoreResponse createExpandVmfsDatastoreResponse() {
    return new ExpandVmfsDatastoreResponse();
  }
  
  public FetchDVPortKeysRequestType createFetchDVPortKeysRequestType() {
    return new FetchDVPortKeysRequestType();
  }
  
  public GetClusterModeRequestType createGetClusterModeRequestType() {
    return new GetClusterModeRequestType();
  }
  
  public JoinDomainRequestType createJoinDomainRequestType() {
    return new JoinDomainRequestType();
  }
  
  public PrepareCryptoRequestType createPrepareCryptoRequestType() {
    return new PrepareCryptoRequestType();
  }
  
  public PowerDownHostToStandByTaskResponse createPowerDownHostToStandByTaskResponse() {
    return new PowerDownHostToStandByTaskResponse();
  }
  
  public UnmountVmfsVolumeRequestType createUnmountVmfsVolumeRequestType() {
    return new UnmountVmfsVolumeRequestType();
  }
  
  public HostDeleteVStorageObjectRequestType createHostDeleteVStorageObjectRequestType() {
    return new HostDeleteVStorageObjectRequestType();
  }
  
  public SuspendedRelocateNotSupported createSuspendedRelocateNotSupported() {
    return new SuspendedRelocateNotSupported();
  }
  
  public AllocateIpv6AddressResponse createAllocateIpv6AddressResponse() {
    return new AllocateIpv6AddressResponse();
  }
  
  public DeviceNotSupported createDeviceNotSupported() {
    return new DeviceNotSupported();
  }
  
  public RetrieveClientCsrResponse createRetrieveClientCsrResponse() {
    return new RetrieveClientCsrResponse();
  }
  
  public QueryTargetCapabilitiesResponse createQueryTargetCapabilitiesResponse() {
    return new QueryTargetCapabilitiesResponse();
  }
  
  public HostCapability createHostCapability() {
    return new HostCapability();
  }
  
  public DeleteHostSpecificationRequestType createDeleteHostSpecificationRequestType() {
    return new DeleteHostSpecificationRequestType();
  }
  
  public RestartServiceResponse createRestartServiceResponse() {
    return new RestartServiceResponse();
  }
  
  public EstimateStorageForConsolidateSnapshotsTaskResponse createEstimateStorageForConsolidateSnapshotsTaskResponse() {
    return new EstimateStorageForConsolidateSnapshotsTaskResponse();
  }
  
  public IsKmsClusterActiveResponse createIsKmsClusterActiveResponse() {
    return new IsKmsClusterActiveResponse();
  }
  
  public OvfInternalError createOvfInternalError() {
    return new OvfInternalError();
  }
  
  public DeleteRegistryValueInGuestResponse createDeleteRegistryValueInGuestResponse() {
    return new DeleteRegistryValueInGuestResponse();
  }
  
  public DiscoverNvmeControllersResponse createDiscoverNvmeControllersResponse() {
    return new DiscoverNvmeControllersResponse();
  }
  
  public HostNvmeDiscoveryLog createHostNvmeDiscoveryLog() {
    return new HostNvmeDiscoveryLog();
  }
  
  public InvalidIpfixConfig createInvalidIpfixConfig() {
    return new InvalidIpfixConfig();
  }
  
  public IscsiFaultPnicInUse createIscsiFaultPnicInUse() {
    return new IscsiFaultPnicInUse();
  }
  
  public HostRegisterDiskRequestType createHostRegisterDiskRequestType() {
    return new HostRegisterDiskRequestType();
  }
  
  public LoginExtensionByCertificateResponse createLoginExtensionByCertificateResponse() {
    return new LoginExtensionByCertificateResponse();
  }
  
  public UpdateHostImageAcceptanceLevelRequestType createUpdateHostImageAcceptanceLevelRequestType() {
    return new UpdateHostImageAcceptanceLevelRequestType();
  }
  
  public QueryServiceListRequestType createQueryServiceListRequestType() {
    return new QueryServiceListRequestType();
  }
  
  public HostConfigureVFlashResourceRequestType createHostConfigureVFlashResourceRequestType() {
    return new HostConfigureVFlashResourceRequestType();
  }
  
  public DisableClusteredVmdkSupportRequestType createDisableClusteredVmdkSupportRequestType() {
    return new DisableClusteredVmdkSupportRequestType();
  }
  
  public VmAlreadyExistsInDatacenter createVmAlreadyExistsInDatacenter() {
    return new VmAlreadyExistsInDatacenter();
  }
  
  public PowerDownHostToStandByRequestType createPowerDownHostToStandByRequestType() {
    return new PowerDownHostToStandByRequestType();
  }
  
  public InsufficientHostCapacityFault createInsufficientHostCapacityFault() {
    return new InsufficientHostCapacityFault();
  }
  
  public ComputeDiskPartitionInfoForResizeResponse createComputeDiskPartitionInfoForResizeResponse() {
    return new ComputeDiskPartitionInfoForResizeResponse();
  }
  
  public EnableRulesetRequestType createEnableRulesetRequestType() {
    return new EnableRulesetRequestType();
  }
  
  public MountError createMountError() {
    return new MountError();
  }
  
  public SetDisplayTopologyResponse createSetDisplayTopologyResponse() {
    return new SetDisplayTopologyResponse();
  }
  
  public CheckPowerOnRequestType createCheckPowerOnRequestType() {
    return new CheckPowerOnRequestType();
  }
  
  public QueryAvailablePerfMetricRequestType createQueryAvailablePerfMetricRequestType() {
    return new QueryAvailablePerfMetricRequestType();
  }
  
  public ActiveVMsBlockingEVC createActiveVMsBlockingEVC() {
    return new ActiveVMsBlockingEVC();
  }
  
  public GenericVmConfigFault createGenericVmConfigFault() {
    return new GenericVmConfigFault();
  }
  
  public EsxAgentHostManagerUpdateConfigResponse createEsxAgentHostManagerUpdateConfigResponse() {
    return new EsxAgentHostManagerUpdateConfigResponse();
  }
  
  public GetVchaClusterHealthResponse createGetVchaClusterHealthResponse() {
    return new GetVchaClusterHealthResponse();
  }
  
  public VchaClusterHealth createVchaClusterHealth() {
    return new VchaClusterHealth();
  }
  
  public DuplicateCustomizationSpecRequestType createDuplicateCustomizationSpecRequestType() {
    return new DuplicateCustomizationSpecRequestType();
  }
  
  public QueryVsanUpgradeStatusResponse createQueryVsanUpgradeStatusResponse() {
    return new QueryVsanUpgradeStatusResponse();
  }
  
  public VsanUpgradeSystemUpgradeStatus createVsanUpgradeSystemUpgradeStatus() {
    return new VsanUpgradeSystemUpgradeStatus();
  }
  
  public InstallHostPatchTaskResponse createInstallHostPatchTaskResponse() {
    return new InstallHostPatchTaskResponse();
  }
  
  public HostSpecGetUpdatedHostsRequestType createHostSpecGetUpdatedHostsRequestType() {
    return new HostSpecGetUpdatedHostsRequestType();
  }
  
  public OvfAttribute createOvfAttribute() {
    return new OvfAttribute();
  }
  
  public SnapshotMoveToNonHomeNotSupported createSnapshotMoveToNonHomeNotSupported() {
    return new SnapshotMoveToNonHomeNotSupported();
  }
  
  public InsufficientVFlashResourcesFault createInsufficientVFlashResourcesFault() {
    return new InsufficientVFlashResourcesFault();
  }
  
  public QuerySyncingVsanObjectsRequestType createQuerySyncingVsanObjectsRequestType() {
    return new QuerySyncingVsanObjectsRequestType();
  }
  
  public BrowseDiagnosticLogResponse createBrowseDiagnosticLogResponse() {
    return new BrowseDiagnosticLogResponse();
  }
  
  public DiagnosticManagerLogHeader createDiagnosticManagerLogHeader() {
    return new DiagnosticManagerLogHeader();
  }
  
  public MarkAsLocalTaskResponse createMarkAsLocalTaskResponse() {
    return new MarkAsLocalTaskResponse();
  }
  
  public EnableAlarmActionsResponse createEnableAlarmActionsResponse() {
    return new EnableAlarmActionsResponse();
  }
  
  public UninstallHostPatchRequestType createUninstallHostPatchRequestType() {
    return new UninstallHostPatchRequestType();
  }
  
  public CheckAddHostEvcTaskResponse createCheckAddHostEvcTaskResponse() {
    return new CheckAddHostEvcTaskResponse();
  }
  
  public ListRegistryKeysInGuestRequestType createListRegistryKeysInGuestRequestType() {
    return new ListRegistryKeysInGuestRequestType();
  }
  
  public UpdateVStorageInfrastructureObjectPolicyTaskResponse createUpdateVStorageInfrastructureObjectPolicyTaskResponse() {
    return new UpdateVStorageInfrastructureObjectPolicyTaskResponse();
  }
  
  public QueryModulesRequestType createQueryModulesRequestType() {
    return new QueryModulesRequestType();
  }
  
  public GenerateSelfSignedClientCertRequestType createGenerateSelfSignedClientCertRequestType() {
    return new GenerateSelfSignedClientCertRequestType();
  }
  
  public UpdateVmfsUnmapBandwidthResponse createUpdateVmfsUnmapBandwidthResponse() {
    return new UpdateVmfsUnmapBandwidthResponse();
  }
  
  public CreatePassiveNodeTaskResponse createCreatePassiveNodeTaskResponse() {
    return new CreatePassiveNodeTaskResponse();
  }
  
  public RetrieveDynamicPassthroughInfoRequestType createRetrieveDynamicPassthroughInfoRequestType() {
    return new RetrieveDynamicPassthroughInfoRequestType();
  }
  
  public ConfigurePowerPolicyResponse createConfigurePowerPolicyResponse() {
    return new ConfigurePowerPolicyResponse();
  }
  
  public ClearTriggeredAlarmsResponse createClearTriggeredAlarmsResponse() {
    return new ClearTriggeredAlarmsResponse();
  }
  
  public RefreshStorageDrsRecommendationsForPodRequestType createRefreshStorageDrsRecommendationsForPodRequestType() {
    return new RefreshStorageDrsRecommendationsForPodRequestType();
  }
  
  public HostProfileResetValidationStateResponse createHostProfileResetValidationStateResponse() {
    return new HostProfileResetValidationStateResponse();
  }
  
  public EvcManagerRequestType createEvcManagerRequestType() {
    return new EvcManagerRequestType();
  }
  
  public InvalidDatastore createInvalidDatastore() {
    return new InvalidDatastore();
  }
  
  public CreateVMRequestType createCreateVMRequestType() {
    return new CreateVMRequestType();
  }
  
  public ConfigureDatastoreIORMRequestType createConfigureDatastoreIORMRequestType() {
    return new ConfigureDatastoreIORMRequestType();
  }
  
  public RemoveDatastoreExTaskResponse createRemoveDatastoreExTaskResponse() {
    return new RemoveDatastoreExTaskResponse();
  }
  
  public QueryCryptoKeyStatusResponse createQueryCryptoKeyStatusResponse() {
    return new QueryCryptoKeyStatusResponse();
  }
  
  public CryptoManagerKmipCryptoKeyStatus createCryptoManagerKmipCryptoKeyStatus() {
    return new CryptoManagerKmipCryptoKeyStatus();
  }
  
  public SendNMIResponse createSendNMIResponse() {
    return new SendNMIResponse();
  }
  
  public MarkAsNonSsdTaskResponse createMarkAsNonSsdTaskResponse() {
    return new MarkAsNonSsdTaskResponse();
  }
  
  public PerformVsanUpgradeRequestType createPerformVsanUpgradeRequestType() {
    return new PerformVsanUpgradeRequestType();
  }
  
  public UpdateDateTimeConfigRequestType createUpdateDateTimeConfigRequestType() {
    return new UpdateDateTimeConfigRequestType();
  }
  
  public OvfConsumerUndeclaredSection createOvfConsumerUndeclaredSection() {
    return new OvfConsumerUndeclaredSection();
  }
  
  public GetResourceUsageResponse createGetResourceUsageResponse() {
    return new GetResourceUsageResponse();
  }
  
  public ClusterResourceUsageSummary createClusterResourceUsageSummary() {
    return new ClusterResourceUsageSummary();
  }
  
  public PostEventRequestType createPostEventRequestType() {
    return new PostEventRequestType();
  }
  
  public WaitForUpdatesExRequestType createWaitForUpdatesExRequestType() {
    return new WaitForUpdatesExRequestType();
  }
  
  public UpdateKmsSignedCsrClientCertRequestType createUpdateKmsSignedCsrClientCertRequestType() {
    return new UpdateKmsSignedCsrClientCertRequestType();
  }
  
  public HostListVStorageObjectRequestType createHostListVStorageObjectRequestType() {
    return new HostListVStorageObjectRequestType();
  }
  
  public QueryVMotionCompatibilityRequestType createQueryVMotionCompatibilityRequestType() {
    return new QueryVMotionCompatibilityRequestType();
  }
  
  public StorageDrsCannotMoveManuallyPlacedVm createStorageDrsCannotMoveManuallyPlacedVm() {
    return new StorageDrsCannotMoveManuallyPlacedVm();
  }
  
  public RefreshDatastoreStorageInfoResponse createRefreshDatastoreStorageInfoResponse() {
    return new RefreshDatastoreStorageInfoResponse();
  }
  
  public EstimateStorageForConsolidateSnapshotsRequestType createEstimateStorageForConsolidateSnapshotsRequestType() {
    return new EstimateStorageForConsolidateSnapshotsRequestType();
  }
  
  public UnregisterExtensionRequestType createUnregisterExtensionRequestType() {
    return new UnregisterExtensionRequestType();
  }
  
  public DisableSecondaryVMRequestType createDisableSecondaryVMRequestType() {
    return new DisableSecondaryVMRequestType();
  }
  
  public RDMPointsToInaccessibleDisk createRDMPointsToInaccessibleDisk() {
    return new RDMPointsToInaccessibleDisk();
  }
  
  public SnapshotNoChange createSnapshotNoChange() {
    return new SnapshotNoChange();
  }
  
  public RelocateVMRequestType createRelocateVMRequestType() {
    return new RelocateVMRequestType();
  }
  
  public OvfInvalidValueReference createOvfInvalidValueReference() {
    return new OvfInvalidValueReference();
  }
  
  public DefragmentVirtualDiskRequestType createDefragmentVirtualDiskRequestType() {
    return new DefragmentVirtualDiskRequestType();
  }
  
  public LargeRDMNotSupportedOnDatastore createLargeRDMNotSupportedOnDatastore() {
    return new LargeRDMNotSupportedOnDatastore();
  }
  
  public EstimateDatabaseSizeRequestType createEstimateDatabaseSizeRequestType() {
    return new EstimateDatabaseSizeRequestType();
  }
  
  public HostRemoveVFlashResourceResponse createHostRemoveVFlashResourceResponse() {
    return new HostRemoveVFlashResourceResponse();
  }
  
  public UnmountDiskMappingRequestType createUnmountDiskMappingRequestType() {
    return new UnmountDiskMappingRequestType();
  }
  
  public UpdateDefaultPolicyResponse createUpdateDefaultPolicyResponse() {
    return new UpdateDefaultPolicyResponse();
  }
  
  public UpdateLocalSwapDatastoreRequestType createUpdateLocalSwapDatastoreRequestType() {
    return new UpdateLocalSwapDatastoreRequestType();
  }
  
  public QueryUnownedFilesRequestType createQueryUnownedFilesRequestType() {
    return new QueryUnownedFilesRequestType();
  }
  
  public DestroyVffsResponse createDestroyVffsResponse() {
    return new DestroyVffsResponse();
  }
  
  public DasConfigFault createDasConfigFault() {
    return new DasConfigFault();
  }
  
  public StorageDrsCannotMoveVmWithNoFilesInLayout createStorageDrsCannotMoveVmWithNoFilesInLayout() {
    return new StorageDrsCannotMoveVmWithNoFilesInLayout();
  }
  
  public OvfFault createOvfFault() {
    return new OvfFault();
  }
  
  public TooManyConsecutiveOverrides createTooManyConsecutiveOverrides() {
    return new TooManyConsecutiveOverrides();
  }
  
  public AllocateIpv4AddressRequestType createAllocateIpv4AddressRequestType() {
    return new AllocateIpv4AddressRequestType();
  }
  
  public AdminDisabled createAdminDisabled() {
    return new AdminDisabled();
  }
  
  public CreateTemporaryFileInGuestResponse createCreateTemporaryFileInGuestResponse() {
    return new CreateTemporaryFileInGuestResponse();
  }
  
  public MultipleCertificatesVerifyFault createMultipleCertificatesVerifyFault() {
    return new MultipleCertificatesVerifyFault();
  }
  
  public RemoveUserResponse createRemoveUserResponse() {
    return new RemoveUserResponse();
  }
  
  public VMINotSupported createVMINotSupported() {
    return new VMINotSupported();
  }
  
  public QueryConfigTargetRequestType createQueryConfigTargetRequestType() {
    return new QueryConfigTargetRequestType();
  }
  
  public AddAuthorizationRoleRequestType createAddAuthorizationRoleRequestType() {
    return new AddAuthorizationRoleRequestType();
  }
  
  public InvalidSnapshotFormat createInvalidSnapshotFormat() {
    return new InvalidSnapshotFormat();
  }
  
  public ValidateHostProfileCompositionRequestType createValidateHostProfileCompositionRequestType() {
    return new ValidateHostProfileCompositionRequestType();
  }
  
  public UnmountVmfsVolumeResponse createUnmountVmfsVolumeResponse() {
    return new UnmountVmfsVolumeResponse();
  }
  
  public QuerySystemUsersRequestType createQuerySystemUsersRequestType() {
    return new QuerySystemUsersRequestType();
  }
  
  public RetrieveKmipServersStatusTaskResponse createRetrieveKmipServersStatusTaskResponse() {
    return new RetrieveKmipServersStatusTaskResponse();
  }
  
  public TooManyNativeCloneLevels createTooManyNativeCloneLevels() {
    return new TooManyNativeCloneLevels();
  }
  
  public HostIncompatibleForFaultTolerance createHostIncompatibleForFaultTolerance() {
    return new HostIncompatibleForFaultTolerance();
  }
  
  public WakeOnLanNotSupportedByVmotionNIC createWakeOnLanNotSupportedByVmotionNIC() {
    return new WakeOnLanNotSupportedByVmotionNIC();
  }
  
  public InstallIoFilterRequestType createInstallIoFilterRequestType() {
    return new InstallIoFilterRequestType();
  }
  
  public NamespaceLimitReached createNamespaceLimitReached() {
    return new NamespaceLimitReached();
  }
  
  public StorageDrsCannotMoveSharedDisk createStorageDrsCannotMoveSharedDisk() {
    return new StorageDrsCannotMoveSharedDisk();
  }
  
  public UpdateInternetScsiDiscoveryPropertiesResponse createUpdateInternetScsiDiscoveryPropertiesResponse() {
    return new UpdateInternetScsiDiscoveryPropertiesResponse();
  }
  
  public UpdateInternetScsiDigestPropertiesRequestType createUpdateInternetScsiDigestPropertiesRequestType() {
    return new UpdateInternetScsiDigestPropertiesRequestType();
  }
  
  public UnsupportedDatastore createUnsupportedDatastore() {
    return new UnsupportedDatastore();
  }
  
  public EnableFeatureResponse createEnableFeatureResponse() {
    return new EnableFeatureResponse();
  }
  
  public DisableAlarmResponse createDisableAlarmResponse() {
    return new DisableAlarmResponse();
  }
  
  public RetrieveObjectScheduledTaskRequestType createRetrieveObjectScheduledTaskRequestType() {
    return new RetrieveObjectScheduledTaskRequestType();
  }
  
  public DeselectVnicResponse createDeselectVnicResponse() {
    return new DeselectVnicResponse();
  }
  
  public ExpiredAddonLicense createExpiredAddonLicense() {
    return new ExpiredAddonLicense();
  }
  
  public LoginByTokenRequestType createLoginByTokenRequestType() {
    return new LoginByTokenRequestType();
  }
  
  public SnapshotIncompatibleDeviceInVm createSnapshotIncompatibleDeviceInVm() {
    return new SnapshotIncompatibleDeviceInVm();
  }
  
  public QueryPerfCounterResponse createQueryPerfCounterResponse() {
    return new QueryPerfCounterResponse();
  }
  
  public UpdateInternetScsiDigestPropertiesResponse createUpdateInternetScsiDigestPropertiesResponse() {
    return new UpdateInternetScsiDigestPropertiesResponse();
  }
  
  public FindByDnsNameResponse createFindByDnsNameResponse() {
    return new FindByDnsNameResponse();
  }
  
  public EnableSecondaryVMRequestType createEnableSecondaryVMRequestType() {
    return new EnableSecondaryVMRequestType();
  }
  
  public CancelStorageDrsRecommendationResponse createCancelStorageDrsRecommendationResponse() {
    return new CancelStorageDrsRecommendationResponse();
  }
  
  public InsufficientCpuResourcesFault createInsufficientCpuResourcesFault() {
    return new InsufficientCpuResourcesFault();
  }
  
  public DisallowedChangeByService createDisallowedChangeByService() {
    return new DisallowedChangeByService();
  }
  
  public MigrationFault createMigrationFault() {
    return new MigrationFault();
  }
  
  public CheckInstantCloneRequestType createCheckInstantCloneRequestType() {
    return new CheckInstantCloneRequestType();
  }
  
  public UpdateVirtualNicResponse createUpdateVirtualNicResponse() {
    return new UpdateVirtualNicResponse();
  }
  
  public UpdateProgressResponse createUpdateProgressResponse() {
    return new UpdateProgressResponse();
  }
  
  public QueryConfigTargetResponse createQueryConfigTargetResponse() {
    return new QueryConfigTargetResponse();
  }
  
  public ConfigTarget createConfigTarget() {
    return new ConfigTarget();
  }
  
  public ReadEnvironmentVariableInGuestResponse createReadEnvironmentVariableInGuestResponse() {
    return new ReadEnvironmentVariableInGuestResponse();
  }
  
  public RemoveServiceConsoleVirtualNicResponse createRemoveServiceConsoleVirtualNicResponse() {
    return new RemoveServiceConsoleVirtualNicResponse();
  }
  
  public UpdateDateTimeResponse createUpdateDateTimeResponse() {
    return new UpdateDateTimeResponse();
  }
  
  public MissingPowerOffConfiguration createMissingPowerOffConfiguration() {
    return new MissingPowerOffConfiguration();
  }
  
  public QueryAssignedLicensesRequestType createQueryAssignedLicensesRequestType() {
    return new QueryAssignedLicensesRequestType();
  }
  
  public NamespaceFull createNamespaceFull() {
    return new NamespaceFull();
  }
  
  public DvsNotAuthorized createDvsNotAuthorized() {
    return new DvsNotAuthorized();
  }
  
  public CreateDirectoryRequestType createCreateDirectoryRequestType() {
    return new CreateDirectoryRequestType();
  }
  
  public GuestOperationsUnavailable createGuestOperationsUnavailable() {
    return new GuestOperationsUnavailable();
  }
  
  public LookupDvPortGroupRequestType createLookupDvPortGroupRequestType() {
    return new LookupDvPortGroupRequestType();
  }
  
  public GetDefaultKmsClusterRequestType createGetDefaultKmsClusterRequestType() {
    return new GetDefaultKmsClusterRequestType();
  }
  
  public MountVmfsVolumeExRequestType createMountVmfsVolumeExRequestType() {
    return new MountVmfsVolumeExRequestType();
  }
  
  public TerminateSessionResponse createTerminateSessionResponse() {
    return new TerminateSessionResponse();
  }
  
  public InvalidResourcePoolStructureFault createInvalidResourcePoolStructureFault() {
    return new InvalidResourcePoolStructureFault();
  }
  
  public ScanHostPatchV2TaskResponse createScanHostPatchV2TaskResponse() {
    return new ScanHostPatchV2TaskResponse();
  }
  
  public AcquireGenericServiceTicketRequestType createAcquireGenericServiceTicketRequestType() {
    return new AcquireGenericServiceTicketRequestType();
  }
  
  public InUseFeatureManipulationDisallowed createInUseFeatureManipulationDisallowed() {
    return new InUseFeatureManipulationDisallowed();
  }
  
  public WaitForUpdatesRequestType createWaitForUpdatesRequestType() {
    return new WaitForUpdatesRequestType();
  }
  
  public InsufficientStandbyCpuResource createInsufficientStandbyCpuResource() {
    return new InsufficientStandbyCpuResource();
  }
  
  public HostRegisterDiskResponse createHostRegisterDiskResponse() {
    return new HostRegisterDiskResponse();
  }
  
  public InvalidAffinitySettingFault createInvalidAffinitySettingFault() {
    return new InvalidAffinitySettingFault();
  }
  
  public SetPublicKeyRequestType createSetPublicKeyRequestType() {
    return new SetPublicKeyRequestType();
  }
  
  public CreateScreenshotTaskResponse createCreateScreenshotTaskResponse() {
    return new CreateScreenshotTaskResponse();
  }
  
  public UpdateVmfsUnmapBandwidthRequestType createUpdateVmfsUnmapBandwidthRequestType() {
    return new UpdateVmfsUnmapBandwidthRequestType();
  }
  
  public CreateFilterResponse createCreateFilterResponse() {
    return new CreateFilterResponse();
  }
  
  public OvfUnsupportedDeviceExport createOvfUnsupportedDeviceExport() {
    return new OvfUnsupportedDeviceExport();
  }
  
  public WillLoseHAProtection createWillLoseHAProtection() {
    return new WillLoseHAProtection();
  }
  
  public AddDisksRequestType createAddDisksRequestType() {
    return new AddDisksRequestType();
  }
  
  public RetrieveEntityScheduledTaskResponse createRetrieveEntityScheduledTaskResponse() {
    return new RetrieveEntityScheduledTaskResponse();
  }
  
  public QueryDateTimeResponse createQueryDateTimeResponse() {
    return new QueryDateTimeResponse();
  }
  
  public RDMNotSupportedOnDatastore createRDMNotSupportedOnDatastore() {
    return new RDMNotSupportedOnDatastore();
  }
  
  public SetCryptoModeRequestType createSetCryptoModeRequestType() {
    return new SetCryptoModeRequestType();
  }
  
  public SessionIsActiveResponse createSessionIsActiveResponse() {
    return new SessionIsActiveResponse();
  }
  
  public ClusterEnterMaintenanceModeRequestType createClusterEnterMaintenanceModeRequestType() {
    return new ClusterEnterMaintenanceModeRequestType();
  }
  
  public RemoveUserRequestType createRemoveUserRequestType() {
    return new RemoveUserRequestType();
  }
  
  public EnableSecondaryVMTaskResponse createEnableSecondaryVMTaskResponse() {
    return new EnableSecondaryVMTaskResponse();
  }
  
  public QueryUnmonitoredHostsResponse createQueryUnmonitoredHostsResponse() {
    return new QueryUnmonitoredHostsResponse();
  }
  
  public UpgradeVsanObjectsResponse createUpgradeVsanObjectsResponse() {
    return new UpgradeVsanObjectsResponse();
  }
  
  public HostVsanInternalSystemVsanObjectOperationResult createHostVsanInternalSystemVsanObjectOperationResult() {
    return new HostVsanInternalSystemVsanObjectOperationResult();
  }
  
  public CancelTaskRequestType createCancelTaskRequestType() {
    return new CancelTaskRequestType();
  }
  
  public GetDefaultKmsClusterResponse createGetDefaultKmsClusterResponse() {
    return new GetDefaultKmsClusterResponse();
  }
  
  public KeyProviderId createKeyProviderId() {
    return new KeyProviderId();
  }
  
  public LogoutResponse createLogoutResponse() {
    return new LogoutResponse();
  }
  
  public VsanIncompatibleDiskMapping createVsanIncompatibleDiskMapping() {
    return new VsanIncompatibleDiskMapping();
  }
  
  public AbandonHciWorkflowRequestType createAbandonHciWorkflowRequestType() {
    return new AbandonHciWorkflowRequestType();
  }
  
  public CreateIpPoolRequestType createCreateIpPoolRequestType() {
    return new CreateIpPoolRequestType();
  }
  
  public QueryOptionsResponse createQueryOptionsResponse() {
    return new QueryOptionsResponse();
  }
  
  public OptionValue createOptionValue() {
    return new OptionValue();
  }
  
  public InvalidVmState createInvalidVmState() {
    return new InvalidVmState();
  }
  
  public FileAlreadyExists createFileAlreadyExists() {
    return new FileAlreadyExists();
  }
  
  public UpdatePassthruConfigResponse createUpdatePassthruConfigResponse() {
    return new UpdatePassthruConfigResponse();
  }
  
  public PrepareVchaTaskResponse createPrepareVchaTaskResponse() {
    return new PrepareVchaTaskResponse();
  }
  
  public MoveVirtualDiskTaskResponse createMoveVirtualDiskTaskResponse() {
    return new MoveVirtualDiskTaskResponse();
  }
  
  public EnableCryptoResponse createEnableCryptoResponse() {
    return new EnableCryptoResponse();
  }
  
  public EnableHyperThreadingRequestType createEnableHyperThreadingRequestType() {
    return new EnableHyperThreadingRequestType();
  }
  
  public RenameVStorageObjectResponse createRenameVStorageObjectResponse() {
    return new RenameVStorageObjectResponse();
  }
  
  public AttachScsiLunRequestType createAttachScsiLunRequestType() {
    return new AttachScsiLunRequestType();
  }
  
  public HostConfigFault createHostConfigFault() {
    return new HostConfigFault();
  }
  
  public CheckCloneTaskResponse createCheckCloneTaskResponse() {
    return new CheckCloneTaskResponse();
  }
  
  public RetrieveAnswerFileRequestType createRetrieveAnswerFileRequestType() {
    return new RetrieveAnswerFileRequestType();
  }
  
  public DatastoreExitMaintenanceModeRequestType createDatastoreExitMaintenanceModeRequestType() {
    return new DatastoreExitMaintenanceModeRequestType();
  }
  
  public AreAlarmActionsEnabledRequestType createAreAlarmActionsEnabledRequestType() {
    return new AreAlarmActionsEnabledRequestType();
  }
  
  public CreateVvolDatastoreResponse createCreateVvolDatastoreResponse() {
    return new CreateVvolDatastoreResponse();
  }
  
  public CpuIncompatible1ECX createCpuIncompatible1ECX() {
    return new CpuIncompatible1ECX();
  }
  
  public AddMonitoredEntitiesResponse createAddMonitoredEntitiesResponse() {
    return new AddMonitoredEntitiesResponse();
  }
  
  public StartReplayingTaskResponse createStartReplayingTaskResponse() {
    return new StartReplayingTaskResponse();
  }
  
  public HostInflateDiskTaskResponse createHostInflateDiskTaskResponse() {
    return new HostInflateDiskTaskResponse();
  }
  
  public RefreshRequestType createRefreshRequestType() {
    return new RefreshRequestType();
  }
  
  public RegisterVMRequestType createRegisterVMRequestType() {
    return new RegisterVMRequestType();
  }
  
  public CheckCompatibilityTaskResponse createCheckCompatibilityTaskResponse() {
    return new CheckCompatibilityTaskResponse();
  }
  
  public NotSupportedHostInCluster createNotSupportedHostInCluster() {
    return new NotSupportedHostInCluster();
  }
  
  public HostAccessRestrictedToManagementServer createHostAccessRestrictedToManagementServer() {
    return new HostAccessRestrictedToManagementServer();
  }
  
  public ReconfigureDvsTaskResponse createReconfigureDvsTaskResponse() {
    return new ReconfigureDvsTaskResponse();
  }
  
  public CreateDiagnosticPartitionRequestType createCreateDiagnosticPartitionRequestType() {
    return new CreateDiagnosticPartitionRequestType();
  }
  
  public SystemError createSystemError() {
    return new SystemError();
  }
  
  public QueryHostStatusResponse createQueryHostStatusResponse() {
    return new QueryHostStatusResponse();
  }
  
  public VsanHostClusterStatus createVsanHostClusterStatus() {
    return new VsanHostClusterStatus();
  }
  
  public StandbyGuestResponse createStandbyGuestResponse() {
    return new StandbyGuestResponse();
  }
  
  public CreateDatacenterResponse createCreateDatacenterResponse() {
    return new CreateDatacenterResponse();
  }
  
  public QueryBoundVnicsRequestType createQueryBoundVnicsRequestType() {
    return new QueryBoundVnicsRequestType();
  }
  
  public HostRetrieveVStorageInfrastructureObjectPolicyRequestType createHostRetrieveVStorageInfrastructureObjectPolicyRequestType() {
    return new HostRetrieveVStorageInfrastructureObjectPolicyRequestType();
  }
  
  public AttachDiskRequestType createAttachDiskRequestType() {
    return new AttachDiskRequestType();
  }
  
  public RetrievePropertiesResponse createRetrievePropertiesResponse() {
    return new RetrievePropertiesResponse();
  }
  
  public ObjectContent createObjectContent() {
    return new ObjectContent();
  }
  
  public PatchMetadataCorrupted createPatchMetadataCorrupted() {
    return new PatchMetadataCorrupted();
  }
  
  public SecondaryVmAlreadyRegistered createSecondaryVmAlreadyRegistered() {
    return new SecondaryVmAlreadyRegistered();
  }
  
  public FindAssociatedProfileRequestType createFindAssociatedProfileRequestType() {
    return new FindAssociatedProfileRequestType();
  }
  
  public UpdateConsoleIpRouteConfigResponse createUpdateConsoleIpRouteConfigResponse() {
    return new UpdateConsoleIpRouteConfigResponse();
  }
  
  public InitiateFileTransferFromGuestRequestType createInitiateFileTransferFromGuestRequestType() {
    return new InitiateFileTransferFromGuestRequestType();
  }
  
  public UpdateDvsCapabilityResponse createUpdateDvsCapabilityResponse() {
    return new UpdateDvsCapabilityResponse();
  }
  
  public UpdateKmsSignedCsrClientCertResponse createUpdateKmsSignedCsrClientCertResponse() {
    return new UpdateKmsSignedCsrClientCertResponse();
  }
  
  public AddServiceConsoleVirtualNicRequestType createAddServiceConsoleVirtualNicRequestType() {
    return new AddServiceConsoleVirtualNicRequestType();
  }
  
  public EnableClusteredVmdkSupportResponse createEnableClusteredVmdkSupportResponse() {
    return new EnableClusteredVmdkSupportResponse();
  }
  
  public UpdateVirtualMachineFilesTaskResponse createUpdateVirtualMachineFilesTaskResponse() {
    return new UpdateVirtualMachineFilesTaskResponse();
  }
  
  public UpdateNetworkConfigResponse createUpdateNetworkConfigResponse() {
    return new UpdateNetworkConfigResponse();
  }
  
  public HostNetworkConfigResult createHostNetworkConfigResult() {
    return new HostNetworkConfigResult();
  }
  
  public ExtendVffsResponse createExtendVffsResponse() {
    return new ExtendVffsResponse();
  }
  
  public CertMgrRevokeCertificatesRequestType createCertMgrRevokeCertificatesRequestType() {
    return new CertMgrRevokeCertificatesRequestType();
  }
  
  public AttachScsiLunExRequestType createAttachScsiLunExRequestType() {
    return new AttachScsiLunExRequestType();
  }
  
  public OvfPropertyExport createOvfPropertyExport() {
    return new OvfPropertyExport();
  }
  
  public CheckVmConfigTaskResponse createCheckVmConfigTaskResponse() {
    return new CheckVmConfigTaskResponse();
  }
  
  public VmMonitorIncompatibleForFaultTolerance createVmMonitorIncompatibleForFaultTolerance() {
    return new VmMonitorIncompatibleForFaultTolerance();
  }
  
  public InflateVirtualDiskRequestType createInflateVirtualDiskRequestType() {
    return new InflateVirtualDiskRequestType();
  }
  
  public InvalidDatastoreState createInvalidDatastoreState() {
    return new InvalidDatastoreState();
  }
  
  public CreateDiskFromSnapshotRequestType createCreateDiskFromSnapshotRequestType() {
    return new CreateDiskFromSnapshotRequestType();
  }
  
  public GuestRegistryKeyFault createGuestRegistryKeyFault() {
    return new GuestRegistryKeyFault();
  }
  
  public DiskMoveTypeNotSupported createDiskMoveTypeNotSupported() {
    return new DiskMoveTypeNotSupported();
  }
  
  public RestartServiceRequestType createRestartServiceRequestType() {
    return new RestartServiceRequestType();
  }
  
  public ReconfigureAlarmRequestType createReconfigureAlarmRequestType() {
    return new ReconfigureAlarmRequestType();
  }
  
  public UpgradeVsanObjectsRequestType createUpgradeVsanObjectsRequestType() {
    return new UpgradeVsanObjectsRequestType();
  }
  
  public SSPIChallenge createSSPIChallenge() {
    return new SSPIChallenge();
  }
  
  public VmConfigIncompatibleForFaultTolerance createVmConfigIncompatibleForFaultTolerance() {
    return new VmConfigIncompatibleForFaultTolerance();
  }
  
  public ConfigureEvcModeRequestType createConfigureEvcModeRequestType() {
    return new ConfigureEvcModeRequestType();
  }
  
  public DeltaDiskFormatNotSupported createDeltaDiskFormatNotSupported() {
    return new DeltaDiskFormatNotSupported();
  }
  
  public DestroyNetworkResponse createDestroyNetworkResponse() {
    return new DestroyNetworkResponse();
  }
  
  public DeleteScsiLunStateResponse createDeleteScsiLunStateResponse() {
    return new DeleteScsiLunStateResponse();
  }
  
  public ContinueRetrievePropertiesExRequestType createContinueRetrievePropertiesExRequestType() {
    return new ContinueRetrievePropertiesExRequestType();
  }
  
  public HostRetrieveVStorageObjectStateRequestType createHostRetrieveVStorageObjectStateRequestType() {
    return new HostRetrieveVStorageObjectStateRequestType();
  }
  
  public RetrievePropertiesExResponse createRetrievePropertiesExResponse() {
    return new RetrievePropertiesExResponse();
  }
  
  public UnregisterKmsClusterResponse createUnregisterKmsClusterResponse() {
    return new UnregisterKmsClusterResponse();
  }
  
  public AddNetworkResourcePoolRequestType createAddNetworkResourcePoolRequestType() {
    return new AddNetworkResourcePoolRequestType();
  }
  
  public QueryDvsConfigTargetResponse createQueryDvsConfigTargetResponse() {
    return new QueryDvsConfigTargetResponse();
  }
  
  public DVSManagerDvsConfigTarget createDVSManagerDvsConfigTarget() {
    return new DVSManagerDvsConfigTarget();
  }
  
  public RefreshStorageDrsRecommendationResponse createRefreshStorageDrsRecommendationResponse() {
    return new RefreshStorageDrsRecommendationResponse();
  }
  
  public AlreadyBeingManaged createAlreadyBeingManaged() {
    return new AlreadyBeingManaged();
  }
  
  public InstantCloneRequestType createInstantCloneRequestType() {
    return new InstantCloneRequestType();
  }
  
  public FetchUserPrivilegeOnEntitiesResponse createFetchUserPrivilegeOnEntitiesResponse() {
    return new FetchUserPrivilegeOnEntitiesResponse();
  }
  
  public UserPrivilegeResult createUserPrivilegeResult() {
    return new UserPrivilegeResult();
  }
  
  public StorageDrsDisabledOnVm createStorageDrsDisabledOnVm() {
    return new StorageDrsDisabledOnVm();
  }
  
  public ExpiredFeatureLicense createExpiredFeatureLicense() {
    return new ExpiredFeatureLicense();
  }
  
  public OvfPropertyQualifier createOvfPropertyQualifier() {
    return new OvfPropertyQualifier();
  }
  
  public RetrieveDescriptionRequestType createRetrieveDescriptionRequestType() {
    return new RetrieveDescriptionRequestType();
  }
  
  public HostRetrieveVStorageObjectResponse createHostRetrieveVStorageObjectResponse() {
    return new HostRetrieveVStorageObjectResponse();
  }
  
  public TurnOffFaultToleranceForVMTaskResponse createTurnOffFaultToleranceForVMTaskResponse() {
    return new TurnOffFaultToleranceForVMTaskResponse();
  }
  
  public VmValidateMaxDevice createVmValidateMaxDevice() {
    return new VmValidateMaxDevice();
  }
  
  public JoinDomainTaskResponse createJoinDomainTaskResponse() {
    return new JoinDomainTaskResponse();
  }
  
  public EVCConfigFault createEVCConfigFault() {
    return new EVCConfigFault();
  }
  
  public AddVirtualSwitchRequestType createAddVirtualSwitchRequestType() {
    return new AddVirtualSwitchRequestType();
  }
  
  public QueryEventsRequestType createQueryEventsRequestType() {
    return new QueryEventsRequestType();
  }
  
  public ListVStorageObjectsAttachedToTagResponse createListVStorageObjectsAttachedToTagResponse() {
    return new ListVStorageObjectsAttachedToTagResponse();
  }
  
  public HttpNfcLeaseCompleteResponse createHttpNfcLeaseCompleteResponse() {
    return new HttpNfcLeaseCompleteResponse();
  }
  
  public UpdateSystemSwapConfigurationRequestType createUpdateSystemSwapConfigurationRequestType() {
    return new UpdateSystemSwapConfigurationRequestType();
  }
  
  public NotEnoughCpus createNotEnoughCpus() {
    return new NotEnoughCpus();
  }
  
  public GatewayHostNotReachable createGatewayHostNotReachable() {
    return new GatewayHostNotReachable();
  }
  
  public IncompatibleSetting createIncompatibleSetting() {
    return new IncompatibleSetting();
  }
  
  public ExpandVmfsExtentRequestType createExpandVmfsExtentRequestType() {
    return new ExpandVmfsExtentRequestType();
  }
  
  public CannotModifyConfigCpuRequirements createCannotModifyConfigCpuRequirements() {
    return new CannotModifyConfigCpuRequirements();
  }
  
  public RenameDatastoreResponse createRenameDatastoreResponse() {
    return new RenameDatastoreResponse();
  }
  
  public DirectoryNotEmpty createDirectoryNotEmpty() {
    return new DirectoryNotEmpty();
  }
  
  public QueryIORMConfigOptionResponse createQueryIORMConfigOptionResponse() {
    return new QueryIORMConfigOptionResponse();
  }
  
  public StorageIORMConfigOption createStorageIORMConfigOption() {
    return new StorageIORMConfigOption();
  }
  
  public CustomizeGuestTaskResponse createCustomizeGuestTaskResponse() {
    return new CustomizeGuestTaskResponse();
  }
  
  public InsufficientNetworkResourcePoolCapacity createInsufficientNetworkResourcePoolCapacity() {
    return new InsufficientNetworkResourcePoolCapacity();
  }
  
  public OvfPropertyQualifierIgnored createOvfPropertyQualifierIgnored() {
    return new OvfPropertyQualifierIgnored();
  }
  
  public RevertVStorageObjectTaskResponse createRevertVStorageObjectTaskResponse() {
    return new RevertVStorageObjectTaskResponse();
  }
  
  public CanProvisionObjectsRequestType createCanProvisionObjectsRequestType() {
    return new CanProvisionObjectsRequestType();
  }
  
  public LimitExceeded createLimitExceeded() {
    return new LimitExceeded();
  }
  
  public AnswerVMRequestType createAnswerVMRequestType() {
    return new AnswerVMRequestType();
  }
  
  public DisableHyperThreadingResponse createDisableHyperThreadingResponse() {
    return new DisableHyperThreadingResponse();
  }
  
  public TerminateFaultTolerantVMRequestType createTerminateFaultTolerantVMRequestType() {
    return new TerminateFaultTolerantVMRequestType();
  }
  
  public QueryPartitionCreateDescRequestType createQueryPartitionCreateDescRequestType() {
    return new QueryPartitionCreateDescRequestType();
  }
  
  public ValidateMigrationRequestType createValidateMigrationRequestType() {
    return new ValidateMigrationRequestType();
  }
  
  public UnmountForceMountedVmfsVolumeRequestType createUnmountForceMountedVmfsVolumeRequestType() {
    return new UnmountForceMountedVmfsVolumeRequestType();
  }
  
  public QueryVmfsDatastoreExpandOptionsRequestType createQueryVmfsDatastoreExpandOptionsRequestType() {
    return new QueryVmfsDatastoreExpandOptionsRequestType();
  }
  
  public ResolveInstallationErrorsOnHostTaskResponse createResolveInstallationErrorsOnHostTaskResponse() {
    return new ResolveInstallationErrorsOnHostTaskResponse();
  }
  
  public RemoveKmipServerResponse createRemoveKmipServerResponse() {
    return new RemoveKmipServerResponse();
  }
  
  public OvfElement createOvfElement() {
    return new OvfElement();
  }
  
  public DoesCustomizationSpecExistRequestType createDoesCustomizationSpecExistRequestType() {
    return new DoesCustomizationSpecExistRequestType();
  }
  
  public LookupDvPortGroupResponse createLookupDvPortGroupResponse() {
    return new LookupDvPortGroupResponse();
  }
  
  public DVSRollbackRequestType createDVSRollbackRequestType() {
    return new DVSRollbackRequestType();
  }
  
  public QueryHostProfileMetadataRequestType createQueryHostProfileMetadataRequestType() {
    return new QueryHostProfileMetadataRequestType();
  }
  
  public CreateVvolDatastoreRequestType createCreateVvolDatastoreRequestType() {
    return new CreateVvolDatastoreRequestType();
  }
  
  public EnableNetworkResourceManagementResponse createEnableNetworkResourceManagementResponse() {
    return new EnableNetworkResourceManagementResponse();
  }
  
  public AssociateProfileResponse createAssociateProfileResponse() {
    return new AssociateProfileResponse();
  }
  
  public QueryDatacenterConfigOptionDescriptorRequestType createQueryDatacenterConfigOptionDescriptorRequestType() {
    return new QueryDatacenterConfigOptionDescriptorRequestType();
  }
  
  public DVSManagerExportEntityTaskResponse createDVSManagerExportEntityTaskResponse() {
    return new DVSManagerExportEntityTaskResponse();
  }
  
  public RunScheduledTaskResponse createRunScheduledTaskResponse() {
    return new RunScheduledTaskResponse();
  }
  
  public ResolveMultipleUnresolvedVmfsVolumesExTaskResponse createResolveMultipleUnresolvedVmfsVolumesExTaskResponse() {
    return new ResolveMultipleUnresolvedVmfsVolumesExTaskResponse();
  }
  
  public QueryFirmwareConfigUploadURLResponse createQueryFirmwareConfigUploadURLResponse() {
    return new QueryFirmwareConfigUploadURLResponse();
  }
  
  public PowerOnFtSecondaryFailed createPowerOnFtSecondaryFailed() {
    return new PowerOnFtSecondaryFailed();
  }
  
  public QueryFaultToleranceCompatibilityExResponse createQueryFaultToleranceCompatibilityExResponse() {
    return new QueryFaultToleranceCompatibilityExResponse();
  }
  
  public QueryIORMConfigOptionRequestType createQueryIORMConfigOptionRequestType() {
    return new QueryIORMConfigOptionRequestType();
  }
  
  public AddFilterRequestType createAddFilterRequestType() {
    return new AddFilterRequestType();
  }
  
  public RemoveEntityPermissionResponse createRemoveEntityPermissionResponse() {
    return new RemoveEntityPermissionResponse();
  }
  
  public DefragmentVirtualDiskTaskResponse createDefragmentVirtualDiskTaskResponse() {
    return new DefragmentVirtualDiskTaskResponse();
  }
  
  public FilesystemQuiesceFault createFilesystemQuiesceFault() {
    return new FilesystemQuiesceFault();
  }
  
  public UpdateCounterLevelMappingRequestType createUpdateCounterLevelMappingRequestType() {
    return new UpdateCounterLevelMappingRequestType();
  }
  
  public ListKmsClustersResponse createListKmsClustersResponse() {
    return new ListKmsClustersResponse();
  }
  
  public GuestRegistryKeyAlreadyExists createGuestRegistryKeyAlreadyExists() {
    return new GuestRegistryKeyAlreadyExists();
  }
  
  public UpdateServiceMessageRequestType createUpdateServiceMessageRequestType() {
    return new UpdateServiceMessageRequestType();
  }
  
  public RectifyDvsOnHostRequestType createRectifyDvsOnHostRequestType() {
    return new RectifyDvsOnHostRequestType();
  }
  
  public EVCAdmissionFailedHostSoftware createEVCAdmissionFailedHostSoftware() {
    return new EVCAdmissionFailedHostSoftware();
  }
  
  public AcquireLocalTicketRequestType createAcquireLocalTicketRequestType() {
    return new AcquireLocalTicketRequestType();
  }
  
  public CheckRelocateTaskResponse createCheckRelocateTaskResponse() {
    return new CheckRelocateTaskResponse();
  }
  
  public CreateContainerViewResponse createCreateContainerViewResponse() {
    return new CreateContainerViewResponse();
  }
  
  public CreateNvmeOverRdmaAdapterResponse createCreateNvmeOverRdmaAdapterResponse() {
    return new CreateNvmeOverRdmaAdapterResponse();
  }
  
  public RetrieveEntityPermissionsResponse createRetrieveEntityPermissionsResponse() {
    return new RetrieveEntityPermissionsResponse();
  }
  
  public QueryManagedByRequestType createQueryManagedByRequestType() {
    return new QueryManagedByRequestType();
  }
  
  public UpdateVStorageObjectCryptoTaskResponse createUpdateVStorageObjectCryptoTaskResponse() {
    return new UpdateVStorageObjectCryptoTaskResponse();
  }
  
  public UpdateAssignableHardwareConfigRequestType createUpdateAssignableHardwareConfigRequestType() {
    return new UpdateAssignableHardwareConfigRequestType();
  }
  
  public GuestRegistryFault createGuestRegistryFault() {
    return new GuestRegistryFault();
  }
  
  public RetrieveAllPermissionsRequestType createRetrieveAllPermissionsRequestType() {
    return new RetrieveAllPermissionsRequestType();
  }
  
  public QueryConfiguredModuleOptionStringRequestType createQueryConfiguredModuleOptionStringRequestType() {
    return new QueryConfiguredModuleOptionStringRequestType();
  }
  
  public CryptoUnlockTaskResponse createCryptoUnlockTaskResponse() {
    return new CryptoUnlockTaskResponse();
  }
  
  public UpdateVirtualMachineFilesRequestType createUpdateVirtualMachineFilesRequestType() {
    return new UpdateVirtualMachineFilesRequestType();
  }
  
  public StopReplayingTaskResponse createStopReplayingTaskResponse() {
    return new StopReplayingTaskResponse();
  }
  
  public ListGuestMappedAliasesResponse createListGuestMappedAliasesResponse() {
    return new ListGuestMappedAliasesResponse();
  }
  
  public GuestMappedAliases createGuestMappedAliases() {
    return new GuestMappedAliases();
  }
  
  public CreateDVPortgroupRequestType createCreateDVPortgroupRequestType() {
    return new CreateDVPortgroupRequestType();
  }
  
  public UpdateHppMultipathLunPolicyResponse createUpdateHppMultipathLunPolicyResponse() {
    return new UpdateHppMultipathLunPolicyResponse();
  }
  
  public StopReplayingRequestType createStopReplayingRequestType() {
    return new StopReplayingRequestType();
  }
  
  public UpdateInternetScsiAliasRequestType createUpdateInternetScsiAliasRequestType() {
    return new UpdateInternetScsiAliasRequestType();
  }
  
  public QueryIoFilterInfoResponse createQueryIoFilterInfoResponse() {
    return new QueryIoFilterInfoResponse();
  }
  
  public ClusterIoFilterInfo createClusterIoFilterInfo() {
    return new ClusterIoFilterInfo();
  }
  
  public InsufficientDisks createInsufficientDisks() {
    return new InsufficientDisks();
  }
  
  public RetrieveArgumentDescriptionRequestType createRetrieveArgumentDescriptionRequestType() {
    return new RetrieveArgumentDescriptionRequestType();
  }
  
  public OvfHostValueNotParsed createOvfHostValueNotParsed() {
    return new OvfHostValueNotParsed();
  }
  
  public UpdateLicenseLabelRequestType createUpdateLicenseLabelRequestType() {
    return new UpdateLicenseLabelRequestType();
  }
  
  public InstallHostPatchRequestType createInstallHostPatchRequestType() {
    return new InstallHostPatchRequestType();
  }
  
  public SecondaryVmNotRegistered createSecondaryVmNotRegistered() {
    return new SecondaryVmNotRegistered();
  }
  
  public HttpNfcLeaseProgressRequestType createHttpNfcLeaseProgressRequestType() {
    return new HttpNfcLeaseProgressRequestType();
  }
  
  public InaccessibleDatastore createInaccessibleDatastore() {
    return new InaccessibleDatastore();
  }
  
  public IscsiFaultVnicHasWrongUplink createIscsiFaultVnicHasWrongUplink() {
    return new IscsiFaultVnicHasWrongUplink();
  }
  
  public GenerateLogBundlesRequestType createGenerateLogBundlesRequestType() {
    return new GenerateLogBundlesRequestType();
  }
  
  public MemorySizeNotSupported createMemorySizeNotSupported() {
    return new MemorySizeNotSupported();
  }
  
  public IsSharedGraphicsActiveRequestType createIsSharedGraphicsActiveRequestType() {
    return new IsSharedGraphicsActiveRequestType();
  }
  
  public EnableMultipathPathResponse createEnableMultipathPathResponse() {
    return new EnableMultipathPathResponse();
  }
  
  public RefreshDatastoreStorageInfoRequestType createRefreshDatastoreStorageInfoRequestType() {
    return new RefreshDatastoreStorageInfoRequestType();
  }
  
  public InsufficientFailoverResourcesFault createInsufficientFailoverResourcesFault() {
    return new InsufficientFailoverResourcesFault();
  }
  
  public InvalidEvent createInvalidEvent() {
    return new InvalidEvent();
  }
  
  public AllocateIpv4AddressResponse createAllocateIpv4AddressResponse() {
    return new AllocateIpv4AddressResponse();
  }
  
  public ReconnectHostTaskResponse createReconnectHostTaskResponse() {
    return new ReconnectHostTaskResponse();
  }
  
  public UpdateSystemResourcesResponse createUpdateSystemResourcesResponse() {
    return new UpdateSystemResourcesResponse();
  }
  
  public ExecuteSimpleCommandRequestType createExecuteSimpleCommandRequestType() {
    return new ExecuteSimpleCommandRequestType();
  }
  
  public ProfileUpdateFailed createProfileUpdateFailed() {
    return new ProfileUpdateFailed();
  }
  
  public ReadPreviousEventsRequestType createReadPreviousEventsRequestType() {
    return new ReadPreviousEventsRequestType();
  }
  
  public DeleteRegistryValueInGuestRequestType createDeleteRegistryValueInGuestRequestType() {
    return new DeleteRegistryValueInGuestRequestType();
  }
  
  public NotSupportedHostInHACluster createNotSupportedHostInHACluster() {
    return new NotSupportedHostInHACluster();
  }
  
  public AbortCustomizationTaskResponse createAbortCustomizationTaskResponse() {
    return new AbortCustomizationTaskResponse();
  }
  
  public InstallHostPatchV2TaskResponse createInstallHostPatchV2TaskResponse() {
    return new InstallHostPatchV2TaskResponse();
  }
  
  public HasMonitoredEntityRequestType createHasMonitoredEntityRequestType() {
    return new HasMonitoredEntityRequestType();
  }
  
  public EnableNetworkResourceManagementRequestType createEnableNetworkResourceManagementRequestType() {
    return new EnableNetworkResourceManagementRequestType();
  }
  
  public OvfPropertyNetworkExport createOvfPropertyNetworkExport() {
    return new OvfPropertyNetworkExport();
  }
  
  public OvfPropertyType createOvfPropertyType() {
    return new OvfPropertyType();
  }
  
  public CannotAccessVmDevice createCannotAccessVmDevice() {
    return new CannotAccessVmDevice();
  }
  
  public VspanPromiscuousPortNotSupported createVspanPromiscuousPortNotSupported() {
    return new VspanPromiscuousPortNotSupported();
  }
  
  public RemoveLicenseLabelResponse createRemoveLicenseLabelResponse() {
    return new RemoveLicenseLabelResponse();
  }
  
  public OvfUnsupportedDeviceBackingInfo createOvfUnsupportedDeviceBackingInfo() {
    return new OvfUnsupportedDeviceBackingInfo();
  }
  
  public QueryHostStatusRequestType createQueryHostStatusRequestType() {
    return new QueryHostStatusRequestType();
  }
  
  public DisableAlarmRequestType createDisableAlarmRequestType() {
    return new DisableAlarmRequestType();
  }
  
  public ImportCertificateForCAMRequestType createImportCertificateForCAMRequestType() {
    return new ImportCertificateForCAMRequestType();
  }
  
  public UpdateBootDeviceResponse createUpdateBootDeviceResponse() {
    return new UpdateBootDeviceResponse();
  }
  
  public GetAlarmRequestType createGetAlarmRequestType() {
    return new GetAlarmRequestType();
  }
  
  public ComputeDiskPartitionInfoForResizeRequestType createComputeDiskPartitionInfoForResizeRequestType() {
    return new ComputeDiskPartitionInfoForResizeRequestType();
  }
  
  public ReadPreviousTasksResponse createReadPreviousTasksResponse() {
    return new ReadPreviousTasksResponse();
  }
  
  public InsufficientStandbyMemoryResource createInsufficientStandbyMemoryResource() {
    return new InsufficientStandbyMemoryResource();
  }
  
  public BindVnicResponse createBindVnicResponse() {
    return new BindVnicResponse();
  }
  
  public IDEDiskNotSupported createIDEDiskNotSupported() {
    return new IDEDiskNotSupported();
  }
  
  public VirtualHardwareVersionNotSupported createVirtualHardwareVersionNotSupported() {
    return new VirtualHardwareVersionNotSupported();
  }
  
  public FindExtensionResponse createFindExtensionResponse() {
    return new FindExtensionResponse();
  }
  
  public Extension createExtension() {
    return new Extension();
  }
  
  public CreateAlarmResponse createCreateAlarmResponse() {
    return new CreateAlarmResponse();
  }
  
  public UncustomizableGuest createUncustomizableGuest() {
    return new UncustomizableGuest();
  }
  
  public ConfigureDatastorePrincipalResponse createConfigureDatastorePrincipalResponse() {
    return new ConfigureDatastorePrincipalResponse();
  }
  
  public InvalidPropertyType createInvalidPropertyType() {
    return new InvalidPropertyType();
  }
  
  public ResetFirmwareToFactoryDefaultsRequestType createResetFirmwareToFactoryDefaultsRequestType() {
    return new ResetFirmwareToFactoryDefaultsRequestType();
  }
  
  public MarkAsSsdTaskResponse createMarkAsSsdTaskResponse() {
    return new MarkAsSsdTaskResponse();
  }
  
  public UnmountForceMountedVmfsVolumeResponse createUnmountForceMountedVmfsVolumeResponse() {
    return new UnmountForceMountedVmfsVolumeResponse();
  }
  
  public UpdateDefaultPolicyRequestType createUpdateDefaultPolicyRequestType() {
    return new UpdateDefaultPolicyRequestType();
  }
  
  public WaitForUpdatesResponse createWaitForUpdatesResponse() {
    return new WaitForUpdatesResponse();
  }
  
  public QueryVsanObjectsRequestType createQueryVsanObjectsRequestType() {
    return new QueryVsanObjectsRequestType();
  }
  
  public MarkAsSsdRequestType createMarkAsSsdRequestType() {
    return new MarkAsSsdRequestType();
  }
  
  public OvfConsumerFault createOvfConsumerFault() {
    return new OvfConsumerFault();
  }
  
  public RegisterDiskResponse createRegisterDiskResponse() {
    return new RegisterDiskResponse();
  }
  
  public DestroyIpPoolRequestType createDestroyIpPoolRequestType() {
    return new DestroyIpPoolRequestType();
  }
  
  public DrsVmotionIncompatibleFault createDrsVmotionIncompatibleFault() {
    return new DrsVmotionIncompatibleFault();
  }
  
  public CheckCompatibilityRequestType createCheckCompatibilityRequestType() {
    return new CheckCompatibilityRequestType();
  }
  
  public QueryPhysicalVsanDisksResponse createQueryPhysicalVsanDisksResponse() {
    return new QueryPhysicalVsanDisksResponse();
  }
  
  public VimFault createVimFault() {
    return new VimFault();
  }
  
  public ResolveMultipleUnresolvedVmfsVolumesRequestType createResolveMultipleUnresolvedVmfsVolumesRequestType() {
    return new ResolveMultipleUnresolvedVmfsVolumesRequestType();
  }
  
  public UpgradeVMTaskResponse createUpgradeVMTaskResponse() {
    return new UpgradeVMTaskResponse();
  }
  
  public PowerOnVMRequestType createPowerOnVMRequestType() {
    return new PowerOnVMRequestType();
  }
  
  public RetrieveHostSpecificationResponse createRetrieveHostSpecificationResponse() {
    return new RetrieveHostSpecificationResponse();
  }
  
  public HostSpecification createHostSpecification() {
    return new HostSpecification();
  }
  
  public QueryFilterInfoIdsResponse createQueryFilterInfoIdsResponse() {
    return new QueryFilterInfoIdsResponse();
  }
  
  public NoPermissionOnHost createNoPermissionOnHost() {
    return new NoPermissionOnHost();
  }
  
  public JoinDomainWithCAMTaskResponse createJoinDomainWithCAMTaskResponse() {
    return new JoinDomainWithCAMTaskResponse();
  }
  
  public InvalidDasRestartPriorityForFtVm createInvalidDasRestartPriorityForFtVm() {
    return new InvalidDasRestartPriorityForFtVm();
  }
  
  public ExecuteHostProfileResponse createExecuteHostProfileResponse() {
    return new ExecuteHostProfileResponse();
  }
  
  public ProfileExecuteResult createProfileExecuteResult() {
    return new ProfileExecuteResult();
  }
  
  public RefreshDVPortStateResponse createRefreshDVPortStateResponse() {
    return new RefreshDVPortStateResponse();
  }
  
  public RemoveNvmeOverRdmaAdapterResponse createRemoveNvmeOverRdmaAdapterResponse() {
    return new RemoveNvmeOverRdmaAdapterResponse();
  }
  
  public MountVffsVolumeResponse createMountVffsVolumeResponse() {
    return new MountVffsVolumeResponse();
  }
  
  public HasMonitoredEntityResponse createHasMonitoredEntityResponse() {
    return new HasMonitoredEntityResponse();
  }
  
  public ResetListViewRequestType createResetListViewRequestType() {
    return new ResetListViewRequestType();
  }
  
  public QueryFaultToleranceCompatibilityExRequestType createQueryFaultToleranceCompatibilityExRequestType() {
    return new QueryFaultToleranceCompatibilityExRequestType();
  }
  
  public OvfMissingHardware createOvfMissingHardware() {
    return new OvfMissingHardware();
  }
  
  public HttpNfcLeasePullFromUrlsTaskResponse createHttpNfcLeasePullFromUrlsTaskResponse() {
    return new HttpNfcLeasePullFromUrlsTaskResponse();
  }
  
  public DeployVchaRequestType createDeployVchaRequestType() {
    return new DeployVchaRequestType();
  }
  
  public RemoveVirtualSwitchResponse createRemoveVirtualSwitchResponse() {
    return new RemoveVirtualSwitchResponse();
  }
  
  public CryptoManagerHostEnableResponse createCryptoManagerHostEnableResponse() {
    return new CryptoManagerHostEnableResponse();
  }
  
  public RunScheduledTaskRequestType createRunScheduledTaskRequestType() {
    return new RunScheduledTaskRequestType();
  }
  
  public InvalidLogin createInvalidLogin() {
    return new InvalidLogin();
  }
  
  public RenameVStorageObjectRequestType createRenameVStorageObjectRequestType() {
    return new RenameVStorageObjectRequestType();
  }
  
  public HostRenameVStorageObjectResponse createHostRenameVStorageObjectResponse() {
    return new HostRenameVStorageObjectResponse();
  }
  
  public SolutionUserRequired createSolutionUserRequired() {
    return new SolutionUserRequired();
  }
  
  public CancelTaskResponse createCancelTaskResponse() {
    return new CancelTaskResponse();
  }
  
  public InitializeDisksRequestType createInitializeDisksRequestType() {
    return new InitializeDisksRequestType();
  }
  
  public GetAlarmStateRequestType createGetAlarmStateRequestType() {
    return new GetAlarmStateRequestType();
  }
  
  public UploadClientCertResponse createUploadClientCertResponse() {
    return new UploadClientCertResponse();
  }
  
  public InstallSmartCardTrustAnchorRequestType createInstallSmartCardTrustAnchorRequestType() {
    return new InstallSmartCardTrustAnchorRequestType();
  }
  
  public RefreshStorageInfoRequestType createRefreshStorageInfoRequestType() {
    return new RefreshStorageInfoRequestType();
  }
  
  public QueryFilterListResponse createQueryFilterListResponse() {
    return new QueryFilterListResponse();
  }
  
  public VmMetadataManagerFault createVmMetadataManagerFault() {
    return new VmMetadataManagerFault();
  }
  
  public QueryNetConfigRequestType createQueryNetConfigRequestType() {
    return new QueryNetConfigRequestType();
  }
  
  public CertMgrRefreshCACertificatesAndCRLsTaskResponse createCertMgrRefreshCACertificatesAndCRLsTaskResponse() {
    return new CertMgrRefreshCACertificatesAndCRLsTaskResponse();
  }
  
  public HAErrorsAtDest createHAErrorsAtDest() {
    return new HAErrorsAtDest();
  }
  
  public QueryPartitionCreateOptionsResponse createQueryPartitionCreateOptionsResponse() {
    return new QueryPartitionCreateOptionsResponse();
  }
  
  public HostDiagnosticPartitionCreateOption createHostDiagnosticPartitionCreateOption() {
    return new HostDiagnosticPartitionCreateOption();
  }
  
  public DeleteVirtualDiskTaskResponse createDeleteVirtualDiskTaskResponse() {
    return new DeleteVirtualDiskTaskResponse();
  }
  
  public UnmountToolsInstallerRequestType createUnmountToolsInstallerRequestType() {
    return new UnmountToolsInstallerRequestType();
  }
  
  public QueryConfigOptionRequestType createQueryConfigOptionRequestType() {
    return new QueryConfigOptionRequestType();
  }
  
  public ReconfigureSnmpAgentResponse createReconfigureSnmpAgentResponse() {
    return new ReconfigureSnmpAgentResponse();
  }
  
  public ExtendDiskTaskResponse createExtendDiskTaskResponse() {
    return new ExtendDiskTaskResponse();
  }
  
  public ResolveInstallationErrorsOnClusterTaskResponse createResolveInstallationErrorsOnClusterTaskResponse() {
    return new ResolveInstallationErrorsOnClusterTaskResponse();
  }
  
  public VmToolsUpgradeFault createVmToolsUpgradeFault() {
    return new VmToolsUpgradeFault();
  }
  
  public OvfHardwareExport createOvfHardwareExport() {
    return new OvfHardwareExport();
  }
  
  public VirtualHardwareCompatibilityIssue createVirtualHardwareCompatibilityIssue() {
    return new VirtualHardwareCompatibilityIssue();
  }
  
  public VMotionNotConfigured createVMotionNotConfigured() {
    return new VMotionNotConfigured();
  }
  
  public InvalidCollectorVersion createInvalidCollectorVersion() {
    return new InvalidCollectorVersion();
  }
  
  public MemorySizeNotSupportedByDatastore createMemorySizeNotSupportedByDatastore() {
    return new MemorySizeNotSupportedByDatastore();
  }
  
  public SecurityError createSecurityError() {
    return new SecurityError();
  }
  
  public SnapshotLocked createSnapshotLocked() {
    return new SnapshotLocked();
  }
  
  public HostRetrieveVStorageObjectStateResponse createHostRetrieveVStorageObjectStateResponse() {
    return new HostRetrieveVStorageObjectStateResponse();
  }
  
  public DeleteHostSubSpecificationRequestType createDeleteHostSubSpecificationRequestType() {
    return new DeleteHostSubSpecificationRequestType();
  }
  
  public UpdateClusterProfileRequestType createUpdateClusterProfileRequestType() {
    return new UpdateClusterProfileRequestType();
  }
  
  public AttachDiskTaskResponse createAttachDiskTaskResponse() {
    return new AttachDiskTaskResponse();
  }
  
  public QueryCandidateNicsResponse createQueryCandidateNicsResponse() {
    return new QueryCandidateNicsResponse();
  }
  
  public LogUserEventResponse createLogUserEventResponse() {
    return new LogUserEventResponse();
  }
  
  public RestartServiceConsoleVirtualNicRequestType createRestartServiceConsoleVirtualNicRequestType() {
    return new RestartServiceConsoleVirtualNicRequestType();
  }
  
  public SnapshotRevertIssue createSnapshotRevertIssue() {
    return new SnapshotRevertIssue();
  }
  
  public UpdateAnswerFileRequestType createUpdateAnswerFileRequestType() {
    return new UpdateAnswerFileRequestType();
  }
  
  public QueryAvailableDisksForVmfsRequestType createQueryAvailableDisksForVmfsRequestType() {
    return new QueryAvailableDisksForVmfsRequestType();
  }
  
  public QuerySupportedFeaturesRequestType createQuerySupportedFeaturesRequestType() {
    return new QuerySupportedFeaturesRequestType();
  }
  
  public ListKeysResponse createListKeysResponse() {
    return new ListKeysResponse();
  }
  
  public CryptoKeyId createCryptoKeyId() {
    return new CryptoKeyId();
  }
  
  public CryptoManagerHostPrepareResponse createCryptoManagerHostPrepareResponse() {
    return new CryptoManagerHostPrepareResponse();
  }
  
  public StorageDrsCannotMoveDiskInMultiWriterMode createStorageDrsCannotMoveDiskInMultiWriterMode() {
    return new StorageDrsCannotMoveDiskInMultiWriterMode();
  }
  
  public ScanHostPatchRequestType createScanHostPatchRequestType() {
    return new ScanHostPatchRequestType();
  }
  
  public MarkServiceProviderEntitiesResponse createMarkServiceProviderEntitiesResponse() {
    return new MarkServiceProviderEntitiesResponse();
  }
  
  public StandbyGuestRequestType createStandbyGuestRequestType() {
    return new StandbyGuestRequestType();
  }
  
  public SendTestNotificationResponse createSendTestNotificationResponse() {
    return new SendTestNotificationResponse();
  }
  
  public RemoveVirtualNicResponse createRemoveVirtualNicResponse() {
    return new RemoveVirtualNicResponse();
  }
  
  public SearchDatastoreSubFoldersTaskResponse createSearchDatastoreSubFoldersTaskResponse() {
    return new SearchDatastoreSubFoldersTaskResponse();
  }
  
  public RenameCustomizationSpecRequestType createRenameCustomizationSpecRequestType() {
    return new RenameCustomizationSpecRequestType();
  }
  
  public UploadKmipServerCertResponse createUploadKmipServerCertResponse() {
    return new UploadKmipServerCertResponse();
  }
  
  public RemoveNvmeOverRdmaAdapterRequestType createRemoveNvmeOverRdmaAdapterRequestType() {
    return new RemoveNvmeOverRdmaAdapterRequestType();
  }
  
  public DVPortgroupRollbackRequestType createDVPortgroupRollbackRequestType() {
    return new DVPortgroupRollbackRequestType();
  }
  
  public QueryVnicStatusRequestType createQueryVnicStatusRequestType() {
    return new QueryVnicStatusRequestType();
  }
  
  public UpdateChildResourceConfigurationResponse createUpdateChildResourceConfigurationResponse() {
    return new UpdateChildResourceConfigurationResponse();
  }
  
  public TaskInProgress createTaskInProgress() {
    return new TaskInProgress();
  }
  
  public DuplicateName createDuplicateName() {
    return new DuplicateName();
  }
  
  public RetrieveAnswerFileForProfileRequestType createRetrieveAnswerFileForProfileRequestType() {
    return new RetrieveAnswerFileForProfileRequestType();
  }
  
  public ZeroFillVirtualDiskRequestType createZeroFillVirtualDiskRequestType() {
    return new ZeroFillVirtualDiskRequestType();
  }
  
  public QueryDvsFeatureCapabilityRequestType createQueryDvsFeatureCapabilityRequestType() {
    return new QueryDvsFeatureCapabilityRequestType();
  }
  
  public RuntimeFault createRuntimeFault() {
    return new RuntimeFault();
  }
  
  public QueryCryptoKeyStatusRequestType createQueryCryptoKeyStatusRequestType() {
    return new QueryCryptoKeyStatusRequestType();
  }
  
  public SuspendVAppTaskResponse createSuspendVAppTaskResponse() {
    return new SuspendVAppTaskResponse();
  }
  
  public MarkPerenniallyReservedExTaskResponse createMarkPerenniallyReservedExTaskResponse() {
    return new MarkPerenniallyReservedExTaskResponse();
  }
  
  public ScheduleReconcileDatastoreInventoryRequestType createScheduleReconcileDatastoreInventoryRequestType() {
    return new ScheduleReconcileDatastoreInventoryRequestType();
  }
  
  public MountVffsVolumeRequestType createMountVffsVolumeRequestType() {
    return new MountVffsVolumeRequestType();
  }
  
  public CreateClusterResponse createCreateClusterResponse() {
    return new CreateClusterResponse();
  }
  
  public MigrationDisabled createMigrationDisabled() {
    return new MigrationDisabled();
  }
  
  public RemoveGuestAliasRequestType createRemoveGuestAliasRequestType() {
    return new RemoveGuestAliasRequestType();
  }
  
  public ResolveInstallationErrorsOnClusterRequestType createResolveInstallationErrorsOnClusterRequestType() {
    return new ResolveInstallationErrorsOnClusterRequestType();
  }
  
  public FindRulesForVmResponse createFindRulesForVmResponse() {
    return new FindRulesForVmResponse();
  }
  
  public ClusterRuleInfo createClusterRuleInfo() {
    return new ClusterRuleInfo();
  }
  
  public PhysCompatRDMNotSupported createPhysCompatRDMNotSupported() {
    return new PhysCompatRDMNotSupported();
  }
  
  public UpdateOptionsRequestType createUpdateOptionsRequestType() {
    return new UpdateOptionsRequestType();
  }
  
  public SwapPlacementOverrideNotSupported createSwapPlacementOverrideNotSupported() {
    return new SwapPlacementOverrideNotSupported();
  }
  
  public RelocateVMTaskResponse createRelocateVMTaskResponse() {
    return new RelocateVMTaskResponse();
  }
  
  public SetDefaultKmsClusterRequestType createSetDefaultKmsClusterRequestType() {
    return new SetDefaultKmsClusterRequestType();
  }
  
  public MarkPerenniallyReservedExRequestType createMarkPerenniallyReservedExRequestType() {
    return new MarkPerenniallyReservedExRequestType();
  }
  
  public VstorageObjectVCenterQueryChangedDiskAreasResponse createVstorageObjectVCenterQueryChangedDiskAreasResponse() {
    return new VstorageObjectVCenterQueryChangedDiskAreasResponse();
  }
  
  public MoveHostIntoTaskResponse createMoveHostIntoTaskResponse() {
    return new MoveHostIntoTaskResponse();
  }
  
  public AddGuestAliasResponse createAddGuestAliasResponse() {
    return new AddGuestAliasResponse();
  }
  
  public SoftRuleVioCorrectionImpact createSoftRuleVioCorrectionImpact() {
    return new SoftRuleVioCorrectionImpact();
  }
  
  public DeleteNvdimmBlockNamespacesRequestType createDeleteNvdimmBlockNamespacesRequestType() {
    return new DeleteNvdimmBlockNamespacesRequestType();
  }
  
  public UpdateVVolVirtualMachineFilesRequestType createUpdateVVolVirtualMachineFilesRequestType() {
    return new UpdateVVolVirtualMachineFilesRequestType();
  }
  
  public DatastoreNotWritableOnHost createDatastoreNotWritableOnHost() {
    return new DatastoreNotWritableOnHost();
  }
  
  public OvfConnectedDeviceIso createOvfConnectedDeviceIso() {
    return new OvfConnectedDeviceIso();
  }
  
  public OvfInvalidValueConfiguration createOvfInvalidValueConfiguration() {
    return new OvfInvalidValueConfiguration();
  }
  
  public QueryProviderNameRequestType createQueryProviderNameRequestType() {
    return new QueryProviderNameRequestType();
  }
  
  public HostHasComponentFailure createHostHasComponentFailure() {
    return new HostHasComponentFailure();
  }
  
  public DisableSmartCardAuthenticationResponse createDisableSmartCardAuthenticationResponse() {
    return new DisableSmartCardAuthenticationResponse();
  }
  
  public OvfDiskMappingNotFound createOvfDiskMappingNotFound() {
    return new OvfDiskMappingNotFound();
  }
  
  public UpdateReferenceHostRequestType createUpdateReferenceHostRequestType() {
    return new UpdateReferenceHostRequestType();
  }
  
  public UpdateInternetScsiNameResponse createUpdateInternetScsiNameResponse() {
    return new UpdateInternetScsiNameResponse();
  }
  
  public ResetListViewFromViewRequestType createResetListViewFromViewRequestType() {
    return new ResetListViewFromViewRequestType();
  }
  
  public EnableFeatureRequestType createEnableFeatureRequestType() {
    return new EnableFeatureRequestType();
  }
  
  public UpdateIpRouteConfigResponse createUpdateIpRouteConfigResponse() {
    return new UpdateIpRouteConfigResponse();
  }
  
  public ConfigureCryptoKeyRequestType createConfigureCryptoKeyRequestType() {
    return new ConfigureCryptoKeyRequestType();
  }
  
  public UpdateSystemSwapConfigurationResponse createUpdateSystemSwapConfigurationResponse() {
    return new UpdateSystemSwapConfigurationResponse();
  }
  
  public NonADUserRequired createNonADUserRequired() {
    return new NonADUserRequired();
  }
  
  public SetScreenResolutionResponse createSetScreenResolutionResponse() {
    return new SetScreenResolutionResponse();
  }
  
  public RemoveFilterRequestType createRemoveFilterRequestType() {
    return new RemoveFilterRequestType();
  }
  
  public UnregisterKmsClusterRequestType createUnregisterKmsClusterRequestType() {
    return new UnregisterKmsClusterRequestType();
  }
  
  public UpgradeIoFilterRequestType createUpgradeIoFilterRequestType() {
    return new UpgradeIoFilterRequestType();
  }
  
  public ClusterCreatedEvent createClusterCreatedEvent() {
    return new ClusterCreatedEvent();
  }
  
  public ArrayOfVirtualMachineFileLayoutSnapshotLayout createArrayOfVirtualMachineFileLayoutSnapshotLayout() {
    return new ArrayOfVirtualMachineFileLayoutSnapshotLayout();
  }
  
  public VAppOvfSectionInfo createVAppOvfSectionInfo() {
    return new VAppOvfSectionInfo();
  }
  
  public HealthSystemRuntime createHealthSystemRuntime() {
    return new HealthSystemRuntime();
  }
  
  public ResourceConfigSpec createResourceConfigSpec() {
    return new ResourceConfigSpec();
  }
  
  public HostVFlashManagerVFlashConfigInfo createHostVFlashManagerVFlashConfigInfo() {
    return new HostVFlashManagerVFlashConfigInfo();
  }
  
  public ArrayOfVsanHostMembershipInfo createArrayOfVsanHostMembershipInfo() {
    return new ArrayOfVsanHostMembershipInfo();
  }
  
  public ArrayOfGuestFileInfo createArrayOfGuestFileInfo() {
    return new ArrayOfGuestFileInfo();
  }
  
  public ArrayOfScsiLun createArrayOfScsiLun() {
    return new ArrayOfScsiLun();
  }
  
  public OvfParseDescriptorParams createOvfParseDescriptorParams() {
    return new OvfParseDescriptorParams();
  }
  
  public HostIpRouteConfigSpec createHostIpRouteConfigSpec() {
    return new HostIpRouteConfigSpec();
  }
  
  public RoleEvent createRoleEvent() {
    return new RoleEvent();
  }
  
  public ArrayOfApplyHostProfileConfigurationResult createArrayOfApplyHostProfileConfigurationResult() {
    return new ArrayOfApplyHostProfileConfigurationResult();
  }
  
  public VcAgentUninstalledEvent createVcAgentUninstalledEvent() {
    return new VcAgentUninstalledEvent();
  }
  
  public ArrayOfDistributedVirtualSwitchHostMemberTransportZoneInfo createArrayOfDistributedVirtualSwitchHostMemberTransportZoneInfo() {
    return new ArrayOfDistributedVirtualSwitchHostMemberTransportZoneInfo();
  }
  
  public ClusterOrchestrationInfo createClusterOrchestrationInfo() {
    return new ClusterOrchestrationInfo();
  }
  
  public VirtualDevice createVirtualDevice() {
    return new VirtualDevice();
  }
  
  public HostInternetScsiHbaIPv6Properties createHostInternetScsiHbaIPv6Properties() {
    return new HostInternetScsiHbaIPv6Properties();
  }
  
  public HostOpaqueSwitchPhysicalNicZone createHostOpaqueSwitchPhysicalNicZone() {
    return new HostOpaqueSwitchPhysicalNicZone();
  }
  
  public ArrayOfHostService createArrayOfHostService() {
    return new ArrayOfHostService();
  }
  
  public HostDasDisablingEvent createHostDasDisablingEvent() {
    return new HostDasDisablingEvent();
  }
  
  public FaultToleranceDiskSpec createFaultToleranceDiskSpec() {
    return new FaultToleranceDiskSpec();
  }
  
  public FcoeConfigVlanRange createFcoeConfigVlanRange() {
    return new FcoeConfigVlanRange();
  }
  
  public IoFilterInfo createIoFilterInfo() {
    return new IoFilterInfo();
  }
  
  public HostDiskMappingInfo createHostDiskMappingInfo() {
    return new HostDiskMappingInfo();
  }
  
  public RecoveryEvent createRecoveryEvent() {
    return new RecoveryEvent();
  }
  
  public VirtualVmxnet createVirtualVmxnet() {
    return new VirtualVmxnet();
  }
  
  public SoftwarePackageCapability createSoftwarePackageCapability() {
    return new SoftwarePackageCapability();
  }
  
  public VsanUpgradeSystemNotEnoughFreeCapacityIssue createVsanUpgradeSystemNotEnoughFreeCapacityIssue() {
    return new VsanUpgradeSystemNotEnoughFreeCapacityIssue();
  }
  
  public ArrayOfHostVsanInternalSystemCmmdsQuery createArrayOfHostVsanInternalSystemCmmdsQuery() {
    return new ArrayOfHostVsanInternalSystemCmmdsQuery();
  }
  
  public ArrayOfHttpNfcLeaseSourceFile createArrayOfHttpNfcLeaseSourceFile() {
    return new ArrayOfHttpNfcLeaseSourceFile();
  }
  
  public VirtualPCIPassthroughDynamicBackingInfo createVirtualPCIPassthroughDynamicBackingInfo() {
    return new VirtualPCIPassthroughDynamicBackingInfo();
  }
  
  public AnswerFileOptionsCreateSpec createAnswerFileOptionsCreateSpec() {
    return new AnswerFileOptionsCreateSpec();
  }
  
  public DVPortState createDVPortState() {
    return new DVPortState();
  }
  
  public DvsMacNetworkRuleQualifier createDvsMacNetworkRuleQualifier() {
    return new DvsMacNetworkRuleQualifier();
  }
  
  public KmipServerStatus createKmipServerStatus() {
    return new KmipServerStatus();
  }
  
  public BadUsernameSessionEvent createBadUsernameSessionEvent() {
    return new BadUsernameSessionEvent();
  }
  
  public HostDatastoreBrowserSearchSpec createHostDatastoreBrowserSearchSpec() {
    return new HostDatastoreBrowserSearchSpec();
  }
  
  public PhysicalNicIpHint createPhysicalNicIpHint() {
    return new PhysicalNicIpHint();
  }
  
  public NASDatastoreCreatedEvent createNASDatastoreCreatedEvent() {
    return new NASDatastoreCreatedEvent();
  }
  
  public ArrayOfDvsHostVNicProfile createArrayOfDvsHostVNicProfile() {
    return new ArrayOfDvsHostVNicProfile();
  }
  
  public VVolHostPE createVVolHostPE() {
    return new VVolHostPE();
  }
  
  public VirtualMachineConfigSpec createVirtualMachineConfigSpec() {
    return new VirtualMachineConfigSpec();
  }
  
  public ClusterEVCManagerCheckResult createClusterEVCManagerCheckResult() {
    return new ClusterEVCManagerCheckResult();
  }
  
  public TimedOutHostOperationEvent createTimedOutHostOperationEvent() {
    return new TimedOutHostOperationEvent();
  }
  
  public DistributedVirtualSwitchManagerHostContainer createDistributedVirtualSwitchManagerHostContainer() {
    return new DistributedVirtualSwitchManagerHostContainer();
  }
  
  public VmFailedRelayoutOnVmfs2DatastoreEvent createVmFailedRelayoutOnVmfs2DatastoreEvent() {
    return new VmFailedRelayoutOnVmfs2DatastoreEvent();
  }
  
  public VmwareDistributedVirtualSwitchPvlanSpec createVmwareDistributedVirtualSwitchPvlanSpec() {
    return new VmwareDistributedVirtualSwitchPvlanSpec();
  }
  
  public UplinkPortMtuSupportEvent createUplinkPortMtuSupportEvent() {
    return new UplinkPortMtuSupportEvent();
  }
  
  public NvdimmDimmInfo createNvdimmDimmInfo() {
    return new NvdimmDimmInfo();
  }
  
  public DvsPortDeletedEvent createDvsPortDeletedEvent() {
    return new DvsPortDeletedEvent();
  }
  
  public UserLogoutSessionEvent createUserLogoutSessionEvent() {
    return new UserLogoutSessionEvent();
  }
  
  public FaultToleranceConfigInfo createFaultToleranceConfigInfo() {
    return new FaultToleranceConfigInfo();
  }
  
  public DistributedVirtualSwitchManagerHostArrayFilter createDistributedVirtualSwitchManagerHostArrayFilter() {
    return new DistributedVirtualSwitchManagerHostArrayFilter();
  }
  
  public HostGraphicsInfo createHostGraphicsInfo() {
    return new HostGraphicsInfo();
  }
  
  public ArrayOfPerfMetricSeries createArrayOfPerfMetricSeries() {
    return new ArrayOfPerfMetricSeries();
  }
  
  public RoleEventArgument createRoleEventArgument() {
    return new RoleEventArgument();
  }
  
  public HostAddFailedEvent createHostAddFailedEvent() {
    return new HostAddFailedEvent();
  }
  
  public NumericRange createNumericRange() {
    return new NumericRange();
  }
  
  public ArrayOfHostMemberHealthCheckResult createArrayOfHostMemberHealthCheckResult() {
    return new ArrayOfHostMemberHealthCheckResult();
  }
  
  public HostAddedEvent createHostAddedEvent() {
    return new HostAddedEvent();
  }
  
  public TraversalSpec createTraversalSpec() {
    return new TraversalSpec();
  }
  
  public SessionManagerHttpServiceRequestSpec createSessionManagerHttpServiceRequestSpec() {
    return new SessionManagerHttpServiceRequestSpec();
  }
  
  public VmfsDatastoreAllExtentOption createVmfsDatastoreAllExtentOption() {
    return new VmfsDatastoreAllExtentOption();
  }
  
  public VirtualDiskFlatVer2BackingOption createVirtualDiskFlatVer2BackingOption() {
    return new VirtualDiskFlatVer2BackingOption();
  }
  
  public ClusterProfileCreateSpec createClusterProfileCreateSpec() {
    return new ClusterProfileCreateSpec();
  }
  
  public ArrayOfServiceConsolePortGroupProfile createArrayOfServiceConsolePortGroupProfile() {
    return new ArrayOfServiceConsolePortGroupProfile();
  }
  
  public HostVmfsRescanResult createHostVmfsRescanResult() {
    return new HostVmfsRescanResult();
  }
  
  public ClusterDrsMigration createClusterDrsMigration() {
    return new ClusterDrsMigration();
  }
  
  public EventEx createEventEx() {
    return new EventEx();
  }
  
  public UpdateVirtualMachineFilesResult createUpdateVirtualMachineFilesResult() {
    return new UpdateVirtualMachineFilesResult();
  }
  
  public VmDasBeingResetWithScreenshotEvent createVmDasBeingResetWithScreenshotEvent() {
    return new VmDasBeingResetWithScreenshotEvent();
  }
  
  public ArrayOfHostGraphicsConfigDeviceType createArrayOfHostGraphicsConfigDeviceType() {
    return new ArrayOfHostGraphicsConfigDeviceType();
  }
  
  public TaskFilterSpec createTaskFilterSpec() {
    return new TaskFilterSpec();
  }
  
  public NetIpConfigInfoIpAddress createNetIpConfigInfoIpAddress() {
    return new NetIpConfigInfoIpAddress();
  }
  
  public DvsProfile createDvsProfile() {
    return new DvsProfile();
  }
  
  public VirtualSerialPortDeviceBackingInfo createVirtualSerialPortDeviceBackingInfo() {
    return new VirtualSerialPortDeviceBackingInfo();
  }
  
  public PermissionUpdatedEvent createPermissionUpdatedEvent() {
    return new PermissionUpdatedEvent();
  }
  
  public DvsPortRuntimeChangeEvent createDvsPortRuntimeChangeEvent() {
    return new DvsPortRuntimeChangeEvent();
  }
  
  public PhysicalNicHint createPhysicalNicHint() {
    return new PhysicalNicHint();
  }
  
  public VmfsDatastoreSingleExtentOption createVmfsDatastoreSingleExtentOption() {
    return new VmfsDatastoreSingleExtentOption();
  }
  
  public ClusterActionHistory createClusterActionHistory() {
    return new ClusterActionHistory();
  }
  
  public NamePasswordAuthentication createNamePasswordAuthentication() {
    return new NamePasswordAuthentication();
  }
  
  public ArrayOfHostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult createArrayOfHostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult() {
    return new ArrayOfHostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult();
  }
  
  public VmUpgradingEvent createVmUpgradingEvent() {
    return new VmUpgradingEvent();
  }
  
  public EnteredStandbyModeEvent createEnteredStandbyModeEvent() {
    return new EnteredStandbyModeEvent();
  }
  
  public VmShutdownOnIsolationEvent createVmShutdownOnIsolationEvent() {
    return new VmShutdownOnIsolationEvent();
  }
  
  public ArrayOfVirtualPCIPassthroughAllowedDevice createArrayOfVirtualPCIPassthroughAllowedDevice() {
    return new ArrayOfVirtualPCIPassthroughAllowedDevice();
  }
  
  public ArrayOfHostSubSpecification createArrayOfHostSubSpecification() {
    return new ArrayOfHostSubSpecification();
  }
  
  public CryptoSpecDeepRecrypt createCryptoSpecDeepRecrypt() {
    return new CryptoSpecDeepRecrypt();
  }
  
  public VirtualMachineFlagInfo createVirtualMachineFlagInfo() {
    return new VirtualMachineFlagInfo();
  }
  
  public HostSriovInfo createHostSriovInfo() {
    return new HostSriovInfo();
  }
  
  public FaultToleranceVMConfigSpec createFaultToleranceVMConfigSpec() {
    return new FaultToleranceVMConfigSpec();
  }
  
  public ClusterRuleSpec createClusterRuleSpec() {
    return new ClusterRuleSpec();
  }
  
  public NvdimmNamespaceInfo createNvdimmNamespaceInfo() {
    return new NvdimmNamespaceInfo();
  }
  
  public VsanHostDecommissionMode createVsanHostDecommissionMode() {
    return new VsanHostDecommissionMode();
  }
  
  public DatacenterRenamedEvent createDatacenterRenamedEvent() {
    return new DatacenterRenamedEvent();
  }
  
  public VirtualMachineForkConfigInfo createVirtualMachineForkConfigInfo() {
    return new VirtualMachineForkConfigInfo();
  }
  
  public CanceledHostOperationEvent createCanceledHostOperationEvent() {
    return new CanceledHostOperationEvent();
  }
  
  public MigrationErrorEvent createMigrationErrorEvent() {
    return new MigrationErrorEvent();
  }
  
  public HostCompliantEvent createHostCompliantEvent() {
    return new HostCompliantEvent();
  }
  
  public VirtualVmxnet2 createVirtualVmxnet2() {
    return new VirtualVmxnet2();
  }
  
  public VmConfigSpec createVmConfigSpec() {
    return new VmConfigSpec();
  }
  
  public DVPortgroupDestroyedEvent createDVPortgroupDestroyedEvent() {
    return new DVPortgroupDestroyedEvent();
  }
  
  public VmSuspendedEvent createVmSuspendedEvent() {
    return new VmSuspendedEvent();
  }
  
  public VirtualVmxnet3 createVirtualVmxnet3() {
    return new VirtualVmxnet3();
  }
  
  public VirtualEthernetCardLegacyNetworkBackingInfo createVirtualEthernetCardLegacyNetworkBackingInfo() {
    return new VirtualEthernetCardLegacyNetworkBackingInfo();
  }
  
  public HostCnxFailedTimeoutEvent createHostCnxFailedTimeoutEvent() {
    return new HostCnxFailedTimeoutEvent();
  }
  
  public VirtualMachineProfileDetails createVirtualMachineProfileDetails() {
    return new VirtualMachineProfileDetails();
  }
  
  public AccountUpdatedEvent createAccountUpdatedEvent() {
    return new AccountUpdatedEvent();
  }
  
  public VmUuidConflictEvent createVmUuidConflictEvent() {
    return new VmUuidConflictEvent();
  }
  
  public HostPnicNetworkResourceInfo createHostPnicNetworkResourceInfo() {
    return new HostPnicNetworkResourceInfo();
  }
  
  public DrsExitingStandbyModeEvent createDrsExitingStandbyModeEvent() {
    return new DrsExitingStandbyModeEvent();
  }
  
  public PerformanceDescription createPerformanceDescription() {
    return new PerformanceDescription();
  }
  
  public VirtualDisk createVirtualDisk() {
    return new VirtualDisk();
  }
  
  public ArrayOfVirtualMachineUsageOnDatastore createArrayOfVirtualMachineUsageOnDatastore() {
    return new ArrayOfVirtualMachineUsageOnDatastore();
  }
  
  public ArrayOfHostStorageArrayTypePolicyOption createArrayOfHostStorageArrayTypePolicyOption() {
    return new ArrayOfHostStorageArrayTypePolicyOption();
  }
  
  public ArrayOfVirtualDevice createArrayOfVirtualDevice() {
    return new ArrayOfVirtualDevice();
  }
  
  public VmRenamedEvent createVmRenamedEvent() {
    return new VmRenamedEvent();
  }
  
  public ArrayOfFileQuery createArrayOfFileQuery() {
    return new ArrayOfFileQuery();
  }
  
  public FirewallProfile createFirewallProfile() {
    return new FirewallProfile();
  }
  
  public AnswerFileCreateSpec createAnswerFileCreateSpec() {
    return new AnswerFileCreateSpec();
  }
  
  public ArrayOfHostDatastoreSystemDatastoreResult createArrayOfHostDatastoreSystemDatastoreResult() {
    return new ArrayOfHostDatastoreSystemDatastoreResult();
  }
  
  public PropertyChange createPropertyChange() {
    return new PropertyChange();
  }
  
  public HostProfileValidationFailureInfo createHostProfileValidationFailureInfo() {
    return new HostProfileValidationFailureInfo();
  }
  
  public LicenseNonComplianceEvent createLicenseNonComplianceEvent() {
    return new LicenseNonComplianceEvent();
  }
  
  public HttpNfcLeaseDatastoreLeaseInfo createHttpNfcLeaseDatastoreLeaseInfo() {
    return new HttpNfcLeaseDatastoreLeaseInfo();
  }
  
  public ArrayOfHostPnicNetworkResourceInfo createArrayOfHostPnicNetworkResourceInfo() {
    return new ArrayOfHostPnicNetworkResourceInfo();
  }
  
  public ArrayOfPlacementAffinityRule createArrayOfPlacementAffinityRule() {
    return new ArrayOfPlacementAffinityRule();
  }
  
  public NasStorageProfile createNasStorageProfile() {
    return new NasStorageProfile();
  }
  
  public HostPciPassthruConfig createHostPciPassthruConfig() {
    return new HostPciPassthruConfig();
  }
  
  public ArrayOfExtensionPrivilegeInfo createArrayOfExtensionPrivilegeInfo() {
    return new ArrayOfExtensionPrivilegeInfo();
  }
  
  public HostFirewallRule createHostFirewallRule() {
    return new HostFirewallRule();
  }
  
  public HostCacheConfigurationInfo createHostCacheConfigurationInfo() {
    return new HostCacheConfigurationInfo();
  }
  
  public VirtualMachineGuestQuiesceSpec createVirtualMachineGuestQuiesceSpec() {
    return new VirtualMachineGuestQuiesceSpec();
  }
  
  public WaitOptions createWaitOptions() {
    return new WaitOptions();
  }
  
  public PodDiskLocator createPodDiskLocator() {
    return new PodDiskLocator();
  }
  
  public ArrayOfNetIpStackInfoDefaultRouter createArrayOfNetIpStackInfoDefaultRouter() {
    return new ArrayOfNetIpStackInfoDefaultRouter();
  }
  
  public ArrayOfVsanNewPolicyBatch createArrayOfVsanNewPolicyBatch() {
    return new ArrayOfVsanNewPolicyBatch();
  }
  
  public VmConfigFileEncryptionInfo createVmConfigFileEncryptionInfo() {
    return new VmConfigFileEncryptionInfo();
  }
  
  public ArrayOfHbrManagerVmReplicationCapability createArrayOfHbrManagerVmReplicationCapability() {
    return new ArrayOfHbrManagerVmReplicationCapability();
  }
  
  public ArrayOfHostStorageOperationalInfo createArrayOfHostStorageOperationalInfo() {
    return new ArrayOfHostStorageOperationalInfo();
  }
  
  public TaskReasonAlarm createTaskReasonAlarm() {
    return new TaskReasonAlarm();
  }
  
  public HostFlagInfo createHostFlagInfo() {
    return new HostFlagInfo();
  }
  
  public HostRuntimeInfoNetStackInstanceRuntimeInfo createHostRuntimeInfoNetStackInstanceRuntimeInfo() {
    return new HostRuntimeInfoNetStackInstanceRuntimeInfo();
  }
  
  public DrsExitedStandbyModeEvent createDrsExitedStandbyModeEvent() {
    return new DrsExitedStandbyModeEvent();
  }
  
  public ClusterFailoverHostAdmissionControlInfo createClusterFailoverHostAdmissionControlInfo() {
    return new ClusterFailoverHostAdmissionControlInfo();
  }
  
  public VMwareDvsIpfixCapability createVMwareDvsIpfixCapability() {
    return new VMwareDvsIpfixCapability();
  }
  
  public HostSystemSwapConfigurationHostLocalSwapOption createHostSystemSwapConfigurationHostLocalSwapOption() {
    return new HostSystemSwapConfigurationHostLocalSwapOption();
  }
  
  public HostAssignableHardwareBinding createHostAssignableHardwareBinding() {
    return new HostAssignableHardwareBinding();
  }
  
  public ArrayOfHostSystemResourceInfo createArrayOfHostSystemResourceInfo() {
    return new ArrayOfHostSystemResourceInfo();
  }
  
  public ArrayOfNetIpRouteConfigSpecIpRouteSpec createArrayOfNetIpRouteConfigSpecIpRouteSpec() {
    return new ArrayOfNetIpRouteConfigSpecIpRouteSpec();
  }
  
  public IntExpression createIntExpression() {
    return new IntExpression();
  }
  
  public VAppPropertySpec createVAppPropertySpec() {
    return new VAppPropertySpec();
  }
  
  public VirtualSATAControllerOption createVirtualSATAControllerOption() {
    return new VirtualSATAControllerOption();
  }
  
  public VmMaxRestartCountReached createVmMaxRestartCountReached() {
    return new VmMaxRestartCountReached();
  }
  
  public DatastoreFileDeletedEvent createDatastoreFileDeletedEvent() {
    return new DatastoreFileDeletedEvent();
  }
  
  public VAppConfigInfo createVAppConfigInfo() {
    return new VAppConfigInfo();
  }
  
  public VMwareDvsLagIpfixConfig createVMwareDvsLagIpfixConfig() {
    return new VMwareDvsLagIpfixConfig();
  }
  
  public VirtualKeyboardOption createVirtualKeyboardOption() {
    return new VirtualKeyboardOption();
  }
  
  public ArrayOfVirtualMachineFileLayoutDiskLayout createArrayOfVirtualMachineFileLayoutDiskLayout() {
    return new ArrayOfVirtualMachineFileLayoutDiskLayout();
  }
  
  public HostPortGroupConfig createHostPortGroupConfig() {
    return new HostPortGroupConfig();
  }
  
  public ComplianceProfile createComplianceProfile() {
    return new ComplianceProfile();
  }
  
  public ArrayOfNvdimmNamespaceInfo createArrayOfNvdimmNamespaceInfo() {
    return new ArrayOfNvdimmNamespaceInfo();
  }
  
  public ArrayOfPropertyFilterSpec createArrayOfPropertyFilterSpec() {
    return new ArrayOfPropertyFilterSpec();
  }
  
  public OrAlarmExpression createOrAlarmExpression() {
    return new OrAlarmExpression();
  }
  
  public ArrayOfDvsOperationBulkFaultFaultOnHost createArrayOfDvsOperationBulkFaultFaultOnHost() {
    return new ArrayOfDvsOperationBulkFaultFaultOnHost();
  }
  
  public ArrayOfEnumDescription createArrayOfEnumDescription() {
    return new ArrayOfEnumDescription();
  }
  
  public VsanNewPolicyBatch createVsanNewPolicyBatch() {
    return new VsanNewPolicyBatch();
  }
  
  public HostUserWorldSwapNotEnabledEvent createHostUserWorldSwapNotEnabledEvent() {
    return new HostUserWorldSwapNotEnabledEvent();
  }
  
  public VmDeployedEvent createVmDeployedEvent() {
    return new VmDeployedEvent();
  }
  
  public VsanPolicyChangeBatch createVsanPolicyChangeBatch() {
    return new VsanPolicyChangeBatch();
  }
  
  public VmNvramFileQuery createVmNvramFileQuery() {
    return new VmNvramFileQuery();
  }
  
  public VmResourceReallocatedEvent createVmResourceReallocatedEvent() {
    return new VmResourceReallocatedEvent();
  }
  
  public BaseConfigInfoBackingInfo createBaseConfigInfoBackingInfo() {
    return new BaseConfigInfoBackingInfo();
  }
  
  public PMemDatastoreInfo createPMemDatastoreInfo() {
    return new PMemDatastoreInfo();
  }
  
  public HostCnxFailedBadVersionEvent createHostCnxFailedBadVersionEvent() {
    return new HostCnxFailedBadVersionEvent();
  }
  
  public StorageIOAllocationOption createStorageIOAllocationOption() {
    return new StorageIOAllocationOption();
  }
  
  public VirtualCdromIsoBackingOption createVirtualCdromIsoBackingOption() {
    return new VirtualCdromIsoBackingOption();
  }
  
  public VmUnsupportedStartingEvent createVmUnsupportedStartingEvent() {
    return new VmUnsupportedStartingEvent();
  }
  
  public DistributedVirtualSwitchPortConnection createDistributedVirtualSwitchPortConnection() {
    return new DistributedVirtualSwitchPortConnection();
  }
  
  public ArrayOfPolicyOption createArrayOfPolicyOption() {
    return new ArrayOfPolicyOption();
  }
  
  public VmEventArgument createVmEventArgument() {
    return new VmEventArgument();
  }
  
  public ServerLicenseExpiredEvent createServerLicenseExpiredEvent() {
    return new ServerLicenseExpiredEvent();
  }
  
  public HostSnmpDestination createHostSnmpDestination() {
    return new HostSnmpDestination();
  }
  
  public ExtendedEvent createExtendedEvent() {
    return new ExtendedEvent();
  }
  
  public VmfsDatastoreMultipleExtentOption createVmfsDatastoreMultipleExtentOption() {
    return new VmfsDatastoreMultipleExtentOption();
  }
  
  public ScsiLun createScsiLun() {
    return new ScsiLun();
  }
  
  public HostReliableMemoryInfo createHostReliableMemoryInfo() {
    return new HostReliableMemoryInfo();
  }
  
  public GeneralHostInfoEvent createGeneralHostInfoEvent() {
    return new GeneralHostInfoEvent();
  }
  
  public AlarmSetting createAlarmSetting() {
    return new AlarmSetting();
  }
  
  public HostGraphicsConfig createHostGraphicsConfig() {
    return new HostGraphicsConfig();
  }
  
  public HostParallelScsiHba createHostParallelScsiHba() {
    return new HostParallelScsiHba();
  }
  
  public NetworkProfile createNetworkProfile() {
    return new NetworkProfile();
  }
  
  public VirtualDiskPartitionedRawDiskVer2BackingInfo createVirtualDiskPartitionedRawDiskVer2BackingInfo() {
    return new VirtualDiskPartitionedRawDiskVer2BackingInfo();
  }
  
  public ComputeResourceEventArgument createComputeResourceEventArgument() {
    return new ComputeResourceEventArgument();
  }
  
  public ArrayOfComplianceLocator createArrayOfComplianceLocator() {
    return new ArrayOfComplianceLocator();
  }
  
  public VirtualSCSIPassthrough createVirtualSCSIPassthrough() {
    return new VirtualSCSIPassthrough();
  }
  
  public ClusterComputeResourceSummary createClusterComputeResourceSummary() {
    return new ClusterComputeResourceSummary();
  }
  
  public NegatableExpression createNegatableExpression() {
    return new NegatableExpression();
  }
  
  public ArrayOfHostNasVolumeConfig createArrayOfHostNasVolumeConfig() {
    return new ArrayOfHostNasVolumeConfig();
  }
  
  public InventoryDescription createInventoryDescription() {
    return new InventoryDescription();
  }
  
  public ArrayOfByte createArrayOfByte() {
    return new ArrayOfByte();
  }
  
  public CustomizationStartedEvent createCustomizationStartedEvent() {
    return new CustomizationStartedEvent();
  }
  
  public ArrayOfDvsVnicAllocatedResource createArrayOfDvsVnicAllocatedResource() {
    return new ArrayOfDvsVnicAllocatedResource();
  }
  
  public EnteredMaintenanceModeEvent createEnteredMaintenanceModeEvent() {
    return new EnteredMaintenanceModeEvent();
  }
  
  public ArrayOfClusterRuleSpec createArrayOfClusterRuleSpec() {
    return new ArrayOfClusterRuleSpec();
  }
  
  public VmFaultToleranceTurnedOffEvent createVmFaultToleranceTurnedOffEvent() {
    return new VmFaultToleranceTurnedOffEvent();
  }
  
  public HostDasOkEvent createHostDasOkEvent() {
    return new HostDasOkEvent();
  }
  
  public ArrayOfDasHeartbeatDatastoreInfo createArrayOfDasHeartbeatDatastoreInfo() {
    return new ArrayOfDasHeartbeatDatastoreInfo();
  }
  
  public HostFirewallRulesetIpList createHostFirewallRulesetIpList() {
    return new HostFirewallRulesetIpList();
  }
  
  public VirtualDeviceRemoteDeviceBackingOption createVirtualDeviceRemoteDeviceBackingOption() {
    return new VirtualDeviceRemoteDeviceBackingOption();
  }
  
  public VmConfigFileQueryFilter createVmConfigFileQueryFilter() {
    return new VmConfigFileQueryFilter();
  }
  
  public ArrayOfClusterComputeResourceDvsProfileDVPortgroupSpecToServiceMapping createArrayOfClusterComputeResourceDvsProfileDVPortgroupSpecToServiceMapping() {
    return new ArrayOfClusterComputeResourceDvsProfileDVPortgroupSpecToServiceMapping();
  }
  
  public Description createDescription() {
    return new Description();
  }
  
  public ArrayOfStorageDrsVmConfigSpec createArrayOfStorageDrsVmConfigSpec() {
    return new ArrayOfStorageDrsVmConfigSpec();
  }
  
  public DistributedVirtualSwitchHostMemberRuntimeState createDistributedVirtualSwitchHostMemberRuntimeState() {
    return new DistributedVirtualSwitchHostMemberRuntimeState();
  }
  
  public DvsNetworkRuleAction createDvsNetworkRuleAction() {
    return new DvsNetworkRuleAction();
  }
  
  public VirtualParallelPortFileBackingInfo createVirtualParallelPortFileBackingInfo() {
    return new VirtualParallelPortFileBackingInfo();
  }
  
  public VirtualCdromRemotePassthroughBackingOption createVirtualCdromRemotePassthroughBackingOption() {
    return new VirtualCdromRemotePassthroughBackingOption();
  }
  
  public DvsDropNetworkRuleAction createDvsDropNetworkRuleAction() {
    return new DvsDropNetworkRuleAction();
  }
  
  public VirtualPointingDeviceBackingOption createVirtualPointingDeviceBackingOption() {
    return new VirtualPointingDeviceBackingOption();
  }
  
  public ComputeResourceHostSPBMLicenseInfo createComputeResourceHostSPBMLicenseInfo() {
    return new ComputeResourceHostSPBMLicenseInfo();
  }
  
  public DvsVnicAllocatedResource createDvsVnicAllocatedResource() {
    return new DvsVnicAllocatedResource();
  }
  
  public ArrayOfComplianceResult createArrayOfComplianceResult() {
    return new ArrayOfComplianceResult();
  }
  
  public PlacementRankSpec createPlacementRankSpec() {
    return new PlacementRankSpec();
  }
  
  public HostDnsConfigSpec createHostDnsConfigSpec() {
    return new HostDnsConfigSpec();
  }
  
  public DVPortgroupEvent createDVPortgroupEvent() {
    return new DVPortgroupEvent();
  }
  
  public ExitedStandbyModeEvent createExitedStandbyModeEvent() {
    return new ExitedStandbyModeEvent();
  }
  
  public HostVirtualSwitch createHostVirtualSwitch() {
    return new HostVirtualSwitch();
  }
  
  public ClusterFailoverResourcesAdmissionControlInfo createClusterFailoverResourcesAdmissionControlInfo() {
    return new ClusterFailoverResourcesAdmissionControlInfo();
  }
  
  public VirtualEthernetCardDVPortBackingOption createVirtualEthernetCardDVPortBackingOption() {
    return new VirtualEthernetCardDVPortBackingOption();
  }
  
  public ArrayOfVirtualMachineSnapshotTree createArrayOfVirtualMachineSnapshotTree() {
    return new ArrayOfVirtualMachineSnapshotTree();
  }
  
  public HostLocalFileSystemVolume createHostLocalFileSystemVolume() {
    return new HostLocalFileSystemVolume();
  }
  
  public HostNumaNode createHostNumaNode() {
    return new HostNumaNode();
  }
  
  public ArrayOfHostRdmaDevice createArrayOfHostRdmaDevice() {
    return new ArrayOfHostRdmaDevice();
  }
  
  public VirtualSerialPortOption createVirtualSerialPortOption() {
    return new VirtualSerialPortOption();
  }
  
  public ClusterComputeResourceVCProfile createClusterComputeResourceVCProfile() {
    return new ClusterComputeResourceVCProfile();
  }
  
  public HostPciPassthruInfo createHostPciPassthruInfo() {
    return new HostPciPassthruInfo();
  }
  
  public VirtualPrecisionClockSystemClockBackingInfo createVirtualPrecisionClockSystemClockBackingInfo() {
    return new VirtualPrecisionClockSystemClockBackingInfo();
  }
  
  public ArrayOfVsanHostDiskResult createArrayOfVsanHostDiskResult() {
    return new ArrayOfVsanHostDiskResult();
  }
  
  public VsanUpgradeSystemHostsDisconnectedIssue createVsanUpgradeSystemHostsDisconnectedIssue() {
    return new VsanUpgradeSystemHostsDisconnectedIssue();
  }
  
  public StorageDrsVmConfigInfo createStorageDrsVmConfigInfo() {
    return new StorageDrsVmConfigInfo();
  }
  
  public ScheduledTaskReconfiguredEvent createScheduledTaskReconfiguredEvent() {
    return new ScheduledTaskReconfiguredEvent();
  }
  
  public HostVfatVolume createHostVfatVolume() {
    return new HostVfatVolume();
  }
  
  public ArrayOfGuestMappedAliases createArrayOfGuestMappedAliases() {
    return new ArrayOfGuestMappedAliases();
  }
  
  public DVSConfigSpec createDVSConfigSpec() {
    return new DVSConfigSpec();
  }
  
  public VsanHostConfigInfoClusterInfo createVsanHostConfigInfoClusterInfo() {
    return new VsanHostConfigInfoClusterInfo();
  }
  
  public ArrayOfDvsVmVnicResourcePoolConfigSpec createArrayOfDvsVmVnicResourcePoolConfigSpec() {
    return new ArrayOfDvsVmVnicResourcePoolConfigSpec();
  }
  
  public ClusterDasVmConfigSpec createClusterDasVmConfigSpec() {
    return new ClusterDasVmConfigSpec();
  }
  
  public VmFailedToRebootGuestEvent createVmFailedToRebootGuestEvent() {
    return new VmFailedToRebootGuestEvent();
  }
  
  public GeneralVmErrorEvent createGeneralVmErrorEvent() {
    return new GeneralVmErrorEvent();
  }
  
  public GlobalMessageChangedEvent createGlobalMessageChangedEvent() {
    return new GlobalMessageChangedEvent();
  }
  
  public SessionManagerServiceRequestSpec createSessionManagerServiceRequestSpec() {
    return new SessionManagerServiceRequestSpec();
  }
  
  public ScheduledTaskSpec createScheduledTaskSpec() {
    return new ScheduledTaskSpec();
  }
  
  public VmDisconnectedEvent createVmDisconnectedEvent() {
    return new VmDisconnectedEvent();
  }
  
  public HostNetStackInstance createHostNetStackInstance() {
    return new HostNetStackInstance();
  }
  
  public ArrayOfEventAlarmExpressionComparison createArrayOfEventAlarmExpressionComparison() {
    return new ArrayOfEventAlarmExpressionComparison();
  }
  
  public CryptoKeyPlain createCryptoKeyPlain() {
    return new CryptoKeyPlain();
  }
  
  public VmRelocateSpecEvent createVmRelocateSpecEvent() {
    return new VmRelocateSpecEvent();
  }
  
  public IoFilterHostIssue createIoFilterHostIssue() {
    return new IoFilterHostIssue();
  }
  
  public HostDiskMappingPartitionOption createHostDiskMappingPartitionOption() {
    return new HostDiskMappingPartitionOption();
  }
  
  public ArrayOfGuestNicInfo createArrayOfGuestNicInfo() {
    return new ArrayOfGuestNicInfo();
  }
  
  public ArrayOfExtensionClientInfo createArrayOfExtensionClientInfo() {
    return new ArrayOfExtensionClientInfo();
  }
  
  public ArrayOfNetStackInstanceProfile createArrayOfNetStackInstanceProfile() {
    return new ArrayOfNetStackInstanceProfile();
  }
  
  public ClusterGroupInfo createClusterGroupInfo() {
    return new ClusterGroupInfo();
  }
  
  public HostProfileConfigInfo createHostProfileConfigInfo() {
    return new HostProfileConfigInfo();
  }
  
  public ArrayOfHostNatService createArrayOfHostNatService() {
    return new ArrayOfHostNatService();
  }
  
  public ArrayOfPhysicalNicLinkInfo createArrayOfPhysicalNicLinkInfo() {
    return new ArrayOfPhysicalNicLinkInfo();
  }
  
  public ArrayOfFaultsByVM createArrayOfFaultsByVM() {
    return new ArrayOfFaultsByVM();
  }
  
  public StringOption createStringOption() {
    return new StringOption();
  }
  
  public ArrayOfLicenseManagerLicenseInfo createArrayOfLicenseManagerLicenseInfo() {
    return new ArrayOfLicenseManagerLicenseInfo();
  }
  
  public HostFirewallInfo createHostFirewallInfo() {
    return new HostFirewallInfo();
  }
  
  public ArrayOfVirtualMachineVFlashModuleInfo createArrayOfVirtualMachineVFlashModuleInfo() {
    return new ArrayOfVirtualMachineVFlashModuleInfo();
  }
  
  public ClusterDrsFaultsFaultsByVm createClusterDrsFaultsFaultsByVm() {
    return new ClusterDrsFaultsFaultsByVm();
  }
  
  public OptionType createOptionType() {
    return new OptionType();
  }
  
  public ProfileProfileStructureProperty createProfileProfileStructureProperty() {
    return new ProfileProfileStructureProperty();
  }
  
  public ArrayOfAlarmExpression createArrayOfAlarmExpression() {
    return new ArrayOfAlarmExpression();
  }
  
  public ClusterCryptoConfigInfo createClusterCryptoConfigInfo() {
    return new ClusterCryptoConfigInfo();
  }
  
  public ArrayOfPhysicalNic createArrayOfPhysicalNic() {
    return new ArrayOfPhysicalNic();
  }
  
  public ArrayOfServiceManagerServiceInfo createArrayOfServiceManagerServiceInfo() {
    return new ArrayOfServiceManagerServiceInfo();
  }
  
  public VmConfigMissingEvent createVmConfigMissingEvent() {
    return new VmConfigMissingEvent();
  }
  
  public VirtualSoundBlaster16 createVirtualSoundBlaster16() {
    return new VirtualSoundBlaster16();
  }
  
  public DiagnosticManagerBundleInfo createDiagnosticManagerBundleInfo() {
    return new DiagnosticManagerBundleInfo();
  }
  
  public VirtualLsiLogicController createVirtualLsiLogicController() {
    return new VirtualLsiLogicController();
  }
  
  public DvsUpgradeAvailableEvent createDvsUpgradeAvailableEvent() {
    return new DvsUpgradeAvailableEvent();
  }
  
  public ArrayOfClusterEVCManagerCheckResult createArrayOfClusterEVCManagerCheckResult() {
    return new ArrayOfClusterEVCManagerCheckResult();
  }
  
  public DvsUpgradedEvent createDvsUpgradedEvent() {
    return new DvsUpgradedEvent();
  }
  
  public HostEnableAdminFailedEvent createHostEnableAdminFailedEvent() {
    return new HostEnableAdminFailedEvent();
  }
  
  public VirtualMachinePciSharedGpuPassthroughInfo createVirtualMachinePciSharedGpuPassthroughInfo() {
    return new VirtualMachinePciSharedGpuPassthroughInfo();
  }
  
  public ArrayOfVirtualMachineProfileDetailsDiskProfileDetails createArrayOfVirtualMachineProfileDetailsDiskProfileDetails() {
    return new ArrayOfVirtualMachineProfileDetailsDiskProfileDetails();
  }
  
  public VmFailoverFailed createVmFailoverFailed() {
    return new VmFailoverFailed();
  }
  
  public PosixUserSearchResult createPosixUserSearchResult() {
    return new PosixUserSearchResult();
  }
  
  public FloatOption createFloatOption() {
    return new FloatOption();
  }
  
  public ArrayOfHostLowLevelProvisioningManagerSnapshotLayoutSpec createArrayOfHostLowLevelProvisioningManagerSnapshotLayoutSpec() {
    return new ArrayOfHostLowLevelProvisioningManagerSnapshotLayoutSpec();
  }
  
  public HostDasEnabledEvent createHostDasEnabledEvent() {
    return new HostDasEnabledEvent();
  }
  
  public PhysicalNicSpec createPhysicalNicSpec() {
    return new PhysicalNicSpec();
  }
  
  public VsanHostDiskMapping createVsanHostDiskMapping() {
    return new VsanHostDiskMapping();
  }
  
  public VirtualSerialPortThinPrintBackingOption createVirtualSerialPortThinPrintBackingOption() {
    return new VirtualSerialPortThinPrintBackingOption();
  }
  
  public CustomizationLinuxOptions createCustomizationLinuxOptions() {
    return new CustomizationLinuxOptions();
  }
  
  public VirtualPS2Controller createVirtualPS2Controller() {
    return new VirtualPS2Controller();
  }
  
  public VirtualDevicePipeBackingInfo createVirtualDevicePipeBackingInfo() {
    return new VirtualDevicePipeBackingInfo();
  }
  
  public VirtualMachineRuntimeInfoDasProtectionState createVirtualMachineRuntimeInfoDasProtectionState() {
    return new VirtualMachineRuntimeInfoDasProtectionState();
  }
  
  public HostMountInfo createHostMountInfo() {
    return new HostMountInfo();
  }
  
  public HostSystemComplianceCheckState createHostSystemComplianceCheckState() {
    return new HostSystemComplianceCheckState();
  }
  
  public StorageDrsPodConfigSpec createStorageDrsPodConfigSpec() {
    return new StorageDrsPodConfigSpec();
  }
  
  public VirtualAppLinkInfo createVirtualAppLinkInfo() {
    return new VirtualAppLinkInfo();
  }
  
  public VirtualCdrom createVirtualCdrom() {
    return new VirtualCdrom();
  }
  
  public CustomizationWinOptions createCustomizationWinOptions() {
    return new CustomizationWinOptions();
  }
  
  public ArrayOfVirtualDeviceOption createArrayOfVirtualDeviceOption() {
    return new ArrayOfVirtualDeviceOption();
  }
  
  public PlacementAffinityRule createPlacementAffinityRule() {
    return new PlacementAffinityRule();
  }
  
  public BaseConfigInfo createBaseConfigInfo() {
    return new BaseConfigInfo();
  }
  
  public VmRelocateFailedEvent createVmRelocateFailedEvent() {
    return new VmRelocateFailedEvent();
  }
  
  public VirtualMachineConfigInfoDatastoreUrlPair createVirtualMachineConfigInfoDatastoreUrlPair() {
    return new VirtualMachineConfigInfoDatastoreUrlPair();
  }
  
  public ClusterComputeResourceDvsProfileDVPortgroupSpecToServiceMapping createClusterComputeResourceDvsProfileDVPortgroupSpecToServiceMapping() {
    return new ClusterComputeResourceDvsProfileDVPortgroupSpecToServiceMapping();
  }
  
  public VMwareDVSHealthCheckConfig createVMwareDVSHealthCheckConfig() {
    return new VMwareDVSHealthCheckConfig();
  }
  
  public CustomizationCustomIpV6Generator createCustomizationCustomIpV6Generator() {
    return new CustomizationCustomIpV6Generator();
  }
  
  public ArrayOfDvsOutOfSyncHostArgument createArrayOfDvsOutOfSyncHostArgument() {
    return new ArrayOfDvsOutOfSyncHostArgument();
  }
  
  public VMwareDVSFeatureCapability createVMwareDVSFeatureCapability() {
    return new VMwareDVSFeatureCapability();
  }
  
  public ScheduledTaskFailedEvent createScheduledTaskFailedEvent() {
    return new ScheduledTaskFailedEvent();
  }
  
  public DatastoreCapacityIncreasedEvent createDatastoreCapacityIncreasedEvent() {
    return new DatastoreCapacityIncreasedEvent();
  }
  
  public HostDateTimeInfo createHostDateTimeInfo() {
    return new HostDateTimeInfo();
  }
  
  public CustomizationUserData createCustomizationUserData() {
    return new CustomizationUserData();
  }
  
  public DistributedVirtualPortgroupNsxPortgroupOperationResult createDistributedVirtualPortgroupNsxPortgroupOperationResult() {
    return new DistributedVirtualPortgroupNsxPortgroupOperationResult();
  }
  
  public ArrayOfVAppOvfSectionInfo createArrayOfVAppOvfSectionInfo() {
    return new ArrayOfVAppOvfSectionInfo();
  }
  
  public VirtualDeviceURIBackingOption createVirtualDeviceURIBackingOption() {
    return new VirtualDeviceURIBackingOption();
  }
  
  public SendEmailAction createSendEmailAction() {
    return new SendEmailAction();
  }
  
  public ArrayOfHostPciPassthruInfo createArrayOfHostPciPassthruInfo() {
    return new ArrayOfHostPciPassthruInfo();
  }
  
  public HostRdmaHba createHostRdmaHba() {
    return new HostRdmaHba();
  }
  
  public HostNoAvailableNetworksEvent createHostNoAvailableNetworksEvent() {
    return new HostNoAvailableNetworksEvent();
  }
  
  public ArrayOfExtSolutionManagerInfoTabInfo createArrayOfExtSolutionManagerInfoTabInfo() {
    return new ArrayOfExtSolutionManagerInfoTabInfo();
  }
  
  public VirtualDiskRawDiskVer2BackingOption createVirtualDiskRawDiskVer2BackingOption() {
    return new VirtualDiskRawDiskVer2BackingOption();
  }
  
  public VmReloadFromPathFailedEvent createVmReloadFromPathFailedEvent() {
    return new VmReloadFromPathFailedEvent();
  }
  
  public HostMissingNetworksEvent createHostMissingNetworksEvent() {
    return new HostMissingNetworksEvent();
  }
  
  public MonthlyByDayTaskScheduler createMonthlyByDayTaskScheduler() {
    return new MonthlyByDayTaskScheduler();
  }
  
  public CustomizationOptions createCustomizationOptions() {
    return new CustomizationOptions();
  }
  
  public CustomizationNetworkSetupFailed createCustomizationNetworkSetupFailed() {
    return new CustomizationNetworkSetupFailed();
  }
  
  public VirtualDeviceFileBackingOption createVirtualDeviceFileBackingOption() {
    return new VirtualDeviceFileBackingOption();
  }
  
  public HostCnxFailedNoLicenseEvent createHostCnxFailedNoLicenseEvent() {
    return new HostCnxFailedNoLicenseEvent();
  }
  
  public LicenseReservationInfo createLicenseReservationInfo() {
    return new LicenseReservationInfo();
  }
  
  public HostRdmaDevice createHostRdmaDevice() {
    return new HostRdmaDevice();
  }
  
  public VirtualMachineFileInfo createVirtualMachineFileInfo() {
    return new VirtualMachineFileInfo();
  }
  
  public ClusterOvercommittedEvent createClusterOvercommittedEvent() {
    return new ClusterOvercommittedEvent();
  }
  
  public ReplicationConfigSpec createReplicationConfigSpec() {
    return new ReplicationConfigSpec();
  }
  
  public ArrayOfProfileParameterMetadata createArrayOfProfileParameterMetadata() {
    return new ArrayOfProfileParameterMetadata();
  }
  
  public DvsIpPortRange createDvsIpPortRange() {
    return new DvsIpPortRange();
  }
  
  public HostTpmEventLogEntry createHostTpmEventLogEntry() {
    return new HostTpmEventLogEntry();
  }
  
  public ClusterNetworkConfigSpec createClusterNetworkConfigSpec() {
    return new ClusterNetworkConfigSpec();
  }
  
  public ComputeResourceConfigInfo createComputeResourceConfigInfo() {
    return new ComputeResourceConfigInfo();
  }
  
  public HostVMotionNetConfig createHostVMotionNetConfig() {
    return new HostVMotionNetConfig();
  }
  
  public AutoStartDefaults createAutoStartDefaults() {
    return new AutoStartDefaults();
  }
  
  public ArrayOfHostIoFilterInfo createArrayOfHostIoFilterInfo() {
    return new ArrayOfHostIoFilterInfo();
  }
  
  public FailoverNodeInfo createFailoverNodeInfo() {
    return new FailoverNodeInfo();
  }
  
  public ArrayOfExtensionFaultTypeInfo createArrayOfExtensionFaultTypeInfo() {
    return new ArrayOfExtensionFaultTypeInfo();
  }
  
  public VmHealthMonitoringStateChangedEvent createVmHealthMonitoringStateChangedEvent() {
    return new VmHealthMonitoringStateChangedEvent();
  }
  
  public DVSVendorSpecificConfig createDVSVendorSpecificConfig() {
    return new DVSVendorSpecificConfig();
  }
  
  public VirtualPointingDevice createVirtualPointingDevice() {
    return new VirtualPointingDevice();
  }
  
  public VirtualDeviceDeviceBackingOption createVirtualDeviceDeviceBackingOption() {
    return new VirtualDeviceDeviceBackingOption();
  }
  
  public ArrayOfExtension createArrayOfExtension() {
    return new ArrayOfExtension();
  }
  
  public ArrayOfVirtualDeviceConfigSpec createArrayOfVirtualDeviceConfigSpec() {
    return new ArrayOfVirtualDeviceConfigSpec();
  }
  
  public StorageProfile createStorageProfile() {
    return new StorageProfile();
  }
  
  public DVPortgroupConfigSpec createDVPortgroupConfigSpec() {
    return new DVPortgroupConfigSpec();
  }
  
  public ArrayOfAuthorizationPrivilege createArrayOfAuthorizationPrivilege() {
    return new ArrayOfAuthorizationPrivilege();
  }
  
  public LockerMisconfiguredEvent createLockerMisconfiguredEvent() {
    return new LockerMisconfiguredEvent();
  }
  
  public HostStorageSystemScsiLunResult createHostStorageSystemScsiLunResult() {
    return new HostStorageSystemScsiLunResult();
  }
  
  public FcoeConfig createFcoeConfig() {
    return new FcoeConfig();
  }
  
  public AlarmInfo createAlarmInfo() {
    return new AlarmInfo();
  }
  
  public DasHeartbeatDatastoreInfo createDasHeartbeatDatastoreInfo() {
    return new DasHeartbeatDatastoreInfo();
  }
  
  public ClusterVmOrchestrationInfo createClusterVmOrchestrationInfo() {
    return new ClusterVmOrchestrationInfo();
  }
  
  public ClusterDasVmConfigInfo createClusterDasVmConfigInfo() {
    return new ClusterDasVmConfigInfo();
  }
  
  public HostFileSystemVolumeInfo createHostFileSystemVolumeInfo() {
    return new HostFileSystemVolumeInfo();
  }
  
  public HostNvmeOverRdmaParameters createHostNvmeOverRdmaParameters() {
    return new HostNvmeOverRdmaParameters();
  }
  
  public HostDiskConfigurationResult createHostDiskConfigurationResult() {
    return new HostDiskConfigurationResult();
  }
  
  public ClusterComputeResourceHostConfigurationInput createClusterComputeResourceHostConfigurationInput() {
    return new ClusterComputeResourceHostConfigurationInput();
  }
  
  public CustomFieldDefEvent createCustomFieldDefEvent() {
    return new CustomFieldDefEvent();
  }
  
  public DatastoreInfo createDatastoreInfo() {
    return new DatastoreInfo();
  }
  
  public DvsApplyOperationFaultFaultOnObject createDvsApplyOperationFaultFaultOnObject() {
    return new DvsApplyOperationFaultFaultOnObject();
  }
  
  public VmRequirementsExceedCurrentEVCModeEvent createVmRequirementsExceedCurrentEVCModeEvent() {
    return new VmRequirementsExceedCurrentEVCModeEvent();
  }
  
  public ArrayOfVirtualMachineBootOptionsBootableDevice createArrayOfVirtualMachineBootOptionsBootableDevice() {
    return new ArrayOfVirtualMachineBootOptionsBootableDevice();
  }
  
  public VirtualNVDIMMController createVirtualNVDIMMController() {
    return new VirtualNVDIMMController();
  }
  
  public PermissionEvent createPermissionEvent() {
    return new PermissionEvent();
  }
  
  public HostMemberRuntimeInfo createHostMemberRuntimeInfo() {
    return new HostMemberRuntimeInfo();
  }
  
  public ArrayOfNvdimmDimmInfo createArrayOfNvdimmDimmInfo() {
    return new ArrayOfNvdimmDimmInfo();
  }
  
  public ArrayOfDvsProfile createArrayOfDvsProfile() {
    return new ArrayOfDvsProfile();
  }
  
  public ArrayOfStorageDrsPlacementRankVmSpec createArrayOfStorageDrsPlacementRankVmSpec() {
    return new ArrayOfStorageDrsPlacementRankVmSpec();
  }
  
  public VirtualSriovEthernetCard createVirtualSriovEthernetCard() {
    return new VirtualSriovEthernetCard();
  }
  
  public MtuMatchEvent createMtuMatchEvent() {
    return new MtuMatchEvent();
  }
  
  public ArrayOfHostTpmDigestInfo createArrayOfHostTpmDigestInfo() {
    return new ArrayOfHostTpmDigestInfo();
  }
  
  public ClusterAction createClusterAction() {
    return new ClusterAction();
  }
  
  public UserAssignedToGroup createUserAssignedToGroup() {
    return new UserAssignedToGroup();
  }
  
  public GuestDiskInfo createGuestDiskInfo() {
    return new GuestDiskInfo();
  }
  
  public HostNicTeamingPolicy createHostNicTeamingPolicy() {
    return new HostNicTeamingPolicy();
  }
  
  public ArrayOfFaultToleranceDiskSpec createArrayOfFaultToleranceDiskSpec() {
    return new ArrayOfFaultToleranceDiskSpec();
  }
  
  public DatacenterConfigInfo createDatacenterConfigInfo() {
    return new DatacenterConfigInfo();
  }
  
  public HostDhcpServiceSpec createHostDhcpServiceSpec() {
    return new HostDhcpServiceSpec();
  }
  
  public VmClonedEvent createVmClonedEvent() {
    return new VmClonedEvent();
  }
  
  public VmEvent createVmEvent() {
    return new VmEvent();
  }
  
  public HostEsxAgentHostManagerConfigInfo createHostEsxAgentHostManagerConfigInfo() {
    return new HostEsxAgentHostManagerConfigInfo();
  }
  
  public CustomizationIPSettingsIpV6AddressSpec createCustomizationIPSettingsIpV6AddressSpec() {
    return new CustomizationIPSettingsIpV6AddressSpec();
  }
  
  public VirtualUSBRemoteHostBackingInfo createVirtualUSBRemoteHostBackingInfo() {
    return new VirtualUSBRemoteHostBackingInfo();
  }
  
  public NsxHostVNicProfile createNsxHostVNicProfile() {
    return new NsxHostVNicProfile();
  }
  
  public VmRemoteConsoleConnectedEvent createVmRemoteConsoleConnectedEvent() {
    return new VmRemoteConsoleConnectedEvent();
  }
  
  public VirtualParallelPortDeviceBackingOption createVirtualParallelPortDeviceBackingOption() {
    return new VirtualParallelPortDeviceBackingOption();
  }
  
  public VmDasBeingResetEvent createVmDasBeingResetEvent() {
    return new VmDasBeingResetEvent();
  }
  
  public NvdimmNamespaceDetails createNvdimmNamespaceDetails() {
    return new NvdimmNamespaceDetails();
  }
  
  public PassiveNodeNetworkSpec createPassiveNodeNetworkSpec() {
    return new PassiveNodeNetworkSpec();
  }
  
  public ArrayOfHttpNfcLeaseDeviceUrl createArrayOfHttpNfcLeaseDeviceUrl() {
    return new ArrayOfHttpNfcLeaseDeviceUrl();
  }
  
  public NotEnoughResourcesToStartVmEvent createNotEnoughResourcesToStartVmEvent() {
    return new NotEnoughResourcesToStartVmEvent();
  }
  
  public TaskTimeoutEvent createTaskTimeoutEvent() {
    return new TaskTimeoutEvent();
  }
  
  public VirtualPCIPassthrough createVirtualPCIPassthrough() {
    return new VirtualPCIPassthrough();
  }
  
  public ArrayOfClusterComputeResourceHostConfigurationInput createArrayOfClusterComputeResourceHostConfigurationInput() {
    return new ArrayOfClusterComputeResourceHostConfigurationInput();
  }
  
  public VirtualCdromPassthroughBackingInfo createVirtualCdromPassthroughBackingInfo() {
    return new VirtualCdromPassthroughBackingInfo();
  }
  
  public InfoUpgradeEvent createInfoUpgradeEvent() {
    return new InfoUpgradeEvent();
  }
  
  public ArrayOfNetIpConfigInfoIpAddress createArrayOfNetIpConfigInfoIpAddress() {
    return new ArrayOfNetIpConfigInfoIpAddress();
  }
  
  public ArrayOfVsanHostConfigInfo createArrayOfVsanHostConfigInfo() {
    return new ArrayOfVsanHostConfigInfo();
  }
  
  public ArrayOfClusterGroupInfo createArrayOfClusterGroupInfo() {
    return new ArrayOfClusterGroupInfo();
  }
  
  public NvdimmNamespaceDeleteSpec createNvdimmNamespaceDeleteSpec() {
    return new NvdimmNamespaceDeleteSpec();
  }
  
  public ArrayOfGuestOsDescriptor createArrayOfGuestOsDescriptor() {
    return new ArrayOfGuestOsDescriptor();
  }
  
  public ProfileCreateSpec createProfileCreateSpec() {
    return new ProfileCreateSpec();
  }
  
  public OvfConsumerOstNode createOvfConsumerOstNode() {
    return new OvfConsumerOstNode();
  }
  
  public VAppPropertyInfo createVAppPropertyInfo() {
    return new VAppPropertyInfo();
  }
  
  public StorageIORMInfo createStorageIORMInfo() {
    return new StorageIORMInfo();
  }
  
  public ClusterDasAdmissionControlPolicy createClusterDasAdmissionControlPolicy() {
    return new ClusterDasAdmissionControlPolicy();
  }
  
  public DrsDisabledEvent createDrsDisabledEvent() {
    return new DrsDisabledEvent();
  }
  
  public VirtualMachineFileLayoutExDiskUnit createVirtualMachineFileLayoutExDiskUnit() {
    return new VirtualMachineFileLayoutExDiskUnit();
  }
  
  public ClusterDrsRecommendation createClusterDrsRecommendation() {
    return new ClusterDrsRecommendation();
  }
  
  public ResourcePoolEvent createResourcePoolEvent() {
    return new ResourcePoolEvent();
  }
  
  public ClusterDependencyRuleInfo createClusterDependencyRuleInfo() {
    return new ClusterDependencyRuleInfo();
  }
  
  public ArrayOfClusterDrsFaultsFaultsByVm createArrayOfClusterDrsFaultsFaultsByVm() {
    return new ArrayOfClusterDrsFaultsFaultsByVm();
  }
  
  public AuthorizationEvent createAuthorizationEvent() {
    return new AuthorizationEvent();
  }
  
  public LocalizableMessage createLocalizableMessage() {
    return new LocalizableMessage();
  }
  
  public ClusterAffinityRuleSpec createClusterAffinityRuleSpec() {
    return new ClusterAffinityRuleSpec();
  }
  
  public VchaNodeRuntimeInfo createVchaNodeRuntimeInfo() {
    return new VchaNodeRuntimeInfo();
  }
  
  public GeneralUserEvent createGeneralUserEvent() {
    return new GeneralUserEvent();
  }
  
  public DvsPortLinkDownEvent createDvsPortLinkDownEvent() {
    return new DvsPortLinkDownEvent();
  }
  
  public MonthlyByWeekdayTaskScheduler createMonthlyByWeekdayTaskScheduler() {
    return new MonthlyByWeekdayTaskScheduler();
  }
  
  public ArrayOfInt createArrayOfInt() {
    return new ArrayOfInt();
  }
  
  public ArrayOfScheduledTaskDetail createArrayOfScheduledTaskDetail() {
    return new ArrayOfScheduledTaskDetail();
  }
  
  public MigrationEvent createMigrationEvent() {
    return new MigrationEvent();
  }
  
  public ArrayOfServiceLocator createArrayOfServiceLocator() {
    return new ArrayOfServiceLocator();
  }
  
  public HostMemberHealthCheckResult createHostMemberHealthCheckResult() {
    return new HostMemberHealthCheckResult();
  }
  
  public CustomizationSpec createCustomizationSpec() {
    return new CustomizationSpec();
  }
  
  public ArrayOfHostVirtualNicManagerNicTypeSelection createArrayOfHostVirtualNicManagerNicTypeSelection() {
    return new ArrayOfHostVirtualNicManagerNicTypeSelection();
  }
  
  public HostNtpConfig createHostNtpConfig() {
    return new HostNtpConfig();
  }
  
  public EventDescription createEventDescription() {
    return new EventDescription();
  }
  
  public PropertyFilterSpec createPropertyFilterSpec() {
    return new PropertyFilterSpec();
  }
  
  public ArrayOfCustomFieldDef createArrayOfCustomFieldDef() {
    return new ArrayOfCustomFieldDef();
  }
  
  public VmVnicPoolReservationViolationClearEvent createVmVnicPoolReservationViolationClearEvent() {
    return new VmVnicPoolReservationViolationClearEvent();
  }
  
  public ArrayOfClusterNotAttemptedVmInfo createArrayOfClusterNotAttemptedVmInfo() {
    return new ArrayOfClusterNotAttemptedVmInfo();
  }
  
  public CustomizationSucceeded createCustomizationSucceeded() {
    return new CustomizationSucceeded();
  }
  
  public DatastoreRemovedOnHostEvent createDatastoreRemovedOnHostEvent() {
    return new DatastoreRemovedOnHostEvent();
  }
  
  public ArrayOfClusterComputeResourceDvsProfile createArrayOfClusterComputeResourceDvsProfile() {
    return new ArrayOfClusterComputeResourceDvsProfile();
  }
  
  public ArrayOfHostDiskPartitionAttributes createArrayOfHostDiskPartitionAttributes() {
    return new ArrayOfHostDiskPartitionAttributes();
  }
  
  public ArrayOfStructuredCustomizations createArrayOfStructuredCustomizations() {
    return new ArrayOfStructuredCustomizations();
  }
  
  public VirtualSoundCard createVirtualSoundCard() {
    return new VirtualSoundCard();
  }
  
  public ChoiceOption createChoiceOption() {
    return new ChoiceOption();
  }
  
  public VirtualMachineIdeDiskDevicePartitionInfo createVirtualMachineIdeDiskDevicePartitionInfo() {
    return new VirtualMachineIdeDiskDevicePartitionInfo();
  }
  
  public VirtualMachineRelocateSpec createVirtualMachineRelocateSpec() {
    return new VirtualMachineRelocateSpec();
  }
  
  public ArrayOfHostNatServicePortForwardSpec createArrayOfHostNatServicePortForwardSpec() {
    return new ArrayOfHostNatServicePortForwardSpec();
  }
  
  public ArrayOfEVCMode createArrayOfEVCMode() {
    return new ArrayOfEVCMode();
  }
  
  public HostInternetScsiHbaDigestProperties createHostInternetScsiHbaDigestProperties() {
    return new HostInternetScsiHbaDigestProperties();
  }
  
  public ArrayOfHostProfileManagerCompositionValidationResultResultElement createArrayOfHostProfileManagerCompositionValidationResultResultElement() {
    return new ArrayOfHostProfileManagerCompositionValidationResultResultElement();
  }
  
  public ArrayOfHostConnectSpec createArrayOfHostConnectSpec() {
    return new ArrayOfHostConnectSpec();
  }
  
  public DatastoreRenamedEvent createDatastoreRenamedEvent() {
    return new DatastoreRenamedEvent();
  }
  
  public VirtualDevicePipeBackingOption createVirtualDevicePipeBackingOption() {
    return new VirtualDevicePipeBackingOption();
  }
  
  public ArrayOfObjectSpec createArrayOfObjectSpec() {
    return new ArrayOfObjectSpec();
  }
  
  public HostConfigSummary createHostConfigSummary() {
    return new HostConfigSummary();
  }
  
  public CreateTaskAction createCreateTaskAction() {
    return new CreateTaskAction();
  }
  
  public ArrayOfClusterDasVmConfigInfo createArrayOfClusterDasVmConfigInfo() {
    return new ArrayOfClusterDasVmConfigInfo();
  }
  
  public HostInternetScsiTargetTransport createHostInternetScsiTargetTransport() {
    return new HostInternetScsiTargetTransport();
  }
  
  public VirtualMachineCdromInfo createVirtualMachineCdromInfo() {
    return new VirtualMachineCdromInfo();
  }
  
  public DVSTrafficShapingPolicy createDVSTrafficShapingPolicy() {
    return new DVSTrafficShapingPolicy();
  }
  
  public HostMultipathStateInfoPath createHostMultipathStateInfoPath() {
    return new HostMultipathStateInfoPath();
  }
  
  public HostInventoryUnreadableEvent createHostInventoryUnreadableEvent() {
    return new HostInventoryUnreadableEvent();
  }
  
  public VMwareDVSVlanHealthCheckResult createVMwareDVSVlanHealthCheckResult() {
    return new VMwareDVSVlanHealthCheckResult();
  }
  
  public VmFaultToleranceStateChangedEvent createVmFaultToleranceStateChangedEvent() {
    return new VmFaultToleranceStateChangedEvent();
  }
  
  public DistributedVirtualSwitchHostMemberConfigSpec createDistributedVirtualSwitchHostMemberConfigSpec() {
    return new DistributedVirtualSwitchHostMemberConfigSpec();
  }
  
  public CustomizationGuiRunOnce createCustomizationGuiRunOnce() {
    return new CustomizationGuiRunOnce();
  }
  
  public HttpNfcLeaseInfo createHttpNfcLeaseInfo() {
    return new HttpNfcLeaseInfo();
  }
  
  public VStorageObjectConfigInfo createVStorageObjectConfigInfo() {
    return new VStorageObjectConfigInfo();
  }
  
  public VslmCreateSpecRawDiskMappingBackingSpec createVslmCreateSpecRawDiskMappingBackingSpec() {
    return new VslmCreateSpecRawDiskMappingBackingSpec();
  }
  
  public HostPortGroupProfile createHostPortGroupProfile() {
    return new HostPortGroupProfile();
  }
  
  public DVPortConfigSpec createDVPortConfigSpec() {
    return new DVPortConfigSpec();
  }
  
  public ArrayOfHostPlacedVirtualNicIdentifier createArrayOfHostPlacedVirtualNicIdentifier() {
    return new ArrayOfHostPlacedVirtualNicIdentifier();
  }
  
  public ArrayOfHostNvmeTopologyInterface createArrayOfHostNvmeTopologyInterface() {
    return new ArrayOfHostNvmeTopologyInterface();
  }
  
  public VmAcquiredTicketEvent createVmAcquiredTicketEvent() {
    return new VmAcquiredTicketEvent();
  }
  
  public VirtualVMIROMOption createVirtualVMIROMOption() {
    return new VirtualVMIROMOption();
  }
  
  public ArrayOfVirtualMachineIdeDiskDevicePartitionInfo createArrayOfVirtualMachineIdeDiskDevicePartitionInfo() {
    return new ArrayOfVirtualMachineIdeDiskDevicePartitionInfo();
  }
  
  public VirtualEthernetCardLegacyNetworkBackingOption createVirtualEthernetCardLegacyNetworkBackingOption() {
    return new VirtualEthernetCardLegacyNetworkBackingOption();
  }
  
  public LicenseManagerEvaluationInfo createLicenseManagerEvaluationInfo() {
    return new LicenseManagerEvaluationInfo();
  }
  
  public ArrayOfOvfOptionInfo createArrayOfOvfOptionInfo() {
    return new ArrayOfOvfOptionInfo();
  }
  
  public FolderFileQuery createFolderFileQuery() {
    return new FolderFileQuery();
  }
  
  public HostVmciAccessManagerAccessSpec createHostVmciAccessManagerAccessSpec() {
    return new HostVmciAccessManagerAccessSpec();
  }
  
  public AutoStartPowerInfo createAutoStartPowerInfo() {
    return new AutoStartPowerInfo();
  }
  
  public VmfsDatastoreCreateSpec createVmfsDatastoreCreateSpec() {
    return new VmfsDatastoreCreateSpec();
  }
  
  public ArrayOfVirtualMachineConfigSpec createArrayOfVirtualMachineConfigSpec() {
    return new ArrayOfVirtualMachineConfigSpec();
  }
  
  public CheckResult createCheckResult() {
    return new CheckResult();
  }
  
  public HostInternetScsiHbaIscsiIpv6Address createHostInternetScsiHbaIscsiIpv6Address() {
    return new HostInternetScsiHbaIscsiIpv6Address();
  }
  
  public FolderBatchAddStandaloneHostsResult createFolderBatchAddStandaloneHostsResult() {
    return new FolderBatchAddStandaloneHostsResult();
  }
  
  public HostFileAccess createHostFileAccess() {
    return new HostFileAccess();
  }
  
  public HostDatastoreExistsConnectInfo createHostDatastoreExistsConnectInfo() {
    return new HostDatastoreExistsConnectInfo();
  }
  
  public VMwareDVSTeamingHealthCheckConfig createVMwareDVSTeamingHealthCheckConfig() {
    return new VMwareDVSTeamingHealthCheckConfig();
  }
  
  public ArrayOfClusterActionHistory createArrayOfClusterActionHistory() {
    return new ArrayOfClusterActionHistory();
  }
  
  public DeviceGroupId createDeviceGroupId() {
    return new DeviceGroupId();
  }
  
  public ArrayOfDistributedVirtualSwitchProductSpec createArrayOfDistributedVirtualSwitchProductSpec() {
    return new ArrayOfDistributedVirtualSwitchProductSpec();
  }
  
  public WinNetBIOSConfigInfo createWinNetBIOSConfigInfo() {
    return new WinNetBIOSConfigInfo();
  }
  
  public HostRemovedEvent createHostRemovedEvent() {
    return new HostRemovedEvent();
  }
  
  public NetIpRouteConfigInfoIpRoute createNetIpRouteConfigInfoIpRoute() {
    return new NetIpRouteConfigInfoIpRoute();
  }
  
  public ArrayOfHostCpuPackage createArrayOfHostCpuPackage() {
    return new ArrayOfHostCpuPackage();
  }
  
  public IntPolicy createIntPolicy() {
    return new IntPolicy();
  }
  
  public PerfMetricSeries createPerfMetricSeries() {
    return new PerfMetricSeries();
  }
  
  public ArrayOfVMwareDVSPvlanConfigSpec createArrayOfVMwareDVSPvlanConfigSpec() {
    return new ArrayOfVMwareDVSPvlanConfigSpec();
  }
  
  public VirtualDiskSparseVer1BackingInfo createVirtualDiskSparseVer1BackingInfo() {
    return new VirtualDiskSparseVer1BackingInfo();
  }
  
  public HostNumericSensorInfo createHostNumericSensorInfo() {
    return new HostNumericSensorInfo();
  }
  
  public HostVirtualNicConnection createHostVirtualNicConnection() {
    return new HostVirtualNicConnection();
  }
  
  public VirtualMachineFileLayoutExSnapshotLayout createVirtualMachineFileLayoutExSnapshotLayout() {
    return new VirtualMachineFileLayoutExSnapshotLayout();
  }
  
  public ProfileMetadataProfileSortSpec createProfileMetadataProfileSortSpec() {
    return new ProfileMetadataProfileSortSpec();
  }
  
  public PlacementAction createPlacementAction() {
    return new PlacementAction();
  }
  
  public HostPciDevice createHostPciDevice() {
    return new HostPciDevice();
  }
  
  public IpAddress createIpAddress() {
    return new IpAddress();
  }
  
  public ExtendedElementDescription createExtendedElementDescription() {
    return new ExtendedElementDescription();
  }
  
  public VmSnapshotFileInfo createVmSnapshotFileInfo() {
    return new VmSnapshotFileInfo();
  }
  
  public ArrayOfHostPlugStoreTopologyAdapter createArrayOfHostPlugStoreTopologyAdapter() {
    return new ArrayOfHostPlugStoreTopologyAdapter();
  }
  
  public ArrayOfVsanHostRuntimeInfoDiskIssue createArrayOfVsanHostRuntimeInfoDiskIssue() {
    return new ArrayOfVsanHostRuntimeInfoDiskIssue();
  }
  
  public VmUpgradeCompleteEvent createVmUpgradeCompleteEvent() {
    return new VmUpgradeCompleteEvent();
  }
  
  public StorageDrsVmConfigSpec createStorageDrsVmConfigSpec() {
    return new StorageDrsVmConfigSpec();
  }
  
  public ArrayOfHostProfileManagerCompositionResultResultElement createArrayOfHostProfileManagerCompositionResultResultElement() {
    return new ArrayOfHostProfileManagerCompositionResultResultElement();
  }
  
  public HostVFlashManagerVFlashResourceRunTimeInfo createHostVFlashManagerVFlashResourceRunTimeInfo() {
    return new HostVFlashManagerVFlashResourceRunTimeInfo();
  }
  
  public DasAgentUnavailableEvent createDasAgentUnavailableEvent() {
    return new DasAgentUnavailableEvent();
  }
  
  public ArrayOfHttpNfcLeaseHostInfo createArrayOfHttpNfcLeaseHostInfo() {
    return new ArrayOfHttpNfcLeaseHostInfo();
  }
  
  public VirtualMachineQuestionInfo createVirtualMachineQuestionInfo() {
    return new VirtualMachineQuestionInfo();
  }
  
  public ArrayOfChangesInfoEventArgument createArrayOfChangesInfoEventArgument() {
    return new ArrayOfChangesInfoEventArgument();
  }
  
  public InheritablePolicy createInheritablePolicy() {
    return new InheritablePolicy();
  }
  
  public ArrayOfProfileApplyProfileProperty createArrayOfProfileApplyProfileProperty() {
    return new ArrayOfProfileApplyProfileProperty();
  }
  
  public ClusterDasAdmissionControlInfo createClusterDasAdmissionControlInfo() {
    return new ClusterDasAdmissionControlInfo();
  }
  
  public VirtualSerialPortURIBackingOption createVirtualSerialPortURIBackingOption() {
    return new VirtualSerialPortURIBackingOption();
  }
  
  public HostLowLevelProvisioningManagerFileDeleteResult createHostLowLevelProvisioningManagerFileDeleteResult() {
    return new HostLowLevelProvisioningManagerFileDeleteResult();
  }
  
  public ArrayOfAuthorizationRole createArrayOfAuthorizationRole() {
    return new ArrayOfAuthorizationRole();
  }
  
  public RemoteTSMEnabledEvent createRemoteTSMEnabledEvent() {
    return new RemoteTSMEnabledEvent();
  }
  
  public VirtualPCIController createVirtualPCIController() {
    return new VirtualPCIController();
  }
  
  public VirtualEthernetCardDistributedVirtualPortBackingInfo createVirtualEthernetCardDistributedVirtualPortBackingInfo() {
    return new VirtualEthernetCardDistributedVirtualPortBackingInfo();
  }
  
  public HostPatchManagerStatus createHostPatchManagerStatus() {
    return new HostPatchManagerStatus();
  }
  
  public CustomizationUnknownName createCustomizationUnknownName() {
    return new CustomizationUnknownName();
  }
  
  public VmwareDistributedVirtualSwitchVlanSpec createVmwareDistributedVirtualSwitchVlanSpec() {
    return new VmwareDistributedVirtualSwitchVlanSpec();
  }
  
  public ClusterProactiveDrsConfigInfo createClusterProactiveDrsConfigInfo() {
    return new ClusterProactiveDrsConfigInfo();
  }
  
  public ClusterVmComponentProtectionSettings createClusterVmComponentProtectionSettings() {
    return new ClusterVmComponentProtectionSettings();
  }
  
  public VmMaxFTRestartCountReached createVmMaxFTRestartCountReached() {
    return new VmMaxFTRestartCountReached();
  }
  
  public HostRdmaDeviceConnectionInfo createHostRdmaDeviceConnectionInfo() {
    return new HostRdmaDeviceConnectionInfo();
  }
  
  public VVolVmConfigFileUpdateResult createVVolVmConfigFileUpdateResult() {
    return new VVolVmConfigFileUpdateResult();
  }
  
  public VirtualFloppy createVirtualFloppy() {
    return new VirtualFloppy();
  }
  
  public DrsRecoveredFromFailureEvent createDrsRecoveredFromFailureEvent() {
    return new DrsRecoveredFromFailureEvent();
  }
  
  public ArrayOfVirtualDeviceBackingOption createArrayOfVirtualDeviceBackingOption() {
    return new ArrayOfVirtualDeviceBackingOption();
  }
  
  public VmFailedMigrateEvent createVmFailedMigrateEvent() {
    return new VmFailedMigrateEvent();
  }
  
  public VirtualPCIPassthroughPluginBackingOption createVirtualPCIPassthroughPluginBackingOption() {
    return new VirtualPCIPassthroughPluginBackingOption();
  }
  
  public HostInternetScsiHbaAuthenticationCapabilities createHostInternetScsiHbaAuthenticationCapabilities() {
    return new HostInternetScsiHbaAuthenticationCapabilities();
  }
  
  public HostScsiTopologyInterface createHostScsiTopologyInterface() {
    return new HostScsiTopologyInterface();
  }
  
  public ArrayOfHostFirewallRulesetIpNetwork createArrayOfHostFirewallRulesetIpNetwork() {
    return new ArrayOfHostFirewallRulesetIpNetwork();
  }
  
  public VsanUpgradeSystemUpgradeHistoryDiskGroupOp createVsanUpgradeSystemUpgradeHistoryDiskGroupOp() {
    return new VsanUpgradeSystemUpgradeHistoryDiskGroupOp();
  }
  
  public ImportOperationBulkFaultFaultOnImport createImportOperationBulkFaultFaultOnImport() {
    return new ImportOperationBulkFaultFaultOnImport();
  }
  
  public LicenseSource createLicenseSource() {
    return new LicenseSource();
  }
  
  public DvsResourceRuntimeInfo createDvsResourceRuntimeInfo() {
    return new DvsResourceRuntimeInfo();
  }
  
  public HostVirtualSwitchBeaconConfig createHostVirtualSwitchBeaconConfig() {
    return new HostVirtualSwitchBeaconConfig();
  }
  
  public ArrayOfImportOperationBulkFaultFaultOnImport createArrayOfImportOperationBulkFaultFaultOnImport() {
    return new ArrayOfImportOperationBulkFaultFaultOnImport();
  }
  
  public ExtendedEventPair createExtendedEventPair() {
    return new ExtendedEventPair();
  }
  
  public HostConfigAppliedEvent createHostConfigAppliedEvent() {
    return new HostConfigAppliedEvent();
  }
  
  public DvsAcceptNetworkRuleAction createDvsAcceptNetworkRuleAction() {
    return new DvsAcceptNetworkRuleAction();
  }
  
  public VirtualMachineVcpuConfig createVirtualMachineVcpuConfig() {
    return new VirtualMachineVcpuConfig();
  }
  
  public HostConnectSpec createHostConnectSpec() {
    return new HostConnectSpec();
  }
  
  public ArrayOfHttpNfcLeaseDatastoreLeaseInfo createArrayOfHttpNfcLeaseDatastoreLeaseInfo() {
    return new ArrayOfHttpNfcLeaseDatastoreLeaseInfo();
  }
  
  public AnswerFileUpdateFailure createAnswerFileUpdateFailure() {
    return new AnswerFileUpdateFailure();
  }
  
  public HostParallelScsiTargetTransport createHostParallelScsiTargetTransport() {
    return new HostParallelScsiTargetTransport();
  }
  
  public DiskCryptoSpec createDiskCryptoSpec() {
    return new DiskCryptoSpec();
  }
  
  public HostSubSpecificationUpdateEvent createHostSubSpecificationUpdateEvent() {
    return new HostSubSpecificationUpdateEvent();
  }
  
  public ArrayOfVirtualMachinePropertyRelation createArrayOfVirtualMachinePropertyRelation() {
    return new ArrayOfVirtualMachinePropertyRelation();
  }
  
  public ArrayOfOvfConsumerOstNode createArrayOfOvfConsumerOstNode() {
    return new ArrayOfOvfConsumerOstNode();
  }
  
  public NetDhcpConfigInfoDhcpOptions createNetDhcpConfigInfoDhcpOptions() {
    return new NetDhcpConfigInfoDhcpOptions();
  }
  
  public VmResettingEvent createVmResettingEvent() {
    return new VmResettingEvent();
  }
  
  public HostActiveDirectory createHostActiveDirectory() {
    return new HostActiveDirectory();
  }
  
  public AuthorizationPrivilege createAuthorizationPrivilege() {
    return new AuthorizationPrivilege();
  }
  
  public ArrayOfPermission createArrayOfPermission() {
    return new ArrayOfPermission();
  }
  
  public HostConnectInfoNetworkInfo createHostConnectInfoNetworkInfo() {
    return new HostConnectInfoNetworkInfo();
  }
  
  public FolderFailedHostResult createFolderFailedHostResult() {
    return new FolderFailedHostResult();
  }
  
  public VAppIPAssignmentInfo createVAppIPAssignmentInfo() {
    return new VAppIPAssignmentInfo();
  }
  
  public SSPIAuthentication createSSPIAuthentication() {
    return new SSPIAuthentication();
  }
  
  public ArrayOfHostCacheConfigurationInfo createArrayOfHostCacheConfigurationInfo() {
    return new ArrayOfHostCacheConfigurationInfo();
  }
  
  public HostScsiDiskPartition createHostScsiDiskPartition() {
    return new HostScsiDiskPartition();
  }
  
  public DvpgImportEvent createDvpgImportEvent() {
    return new DvpgImportEvent();
  }
  
  public HostVvolVolumeSpecification createHostVvolVolumeSpecification() {
    return new HostVvolVolumeSpecification();
  }
  
  public VirtualEnsoniq1371 createVirtualEnsoniq1371() {
    return new VirtualEnsoniq1371();
  }
  
  public DatastoreFileEvent createDatastoreFileEvent() {
    return new DatastoreFileEvent();
  }
  
  public VmInstanceUuidChangedEvent createVmInstanceUuidChangedEvent() {
    return new VmInstanceUuidChangedEvent();
  }
  
  public ArrayOfHostNetworkConfigNetStackSpec createArrayOfHostNetworkConfigNetStackSpec() {
    return new ArrayOfHostNetworkConfigNetStackSpec();
  }
  
  public HostRdmaDevicePnicBacking createHostRdmaDevicePnicBacking() {
    return new HostRdmaDevicePnicBacking();
  }
  
  public HostVirtualSwitchSpec createHostVirtualSwitchSpec() {
    return new HostVirtualSwitchSpec();
  }
  
  public GuestAuthAliasInfo createGuestAuthAliasInfo() {
    return new GuestAuthAliasInfo();
  }
  
  public MacAddress createMacAddress() {
    return new MacAddress();
  }
  
  public ParaVirtualSCSIController createParaVirtualSCSIController() {
    return new ParaVirtualSCSIController();
  }
  
  public HostLowLevelProvisioningManagerSnapshotLayoutSpec createHostLowLevelProvisioningManagerSnapshotLayoutSpec() {
    return new HostLowLevelProvisioningManagerSnapshotLayoutSpec();
  }
  
  public ArrayOfDvsVmVnicNetworkResourcePoolRuntimeInfo createArrayOfDvsVmVnicNetworkResourcePoolRuntimeInfo() {
    return new ArrayOfDvsVmVnicNetworkResourcePoolRuntimeInfo();
  }
  
  public ArrayOfVMwareVspanSession createArrayOfVMwareVspanSession() {
    return new ArrayOfVMwareVspanSession();
  }
  
  public ArrayOfHostFeatureCapability createArrayOfHostFeatureCapability() {
    return new ArrayOfHostFeatureCapability();
  }
  
  public MissingProperty createMissingProperty() {
    return new MissingProperty();
  }
  
  public VirtualPCIPassthroughDeviceBackingInfo createVirtualPCIPassthroughDeviceBackingInfo() {
    return new VirtualPCIPassthroughDeviceBackingInfo();
  }
  
  public VmRegisteredEvent createVmRegisteredEvent() {
    return new VmRegisteredEvent();
  }
  
  public HostCnxFailedNetworkErrorEvent createHostCnxFailedNetworkErrorEvent() {
    return new HostCnxFailedNetworkErrorEvent();
  }
  
  public VmCreatedEvent createVmCreatedEvent() {
    return new VmCreatedEvent();
  }
  
  public VirtualMachineWipeResult createVirtualMachineWipeResult() {
    return new VirtualMachineWipeResult();
  }
  
  public VmFailedToPowerOnEvent createVmFailedToPowerOnEvent() {
    return new VmFailedToPowerOnEvent();
  }
  
  public FaultTolerancePrimaryConfigInfo createFaultTolerancePrimaryConfigInfo() {
    return new FaultTolerancePrimaryConfigInfo();
  }
  
  public HostProxySwitch createHostProxySwitch() {
    return new HostProxySwitch();
  }
  
  public HostCpuPackage createHostCpuPackage() {
    return new HostCpuPackage();
  }
  
  public ArrayOfHostDiskConfigurationResult createArrayOfHostDiskConfigurationResult() {
    return new ArrayOfHostDiskConfigurationResult();
  }
  
  public ArrayOfCryptoManagerKmipCryptoKeyStatus createArrayOfCryptoManagerKmipCryptoKeyStatus() {
    return new ArrayOfCryptoManagerKmipCryptoKeyStatus();
  }
  
  public DatastoreOption createDatastoreOption() {
    return new DatastoreOption();
  }
  
  public ArrayOfEntityPrivilege createArrayOfEntityPrivilege() {
    return new ArrayOfEntityPrivilege();
  }
  
  public DistributedVirtualSwitchManagerHostDvsFilterSpec createDistributedVirtualSwitchManagerHostDvsFilterSpec() {
    return new DistributedVirtualSwitchManagerHostDvsFilterSpec();
  }
  
  public VsanHostMembershipInfo createVsanHostMembershipInfo() {
    return new VsanHostMembershipInfo();
  }
  
  public VirtualMachineVFlashModuleInfo createVirtualMachineVFlashModuleInfo() {
    return new VirtualMachineVFlashModuleInfo();
  }
  
  public ErrorUpgradeEvent createErrorUpgradeEvent() {
    return new ErrorUpgradeEvent();
  }
  
  public ClusterConfigInfo createClusterConfigInfo() {
    return new ClusterConfigInfo();
  }
  
  public PassiveNodeDeploymentSpec createPassiveNodeDeploymentSpec() {
    return new PassiveNodeDeploymentSpec();
  }
  
  public ResourceAllocationOption createResourceAllocationOption() {
    return new ResourceAllocationOption();
  }
  
  public HostPlugStoreTopology createHostPlugStoreTopology() {
    return new HostPlugStoreTopology();
  }
  
  public StorageIORMConfigSpec createStorageIORMConfigSpec() {
    return new StorageIORMConfigSpec();
  }
  
  public TaskReasonSystem createTaskReasonSystem() {
    return new TaskReasonSystem();
  }
  
  public VcAgentUninstallFailedEvent createVcAgentUninstallFailedEvent() {
    return new VcAgentUninstallFailedEvent();
  }
  
  public HostDiskPartitionBlockRange createHostDiskPartitionBlockRange() {
    return new HostDiskPartitionBlockRange();
  }
  
  public GuestRegValueNameSpec createGuestRegValueNameSpec() {
    return new GuestRegValueNameSpec();
  }
  
  public VmfsDatastoreInfo createVmfsDatastoreInfo() {
    return new VmfsDatastoreInfo();
  }
  
  public VirtualPointingDeviceDeviceBackingInfo createVirtualPointingDeviceDeviceBackingInfo() {
    return new VirtualPointingDeviceDeviceBackingInfo();
  }
  
  public ArrayOfHostNatServiceConfig createArrayOfHostNatServiceConfig() {
    return new ArrayOfHostNatServiceConfig();
  }
  
  public ServerStartedSessionEvent createServerStartedSessionEvent() {
    return new ServerStartedSessionEvent();
  }
  
  public HostUnresolvedVmfsVolumeResolveStatus createHostUnresolvedVmfsVolumeResolveStatus() {
    return new HostUnresolvedVmfsVolumeResolveStatus();
  }
  
  public ArrayOfVirtualMachineDatastoreVolumeOption createArrayOfVirtualMachineDatastoreVolumeOption() {
    return new ArrayOfVirtualMachineDatastoreVolumeOption();
  }
  
  public ClusterGroupSpec createClusterGroupSpec() {
    return new ClusterGroupSpec();
  }
  
  public ClusterConfigSpecEx createClusterConfigSpecEx() {
    return new ClusterConfigSpecEx();
  }
  
  public TypeDescription createTypeDescription() {
    return new TypeDescription();
  }
  
  public LinkLayerDiscoveryProtocolInfo createLinkLayerDiscoveryProtocolInfo() {
    return new LinkLayerDiscoveryProtocolInfo();
  }
  
  public VirtualDiskOptionVFlashCacheConfigOption createVirtualDiskOptionVFlashCacheConfigOption() {
    return new VirtualDiskOptionVFlashCacheConfigOption();
  }
  
  public VirtualMachineStorageSummary createVirtualMachineStorageSummary() {
    return new VirtualMachineStorageSummary();
  }
  
  public ArrayOfHostDiagnosticPartitionCreateOption createArrayOfHostDiagnosticPartitionCreateOption() {
    return new ArrayOfHostDiagnosticPartitionCreateOption();
  }
  
  public ArrayOfShort createArrayOfShort() {
    return new ArrayOfShort();
  }
  
  public VmMessageWarningEvent createVmMessageWarningEvent() {
    return new VmMessageWarningEvent();
  }
  
  public VirtualPCNet32 createVirtualPCNet32() {
    return new VirtualPCNet32();
  }
  
  public VirtualMachineFileLayout createVirtualMachineFileLayout() {
    return new VirtualMachineFileLayout();
  }
  
  public VAppEntityConfigInfo createVAppEntityConfigInfo() {
    return new VAppEntityConfigInfo();
  }
  
  public TaskFilterSpecByEntity createTaskFilterSpecByEntity() {
    return new TaskFilterSpecByEntity();
  }
  
  public CustomizationIpV6Generator createCustomizationIpV6Generator() {
    return new CustomizationIpV6Generator();
  }
  
  public FaultDomainId createFaultDomainId() {
    return new FaultDomainId();
  }
  
  public ArrayOfAnswerFileUpdateFailure createArrayOfAnswerFileUpdateFailure() {
    return new ArrayOfAnswerFileUpdateFailure();
  }
  
  public ArrayOfGuestAliases createArrayOfGuestAliases() {
    return new ArrayOfGuestAliases();
  }
  
  public VirtualSriovEthernetCardSriovBackingOption createVirtualSriovEthernetCardSriovBackingOption() {
    return new VirtualSriovEthernetCardSriovBackingOption();
  }
  
  public HostReconnectionFailedEvent createHostReconnectionFailedEvent() {
    return new HostReconnectionFailedEvent();
  }
  
  public AlarmAction createAlarmAction() {
    return new AlarmAction();
  }
  
  public DatastoreVVolContainerFailoverPair createDatastoreVVolContainerFailoverPair() {
    return new DatastoreVVolContainerFailoverPair();
  }
  
  public VmResumingEvent createVmResumingEvent() {
    return new VmResumingEvent();
  }
  
  public TaskEvent createTaskEvent() {
    return new TaskEvent();
  }
  
  public VmDasUpdateErrorEvent createVmDasUpdateErrorEvent() {
    return new VmDasUpdateErrorEvent();
  }
  
  public VmAcquiredMksTicketEvent createVmAcquiredMksTicketEvent() {
    return new VmAcquiredMksTicketEvent();
  }
  
  public CustomizationVirtualMachineName createCustomizationVirtualMachineName() {
    return new CustomizationVirtualMachineName();
  }
  
  public TaskReasonSchedule createTaskReasonSchedule() {
    return new TaskReasonSchedule();
  }
  
  public VmStoppingEvent createVmStoppingEvent() {
    return new VmStoppingEvent();
  }
  
  public HostNvmeDiscoveryLogEntry createHostNvmeDiscoveryLogEntry() {
    return new HostNvmeDiscoveryLogEntry();
  }
  
  public ArrayOfHostMultipathStateInfoPath createArrayOfHostMultipathStateInfoPath() {
    return new ArrayOfHostMultipathStateInfoPath();
  }
  
  public HostNetworkConfig createHostNetworkConfig() {
    return new HostNetworkConfig();
  }
  
  public SelectionSpec createSelectionSpec() {
    return new SelectionSpec();
  }
  
  public ClusterAntiAffinityRuleSpec createClusterAntiAffinityRuleSpec() {
    return new ClusterAntiAffinityRuleSpec();
  }
  
  public GuestRegValueDwordSpec createGuestRegValueDwordSpec() {
    return new GuestRegValueDwordSpec();
  }
  
  public LocalDatastoreCreatedEvent createLocalDatastoreCreatedEvent() {
    return new LocalDatastoreCreatedEvent();
  }
  
  public AnswerFileSerializedCreateSpec createAnswerFileSerializedCreateSpec() {
    return new AnswerFileSerializedCreateSpec();
  }
  
  public ArrayOfHostSystemIdentificationInfo createArrayOfHostSystemIdentificationInfo() {
    return new ArrayOfHostSystemIdentificationInfo();
  }
  
  public ArrayOfLong createArrayOfLong() {
    return new ArrayOfLong();
  }
  
  public FileBackedVirtualDiskSpec createFileBackedVirtualDiskSpec() {
    return new FileBackedVirtualDiskSpec();
  }
  
  public PodStorageDrsEntry createPodStorageDrsEntry() {
    return new PodStorageDrsEntry();
  }
  
  public HostSubSpecificationDeleteEvent createHostSubSpecificationDeleteEvent() {
    return new HostSubSpecificationDeleteEvent();
  }
  
  public ArrayOfVirtualMachineDatastoreInfo createArrayOfVirtualMachineDatastoreInfo() {
    return new ArrayOfVirtualMachineDatastoreInfo();
  }
  
  public CustomizationFailed createCustomizationFailed() {
    return new CustomizationFailed();
  }
  
  public PhysicalNicConfig createPhysicalNicConfig() {
    return new PhysicalNicConfig();
  }
  
  public HostMultipathInfoLogicalUnitPolicy createHostMultipathInfoLogicalUnitPolicy() {
    return new HostMultipathInfoLogicalUnitPolicy();
  }
  
  public VirtualEthernetCardNetworkBackingOption createVirtualEthernetCardNetworkBackingOption() {
    return new VirtualEthernetCardNetworkBackingOption();
  }
  
  public ImportSpec createImportSpec() {
    return new ImportSpec();
  }
  
  public CustomFieldValueChangedEvent createCustomFieldValueChangedEvent() {
    return new CustomFieldValueChangedEvent();
  }
  
  public HostHardwareSummary createHostHardwareSummary() {
    return new HostHardwareSummary();
  }
  
  public OvfManagerCommonParams createOvfManagerCommonParams() {
    return new OvfManagerCommonParams();
  }
  
  public ArrayOfPlacementSpec createArrayOfPlacementSpec() {
    return new ArrayOfPlacementSpec();
  }
  
  public HostLicenseSpec createHostLicenseSpec() {
    return new HostLicenseSpec();
  }
  
  public VStorageObjectAssociationsVmDiskAssociations createVStorageObjectAssociationsVmDiskAssociations() {
    return new VStorageObjectAssociationsVmDiskAssociations();
  }
  
  public ArrayOfNvdimmRegionInfo createArrayOfNvdimmRegionInfo() {
    return new ArrayOfNvdimmRegionInfo();
  }
  
  public HostSriovDevicePoolInfo createHostSriovDevicePoolInfo() {
    return new HostSriovDevicePoolInfo();
  }
  
  public VmEndRecordingEvent createVmEndRecordingEvent() {
    return new VmEndRecordingEvent();
  }
  
  public ArrayOfScsiLunDurableName createArrayOfScsiLunDurableName() {
    return new ArrayOfScsiLunDurableName();
  }
  
  public TaskFilterSpecByTime createTaskFilterSpecByTime() {
    return new TaskFilterSpecByTime();
  }
  
  public VirtualMachineFloppyInfo createVirtualMachineFloppyInfo() {
    return new VirtualMachineFloppyInfo();
  }
  
  public ClusterDrsFaults createClusterDrsFaults() {
    return new ClusterDrsFaults();
  }
  
  public HostDasEvent createHostDasEvent() {
    return new HostDasEvent();
  }
  
  public ArrayOfVirtualMachineMetadataManagerVmMetadataResult createArrayOfVirtualMachineMetadataManagerVmMetadataResult() {
    return new ArrayOfVirtualMachineMetadataManagerVmMetadataResult();
  }
  
  public EVCMode createEVCMode() {
    return new EVCMode();
  }
  
  public HostResignatureRescanResult createHostResignatureRescanResult() {
    return new HostResignatureRescanResult();
  }
  
  public ClusterDestroyedEvent createClusterDestroyedEvent() {
    return new ClusterDestroyedEvent();
  }
  
  public ArrayOfTypeDescription createArrayOfTypeDescription() {
    return new ArrayOfTypeDescription();
  }
  
  public ArrayOfHostFeatureVersionInfo createArrayOfHostFeatureVersionInfo() {
    return new ArrayOfHostFeatureVersionInfo();
  }
  
  public DVPortConfigInfo createDVPortConfigInfo() {
    return new DVPortConfigInfo();
  }
  
  public ArrayOfOvfFileItem createArrayOfOvfFileItem() {
    return new ArrayOfOvfFileItem();
  }
  
  public ArrayOfVirtualMachineFileLayoutExSnapshotLayout createArrayOfVirtualMachineFileLayoutExSnapshotLayout() {
    return new ArrayOfVirtualMachineFileLayoutExSnapshotLayout();
  }
  
  public ArrayOfDistributedVirtualPort createArrayOfDistributedVirtualPort() {
    return new ArrayOfDistributedVirtualPort();
  }
  
  public VsanUpgradeSystemWrongEsxVersionIssue createVsanUpgradeSystemWrongEsxVersionIssue() {
    return new VsanUpgradeSystemWrongEsxVersionIssue();
  }
  
  public ClusterProfileCompleteConfigSpec createClusterProfileCompleteConfigSpec() {
    return new ClusterProfileCompleteConfigSpec();
  }
  
  public VmBeingClonedNoFolderEvent createVmBeingClonedNoFolderEvent() {
    return new VmBeingClonedNoFolderEvent();
  }
  
  public VslmRelocateSpec createVslmRelocateSpec() {
    return new VslmRelocateSpec();
  }
  
  public VirtualNVDIMMControllerOption createVirtualNVDIMMControllerOption() {
    return new VirtualNVDIMMControllerOption();
  }
  
  public ArrayOfManagedObjectReference createArrayOfManagedObjectReference() {
    return new ArrayOfManagedObjectReference();
  }
  
  public HostFeatureCapability createHostFeatureCapability() {
    return new HostFeatureCapability();
  }
  
  public ClusterProfileConfigSpec createClusterProfileConfigSpec() {
    return new ClusterProfileConfigSpec();
  }
  
  public LicenseServerAvailableEvent createLicenseServerAvailableEvent() {
    return new LicenseServerAvailableEvent();
  }
  
  public PnicUplinkProfile createPnicUplinkProfile() {
    return new PnicUplinkProfile();
  }
  
  public VmEmigratingEvent createVmEmigratingEvent() {
    return new VmEmigratingEvent();
  }
  
  public HostPatchManagerResult createHostPatchManagerResult() {
    return new HostPatchManagerResult();
  }
  
  public ArrayOfUserPrivilegeResult createArrayOfUserPrivilegeResult() {
    return new ArrayOfUserPrivilegeResult();
  }
  
  public VirtualMachineSriovDevicePoolInfo createVirtualMachineSriovDevicePoolInfo() {
    return new VirtualMachineSriovDevicePoolInfo();
  }
  
  public HostFileSystemMountInfo createHostFileSystemMountInfo() {
    return new HostFileSystemMountInfo();
  }
  
  public HostRdmaDeviceBacking createHostRdmaDeviceBacking() {
    return new HostRdmaDeviceBacking();
  }
  
  public VmInstanceUuidAssignedEvent createVmInstanceUuidAssignedEvent() {
    return new VmInstanceUuidAssignedEvent();
  }
  
  public ArrayOfIpPool createArrayOfIpPool() {
    return new ArrayOfIpPool();
  }
  
  public ScheduledTaskDetail createScheduledTaskDetail() {
    return new ScheduledTaskDetail();
  }
  
  public ArrayOfVirtualMachineRelocateSpecDiskLocator createArrayOfVirtualMachineRelocateSpecDiskLocator() {
    return new ArrayOfVirtualMachineRelocateSpecDiskLocator();
  }
  
  public ArrayOfHostLowLevelProvisioningManagerFileReserveSpec createArrayOfHostLowLevelProvisioningManagerFileReserveSpec() {
    return new ArrayOfHostLowLevelProvisioningManagerFileReserveSpec();
  }
  
  public HostComplianceCheckedEvent createHostComplianceCheckedEvent() {
    return new HostComplianceCheckedEvent();
  }
  
  public HostLocalFileSystemVolumeSpec createHostLocalFileSystemVolumeSpec() {
    return new HostLocalFileSystemVolumeSpec();
  }
  
  public DatacenterConfigSpec createDatacenterConfigSpec() {
    return new DatacenterConfigSpec();
  }
  
  public PlacementSpec createPlacementSpec() {
    return new PlacementSpec();
  }
  
  public ArrayOfHostVirtualNicConfig createArrayOfHostVirtualNicConfig() {
    return new ArrayOfHostVirtualNicConfig();
  }
  
  public ClusterDasConfigInfo createClusterDasConfigInfo() {
    return new ClusterDasConfigInfo();
  }
  
  public HostPowerPolicy createHostPowerPolicy() {
    return new HostPowerPolicy();
  }
  
  public ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots createArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots() {
    return new ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots();
  }
  
  public ArrayOfDvsFilterConfig createArrayOfDvsFilterConfig() {
    return new ArrayOfDvsFilterConfig();
  }
  
  public HostInternetScsiHbaTargetSet createHostInternetScsiHbaTargetSet() {
    return new HostInternetScsiHbaTargetSet();
  }
  
  public HostVFlashManagerVFlashCacheConfigInfo createHostVFlashManagerVFlashCacheConfigInfo() {
    return new HostVFlashManagerVFlashCacheConfigInfo();
  }
  
  public AuthenticationProfile createAuthenticationProfile() {
    return new AuthenticationProfile();
  }
  
  public DatabaseSizeParam createDatabaseSizeParam() {
    return new DatabaseSizeParam();
  }
  
  public HostConfigChange createHostConfigChange() {
    return new HostConfigChange();
  }
  
  public HostInternetScsiHbaSendTarget createHostInternetScsiHbaSendTarget() {
    return new HostInternetScsiHbaSendTarget();
  }
  
  public DVSCapability createDVSCapability() {
    return new DVSCapability();
  }
  
  public HostIpRouteOp createHostIpRouteOp() {
    return new HostIpRouteOp();
  }
  
  public ArrayOfIscsiDependencyEntity createArrayOfIscsiDependencyEntity() {
    return new ArrayOfIscsiDependencyEntity();
  }
  
  public HostAdminDisableEvent createHostAdminDisableEvent() {
    return new HostAdminDisableEvent();
  }
  
  public ProfileDescriptionSection createProfileDescriptionSection() {
    return new ProfileDescriptionSection();
  }
  
  public DvsCreatedEvent createDvsCreatedEvent() {
    return new DvsCreatedEvent();
  }
  
  public VirtualMachineConsolePreferences createVirtualMachineConsolePreferences() {
    return new VirtualMachineConsolePreferences();
  }
  
  public DateTimeProfile createDateTimeProfile() {
    return new DateTimeProfile();
  }
  
  public DeviceBackedVirtualDiskSpec createDeviceBackedVirtualDiskSpec() {
    return new DeviceBackedVirtualDiskSpec();
  }
  
  public HostFirewallConfigRuleSetConfig createHostFirewallConfigRuleSetConfig() {
    return new HostFirewallConfigRuleSetConfig();
  }
  
  public VmSecondaryDisabledBySystemEvent createVmSecondaryDisabledBySystemEvent() {
    return new VmSecondaryDisabledBySystemEvent();
  }
  
  public VmConfigInfo createVmConfigInfo() {
    return new VmConfigInfo();
  }
  
  public PermissionProfile createPermissionProfile() {
    return new PermissionProfile();
  }
  
  public VirtualDiskSeSparseBackingOption createVirtualDiskSeSparseBackingOption() {
    return new VirtualDiskSeSparseBackingOption();
  }
  
  public VmLogFileQuery createVmLogFileQuery() {
    return new VmLogFileQuery();
  }
  
  public VsanHostConfigInfoStorageInfo createVsanHostConfigInfoStorageInfo() {
    return new VsanHostConfigInfoStorageInfo();
  }
  
  public DVPortStatus createDVPortStatus() {
    return new DVPortStatus();
  }
  
  public ArrayOfHostDatastoreConnectInfo createArrayOfHostDatastoreConnectInfo() {
    return new ArrayOfHostDatastoreConnectInfo();
  }
  
  public DrsRuleComplianceEvent createDrsRuleComplianceEvent() {
    return new DrsRuleComplianceEvent();
  }
  
  public VirtualPCIPassthroughVmiopBackingInfo createVirtualPCIPassthroughVmiopBackingInfo() {
    return new VirtualPCIPassthroughVmiopBackingInfo();
  }
  
  public ArrayOfHostFeatureMask createArrayOfHostFeatureMask() {
    return new ArrayOfHostFeatureMask();
  }
  
  public HostDatastoreSystemDatastoreResult createHostDatastoreSystemDatastoreResult() {
    return new HostDatastoreSystemDatastoreResult();
  }
  
  public GuestRegValueMultiStringSpec createGuestRegValueMultiStringSpec() {
    return new GuestRegValueMultiStringSpec();
  }
  
  public VchaClusterConfigSpec createVchaClusterConfigSpec() {
    return new VchaClusterConfigSpec();
  }
  
  public ExtensionPrivilegeInfo createExtensionPrivilegeInfo() {
    return new ExtensionPrivilegeInfo();
  }
  
  public ClusterEvent createClusterEvent() {
    return new ClusterEvent();
  }
  
  public DVSRollbackCapability createDVSRollbackCapability() {
    return new DVSRollbackCapability();
  }
  
  public EventDescriptionEventDetail createEventDescriptionEventDetail() {
    return new EventDescriptionEventDetail();
  }
  
  public ArrayOfClusterDrsVmConfigSpec createArrayOfClusterDrsVmConfigSpec() {
    return new ArrayOfClusterDrsVmConfigSpec();
  }
  
  public ArrayOfPodDiskLocator createArrayOfPodDiskLocator() {
    return new ArrayOfPodDiskLocator();
  }
  
  public VirtualNVDIMMBackingInfo createVirtualNVDIMMBackingInfo() {
    return new VirtualNVDIMMBackingInfo();
  }
  
  public DvsRateLimitNetworkRuleAction createDvsRateLimitNetworkRuleAction() {
    return new DvsRateLimitNetworkRuleAction();
  }
  
  public NetIpRouteConfigInfo createNetIpRouteConfigInfo() {
    return new NetIpRouteConfigInfo();
  }
  
  public ArrayOfHostPortGroupProfile createArrayOfHostPortGroupProfile() {
    return new ArrayOfHostPortGroupProfile();
  }
  
  public VmFailedToStandbyGuestEvent createVmFailedToStandbyGuestEvent() {
    return new VmFailedToStandbyGuestEvent();
  }
  
  public ArrayOfVirtualMachineCpuIdInfoSpec createArrayOfVirtualMachineCpuIdInfoSpec() {
    return new ArrayOfVirtualMachineCpuIdInfoSpec();
  }
  
  public HostHardwareElementInfo createHostHardwareElementInfo() {
    return new HostHardwareElementInfo();
  }
  
  public VirtualCdromRemoteAtapiBackingInfo createVirtualCdromRemoteAtapiBackingInfo() {
    return new VirtualCdromRemoteAtapiBackingInfo();
  }
  
  public VirtualMachineSnapshotInfo createVirtualMachineSnapshotInfo() {
    return new VirtualMachineSnapshotInfo();
  }
  
  public NetBIOSConfigInfo createNetBIOSConfigInfo() {
    return new NetBIOSConfigInfo();
  }
  
  public ArrayOfHostBootDevice createArrayOfHostBootDevice() {
    return new ArrayOfHostBootDevice();
  }
  
  public IpAddressProfile createIpAddressProfile() {
    return new IpAddressProfile();
  }
  
  public HostProfileAppliedEvent createHostProfileAppliedEvent() {
    return new HostProfileAppliedEvent();
  }
  
  public ClusterComputeResourceHostVmkNicInfo createClusterComputeResourceHostVmkNicInfo() {
    return new ClusterComputeResourceHostVmkNicInfo();
  }
  
  public ServiceConsolePortGroupProfile createServiceConsolePortGroupProfile() {
    return new ServiceConsolePortGroupProfile();
  }
  
  public VmPodConfigForPlacement createVmPodConfigForPlacement() {
    return new VmPodConfigForPlacement();
  }
  
  public DVSNetworkResourcePoolConfigSpec createDVSNetworkResourcePoolConfigSpec() {
    return new DVSNetworkResourcePoolConfigSpec();
  }
  
  public ArrayOfHostPlugStoreTopologyTarget createArrayOfHostPlugStoreTopologyTarget() {
    return new ArrayOfHostPlugStoreTopologyTarget();
  }
  
  public DvsRenamedEvent createDvsRenamedEvent() {
    return new DvsRenamedEvent();
  }
  
  public DynamicProperty createDynamicProperty() {
    return new DynamicProperty();
  }
  
  public DvsHostInfrastructureTrafficResourceAllocation createDvsHostInfrastructureTrafficResourceAllocation() {
    return new DvsHostInfrastructureTrafficResourceAllocation();
  }
  
  public VirtualMachineVMIROM createVirtualMachineVMIROM() {
    return new VirtualMachineVMIROM();
  }
  
  public DistributedVirtualSwitchHostMemberConfigInfo createDistributedVirtualSwitchHostMemberConfigInfo() {
    return new DistributedVirtualSwitchHostMemberConfigInfo();
  }
  
  public StorageRequirement createStorageRequirement() {
    return new StorageRequirement();
  }
  
  public VmUpgradeFailedEvent createVmUpgradeFailedEvent() {
    return new VmUpgradeFailedEvent();
  }
  
  public ArrayOfNvdimmInterleaveSetInfo createArrayOfNvdimmInterleaveSetInfo() {
    return new ArrayOfNvdimmInterleaveSetInfo();
  }
  
  public DvsPuntNetworkRuleAction createDvsPuntNetworkRuleAction() {
    return new DvsPuntNetworkRuleAction();
  }
  
  public ArrayOfDatacenterBasicConnectInfo createArrayOfDatacenterBasicConnectInfo() {
    return new ArrayOfDatacenterBasicConnectInfo();
  }
  
  public ArrayOfHostScsiDiskPartition createArrayOfHostScsiDiskPartition() {
    return new ArrayOfHostScsiDiskPartition();
  }
  
  public CustomFieldValue createCustomFieldValue() {
    return new CustomFieldValue();
  }
  
  public ExtensionServerInfo createExtensionServerInfo() {
    return new ExtensionServerInfo();
  }
  
  public ArrayOfOpaqueNetworkTargetInfo createArrayOfOpaqueNetworkTargetInfo() {
    return new ArrayOfOpaqueNetworkTargetInfo();
  }
  
  public ArrayOfVmEventArgument createArrayOfVmEventArgument() {
    return new ArrayOfVmEventArgument();
  }
  
  public TemplateUpgradeFailedEvent createTemplateUpgradeFailedEvent() {
    return new TemplateUpgradeFailedEvent();
  }
  
  public VirtualHardware createVirtualHardware() {
    return new VirtualHardware();
  }
  
  public VslmCreateSpec createVslmCreateSpec() {
    return new VslmCreateSpec();
  }
  
  public DvsHealthStatusChangeEvent createDvsHealthStatusChangeEvent() {
    return new DvsHealthStatusChangeEvent();
  }
  
  public HttpNfcLeaseDeviceUrl createHttpNfcLeaseDeviceUrl() {
    return new HttpNfcLeaseDeviceUrl();
  }
  
  public VmMigratedEvent createVmMigratedEvent() {
    return new VmMigratedEvent();
  }
  
  public EnumDescription createEnumDescription() {
    return new EnumDescription();
  }
  
  public ArrayOfHostRuntimeInfoNetStackInstanceRuntimeInfo createArrayOfHostRuntimeInfoNetStackInstanceRuntimeInfo() {
    return new ArrayOfHostRuntimeInfoNetStackInstanceRuntimeInfo();
  }
  
  public ClusterStatusChangedEvent createClusterStatusChangedEvent() {
    return new ClusterStatusChangedEvent();
  }
  
  public ArrayOfHostInternetScsiHbaIscsiIpv6Address createArrayOfHostInternetScsiHbaIscsiIpv6Address() {
    return new ArrayOfHostInternetScsiHbaIscsiIpv6Address();
  }
  
  public StorageDrsAutomationConfig createStorageDrsAutomationConfig() {
    return new StorageDrsAutomationConfig();
  }
  
  public ArrayOfHostIpConfigIpV6Address createArrayOfHostIpConfigIpV6Address() {
    return new ArrayOfHostIpConfigIpV6Address();
  }
  
  public VMwareDVSMtuHealthCheckResult createVMwareDVSMtuHealthCheckResult() {
    return new VMwareDVSMtuHealthCheckResult();
  }
  
  public ArrayOfVimVasaProviderInfo createArrayOfVimVasaProviderInfo() {
    return new ArrayOfVimVasaProviderInfo();
  }
  
  public ArrayOfFcoeConfigVlanRange createArrayOfFcoeConfigVlanRange() {
    return new ArrayOfFcoeConfigVlanRange();
  }
  
  public HostCnxFailedAccountFailedEvent createHostCnxFailedAccountFailedEvent() {
    return new HostCnxFailedAccountFailedEvent();
  }
  
  public VirtualMachineVMCIDeviceFilterInfo createVirtualMachineVMCIDeviceFilterInfo() {
    return new VirtualMachineVMCIDeviceFilterInfo();
  }
  
  public ExtensionResourceInfo createExtensionResourceInfo() {
    return new ExtensionResourceInfo();
  }
  
  public ArrayOfHostNvmeNamespace createArrayOfHostNvmeNamespace() {
    return new ArrayOfHostNvmeNamespace();
  }
  
  public HostVFlashManagerVFlashCacheConfigSpec createHostVFlashManagerVFlashCacheConfigSpec() {
    return new HostVFlashManagerVFlashCacheConfigSpec();
  }
  
  public AboutInfo createAboutInfo() {
    return new AboutInfo();
  }
  
  public PhysicalNic createPhysicalNic() {
    return new PhysicalNic();
  }
  
  public EvaluationLicenseSource createEvaluationLicenseSource() {
    return new EvaluationLicenseSource();
  }
  
  public HttpNfcLeaseHostInfo createHttpNfcLeaseHostInfo() {
    return new HttpNfcLeaseHostInfo();
  }
  
  public HostNetworkPolicy createHostNetworkPolicy() {
    return new HostNetworkPolicy();
  }
  
  public VirtualE1000E createVirtualE1000E() {
    return new VirtualE1000E();
  }
  
  public UserInputRequiredParameterMetadata createUserInputRequiredParameterMetadata() {
    return new UserInputRequiredParameterMetadata();
  }
  
  public AlarmClearedEvent createAlarmClearedEvent() {
    return new AlarmClearedEvent();
  }
  
  public ArrayOfPerfEntityMetricBase createArrayOfPerfEntityMetricBase() {
    return new ArrayOfPerfEntityMetricBase();
  }
  
  public VirtualPCNet32Option createVirtualPCNet32Option() {
    return new VirtualPCNet32Option();
  }
  
  public VirtualEnsoniq1371Option createVirtualEnsoniq1371Option() {
    return new VirtualEnsoniq1371Option();
  }
  
  public ArrayOfDouble createArrayOfDouble() {
    return new ArrayOfDouble();
  }
  
  public SessionTerminatedEvent createSessionTerminatedEvent() {
    return new SessionTerminatedEvent();
  }
  
  public PropertyFilterUpdate createPropertyFilterUpdate() {
    return new PropertyFilterUpdate();
  }
  
  public ProfileEvent createProfileEvent() {
    return new ProfileEvent();
  }
  
  public ArrayOfAnyType createArrayOfAnyType() {
    return new ArrayOfAnyType();
  }
  
  public HostFibreChannelOverEthernetTargetTransport createHostFibreChannelOverEthernetTargetTransport() {
    return new HostFibreChannelOverEthernetTargetTransport();
  }
  
  public CustomizationLicenseFilePrintData createCustomizationLicenseFilePrintData() {
    return new CustomizationLicenseFilePrintData();
  }
  
  public UplinkPortVlanTrunkedEvent createUplinkPortVlanTrunkedEvent() {
    return new UplinkPortVlanTrunkedEvent();
  }
  
  public ArrayOfHostStorageSystemDiskLocatorLedResult createArrayOfHostStorageSystemDiskLocatorLedResult() {
    return new ArrayOfHostStorageSystemDiskLocatorLedResult();
  }
  
  public VirtualMachineVMCIDevice createVirtualMachineVMCIDevice() {
    return new VirtualMachineVMCIDevice();
  }
  
  public ManagedEntityEventArgument createManagedEntityEventArgument() {
    return new ManagedEntityEventArgument();
  }
  
  public DVSSummary createDVSSummary() {
    return new DVSSummary();
  }
  
  public ArrayOfClusterRecommendation createArrayOfClusterRecommendation() {
    return new ArrayOfClusterRecommendation();
  }
  
  public ArrayOfCryptoKeyResult createArrayOfCryptoKeyResult() {
    return new ArrayOfCryptoKeyResult();
  }
  
  public DistributedVirtualSwitchPortConnectee createDistributedVirtualSwitchPortConnectee() {
    return new DistributedVirtualSwitchPortConnectee();
  }
  
  public ArrayOfHostUnresolvedVmfsExtent createArrayOfHostUnresolvedVmfsExtent() {
    return new ArrayOfHostUnresolvedVmfsExtent();
  }
  
  public VmDateRolledBackEvent createVmDateRolledBackEvent() {
    return new VmDateRolledBackEvent();
  }
  
  public StorageResourceManagerStorageProfileStatistics createStorageResourceManagerStorageProfileStatistics() {
    return new StorageResourceManagerStorageProfileStatistics();
  }
  
  public ArrayOfClusterVmOrchestrationSpec createArrayOfClusterVmOrchestrationSpec() {
    return new ArrayOfClusterVmOrchestrationSpec();
  }
  
  public HostServiceConfig createHostServiceConfig() {
    return new HostServiceConfig();
  }
  
  public ActiveDirectoryProfile createActiveDirectoryProfile() {
    return new ActiveDirectoryProfile();
  }
  
  public ArrayOfNvdimmNamespaceDetails createArrayOfNvdimmNamespaceDetails() {
    return new ArrayOfNvdimmNamespaceDetails();
  }
  
  public LocalTSMEnabledEvent createLocalTSMEnabledEvent() {
    return new LocalTSMEnabledEvent();
  }
  
  public DVPortgroupSelection createDVPortgroupSelection() {
    return new DVPortgroupSelection();
  }
  
  public HostDhcpService createHostDhcpService() {
    return new HostDhcpService();
  }
  
  public MethodDescription createMethodDescription() {
    return new MethodDescription();
  }
  
  public DvsHostLeftEvent createDvsHostLeftEvent() {
    return new DvsHostLeftEvent();
  }
  
  public HostNvmeDiscoverSpec createHostNvmeDiscoverSpec() {
    return new HostNvmeDiscoverSpec();
  }
  
  public DynamicData createDynamicData() {
    return new DynamicData();
  }
  
  public VirtualMachineScsiPassthroughInfo createVirtualMachineScsiPassthroughInfo() {
    return new VirtualMachineScsiPassthroughInfo();
  }
  
  public StoragePlacementSpec createStoragePlacementSpec() {
    return new StoragePlacementSpec();
  }
  
  public NetIpRouteConfigSpecIpRouteSpec createNetIpRouteConfigSpecIpRouteSpec() {
    return new NetIpRouteConfigSpecIpRouteSpec();
  }
  
  public HostPMemVolume createHostPMemVolume() {
    return new HostPMemVolume();
  }
  
  public VsanUpgradeSystemNetworkPartitionInfo createVsanUpgradeSystemNetworkPartitionInfo() {
    return new VsanUpgradeSystemNetworkPartitionInfo();
  }
  
  public VirtualDeviceFileBackingInfo createVirtualDeviceFileBackingInfo() {
    return new VirtualDeviceFileBackingInfo();
  }
  
  public HostDasErrorEvent createHostDasErrorEvent() {
    return new HostDasErrorEvent();
  }
  
  public HostPortGroupSpec createHostPortGroupSpec() {
    return new HostPortGroupSpec();
  }
  
  public ArrayOfHostGraphicsInfo createArrayOfHostGraphicsInfo() {
    return new ArrayOfHostGraphicsInfo();
  }
  
  public HostDatastoreNameConflictConnectInfo createHostDatastoreNameConflictConnectInfo() {
    return new HostDatastoreNameConflictConnectInfo();
  }
  
  public VirtualMachineProfileSpec createVirtualMachineProfileSpec() {
    return new VirtualMachineProfileSpec();
  }
  
  public HostMaintenanceSpec createHostMaintenanceSpec() {
    return new HostMaintenanceSpec();
  }
  
  public NoLicenseEvent createNoLicenseEvent() {
    return new NoLicenseEvent();
  }
  
  public VirtualPCIPassthroughDynamicBackingOption createVirtualPCIPassthroughDynamicBackingOption() {
    return new VirtualPCIPassthroughDynamicBackingOption();
  }
  
  public CustomizationSysprepFailed createCustomizationSysprepFailed() {
    return new CustomizationSysprepFailed();
  }
  
  public DrsEnabledEvent createDrsEnabledEvent() {
    return new DrsEnabledEvent();
  }
  
  public NetworkRollbackEvent createNetworkRollbackEvent() {
    return new NetworkRollbackEvent();
  }
  
  public ArrayOfObjectContent createArrayOfObjectContent() {
    return new ArrayOfObjectContent();
  }
  
  public PerfSampleInfo createPerfSampleInfo() {
    return new PerfSampleInfo();
  }
  
  public ClusterDasAamNodeState createClusterDasAamNodeState() {
    return new ClusterDasAamNodeState();
  }
  
  public DistributedVirtualSwitchPortCriteria createDistributedVirtualSwitchPortCriteria() {
    return new DistributedVirtualSwitchPortCriteria();
  }
  
  public GuestNicInfo createGuestNicInfo() {
    return new GuestNicInfo();
  }
  
  public DvsPortCreatedEvent createDvsPortCreatedEvent() {
    return new DvsPortCreatedEvent();
  }
  
  public HostVnicConnectedToCustomizedDVPortEvent createHostVnicConnectedToCustomizedDVPortEvent() {
    return new HostVnicConnectedToCustomizedDVPortEvent();
  }
  
  public HostStorageSystemDiskLocatorLedResult createHostStorageSystemDiskLocatorLedResult() {
    return new HostStorageSystemDiskLocatorLedResult();
  }
  
  public HostSystemResourceInfo createHostSystemResourceInfo() {
    return new HostSystemResourceInfo();
  }
  
  public ArrayOfHostDiskPartitionInfo createArrayOfHostDiskPartitionInfo() {
    return new ArrayOfHostDiskPartitionInfo();
  }
  
  public DvsHostWentOutOfSyncEvent createDvsHostWentOutOfSyncEvent() {
    return new DvsHostWentOutOfSyncEvent();
  }
  
  public ArrayOfOvfFile createArrayOfOvfFile() {
    return new ArrayOfOvfFile();
  }
  
  public ArrayOfHostProtocolEndpoint createArrayOfHostProtocolEndpoint() {
    return new ArrayOfHostProtocolEndpoint();
  }
  
  public HostSslThumbprintInfo createHostSslThumbprintInfo() {
    return new HostSslThumbprintInfo();
  }
  
  public ClusterDpmHostConfigSpec createClusterDpmHostConfigSpec() {
    return new ClusterDpmHostConfigSpec();
  }
  
  public GuestInfoNamespaceGenerationInfo createGuestInfoNamespaceGenerationInfo() {
    return new GuestInfoNamespaceGenerationInfo();
  }
  
  public ArrayOfHostDatastoreBrowserSearchResults createArrayOfHostDatastoreBrowserSearchResults() {
    return new ArrayOfHostDatastoreBrowserSearchResults();
  }
  
  public VirtualVmxnetOption createVirtualVmxnetOption() {
    return new VirtualVmxnetOption();
  }
  
  public ArrayOfHostOpaqueSwitchPhysicalNicZone createArrayOfHostOpaqueSwitchPhysicalNicZone() {
    return new ArrayOfHostOpaqueSwitchPhysicalNicZone();
  }
  
  public ArrayOfHostAccountSpec createArrayOfHostAccountSpec() {
    return new ArrayOfHostAccountSpec();
  }
  
  public VirtualVmxnet2Option createVirtualVmxnet2Option() {
    return new VirtualVmxnet2Option();
  }
  
  public ArrayOfNetIpConfigSpecIpAddressSpec createArrayOfNetIpConfigSpecIpAddressSpec() {
    return new ArrayOfNetIpConfigSpecIpAddressSpec();
  }
  
  public HostDiskDimensions createHostDiskDimensions() {
    return new HostDiskDimensions();
  }
  
  public EnteringMaintenanceModeEvent createEnteringMaintenanceModeEvent() {
    return new EnteringMaintenanceModeEvent();
  }
  
  public HostPlugStoreTopologyPath createHostPlugStoreTopologyPath() {
    return new HostPlugStoreTopologyPath();
  }
  
  public AuthorizationRole createAuthorizationRole() {
    return new AuthorizationRole();
  }
  
  public ArrayOfHostNvmeDiscoveryLogEntry createArrayOfHostNvmeDiscoveryLogEntry() {
    return new ArrayOfHostNvmeDiscoveryLogEntry();
  }
  
  public ArrayOfTag createArrayOfTag() {
    return new ArrayOfTag();
  }
  
  public HostSerialAttachedTargetTransport createHostSerialAttachedTargetTransport() {
    return new HostSerialAttachedTargetTransport();
  }
  
  public VslmMigrateSpec createVslmMigrateSpec() {
    return new VslmMigrateSpec();
  }
  
  public HostTpmAttestationInfo createHostTpmAttestationInfo() {
    return new HostTpmAttestationInfo();
  }
  
  public ExitStandbyModeFailedEvent createExitStandbyModeFailedEvent() {
    return new ExitStandbyModeFailedEvent();
  }
  
  public FileQueryFlags createFileQueryFlags() {
    return new FileQueryFlags();
  }
  
  public ArrayOfVmfsDatastoreOption createArrayOfVmfsDatastoreOption() {
    return new ArrayOfVmfsDatastoreOption();
  }
  
  public VmEndReplayingEvent createVmEndReplayingEvent() {
    return new VmEndReplayingEvent();
  }
  
  public HostDevice createHostDevice() {
    return new HostDevice();
  }
  
  public StorageDrsPodConfigInfo createStorageDrsPodConfigInfo() {
    return new StorageDrsPodConfigInfo();
  }
  
  public NumPortsProfile createNumPortsProfile() {
    return new NumPortsProfile();
  }
  
  public ArrayOfVirtualMachineCdromInfo createArrayOfVirtualMachineCdromInfo() {
    return new ArrayOfVirtualMachineCdromInfo();
  }
  
  public VirtualDiskLocalPMemBackingInfo createVirtualDiskLocalPMemBackingInfo() {
    return new VirtualDiskLocalPMemBackingInfo();
  }
  
  public ArrayOfHostLowLevelProvisioningManagerFileDeleteSpec createArrayOfHostLowLevelProvisioningManagerFileDeleteSpec() {
    return new ArrayOfHostLowLevelProvisioningManagerFileDeleteSpec();
  }
  
  public ArrayOfBase64Binary createArrayOfBase64Binary() {
    return new ArrayOfBase64Binary();
  }
  
  public ArrayOfFileInfo createArrayOfFileInfo() {
    return new ArrayOfFileInfo();
  }
  
  public ClusterRecommendation createClusterRecommendation() {
    return new ClusterRecommendation();
  }
  
  public ArrayOfProfilePropertyPath createArrayOfProfilePropertyPath() {
    return new ArrayOfProfilePropertyPath();
  }
  
  public ArrayOfHostDhcpService createArrayOfHostDhcpService() {
    return new ArrayOfHostDhcpService();
  }
  
  public NoDatastoresConfiguredEvent createNoDatastoresConfiguredEvent() {
    return new NoDatastoresConfiguredEvent();
  }
  
  public ArrayOfEvent createArrayOfEvent() {
    return new ArrayOfEvent();
  }
  
  public AlarmExpression createAlarmExpression() {
    return new AlarmExpression();
  }
  
  public IncorrectHostInformationEvent createIncorrectHostInformationEvent() {
    return new IncorrectHostInformationEvent();
  }
  
  public HostVMotionInfo createHostVMotionInfo() {
    return new HostVMotionInfo();
  }
  
  public VmVnicPoolReservationViolationRaiseEvent createVmVnicPoolReservationViolationRaiseEvent() {
    return new VmVnicPoolReservationViolationRaiseEvent();
  }
  
  public VMwareDvsLacpGroupSpec createVMwareDvsLacpGroupSpec() {
    return new VMwareDvsLacpGroupSpec();
  }
  
  public ArrayOfHostIpRouteOp createArrayOfHostIpRouteOp() {
    return new ArrayOfHostIpRouteOp();
  }
  
  public GhostDvsProxySwitchDetectedEvent createGhostDvsProxySwitchDetectedEvent() {
    return new GhostDvsProxySwitchDetectedEvent();
  }
  
  public VirtualMachineScsiDiskDeviceInfo createVirtualMachineScsiDiskDeviceInfo() {
    return new VirtualMachineScsiDiskDeviceInfo();
  }
  
  public ProfilePropertyPath createProfilePropertyPath() {
    return new ProfilePropertyPath();
  }
  
  public LinkProfile createLinkProfile() {
    return new LinkProfile();
  }
  
  public HostPlugStoreTopologyTarget createHostPlugStoreTopologyTarget() {
    return new HostPlugStoreTopologyTarget();
  }
  
  public DVSVmVnicNetworkResourcePool createDVSVmVnicNetworkResourcePool() {
    return new DVSVmVnicNetworkResourcePool();
  }
  
  public ScsiLunDescriptor createScsiLunDescriptor() {
    return new ScsiLunDescriptor();
  }
  
  public DatastoreRenamedOnHostEvent createDatastoreRenamedOnHostEvent() {
    return new DatastoreRenamedOnHostEvent();
  }
  
  public ScsiLunDurableName createScsiLunDurableName() {
    return new ScsiLunDurableName();
  }
  
  public OpaqueNetworkTargetInfo createOpaqueNetworkTargetInfo() {
    return new OpaqueNetworkTargetInfo();
  }
  
  public ClusterNotAttemptedVmInfo createClusterNotAttemptedVmInfo() {
    return new ClusterNotAttemptedVmInfo();
  }
  
  public ArrayOfHostVirtualNic createArrayOfHostVirtualNic() {
    return new ArrayOfHostVirtualNic();
  }
  
  public WarningUpgradeEvent createWarningUpgradeEvent() {
    return new WarningUpgradeEvent();
  }
  
  public OvfFile createOvfFile() {
    return new OvfFile();
  }
  
  public OvfCreateImportSpecParams createOvfCreateImportSpecParams() {
    return new OvfCreateImportSpecParams();
  }
  
  public ArrayOfVirtualMachineDisplayTopology createArrayOfVirtualMachineDisplayTopology() {
    return new ArrayOfVirtualMachineDisplayTopology();
  }
  
  public MonthlyTaskScheduler createMonthlyTaskScheduler() {
    return new MonthlyTaskScheduler();
  }
  
  public UplinkPortVlanUntrunkedEvent createUplinkPortVlanUntrunkedEvent() {
    return new UplinkPortVlanUntrunkedEvent();
  }
  
  public ArrayOfExtensionEventTypeInfo createArrayOfExtensionEventTypeInfo() {
    return new ArrayOfExtensionEventTypeInfo();
  }
  
  public HostProtocolEndpoint createHostProtocolEndpoint() {
    return new HostProtocolEndpoint();
  }
  
  public DvsNetworkRuleQualifier createDvsNetworkRuleQualifier() {
    return new DvsNetworkRuleQualifier();
  }
  
  public UpdatedAgentBeingRestartedEvent createUpdatedAgentBeingRestartedEvent() {
    return new UpdatedAgentBeingRestartedEvent();
  }
  
  public ExtensionHealthInfo createExtensionHealthInfo() {
    return new ExtensionHealthInfo();
  }
  
  public ArrayOfHostServiceConfig createArrayOfHostServiceConfig() {
    return new ArrayOfHostServiceConfig();
  }
  
  public HostDiskPartitionLayout createHostDiskPartitionLayout() {
    return new HostDiskPartitionLayout();
  }
  
  public VirtualMachineRelocateSpecDiskLocator createVirtualMachineRelocateSpecDiskLocator() {
    return new VirtualMachineRelocateSpecDiskLocator();
  }
  
  public EventFilterSpecByTime createEventFilterSpecByTime() {
    return new EventFilterSpecByTime();
  }
  
  public ArrayOfDvsTrafficRule createArrayOfDvsTrafficRule() {
    return new ArrayOfDvsTrafficRule();
  }
  
  public ArrayOfStoragePerformanceSummary createArrayOfStoragePerformanceSummary() {
    return new ArrayOfStoragePerformanceSummary();
  }
  
  public GuestInfo createGuestInfo() {
    return new GuestInfo();
  }
  
  public ModeInfo createModeInfo() {
    return new ModeInfo();
  }
  
  public ScheduledTaskDescription createScheduledTaskDescription() {
    return new ScheduledTaskDescription();
  }
  
  public ArrayOfHostScsiTopologyLun createArrayOfHostScsiTopologyLun() {
    return new ArrayOfHostScsiTopologyLun();
  }
  
  public ArrayOfVirtualMachinePciSharedGpuPassthroughInfo createArrayOfVirtualMachinePciSharedGpuPassthroughInfo() {
    return new ArrayOfVirtualMachinePciSharedGpuPassthroughInfo();
  }
  
  public ArrayOfClusterComputeResourceDVSSetting createArrayOfClusterComputeResourceDVSSetting() {
    return new ArrayOfClusterComputeResourceDVSSetting();
  }
  
  public FcoeConfigFcoeCapabilities createFcoeConfigFcoeCapabilities() {
    return new FcoeConfigFcoeCapabilities();
  }
  
  public AlarmFilterSpec createAlarmFilterSpec() {
    return new AlarmFilterSpec();
  }
  
  public VmRelocatedEvent createVmRelocatedEvent() {
    return new VmRelocatedEvent();
  }
  
  public VirtualMachineMetadataManagerVmMetadataOwner createVirtualMachineMetadataManagerVmMetadataOwner() {
    return new VirtualMachineMetadataManagerVmMetadataOwner();
  }
  
  public DvsTrafficRuleset createDvsTrafficRuleset() {
    return new DvsTrafficRuleset();
  }
  
  public DvsTrafficFilterConfig createDvsTrafficFilterConfig() {
    return new DvsTrafficFilterConfig();
  }
  
  public ClusterVmToolsMonitoringSettings createClusterVmToolsMonitoringSettings() {
    return new ClusterVmToolsMonitoringSettings();
  }
  
  public VsanUpgradeSystemNetworkPartitionIssue createVsanUpgradeSystemNetworkPartitionIssue() {
    return new VsanUpgradeSystemNetworkPartitionIssue();
  }
  
  public ArrayOfKmipServerInfo createArrayOfKmipServerInfo() {
    return new ArrayOfKmipServerInfo();
  }
  
  public ExtExtendedProductInfo createExtExtendedProductInfo() {
    return new ExtExtendedProductInfo();
  }
  
  public StorageIOAllocationInfo createStorageIOAllocationInfo() {
    return new StorageIOAllocationInfo();
  }
  
  public ArrayOfHostActiveDirectory createArrayOfHostActiveDirectory() {
    return new ArrayOfHostActiveDirectory();
  }
  
  public VirtualDeviceRemoteDeviceBackingInfo createVirtualDeviceRemoteDeviceBackingInfo() {
    return new VirtualDeviceRemoteDeviceBackingInfo();
  }
  
  public DistributedVirtualSwitchManagerHostContainerFilter createDistributedVirtualSwitchManagerHostContainerFilter() {
    return new DistributedVirtualSwitchManagerHostContainerFilter();
  }
  
  public VirtualDeviceURIBackingInfo createVirtualDeviceURIBackingInfo() {
    return new VirtualDeviceURIBackingInfo();
  }
  
  public ArrayOfMultipleCertificatesVerifyFaultThumbprintData createArrayOfMultipleCertificatesVerifyFaultThumbprintData() {
    return new ArrayOfMultipleCertificatesVerifyFaultThumbprintData();
  }
  
  public HostProfileSerializedHostProfileSpec createHostProfileSerializedHostProfileSpec() {
    return new HostProfileSerializedHostProfileSpec();
  }
  
  public GuestWindowsProgramSpec createGuestWindowsProgramSpec() {
    return new GuestWindowsProgramSpec();
  }
  
  public DasAdmissionControlDisabledEvent createDasAdmissionControlDisabledEvent() {
    return new DasAdmissionControlDisabledEvent();
  }
  
  public ArrayOfHostEventArgument createArrayOfHostEventArgument() {
    return new ArrayOfHostEventArgument();
  }
  
  public HostPlugStoreTopologyDevice createHostPlugStoreTopologyDevice() {
    return new HostPlugStoreTopologyDevice();
  }
  
  public ArrayOfClusterAction createArrayOfClusterAction() {
    return new ArrayOfClusterAction();
  }
  
  public CustomFieldDefRemovedEvent createCustomFieldDefRemovedEvent() {
    return new CustomFieldDefRemovedEvent();
  }
  
  public VmConfigFileQuery createVmConfigFileQuery() {
    return new VmConfigFileQuery();
  }
  
  public LicenseServerUnavailableEvent createLicenseServerUnavailableEvent() {
    return new LicenseServerUnavailableEvent();
  }
  
  public HostDasEnablingEvent createHostDasEnablingEvent() {
    return new HostDasEnablingEvent();
  }
  
  public HostFeatureMask createHostFeatureMask() {
    return new HostFeatureMask();
  }
  
  public HostNicOrderPolicy createHostNicOrderPolicy() {
    return new HostNicOrderPolicy();
  }
  
  public DvsPortJoinPortgroupEvent createDvsPortJoinPortgroupEvent() {
    return new DvsPortJoinPortgroupEvent();
  }
  
  public VirtualDeviceDeviceBackingInfo createVirtualDeviceDeviceBackingInfo() {
    return new VirtualDeviceDeviceBackingInfo();
  }
  
  public ArrayOfHostSriovDevicePoolInfo createArrayOfHostSriovDevicePoolInfo() {
    return new ArrayOfHostSriovDevicePoolInfo();
  }
  
  public VirtualEthernetCardOpaqueNetworkBackingOption createVirtualEthernetCardOpaqueNetworkBackingOption() {
    return new VirtualEthernetCardOpaqueNetworkBackingOption();
  }
  
  public OvfNetworkInfo createOvfNetworkInfo() {
    return new OvfNetworkInfo();
  }
  
  public NetworkPolicyProfile createNetworkPolicyProfile() {
    return new NetworkPolicyProfile();
  }
  
  public ReplicationSpec createReplicationSpec() {
    return new ReplicationSpec();
  }
  
  public CustomizationLinuxPrep createCustomizationLinuxPrep() {
    return new CustomizationLinuxPrep();
  }
  
  public VmStartReplayingEvent createVmStartReplayingEvent() {
    return new VmStartReplayingEvent();
  }
  
  public VirtualController createVirtualController() {
    return new VirtualController();
  }
  
  public OvfCreateDescriptorParams createOvfCreateDescriptorParams() {
    return new OvfCreateDescriptorParams();
  }
  
  public ArrayOfCryptoManagerKmipServerStatus createArrayOfCryptoManagerKmipServerStatus() {
    return new ArrayOfCryptoManagerKmipServerStatus();
  }
  
  public VirtualMachineVMCIDeviceFilterSpec createVirtualMachineVMCIDeviceFilterSpec() {
    return new VirtualMachineVMCIDeviceFilterSpec();
  }
  
  public ArrayOfVStorageObjectAssociationsVmDiskAssociations createArrayOfVStorageObjectAssociationsVmDiskAssociations() {
    return new ArrayOfVStorageObjectAssociationsVmDiskAssociations();
  }
  
  public HostDiskPartitionAttributes createHostDiskPartitionAttributes() {
    return new HostDiskPartitionAttributes();
  }
  
  public ConflictingConfigurationConfig createConflictingConfigurationConfig() {
    return new ConflictingConfigurationConfig();
  }
  
  public ArrayOfVirtualSCSISharing createArrayOfVirtualSCSISharing() {
    return new ArrayOfVirtualSCSISharing();
  }
  
  public ProfilePolicy createProfilePolicy() {
    return new ProfilePolicy();
  }
  
  public ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob createArrayOfDistributedVirtualSwitchKeyedOpaqueBlob() {
    return new ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob();
  }
  
  public HttpNfcLeaseSourceFile createHttpNfcLeaseSourceFile() {
    return new HttpNfcLeaseSourceFile();
  }
  
  public HostOpaqueNetworkInfo createHostOpaqueNetworkInfo() {
    return new HostOpaqueNetworkInfo();
  }
  
  public HostFibreChannelOverEthernetHba createHostFibreChannelOverEthernetHba() {
    return new HostFibreChannelOverEthernetHba();
  }
  
  public HostFirewallRulesetIpNetwork createHostFirewallRulesetIpNetwork() {
    return new HostFirewallRulesetIpNetwork();
  }
  
  public ArrayOfHostCpuIdInfo createArrayOfHostCpuIdInfo() {
    return new ArrayOfHostCpuIdInfo();
  }
  
  public ObjectSpec createObjectSpec() {
    return new ObjectSpec();
  }
  
  public ReplicationInfoDiskSettings createReplicationInfoDiskSettings() {
    return new ReplicationInfoDiskSettings();
  }
  
  public ArrayOfVirtualMachineSummary createArrayOfVirtualMachineSummary() {
    return new ArrayOfVirtualMachineSummary();
  }
  
  public AlarmDescription createAlarmDescription() {
    return new AlarmDescription();
  }
  
  public ArrayOfAutoStartPowerInfo createArrayOfAutoStartPowerInfo() {
    return new ArrayOfAutoStartPowerInfo();
  }
  
  public VMotionLicenseExpiredEvent createVMotionLicenseExpiredEvent() {
    return new VMotionLicenseExpiredEvent();
  }
  
  public HostFileSystemVolume createHostFileSystemVolume() {
    return new HostFileSystemVolume();
  }
  
  public HostIpConfig createHostIpConfig() {
    return new HostIpConfig();
  }
  
  public HostFirewallRulesetRulesetSpec createHostFirewallRulesetRulesetSpec() {
    return new HostFirewallRulesetRulesetSpec();
  }
  
  public VMwareVspanPort createVMwareVspanPort() {
    return new VMwareVspanPort();
  }
  
  public DatastoreMountPathDatastorePair createDatastoreMountPathDatastorePair() {
    return new DatastoreMountPathDatastorePair();
  }
  
  public GuestWindowsFileAttributes createGuestWindowsFileAttributes() {
    return new GuestWindowsFileAttributes();
  }
  
  public ClusterPowerOnVmResult createClusterPowerOnVmResult() {
    return new ClusterPowerOnVmResult();
  }
  
  public ArrayOfIoFilterHostIssue createArrayOfIoFilterHostIssue() {
    return new ArrayOfIoFilterHostIssue();
  }
  
  public VirtualCdromIsoBackingInfo createVirtualCdromIsoBackingInfo() {
    return new VirtualCdromIsoBackingInfo();
  }
  
  public CustomizationFixedName createCustomizationFixedName() {
    return new CustomizationFixedName();
  }
  
  public VirtualSwitchProfile createVirtualSwitchProfile() {
    return new VirtualSwitchProfile();
  }
  
  public HostMultipathInfoFixedLogicalUnitPolicy createHostMultipathInfoFixedLogicalUnitPolicy() {
    return new HostMultipathInfoFixedLogicalUnitPolicy();
  }
  
  public AlreadyAuthenticatedSessionEvent createAlreadyAuthenticatedSessionEvent() {
    return new AlreadyAuthenticatedSessionEvent();
  }
  
  public CryptoSpecNoOp createCryptoSpecNoOp() {
    return new CryptoSpecNoOp();
  }
  
  public VcAgentUpgradeFailedEvent createVcAgentUpgradeFailedEvent() {
    return new VcAgentUpgradeFailedEvent();
  }
  
  public CustomizationSysprep createCustomizationSysprep() {
    return new CustomizationSysprep();
  }
  
  public VmwareUplinkPortTeamingPolicy createVmwareUplinkPortTeamingPolicy() {
    return new VmwareUplinkPortTeamingPolicy();
  }
  
  public HostProfileManagerCompositionValidationResult createHostProfileManagerCompositionValidationResult() {
    return new HostProfileManagerCompositionValidationResult();
  }
  
  public DVSMacLearningPolicy createDVSMacLearningPolicy() {
    return new DVSMacLearningPolicy();
  }
  
  public VimAccountPasswordChangedEvent createVimAccountPasswordChangedEvent() {
    return new VimAccountPasswordChangedEvent();
  }
  
  public ArrayOfDvsServiceConsoleVNicProfile createArrayOfDvsServiceConsoleVNicProfile() {
    return new ArrayOfDvsServiceConsoleVNicProfile();
  }
  
  public ArrayOfHostVmfsRescanResult createArrayOfHostVmfsRescanResult() {
    return new ArrayOfHostVmfsRescanResult();
  }
  
  public DatastoreFileMovedEvent createDatastoreFileMovedEvent() {
    return new DatastoreFileMovedEvent();
  }
  
  public NvdimmHealthInfo createNvdimmHealthInfo() {
    return new NvdimmHealthInfo();
  }
  
  public VirtualUSBRemoteHostBackingOption createVirtualUSBRemoteHostBackingOption() {
    return new VirtualUSBRemoteHostBackingOption();
  }
  
  public ArrayOfVirtualNicManagerNetConfig createArrayOfVirtualNicManagerNetConfig() {
    return new ArrayOfVirtualNicManagerNetConfig();
  }
  
  public VmDiskFileEncryptionInfo createVmDiskFileEncryptionInfo() {
    return new VmDiskFileEncryptionInfo();
  }
  
  public VirtualControllerOption createVirtualControllerOption() {
    return new VirtualControllerOption();
  }
  
  public VmRestartedOnAlternateHostEvent createVmRestartedOnAlternateHostEvent() {
    return new VmRestartedOnAlternateHostEvent();
  }
  
  public ArrayOfClusterDrsMigration createArrayOfClusterDrsMigration() {
    return new ArrayOfClusterDrsMigration();
  }
  
  public PhysicalNicLinkInfo createPhysicalNicLinkInfo() {
    return new PhysicalNicLinkInfo();
  }
  
  public VmFailedStartingSecondaryEvent createVmFailedStartingSecondaryEvent() {
    return new VmFailedStartingSecondaryEvent();
  }
  
  public ArrayOfExtensionTaskTypeInfo createArrayOfExtensionTaskTypeInfo() {
    return new ArrayOfExtensionTaskTypeInfo();
  }
  
  public FailoverLevelRestored createFailoverLevelRestored() {
    return new FailoverLevelRestored();
  }
  
  public HostPcieTargetTransport createHostPcieTargetTransport() {
    return new HostPcieTargetTransport();
  }
  
  public NetIpRouteConfigInfoGateway createNetIpRouteConfigInfoGateway() {
    return new NetIpRouteConfigInfoGateway();
  }
  
  public ComplianceFailure createComplianceFailure() {
    return new ComplianceFailure();
  }
  
  public TemplateUpgradedEvent createTemplateUpgradedEvent() {
    return new TemplateUpgradedEvent();
  }
  
  public ArrayOfComplianceFailureComplianceFailureValues createArrayOfComplianceFailureComplianceFailureValues() {
    return new ArrayOfComplianceFailureComplianceFailureValues();
  }
  
  public HostIsolationIpPingFailedEvent createHostIsolationIpPingFailedEvent() {
    return new HostIsolationIpPingFailedEvent();
  }
  
  public VirtualAHCIController createVirtualAHCIController() {
    return new VirtualAHCIController();
  }
  
  public HostLicenseExpiredEvent createHostLicenseExpiredEvent() {
    return new HostLicenseExpiredEvent();
  }
  
  public ArrayOfKmipClusterInfo createArrayOfKmipClusterInfo() {
    return new ArrayOfKmipClusterInfo();
  }
  
  public ArrayOfAnyURI createArrayOfAnyURI() {
    return new ArrayOfAnyURI();
  }
  
  public VsanUpgradeSystemRogueHostsInClusterIssue createVsanUpgradeSystemRogueHostsInClusterIssue() {
    return new VsanUpgradeSystemRogueHostsInClusterIssue();
  }
  
  public VMwareDvsLacpCapability createVMwareDvsLacpCapability() {
    return new VMwareDvsLacpCapability();
  }
  
  public HttpNfcLeaseCapabilities createHttpNfcLeaseCapabilities() {
    return new HttpNfcLeaseCapabilities();
  }
  
  public GuestAuthSubject createGuestAuthSubject() {
    return new GuestAuthSubject();
  }
  
  public ArrayOfHostHostBusAdapter createArrayOfHostHostBusAdapter() {
    return new ArrayOfHostHostBusAdapter();
  }
  
  public HostProfileManagerCompositionResultResultElement createHostProfileManagerCompositionResultResultElement() {
    return new HostProfileManagerCompositionResultResultElement();
  }
  
  public OvfNetworkMapping createOvfNetworkMapping() {
    return new OvfNetworkMapping();
  }
  
  public VirtualMachineBootOptionsBootableFloppyDevice createVirtualMachineBootOptionsBootableFloppyDevice() {
    return new VirtualMachineBootOptionsBootableFloppyDevice();
  }
  
  public VirtualFloppyDeviceBackingInfo createVirtualFloppyDeviceBackingInfo() {
    return new VirtualFloppyDeviceBackingInfo();
  }
  
  public ArrayOfHostPatchManagerStatus createArrayOfHostPatchManagerStatus() {
    return new ArrayOfHostPatchManagerStatus();
  }
  
  public HourlyTaskScheduler createHourlyTaskScheduler() {
    return new HourlyTaskScheduler();
  }
  
  public ArrayOfAlarmState createArrayOfAlarmState() {
    return new ArrayOfAlarmState();
  }
  
  public VmBeingDeployedEvent createVmBeingDeployedEvent() {
    return new VmBeingDeployedEvent();
  }
  
  public NvdimmSummary createNvdimmSummary() {
    return new NvdimmSummary();
  }
  
  public PerfQuerySpec createPerfQuerySpec() {
    return new PerfQuerySpec();
  }
  
  public ClusterComputeResourceDVSConfigurationValidation createClusterComputeResourceDVSConfigurationValidation() {
    return new ClusterComputeResourceDVSConfigurationValidation();
  }
  
  public MigrationHostErrorEvent createMigrationHostErrorEvent() {
    return new MigrationHostErrorEvent();
  }
  
  public ClusterEVCManagerEVCState createClusterEVCManagerEVCState() {
    return new ClusterEVCManagerEVCState();
  }
  
  public HostSerialAttachedHba createHostSerialAttachedHba() {
    return new HostSerialAttachedHba();
  }
  
  public ArrayOfProfileDeferredPolicyOptionParameter createArrayOfProfileDeferredPolicyOptionParameter() {
    return new ArrayOfProfileDeferredPolicyOptionParameter();
  }
  
  public PhysicalNicNameHint createPhysicalNicNameHint() {
    return new PhysicalNicNameHint();
  }
  
  public ArrayOfDistributedVirtualSwitchHostMemberConfigSpec createArrayOfDistributedVirtualSwitchHostMemberConfigSpec() {
    return new ArrayOfDistributedVirtualSwitchHostMemberConfigSpec();
  }
  
  public DVSSecurityPolicy createDVSSecurityPolicy() {
    return new DVSSecurityPolicy();
  }
  
  public UserUnassignedFromGroup createUserUnassignedFromGroup() {
    return new UserUnassignedFromGroup();
  }
  
  public HostPrimaryAgentNotShortNameEvent createHostPrimaryAgentNotShortNameEvent() {
    return new HostPrimaryAgentNotShortNameEvent();
  }
  
  public ArrayOfHostInternetScsiHbaStaticTarget createArrayOfHostInternetScsiHbaStaticTarget() {
    return new ArrayOfHostInternetScsiHbaStaticTarget();
  }
  
  public VirtualSerialPortPipeBackingOption createVirtualSerialPortPipeBackingOption() {
    return new VirtualSerialPortPipeBackingOption();
  }
  
  public VirtualMachineLegacyNetworkSwitchInfo createVirtualMachineLegacyNetworkSwitchInfo() {
    return new VirtualMachineLegacyNetworkSwitchInfo();
  }
  
  public AlarmActionTriggeredEvent createAlarmActionTriggeredEvent() {
    return new AlarmActionTriggeredEvent();
  }
  
  public DvsVmVnicResourcePoolConfigSpec createDvsVmVnicResourcePoolConfigSpec() {
    return new DvsVmVnicResourcePoolConfigSpec();
  }
  
  public UsbScanCodeSpecModifierType createUsbScanCodeSpecModifierType() {
    return new UsbScanCodeSpecModifierType();
  }
  
  public ArrayOfProductComponentInfo createArrayOfProductComponentInfo() {
    return new ArrayOfProductComponentInfo();
  }
  
  public MacRange createMacRange() {
    return new MacRange();
  }
  
  public StoragePlacementAction createStoragePlacementAction() {
    return new StoragePlacementAction();
  }
  
  public ArrayOfHostFirewallRule createArrayOfHostFirewallRule() {
    return new ArrayOfHostFirewallRule();
  }
  
  public ArrayOfHttpNfcLeaseManifestEntry createArrayOfHttpNfcLeaseManifestEntry() {
    return new ArrayOfHttpNfcLeaseManifestEntry();
  }
  
  public VirtualUSBControllerOption createVirtualUSBControllerOption() {
    return new VirtualUSBControllerOption();
  }
  
  public DasDisabledEvent createDasDisabledEvent() {
    return new DasDisabledEvent();
  }
  
  public VmDiscoveredEvent createVmDiscoveredEvent() {
    return new VmDiscoveredEvent();
  }
  
  public ClusterDrsVmConfigSpec createClusterDrsVmConfigSpec() {
    return new ClusterDrsVmConfigSpec();
  }
  
  public ClusterUsageSummary createClusterUsageSummary() {
    return new ClusterUsageSummary();
  }
  
  public DvsServiceConsoleVNicProfile createDvsServiceConsoleVNicProfile() {
    return new DvsServiceConsoleVNicProfile();
  }
  
  public RollbackEvent createRollbackEvent() {
    return new RollbackEvent();
  }
  
  public RoleAddedEvent createRoleAddedEvent() {
    return new RoleAddedEvent();
  }
  
  public VmLogFileInfo createVmLogFileInfo() {
    return new VmLogFileInfo();
  }
  
  public VirtualCdromPassthroughBackingOption createVirtualCdromPassthroughBackingOption() {
    return new VirtualCdromPassthroughBackingOption();
  }
  
  public HostAdminEnableEvent createHostAdminEnableEvent() {
    return new HostAdminEnableEvent();
  }
  
  public VsanHostRuntimeInfo createVsanHostRuntimeInfo() {
    return new VsanHostRuntimeInfo();
  }
  
  public ArrayOfPhysicalNicNameHint createArrayOfPhysicalNicNameHint() {
    return new ArrayOfPhysicalNicNameHint();
  }
  
  public ExtSolutionManagerInfoTabInfo createExtSolutionManagerInfoTabInfo() {
    return new ExtSolutionManagerInfoTabInfo();
  }
  
  public ParaVirtualSCSIControllerOption createParaVirtualSCSIControllerOption() {
    return new ParaVirtualSCSIControllerOption();
  }
  
  public CustomizationSysprepText createCustomizationSysprepText() {
    return new CustomizationSysprepText();
  }
  
  public ArrayOfVirtualSwitchProfile createArrayOfVirtualSwitchProfile() {
    return new ArrayOfVirtualSwitchProfile();
  }
  
  public ArrayOfDistributedVirtualSwitchManagerCompatibilityResult createArrayOfDistributedVirtualSwitchManagerCompatibilityResult() {
    return new ArrayOfDistributedVirtualSwitchManagerCompatibilityResult();
  }
  
  public CustomizationIPSettings createCustomizationIPSettings() {
    return new CustomizationIPSettings();
  }
  
  public ArrayOfVMwareDvsLacpGroupConfig createArrayOfVMwareDvsLacpGroupConfig() {
    return new ArrayOfVMwareDvsLacpGroupConfig();
  }
  
  public ArrayOfObjectUpdate createArrayOfObjectUpdate() {
    return new ArrayOfObjectUpdate();
  }
  
  public FloppyImageFileInfo createFloppyImageFileInfo() {
    return new FloppyImageFileInfo();
  }
  
  public HostFirewallDefaultPolicy createHostFirewallDefaultPolicy() {
    return new HostFirewallDefaultPolicy();
  }
  
  public ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots createClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots() {
    return new ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots();
  }
  
  public HostLowLevelProvisioningManagerFileReserveSpec createHostLowLevelProvisioningManagerFileReserveSpec() {
    return new HostLowLevelProvisioningManagerFileReserveSpec();
  }
  
  public VmSecondaryEnabledEvent createVmSecondaryEnabledEvent() {
    return new VmSecondaryEnabledEvent();
  }
  
  public ArrayOfClusterAttemptedVmInfo createArrayOfClusterAttemptedVmInfo() {
    return new ArrayOfClusterAttemptedVmInfo();
  }
  
  public HostSpecificationRequireEvent createHostSpecificationRequireEvent() {
    return new HostSpecificationRequireEvent();
  }
  
  public DrsEnteredStandbyModeEvent createDrsEnteredStandbyModeEvent() {
    return new DrsEnteredStandbyModeEvent();
  }
  
  public ExitMaintenanceModeEvent createExitMaintenanceModeEvent() {
    return new ExitMaintenanceModeEvent();
  }
  
  public TaskFilterSpecByUsername createTaskFilterSpecByUsername() {
    return new TaskFilterSpecByUsername();
  }
  
  public VmPrimaryFailoverEvent createVmPrimaryFailoverEvent() {
    return new VmPrimaryFailoverEvent();
  }
  
  public DvsLogNetworkRuleAction createDvsLogNetworkRuleAction() {
    return new DvsLogNetworkRuleAction();
  }
  
  public DvsPortLinkUpEvent createDvsPortLinkUpEvent() {
    return new DvsPortLinkUpEvent();
  }
  
  public FaultToleranceSecondaryConfigInfo createFaultToleranceSecondaryConfigInfo() {
    return new FaultToleranceSecondaryConfigInfo();
  }
  
  public ArrayOfHostScsiTopologyInterface createArrayOfHostScsiTopologyInterface() {
    return new ArrayOfHostScsiTopologyInterface();
  }
  
  public VirtualSCSIPassthroughDeviceBackingInfo createVirtualSCSIPassthroughDeviceBackingInfo() {
    return new VirtualSCSIPassthroughDeviceBackingInfo();
  }
  
  public VmMessageErrorEvent createVmMessageErrorEvent() {
    return new VmMessageErrorEvent();
  }
  
  public HostIpmiInfo createHostIpmiInfo() {
    return new HostIpmiInfo();
  }
  
  public ArrayOfVnicPortArgument createArrayOfVnicPortArgument() {
    return new ArrayOfVnicPortArgument();
  }
  
  public ArrayOfClusterDpmHostConfigSpec createArrayOfClusterDpmHostConfigSpec() {
    return new ArrayOfClusterDpmHostConfigSpec();
  }
  
  public HostMultipathInfoLogicalUnitStorageArrayTypePolicy createHostMultipathInfoLogicalUnitStorageArrayTypePolicy() {
    return new HostMultipathInfoLogicalUnitStorageArrayTypePolicy();
  }
  
  public ArrayOfDvsHostInfrastructureTrafficResource createArrayOfDvsHostInfrastructureTrafficResource() {
    return new ArrayOfDvsHostInfrastructureTrafficResource();
  }
  
  public VmCloneEvent createVmCloneEvent() {
    return new VmCloneEvent();
  }
  
  public HostShutdownEvent createHostShutdownEvent() {
    return new HostShutdownEvent();
  }
  
  public VmGuestStandbyEvent createVmGuestStandbyEvent() {
    return new VmGuestStandbyEvent();
  }
  
  public VirtualParallelPortOption createVirtualParallelPortOption() {
    return new VirtualParallelPortOption();
  }
  
  public ArrayOfExtendedEventPair createArrayOfExtendedEventPair() {
    return new ArrayOfExtendedEventPair();
  }
  
  public ArrayOfOvfResourceMap createArrayOfOvfResourceMap() {
    return new ArrayOfOvfResourceMap();
  }
  
  public ArrayOfCustomizationSpecInfo createArrayOfCustomizationSpecInfo() {
    return new ArrayOfCustomizationSpecInfo();
  }
  
  public VirtualMachineCloneSpec createVirtualMachineCloneSpec() {
    return new VirtualMachineCloneSpec();
  }
  
  public ClusterDasFailoverLevelAdvancedRuntimeInfo createClusterDasFailoverLevelAdvancedRuntimeInfo() {
    return new ClusterDasFailoverLevelAdvancedRuntimeInfo();
  }
  
  public VirtualVideoCardOption createVirtualVideoCardOption() {
    return new VirtualVideoCardOption();
  }
  
  public DistributedVirtualPortgroupProblem createDistributedVirtualPortgroupProblem() {
    return new DistributedVirtualPortgroupProblem();
  }
  
  public ArrayUpdateSpec createArrayUpdateSpec() {
    return new ArrayUpdateSpec();
  }
  
  public DistributedVirtualPortgroupInfo createDistributedVirtualPortgroupInfo() {
    return new DistributedVirtualPortgroupInfo();
  }
  
  public ArrayOfHostStorageSystemScsiLunResult createArrayOfHostStorageSystemScsiLunResult() {
    return new ArrayOfHostStorageSystemScsiLunResult();
  }
  
  public ComplianceLocator createComplianceLocator() {
    return new ComplianceLocator();
  }
  
  public VirtualDeviceConnectOption createVirtualDeviceConnectOption() {
    return new VirtualDeviceConnectOption();
  }
  
  public IpRange createIpRange() {
    return new IpRange();
  }
  
  public VmfsUnmapBandwidthSpec createVmfsUnmapBandwidthSpec() {
    return new VmfsUnmapBandwidthSpec();
  }
  
  public ArrayOfSelectionSet createArrayOfSelectionSet() {
    return new ArrayOfSelectionSet();
  }
  
  public VirtualMachineDefinedProfileSpec createVirtualMachineDefinedProfileSpec() {
    return new VirtualMachineDefinedProfileSpec();
  }
  
  public PasswordField createPasswordField() {
    return new PasswordField();
  }
  
  public HostInternetScsiHbaDiscoveryProperties createHostInternetScsiHbaDiscoveryProperties() {
    return new HostInternetScsiHbaDiscoveryProperties();
  }
  
  public HostLowLevelProvisioningManagerFileReserveResult createHostLowLevelProvisioningManagerFileReserveResult() {
    return new HostLowLevelProvisioningManagerFileReserveResult();
  }
  
  public HostInternetScsiHbaParamValue createHostInternetScsiHbaParamValue() {
    return new HostInternetScsiHbaParamValue();
  }
  
  public HostStorageOperationalInfo createHostStorageOperationalInfo() {
    return new HostStorageOperationalInfo();
  }
  
  public VcAgentUpgradedEvent createVcAgentUpgradedEvent() {
    return new VcAgentUpgradedEvent();
  }
  
  public CustomizationIpGenerator createCustomizationIpGenerator() {
    return new CustomizationIpGenerator();
  }
  
  public HostNetworkTrafficShapingPolicy createHostNetworkTrafficShapingPolicy() {
    return new HostNetworkTrafficShapingPolicy();
  }
  
  public ClusterConfigInfoEx createClusterConfigInfoEx() {
    return new ClusterConfigInfoEx();
  }
  
  public VirtualSoundBlaster16Option createVirtualSoundBlaster16Option() {
    return new VirtualSoundBlaster16Option();
  }
  
  public HostAssignableHardwareConfig createHostAssignableHardwareConfig() {
    return new HostAssignableHardwareConfig();
  }
  
  public ArrayOfEventArgDesc createArrayOfEventArgDesc() {
    return new ArrayOfEventArgDesc();
  }
  
  public PerformanceManagerCounterLevelMapping createPerformanceManagerCounterLevelMapping() {
    return new PerformanceManagerCounterLevelMapping();
  }
  
  public OvfDeploymentOption createOvfDeploymentOption() {
    return new OvfDeploymentOption();
  }
  
  public ClusterHostGroup createClusterHostGroup() {
    return new ClusterHostGroup();
  }
  
  public ArrayOfKernelModuleInfo createArrayOfKernelModuleInfo() {
    return new ArrayOfKernelModuleInfo();
  }
  
  public PowerSystemCapability createPowerSystemCapability() {
    return new PowerSystemCapability();
  }
  
  public VsanUpgradeSystemAPIBrokenIssue createVsanUpgradeSystemAPIBrokenIssue() {
    return new VsanUpgradeSystemAPIBrokenIssue();
  }
  
  public CustomizationSpecInfo createCustomizationSpecInfo() {
    return new CustomizationSpecInfo();
  }
  
  public ArrayOfHostProxySwitchHostLagConfig createArrayOfHostProxySwitchHostLagConfig() {
    return new ArrayOfHostProxySwitchHostLagConfig();
  }
  
  public LicenseServerSource createLicenseServerSource() {
    return new LicenseServerSource();
  }
  
  public DvsFilterParameter createDvsFilterParameter() {
    return new DvsFilterParameter();
  }
  
  public NetIpRouteConfigSpec createNetIpRouteConfigSpec() {
    return new NetIpRouteConfigSpec();
  }
  
  public DVSHealthCheckCapability createDVSHealthCheckCapability() {
    return new DVSHealthCheckCapability();
  }
  
  public VirtualBusLogicController createVirtualBusLogicController() {
    return new VirtualBusLogicController();
  }
  
  public ArrayOfVirtualMachineDynamicPassthroughInfo createArrayOfVirtualMachineDynamicPassthroughInfo() {
    return new ArrayOfVirtualMachineDynamicPassthroughInfo();
  }
  
  public HostNvmeDisconnectSpec createHostNvmeDisconnectSpec() {
    return new HostNvmeDisconnectSpec();
  }
  
  public HostRuntimeInfo createHostRuntimeInfo() {
    return new HostRuntimeInfo();
  }
  
  public ArrayOfClusterGroupSpec createArrayOfClusterGroupSpec() {
    return new ArrayOfClusterGroupSpec();
  }
  
  public HostAssignableHardwareConfigAttributeOverride createHostAssignableHardwareConfigAttributeOverride() {
    return new HostAssignableHardwareConfigAttributeOverride();
  }
  
  public VirtualAHCIControllerOption createVirtualAHCIControllerOption() {
    return new VirtualAHCIControllerOption();
  }
  
  public VAppConfigSpec createVAppConfigSpec() {
    return new VAppConfigSpec();
  }
  
  public ArrayOfHostSnmpDestination createArrayOfHostSnmpDestination() {
    return new ArrayOfHostSnmpDestination();
  }
  
  public OptionProfile createOptionProfile() {
    return new OptionProfile();
  }
  
  public HostScsiTopologyTarget createHostScsiTopologyTarget() {
    return new HostScsiTopologyTarget();
  }
  
  public VirtualMachineUsageOnDatastore createVirtualMachineUsageOnDatastore() {
    return new VirtualMachineUsageOnDatastore();
  }
  
  public VmTimedoutStartingSecondaryEvent createVmTimedoutStartingSecondaryEvent() {
    return new VmTimedoutStartingSecondaryEvent();
  }
  
  public HostProfileManagerCompositionValidationResultResultElement createHostProfileManagerCompositionValidationResultResultElement() {
    return new HostProfileManagerCompositionValidationResultResultElement();
  }
  
  public AlarmStatusChangedEvent createAlarmStatusChangedEvent() {
    return new AlarmStatusChangedEvent();
  }
  
  public DVSNetworkResourceManagementCapability createDVSNetworkResourceManagementCapability() {
    return new DVSNetworkResourceManagementCapability();
  }
  
  public ArrayOfStaticRouteProfile createArrayOfStaticRouteProfile() {
    return new ArrayOfStaticRouteProfile();
  }
  
  public ArrayOfVsanPolicyChangeBatch createArrayOfVsanPolicyChangeBatch() {
    return new ArrayOfVsanPolicyChangeBatch();
  }
  
  public VirtualParallelPortFileBackingOption createVirtualParallelPortFileBackingOption() {
    return new VirtualParallelPortFileBackingOption();
  }
  
  public ArrayOfPrivilegeAvailability createArrayOfPrivilegeAvailability() {
    return new ArrayOfPrivilegeAvailability();
  }
  
  public NetIpRouteConfigSpecGatewaySpec createNetIpRouteConfigSpecGatewaySpec() {
    return new NetIpRouteConfigSpecGatewaySpec();
  }
  
  public DatacenterCreatedEvent createDatacenterCreatedEvent() {
    return new DatacenterCreatedEvent();
  }
  
  public VirtualFloppyImageBackingInfo createVirtualFloppyImageBackingInfo() {
    return new VirtualFloppyImageBackingInfo();
  }
  
  public HostService createHostService() {
    return new HostService();
  }
  
  public VmPortGroupProfile createVmPortGroupProfile() {
    return new VmPortGroupProfile();
  }
  
  public ArrayOfString createArrayOfString() {
    return new ArrayOfString();
  }
  
  public PolicyOption createPolicyOption() {
    return new PolicyOption();
  }
  
  public ArrayOfKeyValue createArrayOfKeyValue() {
    return new ArrayOfKeyValue();
  }
  
  public VmMacAssignedEvent createVmMacAssignedEvent() {
    return new VmMacAssignedEvent();
  }
  
  public VirtualMachineIdeDiskDeviceInfo createVirtualMachineIdeDiskDeviceInfo() {
    return new VirtualMachineIdeDiskDeviceInfo();
  }
  
  public ArrayOfDiskChangeExtent createArrayOfDiskChangeExtent() {
    return new ArrayOfDiskChangeExtent();
  }
  
  public HostCnxFailedEvent createHostCnxFailedEvent() {
    return new HostCnxFailedEvent();
  }
  
  public VMwareUplinkPortOrderPolicy createVMwareUplinkPortOrderPolicy() {
    return new VMwareUplinkPortOrderPolicy();
  }
  
  public VirtualPCIPassthroughDeviceBackingOption createVirtualPCIPassthroughDeviceBackingOption() {
    return new VirtualPCIPassthroughDeviceBackingOption();
  }
  
  public DvsUpgradeRejectedEvent createDvsUpgradeRejectedEvent() {
    return new DvsUpgradeRejectedEvent();
  }
  
  public VirtualE1000 createVirtualE1000() {
    return new VirtualE1000();
  }
  
  public DVSUplinkPortPolicy createDVSUplinkPortPolicy() {
    return new DVSUplinkPortPolicy();
  }
  
  public ArrayOfClusterComputeResourceValidationResultBase createArrayOfClusterComputeResourceValidationResultBase() {
    return new ArrayOfClusterComputeResourceValidationResultBase();
  }
  
  public HostRdmaDeviceCapability createHostRdmaDeviceCapability() {
    return new HostRdmaDeviceCapability();
  }
  
  public VMFSDatastoreExpandedEvent createVMFSDatastoreExpandedEvent() {
    return new VMFSDatastoreExpandedEvent();
  }
  
  public ExtManagedEntityInfo createExtManagedEntityInfo() {
    return new ExtManagedEntityInfo();
  }
  
  public HostMultipathStateInfo createHostMultipathStateInfo() {
    return new HostMultipathStateInfo();
  }
  
  public ReplicationVmProgressInfo createReplicationVmProgressInfo() {
    return new ReplicationVmProgressInfo();
  }
  
  public VirtualMachineFileLayoutSnapshotLayout createVirtualMachineFileLayoutSnapshotLayout() {
    return new VirtualMachineFileLayoutSnapshotLayout();
  }
  
  public GeneralVmWarningEvent createGeneralVmWarningEvent() {
    return new GeneralVmWarningEvent();
  }
  
  public HostSystemIdentificationInfo createHostSystemIdentificationInfo() {
    return new HostSystemIdentificationInfo();
  }
  
  public ArrayOfHostUnresolvedVmfsVolume createArrayOfHostUnresolvedVmfsVolume() {
    return new ArrayOfHostUnresolvedVmfsVolume();
  }
  
  public AndAlarmExpression createAndAlarmExpression() {
    return new AndAlarmExpression();
  }
  
  public TeamingMatchEvent createTeamingMatchEvent() {
    return new TeamingMatchEvent();
  }
  
  public ArrayOfVMwareDvsLacpGroupSpec createArrayOfVMwareDvsLacpGroupSpec() {
    return new ArrayOfVMwareDvsLacpGroupSpec();
  }
  
  public ScheduledTaskRemovedEvent createScheduledTaskRemovedEvent() {
    return new ScheduledTaskRemovedEvent();
  }
  
  public HostCnxFailedNoConnectionEvent createHostCnxFailedNoConnectionEvent() {
    return new HostCnxFailedNoConnectionEvent();
  }
  
  public ProfileAssociatedEvent createProfileAssociatedEvent() {
    return new ProfileAssociatedEvent();
  }
  
  public KernelModuleSectionInfo createKernelModuleSectionInfo() {
    return new KernelModuleSectionInfo();
  }
  
  public VirtualUSBXHCIController createVirtualUSBXHCIController() {
    return new VirtualUSBXHCIController();
  }
  
  public VirtualMachineSoundInfo createVirtualMachineSoundInfo() {
    return new VirtualMachineSoundInfo();
  }
  
  public HostNetworkSecurityPolicy createHostNetworkSecurityPolicy() {
    return new HostNetworkSecurityPolicy();
  }
  
  public HostNetworkResourceRuntime createHostNetworkResourceRuntime() {
    return new HostNetworkResourceRuntime();
  }
  
  public ArrayOfSelectionSpec createArrayOfSelectionSpec() {
    return new ArrayOfSelectionSpec();
  }
  
  public NetIpConfigInfo createNetIpConfigInfo() {
    return new NetIpConfigInfo();
  }
  
  public ClusterComputeResourceHostConfigurationValidation createClusterComputeResourceHostConfigurationValidation() {
    return new ClusterComputeResourceHostConfigurationValidation();
  }
  
  public StorageDrsPlacementRankVmSpec createStorageDrsPlacementRankVmSpec() {
    return new StorageDrsPlacementRankVmSpec();
  }
  
  public AlarmSnmpCompletedEvent createAlarmSnmpCompletedEvent() {
    return new AlarmSnmpCompletedEvent();
  }
  
  public ReplicationGroupId createReplicationGroupId() {
    return new ReplicationGroupId();
  }
  
  public CryptoSpec createCryptoSpec() {
    return new CryptoSpec();
  }
  
  public DVSNetworkResourcePoolAllocationInfo createDVSNetworkResourcePoolAllocationInfo() {
    return new DVSNetworkResourcePoolAllocationInfo();
  }
  
  public VirtualMachineTargetInfo createVirtualMachineTargetInfo() {
    return new VirtualMachineTargetInfo();
  }
  
  public ClusterDasDataSummary createClusterDasDataSummary() {
    return new ClusterDasDataSummary();
  }
  
  public VirtualMachineDiskDeviceInfo createVirtualMachineDiskDeviceInfo() {
    return new VirtualMachineDiskDeviceInfo();
  }
  
  public EventAlarmExpression createEventAlarmExpression() {
    return new EventAlarmExpression();
  }
  
  public VirtualMachineEmptyProfileSpec createVirtualMachineEmptyProfileSpec() {
    return new VirtualMachineEmptyProfileSpec();
  }
  
  public DrsRuleViolationEvent createDrsRuleViolationEvent() {
    return new DrsRuleViolationEvent();
  }
  
  public ArrayOfClusterDasAamNodeState createArrayOfClusterDasAamNodeState() {
    return new ArrayOfClusterDasAamNodeState();
  }
  
  public HostNvmeSpec createHostNvmeSpec() {
    return new HostNvmeSpec();
  }
  
  public ArrayOfHostSslThumbprintInfo createArrayOfHostSslThumbprintInfo() {
    return new ArrayOfHostSslThumbprintInfo();
  }
  
  public VirtualSCSIPassthroughDeviceBackingOption createVirtualSCSIPassthroughDeviceBackingOption() {
    return new VirtualSCSIPassthroughDeviceBackingOption();
  }
  
  public SingleMac createSingleMac() {
    return new SingleMac();
  }
  
  public ClusterDasHostInfo createClusterDasHostInfo() {
    return new ClusterDasHostInfo();
  }
  
  public ClusterDasFdmHostState createClusterDasFdmHostState() {
    return new ClusterDasFdmHostState();
  }
  
  public ArrayOfCryptoManagerKmipClusterStatus createArrayOfCryptoManagerKmipClusterStatus() {
    return new ArrayOfCryptoManagerKmipClusterStatus();
  }
  
  public ArrayOfHostDiskPartitionBlockRange createArrayOfHostDiskPartitionBlockRange() {
    return new ArrayOfHostDiskPartitionBlockRange();
  }
  
  public ArrayOfDistributedVirtualSwitchHostMember createArrayOfDistributedVirtualSwitchHostMember() {
    return new ArrayOfDistributedVirtualSwitchHostMember();
  }
  
  public ArrayOfVAppPropertySpec createArrayOfVAppPropertySpec() {
    return new ArrayOfVAppPropertySpec();
  }
  
  public Action createAction() {
    return new Action();
  }
  
  public StorageDrsIoLoadBalanceConfig createStorageDrsIoLoadBalanceConfig() {
    return new StorageDrsIoLoadBalanceConfig();
  }
  
  public VirtualSerialPortPipeBackingInfo createVirtualSerialPortPipeBackingInfo() {
    return new VirtualSerialPortPipeBackingInfo();
  }
  
  public VmNvramFileInfo createVmNvramFileInfo() {
    return new VmNvramFileInfo();
  }
  
  public VmDiskFileInfo createVmDiskFileInfo() {
    return new VmDiskFileInfo();
  }
  
  public ArrayOfLocalizableMessage createArrayOfLocalizableMessage() {
    return new ArrayOfLocalizableMessage();
  }
  
  public LicenseDiagnostics createLicenseDiagnostics() {
    return new LicenseDiagnostics();
  }
  
  public ArrayOfScsiLunDescriptor createArrayOfScsiLunDescriptor() {
    return new ArrayOfScsiLunDescriptor();
  }
  
  public CustomizationName createCustomizationName() {
    return new CustomizationName();
  }
  
  public ArrayOfVirtualMachineFileLayoutExDiskUnit createArrayOfVirtualMachineFileLayoutExDiskUnit() {
    return new ArrayOfVirtualMachineFileLayoutExDiskUnit();
  }
  
  public SDDCBase createSDDCBase() {
    return new SDDCBase();
  }
  
  public ArrayOfGuestRegKeyRecordSpec createArrayOfGuestRegKeyRecordSpec() {
    return new ArrayOfGuestRegKeyRecordSpec();
  }
  
  public BaseConfigInfoDiskFileBackingInfo createBaseConfigInfoDiskFileBackingInfo() {
    return new BaseConfigInfoDiskFileBackingInfo();
  }
  
  public EventFilterSpecByUsername createEventFilterSpecByUsername() {
    return new EventFilterSpecByUsername();
  }
  
  public ArrayOfImportSpec createArrayOfImportSpec() {
    return new ArrayOfImportSpec();
  }
  
  public VmSecondaryDisabledEvent createVmSecondaryDisabledEvent() {
    return new VmSecondaryDisabledEvent();
  }
  
  public StorageDrsSpaceLoadBalanceConfig createStorageDrsSpaceLoadBalanceConfig() {
    return new StorageDrsSpaceLoadBalanceConfig();
  }
  
  public HostVirtualNicConfig createHostVirtualNicConfig() {
    return new HostVirtualNicConfig();
  }
  
  public VmRelayoutUpToDateEvent createVmRelayoutUpToDateEvent() {
    return new VmRelayoutUpToDateEvent();
  }
  
  public DistributedVirtualSwitchHostMember createDistributedVirtualSwitchHostMember() {
    return new DistributedVirtualSwitchHostMember();
  }
  
  public HostSystemInfo createHostSystemInfo() {
    return new HostSystemInfo();
  }
  
  public DasHostFailedEvent createDasHostFailedEvent() {
    return new DasHostFailedEvent();
  }
  
  public HostFibreChannelTargetTransport createHostFibreChannelTargetTransport() {
    return new HostFibreChannelTargetTransport();
  }
  
  public NetDhcpConfigSpec createNetDhcpConfigSpec() {
    return new NetDhcpConfigSpec();
  }
  
  public DvsVNicProfile createDvsVNicProfile() {
    return new DvsVNicProfile();
  }
  
  public HostVirtualSwitchSimpleBridge createHostVirtualSwitchSimpleBridge() {
    return new HostVirtualSwitchSimpleBridge();
  }
  
  public HostWwnChangedEvent createHostWwnChangedEvent() {
    return new HostWwnChangedEvent();
  }
  
  public VirtualMachineDefaultPowerOpInfo createVirtualMachineDefaultPowerOpInfo() {
    return new VirtualMachineDefaultPowerOpInfo();
  }
  
  public PermissionRemovedEvent createPermissionRemovedEvent() {
    return new PermissionRemovedEvent();
  }
  
  public AlarmEventArgument createAlarmEventArgument() {
    return new AlarmEventArgument();
  }
  
  public HostForceMountedInfo createHostForceMountedInfo() {
    return new HostForceMountedInfo();
  }
  
  public ProfileRemovedEvent createProfileRemovedEvent() {
    return new ProfileRemovedEvent();
  }
  
  public ArrayOfFaultsByHost createArrayOfFaultsByHost() {
    return new ArrayOfFaultsByHost();
  }
  
  public ComplianceFailureComplianceFailureValues createComplianceFailureComplianceFailureValues() {
    return new ComplianceFailureComplianceFailureValues();
  }
  
  public VmMacChangedEvent createVmMacChangedEvent() {
    return new VmMacChangedEvent();
  }
  
  public HostNonCompliantEvent createHostNonCompliantEvent() {
    return new HostNonCompliantEvent();
  }
  
  public ArrayOfPhysicalNicIpHint createArrayOfPhysicalNicIpHint() {
    return new ArrayOfPhysicalNicIpHint();
  }
  
  public DvsVmVnicNetworkResourcePoolRuntimeInfo createDvsVmVnicNetworkResourcePoolRuntimeInfo() {
    return new DvsVmVnicNetworkResourcePoolRuntimeInfo();
  }
  
  public CustomizationStatelessIpV6Generator createCustomizationStatelessIpV6Generator() {
    return new CustomizationStatelessIpV6Generator();
  }
  
  public HostDatastoreSystemCapabilities createHostDatastoreSystemCapabilities() {
    return new HostDatastoreSystemCapabilities();
  }
  
  public UserUpgradeEvent createUserUpgradeEvent() {
    return new UserUpgradeEvent();
  }
  
  public ArrayOfHostPortGroup createArrayOfHostPortGroup() {
    return new ArrayOfHostPortGroup();
  }
  
  public ArrayOfVStorageObjectSnapshotInfoVStorageObjectSnapshot createArrayOfVStorageObjectSnapshotInfoVStorageObjectSnapshot() {
    return new ArrayOfVStorageObjectSnapshotInfoVStorageObjectSnapshot();
  }
  
  public ArrayOfProfilePolicyMetadata createArrayOfProfilePolicyMetadata() {
    return new ArrayOfProfilePolicyMetadata();
  }
  
  public VirtualMachineContentLibraryItemInfo createVirtualMachineContentLibraryItemInfo() {
    return new VirtualMachineContentLibraryItemInfo();
  }
  
  public PhysicalNicCdpInfo createPhysicalNicCdpInfo() {
    return new PhysicalNicCdpInfo();
  }
  
  public HostIpRouteEntry createHostIpRouteEntry() {
    return new HostIpRouteEntry();
  }
  
  public RoleRemovedEvent createRoleRemovedEvent() {
    return new RoleRemovedEvent();
  }
  
  public HostCnxFailedNotFoundEvent createHostCnxFailedNotFoundEvent() {
    return new HostCnxFailedNotFoundEvent();
  }
  
  public LinkDiscoveryProtocolConfig createLinkDiscoveryProtocolConfig() {
    return new LinkDiscoveryProtocolConfig();
  }
  
  public HostInternetScsiHbaIPCapabilities createHostInternetScsiHbaIPCapabilities() {
    return new HostInternetScsiHbaIPCapabilities();
  }
  
  public ServiceLocatorCredential createServiceLocatorCredential() {
    return new ServiceLocatorCredential();
  }
  
  public HostPatchManagerLocator createHostPatchManagerLocator() {
    return new HostPatchManagerLocator();
  }
  
  public UsbScanCodeSpecKeyEvent createUsbScanCodeSpecKeyEvent() {
    return new UsbScanCodeSpecKeyEvent();
  }
  
  public ProfileSimpleExpression createProfileSimpleExpression() {
    return new ProfileSimpleExpression();
  }
  
  public ResourcePoolEventArgument createResourcePoolEventArgument() {
    return new ResourcePoolEventArgument();
  }
  
  public ArrayOfLicenseFeatureInfo createArrayOfLicenseFeatureInfo() {
    return new ArrayOfLicenseFeatureInfo();
  }
  
  public VirtualMachineParallelInfo createVirtualMachineParallelInfo() {
    return new VirtualMachineParallelInfo();
  }
  
  public ArrayOfVmPortGroupProfile createArrayOfVmPortGroupProfile() {
    return new ArrayOfVmPortGroupProfile();
  }
  
  public VsanUpgradeSystemPreflightCheckIssue createVsanUpgradeSystemPreflightCheckIssue() {
    return new VsanUpgradeSystemPreflightCheckIssue();
  }
  
  public ArrayOfDVSNetworkResourcePool createArrayOfDVSNetworkResourcePool() {
    return new ArrayOfDVSNetworkResourcePool();
  }
  
  public LongPolicy createLongPolicy() {
    return new LongPolicy();
  }
  
  public SelectionSet createSelectionSet() {
    return new SelectionSet();
  }
  
  public VmConfigFileInfo createVmConfigFileInfo() {
    return new VmConfigFileInfo();
  }
  
  public ArrayOfHostProfileManagerHostToConfigSpecMap createArrayOfHostProfileManagerHostToConfigSpecMap() {
    return new ArrayOfHostProfileManagerHostToConfigSpecMap();
  }
  
  public DistributedVirtualSwitchInfo createDistributedVirtualSwitchInfo() {
    return new DistributedVirtualSwitchInfo();
  }
  
  public ArrayOfVAppOvfSectionSpec createArrayOfVAppOvfSectionSpec() {
    return new ArrayOfVAppOvfSectionSpec();
  }
  
  public HostMemberUplinkHealthCheckResult createHostMemberUplinkHealthCheckResult() {
    return new HostMemberUplinkHealthCheckResult();
  }
  
  public OvfResourceMap createOvfResourceMap() {
    return new OvfResourceMap();
  }
  
  public ArrayOfHostLowLevelProvisioningManagerFileReserveResult createArrayOfHostLowLevelProvisioningManagerFileReserveResult() {
    return new ArrayOfHostLowLevelProvisioningManagerFileReserveResult();
  }
  
  public VirtualE1000EOption createVirtualE1000EOption() {
    return new VirtualE1000EOption();
  }
  
  public VmPoweredOnEvent createVmPoweredOnEvent() {
    return new VmPoweredOnEvent();
  }
  
  public ClusterFixedSizeSlotPolicy createClusterFixedSizeSlotPolicy() {
    return new ClusterFixedSizeSlotPolicy();
  }
  
  public ArrayOfHostNvmeController createArrayOfHostNvmeController() {
    return new ArrayOfHostNvmeController();
  }
  
  public HostMonitoringStateChangedEvent createHostMonitoringStateChangedEvent() {
    return new HostMonitoringStateChangedEvent();
  }
  
  public LatencySensitivity createLatencySensitivity() {
    return new LatencySensitivity();
  }
  
  public ArrayOfPhysicalNicProfile createArrayOfPhysicalNicProfile() {
    return new ArrayOfPhysicalNicProfile();
  }
  
  public ClusterDasData createClusterDasData() {
    return new ClusterDasData();
  }
  
  public StorageDrsPodSelectionSpec createStorageDrsPodSelectionSpec() {
    return new StorageDrsPodSelectionSpec();
  }
  
  public HostMultipathInfoLogicalUnit createHostMultipathInfoLogicalUnit() {
    return new HostMultipathInfoLogicalUnit();
  }
  
  public DvsVmVnicResourceAllocation createDvsVmVnicResourceAllocation() {
    return new DvsVmVnicResourceAllocation();
  }
  
  public VmResourcePoolMovedEvent createVmResourcePoolMovedEvent() {
    return new VmResourcePoolMovedEvent();
  }
  
  public ArrayOfEntityBackupConfig createArrayOfEntityBackupConfig() {
    return new ArrayOfEntityBackupConfig();
  }
  
  public VMwareIpfixConfig createVMwareIpfixConfig() {
    return new VMwareIpfixConfig();
  }
  
  public DistributedVirtualSwitchHostMemberBacking createDistributedVirtualSwitchHostMemberBacking() {
    return new DistributedVirtualSwitchHostMemberBacking();
  }
  
  public GeneralHostWarningEvent createGeneralHostWarningEvent() {
    return new GeneralHostWarningEvent();
  }
  
  public DvsSystemTrafficNetworkRuleQualifier createDvsSystemTrafficNetworkRuleQualifier() {
    return new DvsSystemTrafficNetworkRuleQualifier();
  }
  
  public VirtualPS2ControllerOption createVirtualPS2ControllerOption() {
    return new VirtualPS2ControllerOption();
  }
  
  public DvsPortConnectedEvent createDvsPortConnectedEvent() {
    return new DvsPortConnectedEvent();
  }
  
  public ArrayOfHostFirewallRuleset createArrayOfHostFirewallRuleset() {
    return new ArrayOfHostFirewallRuleset();
  }
  
  public IpPoolAssociation createIpPoolAssociation() {
    return new IpPoolAssociation();
  }
  
  public HostDeploymentInfo createHostDeploymentInfo() {
    return new HostDeploymentInfo();
  }
  
  public OnceTaskScheduler createOnceTaskScheduler() {
    return new OnceTaskScheduler();
  }
  
  public ProfilePolicyOptionMetadata createProfilePolicyOptionMetadata() {
    return new ProfilePolicyOptionMetadata();
  }
  
  public TemplateConfigFileInfo createTemplateConfigFileInfo() {
    return new TemplateConfigFileInfo();
  }
  
  public WeeklyTaskScheduler createWeeklyTaskScheduler() {
    return new WeeklyTaskScheduler();
  }
  
  public ArrayOfProfilePolicy createArrayOfProfilePolicy() {
    return new ArrayOfProfilePolicy();
  }
  
  public HostNewNetworkConnectInfo createHostNewNetworkConnectInfo() {
    return new HostNewNetworkConnectInfo();
  }
  
  public DynamicArray createDynamicArray() {
    return new DynamicArray();
  }
  
  public VnicPortArgument createVnicPortArgument() {
    return new VnicPortArgument();
  }
  
  public GuestFileAttributes createGuestFileAttributes() {
    return new GuestFileAttributes();
  }
  
  public Tag createTag() {
    return new Tag();
  }
  
  public VMwareUplinkLacpPolicy createVMwareUplinkLacpPolicy() {
    return new VMwareUplinkLacpPolicy();
  }
  
  public ArrayOfVirtualMachineNetworkInfo createArrayOfVirtualMachineNetworkInfo() {
    return new ArrayOfVirtualMachineNetworkInfo();
  }
  
  public ArrayOfHostHardwareElementInfo createArrayOfHostHardwareElementInfo() {
    return new ArrayOfHostHardwareElementInfo();
  }
  
  public PerformanceStatisticsDescription createPerformanceStatisticsDescription() {
    return new PerformanceStatisticsDescription();
  }
  
  public ScheduledTaskEvent createScheduledTaskEvent() {
    return new ScheduledTaskEvent();
  }
  
  public ClusterComputeResourceHostConfigurationProfile createClusterComputeResourceHostConfigurationProfile() {
    return new ClusterComputeResourceHostConfigurationProfile();
  }
  
  public VirtualDiskSparseVer2BackingOption createVirtualDiskSparseVer2BackingOption() {
    return new VirtualDiskSparseVer2BackingOption();
  }
  
  public HostVirtualSwitchAutoBridge createHostVirtualSwitchAutoBridge() {
    return new HostVirtualSwitchAutoBridge();
  }
  
  public HostSecuritySpec createHostSecuritySpec() {
    return new HostSecuritySpec();
  }
  
  public VsanHostClusterStatusStateCompletionEstimate createVsanHostClusterStatusStateCompletionEstimate() {
    return new VsanHostClusterStatusStateCompletionEstimate();
  }
  
  public AuthorizationDescription createAuthorizationDescription() {
    return new AuthorizationDescription();
  }
  
  public HostVirtualNic createHostVirtualNic() {
    return new HostVirtualNic();
  }
  
  public HostBootDevice createHostBootDevice() {
    return new HostBootDevice();
  }
  
  public HostCertificateManagerCertificateInfo createHostCertificateManagerCertificateInfo() {
    return new HostCertificateManagerCertificateInfo();
  }
  
  public DrsVmMigratedEvent createDrsVmMigratedEvent() {
    return new DrsVmMigratedEvent();
  }
  
  public SingleIp createSingleIp() {
    return new SingleIp();
  }
  
  public HostProxySwitchSpec createHostProxySwitchSpec() {
    return new HostProxySwitchSpec();
  }
  
  public HostLocalPortCreatedEvent createHostLocalPortCreatedEvent() {
    return new HostLocalPortCreatedEvent();
  }
  
  public AlarmSpec createAlarmSpec() {
    return new AlarmSpec();
  }
  
  public ArrayOfPerfSampleInfo createArrayOfPerfSampleInfo() {
    return new ArrayOfPerfSampleInfo();
  }
  
  public StaticRouteProfile createStaticRouteProfile() {
    return new StaticRouteProfile();
  }
  
  public ArrayOfSoftwarePackage createArrayOfSoftwarePackage() {
    return new ArrayOfSoftwarePackage();
  }
  
  public VASAStorageArray createVASAStorageArray() {
    return new VASAStorageArray();
  }
  
  public HostMemoryProfile createHostMemoryProfile() {
    return new HostMemoryProfile();
  }
  
  public VmInstanceUuidConflictEvent createVmInstanceUuidConflictEvent() {
    return new VmInstanceUuidConflictEvent();
  }
  
  public ArrayOfHostVirtualSwitch createArrayOfHostVirtualSwitch() {
    return new ArrayOfHostVirtualSwitch();
  }
  
  public ResourcePoolQuickStats createResourcePoolQuickStats() {
    return new ResourcePoolQuickStats();
  }
  
  public CustomizationIdentitySettings createCustomizationIdentitySettings() {
    return new CustomizationIdentitySettings();
  }
  
  public ProfileUpdateFailedUpdateFailure createProfileUpdateFailedUpdateFailure() {
    return new ProfileUpdateFailedUpdateFailure();
  }
  
  public ScheduledHardwareUpgradeInfo createScheduledHardwareUpgradeInfo() {
    return new ScheduledHardwareUpgradeInfo();
  }
  
  public ClusterComplianceCheckedEvent createClusterComplianceCheckedEvent() {
    return new ClusterComplianceCheckedEvent();
  }
  
  public StorageMigrationAction createStorageMigrationAction() {
    return new StorageMigrationAction();
  }
  
  public ResourcePoolReconfiguredEvent createResourcePoolReconfiguredEvent() {
    return new ResourcePoolReconfiguredEvent();
  }
  
  public VsanPolicyCost createVsanPolicyCost() {
    return new VsanPolicyCost();
  }
  
  public UnlicensedVirtualMachinesFoundEvent createUnlicensedVirtualMachinesFoundEvent() {
    return new UnlicensedVirtualMachinesFoundEvent();
  }
  
  public HostVffsSpec createHostVffsSpec() {
    return new HostVffsSpec();
  }
  
  public AlarmCreatedEvent createAlarmCreatedEvent() {
    return new AlarmCreatedEvent();
  }
  
  public VmStaticMacConflictEvent createVmStaticMacConflictEvent() {
    return new VmStaticMacConflictEvent();
  }
  
  public ArrayOfVsanUpgradeSystemUpgradeHistoryItem createArrayOfVsanUpgradeSystemUpgradeHistoryItem() {
    return new ArrayOfVsanUpgradeSystemUpgradeHistoryItem();
  }
  
  public ArrayOfClusterHostRecommendation createArrayOfClusterHostRecommendation() {
    return new ArrayOfClusterHostRecommendation();
  }
  
  public VmRelayoutSuccessfulEvent createVmRelayoutSuccessfulEvent() {
    return new VmRelayoutSuccessfulEvent();
  }
  
  public OvfValidateHostParams createOvfValidateHostParams() {
    return new OvfValidateHostParams();
  }
  
  public VirtualHdAudioCardOption createVirtualHdAudioCardOption() {
    return new VirtualHdAudioCardOption();
  }
  
  public VmUuidAssignedEvent createVmUuidAssignedEvent() {
    return new VmUuidAssignedEvent();
  }
  
  public DasAdmissionControlEnabledEvent createDasAdmissionControlEnabledEvent() {
    return new DasAdmissionControlEnabledEvent();
  }
  
  public HostActiveDirectorySpec createHostActiveDirectorySpec() {
    return new HostActiveDirectorySpec();
  }
  
  public VmPowerOffOnIsolationEvent createVmPowerOffOnIsolationEvent() {
    return new VmPowerOffOnIsolationEvent();
  }
  
  public ProfileExecuteError createProfileExecuteError() {
    return new ProfileExecuteError();
  }
  
  public ArrayOfVMwareDVSPvlanMapEntry createArrayOfVMwareDVSPvlanMapEntry() {
    return new ArrayOfVMwareDVSPvlanMapEntry();
  }
  
  public ArrayOfGuestStackInfo createArrayOfGuestStackInfo() {
    return new ArrayOfGuestStackInfo();
  }
  
  public VvolDatastoreInfo createVvolDatastoreInfo() {
    return new VvolDatastoreInfo();
  }
  
  public ArrayOfHostPlugStoreTopologyDevice createArrayOfHostPlugStoreTopologyDevice() {
    return new ArrayOfHostPlugStoreTopologyDevice();
  }
  
  public ArrayOfNasStorageProfile createArrayOfNasStorageProfile() {
    return new ArrayOfNasStorageProfile();
  }
  
  public VirtualUSBController createVirtualUSBController() {
    return new VirtualUSBController();
  }
  
  public ArrayOfVirtualMachineConfigOptionDescriptor createArrayOfVirtualMachineConfigOptionDescriptor() {
    return new ArrayOfVirtualMachineConfigOptionDescriptor();
  }
  
  public AdminPasswordNotChangedEvent createAdminPasswordNotChangedEvent() {
    return new AdminPasswordNotChangedEvent();
  }
  
  public ArrayOfProfileMetadata createArrayOfProfileMetadata() {
    return new ArrayOfProfileMetadata();
  }
  
  public VirtualVmxnet3Vrdma createVirtualVmxnet3Vrdma() {
    return new VirtualVmxnet3Vrdma();
  }
  
  public ClusterDrsVmConfigInfo createClusterDrsVmConfigInfo() {
    return new ClusterDrsVmConfigInfo();
  }
  
  public DatastorePrincipalConfigured createDatastorePrincipalConfigured() {
    return new DatastorePrincipalConfigured();
  }
  
  public VirtualUSB createVirtualUSB() {
    return new VirtualUSB();
  }
  
  public FaultToleranceSecondaryOpResult createFaultToleranceSecondaryOpResult() {
    return new FaultToleranceSecondaryOpResult();
  }
  
  public ProfileCompositePolicyOptionMetadata createProfileCompositePolicyOptionMetadata() {
    return new ProfileCompositePolicyOptionMetadata();
  }
  
  public CustomizationIdentification createCustomizationIdentification() {
    return new CustomizationIdentification();
  }
  
  public GeneralHostErrorEvent createGeneralHostErrorEvent() {
    return new GeneralHostErrorEvent();
  }
  
  public VimVasaProviderStatePerArray createVimVasaProviderStatePerArray() {
    return new VimVasaProviderStatePerArray();
  }
  
  public VirtualMachineMetadataManagerVmMetadataInput createVirtualMachineMetadataManagerVmMetadataInput() {
    return new VirtualMachineMetadataManagerVmMetadataInput();
  }
  
  public DVSCreateSpec createDVSCreateSpec() {
    return new DVSCreateSpec();
  }
  
  public CryptoSpecEncrypt createCryptoSpecEncrypt() {
    return new CryptoSpecEncrypt();
  }
  
  public DVSBackupRestoreCapability createDVSBackupRestoreCapability() {
    return new DVSBackupRestoreCapability();
  }
  
  public HostPatchManagerStatusPrerequisitePatch createHostPatchManagerStatusPrerequisitePatch() {
    return new HostPatchManagerStatusPrerequisitePatch();
  }
  
  public VirtualTPMOption createVirtualTPMOption() {
    return new VirtualTPMOption();
  }
  
  public DvsIpNetworkRuleQualifier createDvsIpNetworkRuleQualifier() {
    return new DvsIpNetworkRuleQualifier();
  }
  
  public UpdateVirtualMachineFilesResultFailedVmFileInfo createUpdateVirtualMachineFilesResultFailedVmFileInfo() {
    return new UpdateVirtualMachineFilesResultFailedVmFileInfo();
  }
  
  public VStorageObjectSnapshotInfoVStorageObjectSnapshot createVStorageObjectSnapshotInfoVStorageObjectSnapshot() {
    return new VStorageObjectSnapshotInfoVStorageObjectSnapshot();
  }
  
  public VmMacConflictEvent createVmMacConflictEvent() {
    return new VmMacConflictEvent();
  }
  
  public HostNetworkConfigNetStackSpec createHostNetworkConfigNetStackSpec() {
    return new HostNetworkConfigNetStackSpec();
  }
  
  public ArrayOfVsanHostConfigInfoNetworkInfoPortConfig createArrayOfVsanHostConfigInfoNetworkInfoPortConfig() {
    return new ArrayOfVsanHostConfigInfoNetworkInfoPortConfig();
  }
  
  public NoAccessUserEvent createNoAccessUserEvent() {
    return new NoAccessUserEvent();
  }
  
  public FaultsByVM createFaultsByVM() {
    return new FaultsByVM();
  }
  
  public ArrayOfUri createArrayOfUri() {
    return new ArrayOfUri();
  }
  
  public NetStackInstanceProfile createNetStackInstanceProfile() {
    return new NetStackInstanceProfile();
  }
  
  public MethodActionArgument createMethodActionArgument() {
    return new MethodActionArgument();
  }
  
  public DvsCopyNetworkRuleAction createDvsCopyNetworkRuleAction() {
    return new DvsCopyNetworkRuleAction();
  }
  
  public VmfsDatastoreExtendSpec createVmfsDatastoreExtendSpec() {
    return new VmfsDatastoreExtendSpec();
  }
  
  public ArrayOfVsanHostDiskMapResult createArrayOfVsanHostDiskMapResult() {
    return new ArrayOfVsanHostDiskMapResult();
  }
  
  public GuestOsDescriptor createGuestOsDescriptor() {
    return new GuestOsDescriptor();
  }
  
  public KmipServerSpec createKmipServerSpec() {
    return new KmipServerSpec();
  }
  
  public VirtualSerialPortDeviceBackingOption createVirtualSerialPortDeviceBackingOption() {
    return new VirtualSerialPortDeviceBackingOption();
  }
  
  public GuestAuthNamedSubject createGuestAuthNamedSubject() {
    return new GuestAuthNamedSubject();
  }
  
  public ServiceProfile createServiceProfile() {
    return new ServiceProfile();
  }
  
  public OutOfSyncDvsHost createOutOfSyncDvsHost() {
    return new OutOfSyncDvsHost();
  }
  
  public VirtualCdromAtapiBackingOption createVirtualCdromAtapiBackingOption() {
    return new VirtualCdromAtapiBackingOption();
  }
  
  public SAMLTokenAuthentication createSAMLTokenAuthentication() {
    return new SAMLTokenAuthentication();
  }
  
  public ArrayOfComputeResourceHostSPBMLicenseInfo createArrayOfComputeResourceHostSPBMLicenseInfo() {
    return new ArrayOfComputeResourceHostSPBMLicenseInfo();
  }
  
  public ClusterDrsFaultsFaultsByVirtualDisk createClusterDrsFaultsFaultsByVirtualDisk() {
    return new ClusterDrsFaultsFaultsByVirtualDisk();
  }
  
  public VmAutoRenameEvent createVmAutoRenameEvent() {
    return new VmAutoRenameEvent();
  }
  
  public VirtualHdAudioCard createVirtualHdAudioCard() {
    return new VirtualHdAudioCard();
  }
  
  public DatastoreIORMReconfiguredEvent createDatastoreIORMReconfiguredEvent() {
    return new DatastoreIORMReconfiguredEvent();
  }
  
  public ArrayOfHostPortGroupConfig createArrayOfHostPortGroupConfig() {
    return new ArrayOfHostPortGroupConfig();
  }
  
  public ArrayOfVirtualMachineScsiDiskDeviceInfo createArrayOfVirtualMachineScsiDiskDeviceInfo() {
    return new ArrayOfVirtualMachineScsiDiskDeviceInfo();
  }
  
  public VirtualMachineBootOptionsBootableDevice createVirtualMachineBootOptionsBootableDevice() {
    return new VirtualMachineBootOptionsBootableDevice();
  }
  
  public HostBIOSInfo createHostBIOSInfo() {
    return new HostBIOSInfo();
  }
  
  public HostIpToShortNameFailedEvent createHostIpToShortNameFailedEvent() {
    return new HostIpToShortNameFailedEvent();
  }
  
  public ArrayOfVirtualDiskId createArrayOfVirtualDiskId() {
    return new ArrayOfVirtualDiskId();
  }
  
  public VirtualFloppyRemoteDeviceBackingInfo createVirtualFloppyRemoteDeviceBackingInfo() {
    return new VirtualFloppyRemoteDeviceBackingInfo();
  }
  
  public HostScsiTopology createHostScsiTopology() {
    return new HostScsiTopology();
  }
  
  public VmStartRecordingEvent createVmStartRecordingEvent() {
    return new VmStartRecordingEvent();
  }
  
  public VmDeployFailedEvent createVmDeployFailedEvent() {
    return new VmDeployFailedEvent();
  }
  
  public ClusterFailoverHostAdmissionControlInfoHostStatus createClusterFailoverHostAdmissionControlInfoHostStatus() {
    return new ClusterFailoverHostAdmissionControlInfoHostStatus();
  }
  
  public HostProfileCompleteConfigSpec createHostProfileCompleteConfigSpec() {
    return new HostProfileCompleteConfigSpec();
  }
  
  public VirtualMachineSnapshotTree createVirtualMachineSnapshotTree() {
    return new VirtualMachineSnapshotTree();
  }
  
  public ProfileApplyProfileElement createProfileApplyProfileElement() {
    return new ProfileApplyProfileElement();
  }
  
  public HostDiskDimensionsLba createHostDiskDimensionsLba() {
    return new HostDiskDimensionsLba();
  }
  
  public ArrayOfCryptoKeyPlain createArrayOfCryptoKeyPlain() {
    return new ArrayOfCryptoKeyPlain();
  }
  
  public FolderBatchAddHostsToClusterResult createFolderBatchAddHostsToClusterResult() {
    return new FolderBatchAddHostsToClusterResult();
  }
  
  public ArrayOfHostLowLevelProvisioningManagerDiskLayoutSpec createArrayOfHostLowLevelProvisioningManagerDiskLayoutSpec() {
    return new ArrayOfHostLowLevelProvisioningManagerDiskLayoutSpec();
  }
  
  public VmFailedRelayoutEvent createVmFailedRelayoutEvent() {
    return new VmFailedRelayoutEvent();
  }
  
  public LongOption createLongOption() {
    return new LongOption();
  }
  
  public MigrationResourceWarningEvent createMigrationResourceWarningEvent() {
    return new MigrationResourceWarningEvent();
  }
  
  public CustomizationUnknownIpV6Generator createCustomizationUnknownIpV6Generator() {
    return new CustomizationUnknownIpV6Generator();
  }
  
  public DrsExitStandbyModeFailedEvent createDrsExitStandbyModeFailedEvent() {
    return new DrsExitStandbyModeFailedEvent();
  }
  
  public HostSubSpecification createHostSubSpecification() {
    return new HostSubSpecification();
  }
  
  public DrsResourceConfigureFailedEvent createDrsResourceConfigureFailedEvent() {
    return new DrsResourceConfigureFailedEvent();
  }
  
  public VirtualSwitchSelectionProfile createVirtualSwitchSelectionProfile() {
    return new VirtualSwitchSelectionProfile();
  }
  
  public VirtualMachineFileLayoutExFileInfo createVirtualMachineFileLayoutExFileInfo() {
    return new VirtualMachineFileLayoutExFileInfo();
  }
  
  public VAppProductInfo createVAppProductInfo() {
    return new VAppProductInfo();
  }
  
  public VmNoCompatibleHostForSecondaryEvent createVmNoCompatibleHostForSecondaryEvent() {
    return new VmNoCompatibleHostForSecondaryEvent();
  }
  
  public ClusterFailoverLevelAdmissionControlInfo createClusterFailoverLevelAdmissionControlInfo() {
    return new ClusterFailoverLevelAdmissionControlInfo();
  }
  
  public ArrayOfExtensionResourceInfo createArrayOfExtensionResourceInfo() {
    return new ArrayOfExtensionResourceInfo();
  }
  
  public ArrayOfExtensionServerInfo createArrayOfExtensionServerInfo() {
    return new ArrayOfExtensionServerInfo();
  }
  
  public NetDnsConfigInfo createNetDnsConfigInfo() {
    return new NetDnsConfigInfo();
  }
  
  public DatastoreEvent createDatastoreEvent() {
    return new DatastoreEvent();
  }
  
  public VirtualMachineProfileDetailsDiskProfileDetails createVirtualMachineProfileDetailsDiskProfileDetails() {
    return new VirtualMachineProfileDetailsDiskProfileDetails();
  }
  
  public EntityBackup createEntityBackup() {
    return new EntityBackup();
  }
  
  public ArrayOfDatastoreMountPathDatastorePair createArrayOfDatastoreMountPathDatastorePair() {
    return new ArrayOfDatastoreMountPathDatastorePair();
  }
  
  public SharesInfo createSharesInfo() {
    return new SharesInfo();
  }
  
  public VirtualDiskSparseVer1BackingOption createVirtualDiskSparseVer1BackingOption() {
    return new VirtualDiskSparseVer1BackingOption();
  }
  
  public VmGuestOSCrashedEvent createVmGuestOSCrashedEvent() {
    return new VmGuestOSCrashedEvent();
  }
  
  public VirtualMachineUsbInfo createVirtualMachineUsbInfo() {
    return new VirtualMachineUsbInfo();
  }
  
  public ClusterReconfiguredEvent createClusterReconfiguredEvent() {
    return new ClusterReconfiguredEvent();
  }
  
  public ArrayOfApplyProfile createArrayOfApplyProfile() {
    return new ArrayOfApplyProfile();
  }
  
  public HostDiskMappingPartitionInfo createHostDiskMappingPartitionInfo() {
    return new HostDiskMappingPartitionInfo();
  }
  
  public ProfileChangedEvent createProfileChangedEvent() {
    return new ProfileChangedEvent();
  }
  
  public IScsiBootFailureEvent createIScsiBootFailureEvent() {
    return new IScsiBootFailureEvent();
  }
  
  public CustomizationPrefixName createCustomizationPrefixName() {
    return new CustomizationPrefixName();
  }
  
  public HostIpInconsistentEvent createHostIpInconsistentEvent() {
    return new HostIpInconsistentEvent();
  }
  
  public ArrayOfID createArrayOfID() {
    return new ArrayOfID();
  }
  
  public HostCnxFailedBadUsernameEvent createHostCnxFailedBadUsernameEvent() {
    return new HostCnxFailedBadUsernameEvent();
  }
  
  public HostPortGroup createHostPortGroup() {
    return new HostPortGroup();
  }
  
  public ArrayOfHostPathSelectionPolicyOption createArrayOfHostPathSelectionPolicyOption() {
    return new ArrayOfHostPathSelectionPolicyOption();
  }
  
  public VirtualSerialPortURIBackingInfo createVirtualSerialPortURIBackingInfo() {
    return new VirtualSerialPortURIBackingInfo();
  }
  
  public ProfileCreatedEvent createProfileCreatedEvent() {
    return new ProfileCreatedEvent();
  }
  
  public NetIpStackInfo createNetIpStackInfo() {
    return new NetIpStackInfo();
  }
  
  public UserProfile createUserProfile() {
    return new UserProfile();
  }
  
  public HostProxySwitchHostLagConfig createHostProxySwitchHostLagConfig() {
    return new HostProxySwitchHostLagConfig();
  }
  
  public DrsInvocationFailedEvent createDrsInvocationFailedEvent() {
    return new DrsInvocationFailedEvent();
  }
  
  public ArrayOfApplyHostProfileConfigurationSpec createArrayOfApplyHostProfileConfigurationSpec() {
    return new ArrayOfApplyHostProfileConfigurationSpec();
  }
  
  public DVPortgroupConfigInfo createDVPortgroupConfigInfo() {
    return new DVPortgroupConfigInfo();
  }
  
  public ProfileMetadataProfileOperationMessage createProfileMetadataProfileOperationMessage() {
    return new ProfileMetadataProfileOperationMessage();
  }
  
  public ArrayOfHostAuthenticationStoreInfo createArrayOfHostAuthenticationStoreInfo() {
    return new ArrayOfHostAuthenticationStoreInfo();
  }
  
  public VirtualE1000Option createVirtualE1000Option() {
    return new VirtualE1000Option();
  }
  
  public HostInternetScsiHbaAuthenticationProperties createHostInternetScsiHbaAuthenticationProperties() {
    return new HostInternetScsiHbaAuthenticationProperties();
  }
  
  public HostUnresolvedVmfsExtent createHostUnresolvedVmfsExtent() {
    return new HostUnresolvedVmfsExtent();
  }
  
  public ResourceViolatedEvent createResourceViolatedEvent() {
    return new ResourceViolatedEvent();
  }
  
  public ArrayOfHostFileSystemMountInfo createArrayOfHostFileSystemMountInfo() {
    return new ArrayOfHostFileSystemMountInfo();
  }
  
  public HostVvolVolume createHostVvolVolume() {
    return new HostVvolVolume();
  }
  
  public ArrayOfDistributedVirtualPortgroupInfo createArrayOfDistributedVirtualPortgroupInfo() {
    return new ArrayOfDistributedVirtualPortgroupInfo();
  }
  
  public PropertySpec createPropertySpec() {
    return new PropertySpec();
  }
  
  public ArrayOfVirtualMachineSoundInfo createArrayOfVirtualMachineSoundInfo() {
    return new ArrayOfVirtualMachineSoundInfo();
  }
  
  public StorageDrsOptionSpec createStorageDrsOptionSpec() {
    return new StorageDrsOptionSpec();
  }
  
  public ClusterHostInfraUpdateHaModeAction createClusterHostInfraUpdateHaModeAction() {
    return new ClusterHostInfraUpdateHaModeAction();
  }
  
  public VirtualMachineMemoryReservationSpec createVirtualMachineMemoryReservationSpec() {
    return new VirtualMachineMemoryReservationSpec();
  }
  
  public PerfMetricIntSeries createPerfMetricIntSeries() {
    return new PerfMetricIntSeries();
  }
  
  public AllVirtualMachinesLicensedEvent createAllVirtualMachinesLicensedEvent() {
    return new AllVirtualMachinesLicensedEvent();
  }
  
  public ArrayOfVirtualMachineSerialInfo createArrayOfVirtualMachineSerialInfo() {
    return new ArrayOfVirtualMachineSerialInfo();
  }
  
  public ResourcePoolSummary createResourcePoolSummary() {
    return new ResourcePoolSummary();
  }
  
  public HostNvmeTransportParameters createHostNvmeTransportParameters() {
    return new HostNvmeTransportParameters();
  }
  
  public ArrayOfTaskInfo createArrayOfTaskInfo() {
    return new ArrayOfTaskInfo();
  }
  
  public ArrayOfHostNumaNode createArrayOfHostNumaNode() {
    return new ArrayOfHostNumaNode();
  }
  
  public HostBlockAdapterTargetTransport createHostBlockAdapterTargetTransport() {
    return new HostBlockAdapterTargetTransport();
  }
  
  public LockerReconfiguredEvent createLockerReconfiguredEvent() {
    return new LockerReconfiguredEvent();
  }
  
  public MethodAction createMethodAction() {
    return new MethodAction();
  }
  
  public MetricAlarmExpression createMetricAlarmExpression() {
    return new MetricAlarmExpression();
  }
  
  public HostNatServiceConfig createHostNatServiceConfig() {
    return new HostNatServiceConfig();
  }
  
  public MigrationResourceErrorEvent createMigrationResourceErrorEvent() {
    return new MigrationResourceErrorEvent();
  }
  
  public ArrayOfAnswerFileStatusResult createArrayOfAnswerFileStatusResult() {
    return new ArrayOfAnswerFileStatusResult();
  }
  
  public OpaqueSwitchProfile createOpaqueSwitchProfile() {
    return new OpaqueSwitchProfile();
  }
  
  public DVSSelection createDVSSelection() {
    return new DVSSelection();
  }
  
  public ArrayOfExtensionManagerIpAllocationUsage createArrayOfExtensionManagerIpAllocationUsage() {
    return new ArrayOfExtensionManagerIpAllocationUsage();
  }
  
  public HostPersistentMemoryInfo createHostPersistentMemoryInfo() {
    return new HostPersistentMemoryInfo();
  }
  
  public VirtualMachineGuestSummary createVirtualMachineGuestSummary() {
    return new VirtualMachineGuestSummary();
  }
  
  public ArrayOfHostTpmEventLogEntry createArrayOfHostTpmEventLogEntry() {
    return new ArrayOfHostTpmEventLogEntry();
  }
  
  public HostVirtualNicSpec createHostVirtualNicSpec() {
    return new HostVirtualNicSpec();
  }
  
  public OvfFileItem createOvfFileItem() {
    return new OvfFileItem();
  }
  
  public VirtualMachineRelocateSpecDiskLocatorBackingSpec createVirtualMachineRelocateSpecDiskLocatorBackingSpec() {
    return new VirtualMachineRelocateSpecDiskLocatorBackingSpec();
  }
  
  public VirtualUSBUSBBackingInfo createVirtualUSBUSBBackingInfo() {
    return new VirtualUSBUSBBackingInfo();
  }
  
  public MigrationHostWarningEvent createMigrationHostWarningEvent() {
    return new MigrationHostWarningEvent();
  }
  
  public ArrayOfResourceConfigSpec createArrayOfResourceConfigSpec() {
    return new ArrayOfResourceConfigSpec();
  }
  
  public ArrayOfHostConnectInfoNetworkInfo createArrayOfHostConnectInfoNetworkInfo() {
    return new ArrayOfHostConnectInfoNetworkInfo();
  }
  
  public VirtualNVDIMMOption createVirtualNVDIMMOption() {
    return new VirtualNVDIMMOption();
  }
  
  public VmPoweredOffEvent createVmPoweredOffEvent() {
    return new VmPoweredOffEvent();
  }
  
  public HostIpRouteConfig createHostIpRouteConfig() {
    return new HostIpRouteConfig();
  }
  
  public NetIpConfigSpecIpAddressSpec createNetIpConfigSpecIpAddressSpec() {
    return new NetIpConfigSpecIpAddressSpec();
  }
  
  public ArrayOfDatastoreVVolContainerFailoverPair createArrayOfDatastoreVVolContainerFailoverPair() {
    return new ArrayOfDatastoreVVolContainerFailoverPair();
  }
  
  public VsanHostRuntimeInfoDiskIssue createVsanHostRuntimeInfoDiskIssue() {
    return new VsanHostRuntimeInfoDiskIssue();
  }
  
  public HostSystemHealthInfo createHostSystemHealthInfo() {
    return new HostSystemHealthInfo();
  }
  
  public VmfsDatastoreExpandSpec createVmfsDatastoreExpandSpec() {
    return new VmfsDatastoreExpandSpec();
  }
  
  public VirtualDiskFlatVer1BackingInfo createVirtualDiskFlatVer1BackingInfo() {
    return new VirtualDiskFlatVer1BackingInfo();
  }
  
  public ApplyHostProfileConfigurationResult createApplyHostProfileConfigurationResult() {
    return new ApplyHostProfileConfigurationResult();
  }
  
  public ArrayOfVirtualMachineMetadataManagerVmMetadataInput createArrayOfVirtualMachineMetadataManagerVmMetadataInput() {
    return new ArrayOfVirtualMachineMetadataManagerVmMetadataInput();
  }
  
  public GuestRegValueExpandStringSpec createGuestRegValueExpandStringSpec() {
    return new GuestRegValueExpandStringSpec();
  }
  
  public VirtualDeviceConnectInfo createVirtualDeviceConnectInfo() {
    return new VirtualDeviceConnectInfo();
  }
  
  public VchaClusterRuntimeInfo createVchaClusterRuntimeInfo() {
    return new VchaClusterRuntimeInfo();
  }
  
  public HostVMotionManagerDstInstantCloneResult createHostVMotionManagerDstInstantCloneResult() {
    return new HostVMotionManagerDstInstantCloneResult();
  }
  
  public DvsTrafficFilterConfigSpec createDvsTrafficFilterConfigSpec() {
    return new DvsTrafficFilterConfigSpec();
  }
  
  public ArrayOfHostVmciAccessManagerAccessSpec createArrayOfHostVmciAccessManagerAccessSpec() {
    return new ArrayOfHostVmciAccessManagerAccessSpec();
  }
  
  public HostDnsConfig createHostDnsConfig() {
    return new HostDnsConfig();
  }
  
  public ArrayOfGuestRegValueSpec createArrayOfGuestRegValueSpec() {
    return new ArrayOfGuestRegValueSpec();
  }
  
  public DvsUpdateTagNetworkRuleAction createDvsUpdateTagNetworkRuleAction() {
    return new DvsUpdateTagNetworkRuleAction();
  }
  
  public FolderNewHostSpec createFolderNewHostSpec() {
    return new FolderNewHostSpec();
  }
  
  public ArrayOfDistributedVirtualSwitchHostProductSpec createArrayOfDistributedVirtualSwitchHostProductSpec() {
    return new ArrayOfDistributedVirtualSwitchHostProductSpec();
  }
  
  public ScheduledTaskEmailCompletedEvent createScheduledTaskEmailCompletedEvent() {
    return new ScheduledTaskEmailCompletedEvent();
  }
  
  public DistributedVirtualSwitchKeyedOpaqueBlob createDistributedVirtualSwitchKeyedOpaqueBlob() {
    return new DistributedVirtualSwitchKeyedOpaqueBlob();
  }
  
  public VirtualMachineFileLayoutEx createVirtualMachineFileLayoutEx() {
    return new VirtualMachineFileLayoutEx();
  }
  
  public HostTpmDigestInfo createHostTpmDigestInfo() {
    return new HostTpmDigestInfo();
  }
  
  public ArrayOfNvdimmGuid createArrayOfNvdimmGuid() {
    return new ArrayOfNvdimmGuid();
  }
  
  public VAppCloneSpecResourceMap createVAppCloneSpecResourceMap() {
    return new VAppCloneSpecResourceMap();
  }
  
  public DvsPortUnblockedEvent createDvsPortUnblockedEvent() {
    return new DvsPortUnblockedEvent();
  }
  
  public ArrayOfMissingObject createArrayOfMissingObject() {
    return new ArrayOfMissingObject();
  }
  
  public CustomizationPassword createCustomizationPassword() {
    return new CustomizationPassword();
  }
  
  public NonVIWorkloadDetectedOnDatastoreEvent createNonVIWorkloadDetectedOnDatastoreEvent() {
    return new NonVIWorkloadDetectedOnDatastoreEvent();
  }
  
  public HostMultipathInfoPath createHostMultipathInfoPath() {
    return new HostMultipathInfoPath();
  }
  
  public VirtualIDEController createVirtualIDEController() {
    return new VirtualIDEController();
  }
  
  public VmBeingMigratedEvent createVmBeingMigratedEvent() {
    return new VmBeingMigratedEvent();
  }
  
  public ArrayOfExtManagedEntityInfo createArrayOfExtManagedEntityInfo() {
    return new ArrayOfExtManagedEntityInfo();
  }
  
  public HostAuthenticationStoreInfo createHostAuthenticationStoreInfo() {
    return new HostAuthenticationStoreInfo();
  }
  
  public VsanClusterConfigInfo createVsanClusterConfigInfo() {
    return new VsanClusterConfigInfo();
  }
  
  public VchaClusterNetworkSpec createVchaClusterNetworkSpec() {
    return new VchaClusterNetworkSpec();
  }
  
  public DvsGreEncapNetworkRuleAction createDvsGreEncapNetworkRuleAction() {
    return new DvsGreEncapNetworkRuleAction();
  }
  
  public AlarmSnmpFailedEvent createAlarmSnmpFailedEvent() {
    return new AlarmSnmpFailedEvent();
  }
  
  public HostNumaInfo createHostNumaInfo() {
    return new HostNumaInfo();
  }
  
  public ArrayOfProfileDescriptionSection createArrayOfProfileDescriptionSection() {
    return new ArrayOfProfileDescriptionSection();
  }
  
  public ArrayOfHostPatchManagerStatusPrerequisitePatch createArrayOfHostPatchManagerStatusPrerequisitePatch() {
    return new ArrayOfHostPatchManagerStatusPrerequisitePatch();
  }
  
  public ArrayOfFirewallProfileRulesetProfile createArrayOfFirewallProfileRulesetProfile() {
    return new ArrayOfFirewallProfileRulesetProfile();
  }
  
  public ArrayOfPhysicalNicHintInfo createArrayOfPhysicalNicHintInfo() {
    return new ArrayOfPhysicalNicHintInfo();
  }
  
  public DasClusterIsolatedEvent createDasClusterIsolatedEvent() {
    return new DasClusterIsolatedEvent();
  }
  
  public ArrayOfPerfCounterInfo createArrayOfPerfCounterInfo() {
    return new ArrayOfPerfCounterInfo();
  }
  
  public ArrayOfDistributedVirtualSwitchHostMemberPnicSpec createArrayOfDistributedVirtualSwitchHostMemberPnicSpec() {
    return new ArrayOfDistributedVirtualSwitchHostMemberPnicSpec();
  }
  
  public VmConfigFileQueryFlags createVmConfigFileQueryFlags() {
    return new VmConfigFileQueryFlags();
  }
  
  public NetIpConfigSpec createNetIpConfigSpec() {
    return new NetIpConfigSpec();
  }
  
  public DVSMacManagementPolicy createDVSMacManagementPolicy() {
    return new DVSMacManagementPolicy();
  }
  
  public VirtualPCIPassthroughPluginBackingInfo createVirtualPCIPassthroughPluginBackingInfo() {
    return new VirtualPCIPassthroughPluginBackingInfo();
  }
  
  public CustomizationCustomIpGenerator createCustomizationCustomIpGenerator() {
    return new CustomizationCustomIpGenerator();
  }
  
  public ArrayOfDVSVmVnicNetworkResourcePool createArrayOfDVSVmVnicNetworkResourcePool() {
    return new ArrayOfDVSVmVnicNetworkResourcePool();
  }
  
  public VmReloadFromPathEvent createVmReloadFromPathEvent() {
    return new VmReloadFromPathEvent();
  }
  
  public MultipleCertificatesVerifyFaultThumbprintData createMultipleCertificatesVerifyFaultThumbprintData() {
    return new MultipleCertificatesVerifyFaultThumbprintData();
  }
  
  public ArrayOfVsanHostDiskMapping createArrayOfVsanHostDiskMapping() {
    return new ArrayOfVsanHostDiskMapping();
  }
  
  public VirtualFloppyOption createVirtualFloppyOption() {
    return new VirtualFloppyOption();
  }
  
  public VirtualPCIControllerOption createVirtualPCIControllerOption() {
    return new VirtualPCIControllerOption();
  }
  
  public ArrayOfDVPortConfigSpec createArrayOfDVPortConfigSpec() {
    return new ArrayOfDVPortConfigSpec();
  }
  
  public VirtualLsiLogicSASController createVirtualLsiLogicSASController() {
    return new VirtualLsiLogicSASController();
  }
  
  public EntityEventArgument createEntityEventArgument() {
    return new EntityEventArgument();
  }
  
  public ArrayOfProfileProfileStructureProperty createArrayOfProfileProfileStructureProperty() {
    return new ArrayOfProfileProfileStructureProperty();
  }
  
  public VasaProviderContainerSpec createVasaProviderContainerSpec() {
    return new VasaProviderContainerSpec();
  }
  
  public SharesOption createSharesOption() {
    return new SharesOption();
  }
  
  public ClusterProfileConfigInfo createClusterProfileConfigInfo() {
    return new ClusterProfileConfigInfo();
  }
  
  public VirtualSriovEthernetCardSriovBackingInfo createVirtualSriovEthernetCardSriovBackingInfo() {
    return new VirtualSriovEthernetCardSriovBackingInfo();
  }
  
  public VMwareDVSVlanMtuHealthCheckConfig createVMwareDVSVlanMtuHealthCheckConfig() {
    return new VMwareDVSVlanMtuHealthCheckConfig();
  }
  
  public IsoImageFileInfo createIsoImageFileInfo() {
    return new IsoImageFileInfo();
  }
  
  public ClusterConfigSpec createClusterConfigSpec() {
    return new ClusterConfigSpec();
  }
  
  public AlarmAcknowledgedEvent createAlarmAcknowledgedEvent() {
    return new AlarmAcknowledgedEvent();
  }
  
  public HostDatastoreBrowserSearchResults createHostDatastoreBrowserSearchResults() {
    return new HostDatastoreBrowserSearchResults();
  }
  
  public HostCpuIdInfo createHostCpuIdInfo() {
    return new HostCpuIdInfo();
  }
  
  public ArrayOfHostUnresolvedVmfsResolutionSpec createArrayOfHostUnresolvedVmfsResolutionSpec() {
    return new ArrayOfHostUnresolvedVmfsResolutionSpec();
  }
  
  public HostLowLevelProvisioningManagerDiskLayoutSpec createHostLowLevelProvisioningManagerDiskLayoutSpec() {
    return new HostLowLevelProvisioningManagerDiskLayoutSpec();
  }
  
  public ArrayOfVirtualMachineSriovInfo createArrayOfVirtualMachineSriovInfo() {
    return new ArrayOfVirtualMachineSriovInfo();
  }
  
  public DasEnabledEvent createDasEnabledEvent() {
    return new DasEnabledEvent();
  }
  
  public HostSyncFailedEvent createHostSyncFailedEvent() {
    return new HostSyncFailedEvent();
  }
  
  public VirtualLsiLogicSASControllerOption createVirtualLsiLogicSASControllerOption() {
    return new VirtualLsiLogicSASControllerOption();
  }
  
  public VAppOvfSectionSpec createVAppOvfSectionSpec() {
    return new VAppOvfSectionSpec();
  }
  
  public VmUuidChangedEvent createVmUuidChangedEvent() {
    return new VmUuidChangedEvent();
  }
  
  public VirtualMachineBootOptionsBootableCdromDevice createVirtualMachineBootOptionsBootableCdromDevice() {
    return new VirtualMachineBootOptionsBootableCdromDevice();
  }
  
  public ProfileDeferredPolicyOptionParameter createProfileDeferredPolicyOptionParameter() {
    return new ProfileDeferredPolicyOptionParameter();
  }
  
  public VirtualMachineNetworkShaperInfo createVirtualMachineNetworkShaperInfo() {
    return new VirtualMachineNetworkShaperInfo();
  }
  
  public ClusterFailoverLevelAdmissionControlPolicy createClusterFailoverLevelAdmissionControlPolicy() {
    return new ClusterFailoverLevelAdmissionControlPolicy();
  }
  
  public ArrayOfPermissionProfile createArrayOfPermissionProfile() {
    return new ArrayOfPermissionProfile();
  }
  
  public CustomizationFixedIp createCustomizationFixedIp() {
    return new CustomizationFixedIp();
  }
  
  public HostLocalAuthenticationInfo createHostLocalAuthenticationInfo() {
    return new HostLocalAuthenticationInfo();
  }
  
  public HostPlacedVirtualNicIdentifier createHostPlacedVirtualNicIdentifier() {
    return new HostPlacedVirtualNicIdentifier();
  }
  
  public HostPatchManagerPatchManagerOperationSpec createHostPatchManagerPatchManagerOperationSpec() {
    return new HostPatchManagerPatchManagerOperationSpec();
  }
  
  public DvsHostBackInSyncEvent createDvsHostBackInSyncEvent() {
    return new DvsHostBackInSyncEvent();
  }
  
  public ClusterDasVmSettings createClusterDasVmSettings() {
    return new ClusterDasVmSettings();
  }
  
  public ApplyHostProfileConfigurationSpec createApplyHostProfileConfigurationSpec() {
    return new ApplyHostProfileConfigurationSpec();
  }
  
  public VirtualNVDIMM createVirtualNVDIMM() {
    return new VirtualNVDIMM();
  }
  
  public UserLoginSessionEvent createUserLoginSessionEvent() {
    return new UserLoginSessionEvent();
  }
  
  public VsanHostClusterStatusState createVsanHostClusterStatusState() {
    return new VsanHostClusterStatusState();
  }
  
  public ClusterVmGroup createClusterVmGroup() {
    return new ClusterVmGroup();
  }
  
  public HostBlockHba createHostBlockHba() {
    return new HostBlockHba();
  }
  
  public HostListSummaryQuickStats createHostListSummaryQuickStats() {
    return new HostListSummaryQuickStats();
  }
  
  public ClusterDpmConfigInfo createClusterDpmConfigInfo() {
    return new ClusterDpmConfigInfo();
  }
  
  public ArrayOfVirtualMachineScsiPassthroughInfo createArrayOfVirtualMachineScsiPassthroughInfo() {
    return new ArrayOfVirtualMachineScsiPassthroughInfo();
  }
  
  public InsufficientFailoverResourcesEvent createInsufficientFailoverResourcesEvent() {
    return new InsufficientFailoverResourcesEvent();
  }
  
  public HostConfigManager createHostConfigManager() {
    return new HostConfigManager();
  }
  
  public VirtualMachineVMCIDeviceOption createVirtualMachineVMCIDeviceOption() {
    return new VirtualMachineVMCIDeviceOption();
  }
  
  public VirtualPointingDeviceOption createVirtualPointingDeviceOption() {
    return new VirtualPointingDeviceOption();
  }
  
  public ArrayOfProfileParameterMetadataParameterRelationMetadata createArrayOfProfileParameterMetadataParameterRelationMetadata() {
    return new ArrayOfProfileParameterMetadataParameterRelationMetadata();
  }
  
  public ArrayOfPhysicalNicConfig createArrayOfPhysicalNicConfig() {
    return new ArrayOfPhysicalNicConfig();
  }
  
  public HostSystemReconnectSpec createHostSystemReconnectSpec() {
    return new HostSystemReconnectSpec();
  }
  
  public ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus createArrayOfClusterFailoverHostAdmissionControlInfoHostStatus() {
    return new ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus();
  }
  
  public VmDiskFileQuery createVmDiskFileQuery() {
    return new VmDiskFileQuery();
  }
  
  public ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots createArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots() {
    return new ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots();
  }
  
  public HostVsanInternalSystemCmmdsQuery createHostVsanInternalSystemCmmdsQuery() {
    return new HostVsanInternalSystemCmmdsQuery();
  }
  
  public ToolsConfigInfo createToolsConfigInfo() {
    return new ToolsConfigInfo();
  }
  
  public HostLicenseConnectInfo createHostLicenseConnectInfo() {
    return new HostLicenseConnectInfo();
  }
  
  public VirtualMachineDeviceRuntimeInfoDeviceRuntimeState createVirtualMachineDeviceRuntimeInfoDeviceRuntimeState() {
    return new VirtualMachineDeviceRuntimeInfoDeviceRuntimeState();
  }
  
  public HostFirewallRuleset createHostFirewallRuleset() {
    return new HostFirewallRuleset();
  }
  
  public GuestRegKeySpec createGuestRegKeySpec() {
    return new GuestRegKeySpec();
  }
  
  public CompositePolicyOption createCompositePolicyOption() {
    return new CompositePolicyOption();
  }
  
  public VmwareDistributedVirtualSwitchVlanIdSpec createVmwareDistributedVirtualSwitchVlanIdSpec() {
    return new VmwareDistributedVirtualSwitchVlanIdSpec();
  }
  
  public VMFSDatastoreExtendedEvent createVMFSDatastoreExtendedEvent() {
    return new VMFSDatastoreExtendedEvent();
  }
  
  public VMwareDVSTeamingHealthCheckResult createVMwareDVSTeamingHealthCheckResult() {
    return new VMwareDVSTeamingHealthCheckResult();
  }
  
  public VirtualMachineFileLayoutDiskLayout createVirtualMachineFileLayoutDiskLayout() {
    return new VirtualMachineFileLayoutDiskLayout();
  }
  
  public VVolVmConfigFileUpdateResultFailedVmConfigFileInfo createVVolVmConfigFileUpdateResultFailedVmConfigFileInfo() {
    return new VVolVmConfigFileUpdateResultFailedVmConfigFileInfo();
  }
  
  public ClusterVmReadiness createClusterVmReadiness() {
    return new ClusterVmReadiness();
  }
  
  public NvdimmRegionInfo createNvdimmRegionInfo() {
    return new NvdimmRegionInfo();
  }
  
  public ArrayOfDistributedVirtualSwitchInfo createArrayOfDistributedVirtualSwitchInfo() {
    return new ArrayOfDistributedVirtualSwitchInfo();
  }
  
  public VmBeingRelocatedEvent createVmBeingRelocatedEvent() {
    return new VmBeingRelocatedEvent();
  }
  
  public VirtualMachineVideoCard createVirtualMachineVideoCard() {
    return new VirtualMachineVideoCard();
  }
  
  public UserPasswordChanged createUserPasswordChanged() {
    return new UserPasswordChanged();
  }
  
  public VAppProductSpec createVAppProductSpec() {
    return new VAppProductSpec();
  }
  
  public PrivilegeAvailability createPrivilegeAvailability() {
    return new PrivilegeAvailability();
  }
  
  public ArrayOfSystemEventInfo createArrayOfSystemEventInfo() {
    return new ArrayOfSystemEventInfo();
  }
  
  public VirtualLsiLogicControllerOption createVirtualLsiLogicControllerOption() {
    return new VirtualLsiLogicControllerOption();
  }
  
  public DVSRuntimeInfo createDVSRuntimeInfo() {
    return new DVSRuntimeInfo();
  }
  
  public EnteringStandbyModeEvent createEnteringStandbyModeEvent() {
    return new EnteringStandbyModeEvent();
  }
  
  public CryptoManagerKmipCertificateInfo createCryptoManagerKmipCertificateInfo() {
    return new CryptoManagerKmipCertificateInfo();
  }
  
  public DistributedVirtualSwitchHostMemberPnicSpec createDistributedVirtualSwitchHostMemberPnicSpec() {
    return new DistributedVirtualSwitchHostMemberPnicSpec();
  }
  
  public VlanProfile createVlanProfile() {
    return new VlanProfile();
  }
  
  public VirtualFloppyRemoteDeviceBackingOption createVirtualFloppyRemoteDeviceBackingOption() {
    return new VirtualFloppyRemoteDeviceBackingOption();
  }
  
  public HostUpgradeFailedEvent createHostUpgradeFailedEvent() {
    return new HostUpgradeFailedEvent();
  }
  
  public HostNvmeController createHostNvmeController() {
    return new HostNvmeController();
  }
  
  public VirtualMachineCpuIdInfoSpec createVirtualMachineCpuIdInfoSpec() {
    return new VirtualMachineCpuIdInfoSpec();
  }
  
  public HostListSummaryGatewaySummary createHostListSummaryGatewaySummary() {
    return new HostListSummaryGatewaySummary();
  }
  
  public PerfEntityMetricCSV createPerfEntityMetricCSV() {
    return new PerfEntityMetricCSV();
  }
  
  public HostNatServiceSpec createHostNatServiceSpec() {
    return new HostNatServiceSpec();
  }
  
  public HostLowLevelProvisioningManagerVmRecoveryInfo createHostLowLevelProvisioningManagerVmRecoveryInfo() {
    return new HostLowLevelProvisioningManagerVmRecoveryInfo();
  }
  
  public AlarmScriptFailedEvent createAlarmScriptFailedEvent() {
    return new AlarmScriptFailedEvent();
  }
  
  public ArrayOfProfileMetadataProfileSortSpec createArrayOfProfileMetadataProfileSortSpec() {
    return new ArrayOfProfileMetadataProfileSortSpec();
  }
  
  public VirtualDiskRuleSpec createVirtualDiskRuleSpec() {
    return new VirtualDiskRuleSpec();
  }
  
  public ArrayOfHostMemberRuntimeInfo createArrayOfHostMemberRuntimeInfo() {
    return new ArrayOfHostMemberRuntimeInfo();
  }
  
  public ClusterFailoverHostAdmissionControlPolicy createClusterFailoverHostAdmissionControlPolicy() {
    return new ClusterFailoverHostAdmissionControlPolicy();
  }
  
  public DistributedVirtualSwitchHostMemberTransportZoneInfo createDistributedVirtualSwitchHostMemberTransportZoneInfo() {
    return new DistributedVirtualSwitchHostMemberTransportZoneInfo();
  }
  
  public VirtualDiskFlatVer2BackingInfo createVirtualDiskFlatVer2BackingInfo() {
    return new VirtualDiskFlatVer2BackingInfo();
  }
  
  public VmCloneFailedEvent createVmCloneFailedEvent() {
    return new VmCloneFailedEvent();
  }
  
  public VMwareDVSPortSetting createVMwareDVSPortSetting() {
    return new VMwareDVSPortSetting();
  }
  
  public ExtendedDescription createExtendedDescription() {
    return new ExtendedDescription();
  }
  
  public HostProfileHostBasedConfigSpec createHostProfileHostBasedConfigSpec() {
    return new HostProfileHostBasedConfigSpec();
  }
  
  public DatastoreDestroyedEvent createDatastoreDestroyedEvent() {
    return new DatastoreDestroyedEvent();
  }
  
  public ClusterFailoverResourcesAdmissionControlPolicy createClusterFailoverResourcesAdmissionControlPolicy() {
    return new ClusterFailoverResourcesAdmissionControlPolicy();
  }
  
  public ArrayOfComplianceFailure createArrayOfComplianceFailure() {
    return new ArrayOfComplianceFailure();
  }
  
  public VslmInfrastructureObjectPolicySpec createVslmInfrastructureObjectPolicySpec() {
    return new VslmInfrastructureObjectPolicySpec();
  }
  
  public HostNetCapabilities createHostNetCapabilities() {
    return new HostNetCapabilities();
  }
  
  public DvsPortExitedPassthruEvent createDvsPortExitedPassthruEvent() {
    return new DvsPortExitedPassthruEvent();
  }
  
  public GeneralEvent createGeneralEvent() {
    return new GeneralEvent();
  }
  
  public ArrayOfHostVirtualSwitchConfig createArrayOfHostVirtualSwitchConfig() {
    return new ArrayOfHostVirtualSwitchConfig();
  }
  
  public NetIpStackInfoDefaultRouter createNetIpStackInfoDefaultRouter() {
    return new NetIpStackInfoDefaultRouter();
  }
  
  public CustomizationUnknownFailure createCustomizationUnknownFailure() {
    return new CustomizationUnknownFailure();
  }
  
  public DatacenterMismatchArgument createDatacenterMismatchArgument() {
    return new DatacenterMismatchArgument();
  }
  
  public ArrayOfVsanUpgradeSystemNetworkPartitionInfo createArrayOfVsanUpgradeSystemNetworkPartitionInfo() {
    return new ArrayOfVsanUpgradeSystemNetworkPartitionInfo();
  }
  
  public StringPolicy createStringPolicy() {
    return new StringPolicy();
  }
  
  public TaskDescription createTaskDescription() {
    return new TaskDescription();
  }
  
  public VirtualFloppyImageBackingOption createVirtualFloppyImageBackingOption() {
    return new VirtualFloppyImageBackingOption();
  }
  
  public VirtualDiskRawDiskMappingVer1BackingOption createVirtualDiskRawDiskMappingVer1BackingOption() {
    return new VirtualDiskRawDiskMappingVer1BackingOption();
  }
  
  public HostNatService createHostNatService() {
    return new HostNatService();
  }
  
  public HostSystemSwapConfiguration createHostSystemSwapConfiguration() {
    return new HostSystemSwapConfiguration();
  }
  
  public PlacementRankResult createPlacementRankResult() {
    return new PlacementRankResult();
  }
  
  public TaskReason createTaskReason() {
    return new TaskReason();
  }
  
  public HostIpConfigIpV6Address createHostIpConfigIpV6Address() {
    return new HostIpConfigIpV6Address();
  }
  
  public ArrayOfHostScsiDisk createArrayOfHostScsiDisk() {
    return new ArrayOfHostScsiDisk();
  }
  
  public ArrayOfHostNetStackInstance createArrayOfHostNetStackInstance() {
    return new ArrayOfHostNetStackInstance();
  }
  
  public ArrayOfVirtualMachineLegacyNetworkSwitchInfo createArrayOfVirtualMachineLegacyNetworkSwitchInfo() {
    return new ArrayOfVirtualMachineLegacyNetworkSwitchInfo();
  }
  
  public DatastoreHostMount createDatastoreHostMount() {
    return new DatastoreHostMount();
  }
  
  public FileInfo createFileInfo() {
    return new FileInfo();
  }
  
  public VirtualSCSIController createVirtualSCSIController() {
    return new VirtualSCSIController();
  }
  
  public DvsImportEvent createDvsImportEvent() {
    return new DvsImportEvent();
  }
  
  public HostSnmpConfigSpec createHostSnmpConfigSpec() {
    return new HostSnmpConfigSpec();
  }
  
  public GuestRegValueDataSpec createGuestRegValueDataSpec() {
    return new GuestRegValueDataSpec();
  }
  
  public VirtualEthernetCardOption createVirtualEthernetCardOption() {
    return new VirtualEthernetCardOption();
  }
  
  public HostGetShortNameFailedEvent createHostGetShortNameFailedEvent() {
    return new HostGetShortNameFailedEvent();
  }
  
  public ClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots createClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots() {
    return new ClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots();
  }
  
  public HostDirectoryStoreInfo createHostDirectoryStoreInfo() {
    return new HostDirectoryStoreInfo();
  }
  
  public VirtualTPM createVirtualTPM() {
    return new VirtualTPM();
  }
  
  public DatastoreFileCopiedEvent createDatastoreFileCopiedEvent() {
    return new DatastoreFileCopiedEvent();
  }
  
  public ScheduledTaskInfo createScheduledTaskInfo() {
    return new ScheduledTaskInfo();
  }
  
  public ArrayOfPerfMetricId createArrayOfPerfMetricId() {
    return new ArrayOfPerfMetricId();
  }
  
  public GroupAlarmAction createGroupAlarmAction() {
    return new GroupAlarmAction();
  }
  
  public HostCpuInfo createHostCpuInfo() {
    return new HostCpuInfo();
  }
  
  public VmSecondaryAddedEvent createVmSecondaryAddedEvent() {
    return new VmSecondaryAddedEvent();
  }
  
  public ArrayOfOvfNetworkMapping createArrayOfOvfNetworkMapping() {
    return new ArrayOfOvfNetworkMapping();
  }
  
  public HostVMotionConfig createHostVMotionConfig() {
    return new HostVMotionConfig();
  }
  
  public DistributedVirtualSwitchManagerImportResult createDistributedVirtualSwitchManagerImportResult() {
    return new DistributedVirtualSwitchManagerImportResult();
  }
  
  public VirtualDeviceBackingInfo createVirtualDeviceBackingInfo() {
    return new VirtualDeviceBackingInfo();
  }
  
  public ArrayOfAlarmTriggeringActionTransitionSpec createArrayOfAlarmTriggeringActionTransitionSpec() {
    return new ArrayOfAlarmTriggeringActionTransitionSpec();
  }
  
  public HostIpRouteTableConfig createHostIpRouteTableConfig() {
    return new HostIpRouteTableConfig();
  }
  
  public ElementDescription createElementDescription() {
    return new ElementDescription();
  }
  
  public DatastoreEventArgument createDatastoreEventArgument() {
    return new DatastoreEventArgument();
  }
  
  public NetDhcpConfigInfo createNetDhcpConfigInfo() {
    return new NetDhcpConfigInfo();
  }
  
  public VmPoweringOnWithCustomizedDVPortEvent createVmPoweringOnWithCustomizedDVPortEvent() {
    return new VmPoweringOnWithCustomizedDVPortEvent();
  }
  
  public ArrayOfDatacenterMismatchArgument createArrayOfDatacenterMismatchArgument() {
    return new ArrayOfDatacenterMismatchArgument();
  }
  
  public HostProfileManagerHostToConfigSpecMap createHostProfileManagerHostToConfigSpecMap() {
    return new HostProfileManagerHostToConfigSpecMap();
  }
  
  public ProfileDissociatedEvent createProfileDissociatedEvent() {
    return new ProfileDissociatedEvent();
  }
  
  public VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState createVirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState() {
    return new VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState();
  }
  
  public ArrayOfHostPciPassthruConfig createArrayOfHostPciPassthruConfig() {
    return new ArrayOfHostPciPassthruConfig();
  }
  
  public ArrayOfVirtualMachineProfileSpec createArrayOfVirtualMachineProfileSpec() {
    return new ArrayOfVirtualMachineProfileSpec();
  }
  
  public HostVirtualSwitchBridge createHostVirtualSwitchBridge() {
    return new HostVirtualSwitchBridge();
  }
  
  public ArrayOfDVSNetworkResourcePoolConfigSpec createArrayOfDVSNetworkResourcePoolConfigSpec() {
    return new ArrayOfDVSNetworkResourcePoolConfigSpec();
  }
  
  public GuestRegValueBinarySpec createGuestRegValueBinarySpec() {
    return new GuestRegValueBinarySpec();
  }
  
  public ExitingStandbyModeEvent createExitingStandbyModeEvent() {
    return new ExitingStandbyModeEvent();
  }
  
  public ProfileExpression createProfileExpression() {
    return new ProfileExpression();
  }
  
  public HostConfigSpec createHostConfigSpec() {
    return new HostConfigSpec();
  }
  
  public ArrayOfHealthUpdateInfo createArrayOfHealthUpdateInfo() {
    return new ArrayOfHealthUpdateInfo();
  }
  
  public HostIoFilterInfo createHostIoFilterInfo() {
    return new HostIoFilterInfo();
  }
  
  public ArrayOfDVPortgroupConfigSpec createArrayOfDVPortgroupConfigSpec() {
    return new ArrayOfDVPortgroupConfigSpec();
  }
  
  public HostNvmeOverFibreChannelParameters createHostNvmeOverFibreChannelParameters() {
    return new HostNvmeOverFibreChannelParameters();
  }
  
  public HostInternetScsiHbaDiscoveryCapabilities createHostInternetScsiHbaDiscoveryCapabilities() {
    return new HostInternetScsiHbaDiscoveryCapabilities();
  }
  
  public ArrayOfVmfsConfigOption createArrayOfVmfsConfigOption() {
    return new ArrayOfVmfsConfigOption();
  }
  
  public DvsPortBlockedEvent createDvsPortBlockedEvent() {
    return new DvsPortBlockedEvent();
  }
  
  public HostNvmeNamespace createHostNvmeNamespace() {
    return new HostNvmeNamespace();
  }
  
  public ClusterProfileConfigServiceCreateSpec createClusterProfileConfigServiceCreateSpec() {
    return new ClusterProfileConfigServiceCreateSpec();
  }
  
  public VmFailedToSuspendEvent createVmFailedToSuspendEvent() {
    return new VmFailedToSuspendEvent();
  }
  
  public VmBeingCreatedEvent createVmBeingCreatedEvent() {
    return new VmBeingCreatedEvent();
  }
  
  public CustomizationGuiUnattended createCustomizationGuiUnattended() {
    return new CustomizationGuiUnattended();
  }
  
  public HostNoRedundantManagementNetworkEvent createHostNoRedundantManagementNetworkEvent() {
    return new HostNoRedundantManagementNetworkEvent();
  }
  
  public DasAgentFoundEvent createDasAgentFoundEvent() {
    return new DasAgentFoundEvent();
  }
  
  public VmFailedUpdatingSecondaryConfig createVmFailedUpdatingSecondaryConfig() {
    return new VmFailedUpdatingSecondaryConfig();
  }
  
  public ArrayOfHostVsanInternalSystemVsanObjectOperationResult createArrayOfHostVsanInternalSystemVsanObjectOperationResult() {
    return new ArrayOfHostVsanInternalSystemVsanObjectOperationResult();
  }
  
  public VirtualSriovEthernetCardOption createVirtualSriovEthernetCardOption() {
    return new VirtualSriovEthernetCardOption();
  }
  
  public VirtualSoundCardDeviceBackingInfo createVirtualSoundCardDeviceBackingInfo() {
    return new VirtualSoundCardDeviceBackingInfo();
  }
  
  public UplinkPortMtuNotSupportEvent createUplinkPortMtuNotSupportEvent() {
    return new UplinkPortMtuNotSupportEvent();
  }
  
  public DesiredSoftwareSpecVendorAddOnSpec createDesiredSoftwareSpecVendorAddOnSpec() {
    return new DesiredSoftwareSpecVendorAddOnSpec();
  }
  
  public HostTpmCommandEventDetails createHostTpmCommandEventDetails() {
    return new HostTpmCommandEventDetails();
  }
  
  public HostHostBusAdapter createHostHostBusAdapter() {
    return new HostHostBusAdapter();
  }
  
  public HostRdmaTargetTransport createHostRdmaTargetTransport() {
    return new HostRdmaTargetTransport();
  }
  
  public ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo createClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo() {
    return new ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo();
  }
  
  public TemplateUpgradeEvent createTemplateUpgradeEvent() {
    return new TemplateUpgradeEvent();
  }
  
  public VmBeingClonedEvent createVmBeingClonedEvent() {
    return new VmBeingClonedEvent();
  }
  
  public ArrayOfPerfMetricSeriesCSV createArrayOfPerfMetricSeriesCSV() {
    return new ArrayOfPerfMetricSeriesCSV();
  }
  
  public DvsIpPort createDvsIpPort() {
    return new DvsIpPort();
  }
  
  public KmipServerInfo createKmipServerInfo() {
    return new KmipServerInfo();
  }
  
  public HostStorageDeviceInfo createHostStorageDeviceInfo() {
    return new HostStorageDeviceInfo();
  }
  
  public FcoeConfigFcoeSpecification createFcoeConfigFcoeSpecification() {
    return new FcoeConfigFcoeSpecification();
  }
  
  public ArrayOfCustomizationAdapterMapping createArrayOfCustomizationAdapterMapping() {
    return new ArrayOfCustomizationAdapterMapping();
  }
  
  public VirtualMachineRuntimeInfo createVirtualMachineRuntimeInfo() {
    return new VirtualMachineRuntimeInfo();
  }
  
  public VirtualPrecisionClockSystemClockBackingOption createVirtualPrecisionClockSystemClockBackingOption() {
    return new VirtualPrecisionClockSystemClockBackingOption();
  }
  
  public VsanClusterConfigInfoHostDefaultInfo createVsanClusterConfigInfoHostDefaultInfo() {
    return new VsanClusterConfigInfoHostDefaultInfo();
  }
  
  public VirtualDiskPartitionedRawDiskVer2BackingOption createVirtualDiskPartitionedRawDiskVer2BackingOption() {
    return new VirtualDiskPartitionedRawDiskVer2BackingOption();
  }
  
  public RetrieveOptions createRetrieveOptions() {
    return new RetrieveOptions();
  }
  
  public VirtualMachineMemoryReservationInfo createVirtualMachineMemoryReservationInfo() {
    return new VirtualMachineMemoryReservationInfo();
  }
  
  public StoragePodSummary createStoragePodSummary() {
    return new StoragePodSummary();
  }
  
  public DatacenterEvent createDatacenterEvent() {
    return new DatacenterEvent();
  }
  
  public VMwareDVSPvlanConfigSpec createVMwareDVSPvlanConfigSpec() {
    return new VMwareDVSPvlanConfigSpec();
  }
  
  public HostPlugStoreTopologyAdapter createHostPlugStoreTopologyAdapter() {
    return new HostPlugStoreTopologyAdapter();
  }
  
  public LocalDatastoreInfo createLocalDatastoreInfo() {
    return new LocalDatastoreInfo();
  }
  
  public VirtualEthernetCardResourceAllocation createVirtualEthernetCardResourceAllocation() {
    return new VirtualEthernetCardResourceAllocation();
  }
  
  public ArrayOfVAppPropertyInfo createArrayOfVAppPropertyInfo() {
    return new ArrayOfVAppPropertyInfo();
  }
  
  public ArrayOfProfileUpdateFailedUpdateFailure createArrayOfProfileUpdateFailedUpdateFailure() {
    return new ArrayOfProfileUpdateFailedUpdateFailure();
  }
  
  public ArrayOfVchaNodeRuntimeInfo createArrayOfVchaNodeRuntimeInfo() {
    return new ArrayOfVchaNodeRuntimeInfo();
  }
  
  public VslmCloneSpec createVslmCloneSpec() {
    return new VslmCloneSpec();
  }
  
  public CustomizationAdapterMapping createCustomizationAdapterMapping() {
    return new CustomizationAdapterMapping();
  }
  
  public ArrayOfHostInternetScsiHbaSendTarget createArrayOfHostInternetScsiHbaSendTarget() {
    return new ArrayOfHostInternetScsiHbaSendTarget();
  }
  
  public DvsRestoreEvent createDvsRestoreEvent() {
    return new DvsRestoreEvent();
  }
  
  public HostVirtualSwitchConfig createHostVirtualSwitchConfig() {
    return new HostVirtualSwitchConfig();
  }
  
  public ClusterComputeResourceDvsProfile createClusterComputeResourceDvsProfile() {
    return new ClusterComputeResourceDvsProfile();
  }
  
  public HostTpmOptionEventDetails createHostTpmOptionEventDetails() {
    return new HostTpmOptionEventDetails();
  }
  
  public HostNatServiceNameServiceSpec createHostNatServiceNameServiceSpec() {
    return new HostNatServiceNameServiceSpec();
  }
  
  public ComputeResourceSummary createComputeResourceSummary() {
    return new ComputeResourceSummary();
  }
  
  public VirtualCdromOption createVirtualCdromOption() {
    return new VirtualCdromOption();
  }
  
  public ServiceLocatorNamePassword createServiceLocatorNamePassword() {
    return new ServiceLocatorNamePassword();
  }
  
  public HostVFlashManagerVFlashResourceConfigSpec createHostVFlashManagerVFlashResourceConfigSpec() {
    return new HostVFlashManagerVFlashResourceConfigSpec();
  }
  
  public ArrayOfLicenseAvailabilityInfo createArrayOfLicenseAvailabilityInfo() {
    return new ArrayOfLicenseAvailabilityInfo();
  }
  
  public ArrayOfHostPortGroupPort createArrayOfHostPortGroupPort() {
    return new ArrayOfHostPortGroupPort();
  }
  
  public VmWwnConflictEvent createVmWwnConflictEvent() {
    return new VmWwnConflictEvent();
  }
  
  public VsanHostVsanDiskInfo createVsanHostVsanDiskInfo() {
    return new VsanHostVsanDiskInfo();
  }
  
  public ArrayOfNetIpRouteConfigInfoIpRoute createArrayOfNetIpRouteConfigInfoIpRoute() {
    return new ArrayOfNetIpRouteConfigInfoIpRoute();
  }
  
  public VirtualCdromRemoteAtapiBackingOption createVirtualCdromRemoteAtapiBackingOption() {
    return new VirtualCdromRemoteAtapiBackingOption();
  }
  
  public HostDhcpServiceConfig createHostDhcpServiceConfig() {
    return new HostDhcpServiceConfig();
  }
  
  public ArrayOfPropertySpec createArrayOfPropertySpec() {
    return new ArrayOfPropertySpec();
  }
  
  public VmDiskFileQueryFlags createVmDiskFileQueryFlags() {
    return new VmDiskFileQueryFlags();
  }
  
  public VirtualEthernetCardOpaqueNetworkBackingInfo createVirtualEthernetCardOpaqueNetworkBackingInfo() {
    return new VirtualEthernetCardOpaqueNetworkBackingInfo();
  }
  
  public HbrDiskMigrationAction createHbrDiskMigrationAction() {
    return new HbrDiskMigrationAction();
  }
  
  public VirtualSIOControllerOption createVirtualSIOControllerOption() {
    return new VirtualSIOControllerOption();
  }
  
  public HostWwnConflictEvent createHostWwnConflictEvent() {
    return new HostWwnConflictEvent();
  }
  
  public DvsUpgradeInProgressEvent createDvsUpgradeInProgressEvent() {
    return new DvsUpgradeInProgressEvent();
  }
  
  public VirtualMachineBootOptionsBootableDiskDevice createVirtualMachineBootOptionsBootableDiskDevice() {
    return new VirtualMachineBootOptionsBootableDiskDevice();
  }
  
  public AlarmScriptCompleteEvent createAlarmScriptCompleteEvent() {
    return new AlarmScriptCompleteEvent();
  }
  
  public HostVFlashManagerVFlashResourceConfigInfo createHostVFlashManagerVFlashResourceConfigInfo() {
    return new HostVFlashManagerVFlashResourceConfigInfo();
  }
  
  public ServiceConsoleReservationInfo createServiceConsoleReservationInfo() {
    return new ServiceConsoleReservationInfo();
  }
  
  public ClusterDasAamHostInfo createClusterDasAamHostInfo() {
    return new ClusterDasAamHostInfo();
  }
  
  public NetIpStackInfoNetToMedia createNetIpStackInfoNetToMedia() {
    return new NetIpStackInfoNetToMedia();
  }
  
  public DVPortgroupPolicy createDVPortgroupPolicy() {
    return new DVPortgroupPolicy();
  }
  
  public VirtualKeyboard createVirtualKeyboard() {
    return new VirtualKeyboard();
  }
  
  public DvsFilterPolicy createDvsFilterPolicy() {
    return new DvsFilterPolicy();
  }
  
  public ProfileSerializedCreateSpec createProfileSerializedCreateSpec() {
    return new ProfileSerializedCreateSpec();
  }
  
  public OpaqueNetworkSummary createOpaqueNetworkSummary() {
    return new OpaqueNetworkSummary();
  }
  
  public VmGuestShutdownEvent createVmGuestShutdownEvent() {
    return new VmGuestShutdownEvent();
  }
  
  public GuestProgramSpec createGuestProgramSpec() {
    return new GuestProgramSpec();
  }
  
  public VirtualMachineFileLayoutExDiskLayout createVirtualMachineFileLayoutExDiskLayout() {
    return new VirtualMachineFileLayoutExDiskLayout();
  }
  
  public VsanHostConfigInfo createVsanHostConfigInfo() {
    return new VsanHostConfigInfo();
  }
  
  public ArrayOfNumericRange createArrayOfNumericRange() {
    return new ArrayOfNumericRange();
  }
  
  public VirtualFloppyDeviceBackingOption createVirtualFloppyDeviceBackingOption() {
    return new VirtualFloppyDeviceBackingOption();
  }
  
  public ArrayOfElementDescription createArrayOfElementDescription() {
    return new ArrayOfElementDescription();
  }
  
  public LicenseExpiredEvent createLicenseExpiredEvent() {
    return new LicenseExpiredEvent();
  }
  
  public VimVasaProvider createVimVasaProvider() {
    return new VimVasaProvider();
  }
  
  public HostVirtualNicIpRouteSpec createHostVirtualNicIpRouteSpec() {
    return new HostVirtualNicIpRouteSpec();
  }
  
  public ToolsConfigInfoToolsLastInstallInfo createToolsConfigInfoToolsLastInstallInfo() {
    return new ToolsConfigInfoToolsLastInstallInfo();
  }
  
  public ArrayOfDynamicProperty createArrayOfDynamicProperty() {
    return new ArrayOfDynamicProperty();
  }
  
  public HostProfileConfigSpec createHostProfileConfigSpec() {
    return new HostProfileConfigSpec();
  }
  
  public GuestPosixFileAttributes createGuestPosixFileAttributes() {
    return new GuestPosixFileAttributes();
  }
  
  public HostGatewaySpec createHostGatewaySpec() {
    return new HostGatewaySpec();
  }
  
  public HostNasVolume createHostNasVolume() {
    return new HostNasVolume();
  }
  
  public ClusterDrsConfigInfo createClusterDrsConfigInfo() {
    return new ClusterDrsConfigInfo();
  }
  
  public HostLicensableResourceInfo createHostLicensableResourceInfo() {
    return new HostLicensableResourceInfo();
  }
  
  public VmMessageEvent createVmMessageEvent() {
    return new VmMessageEvent();
  }
  
  public DVSConfigInfo createDVSConfigInfo() {
    return new DVSConfigInfo();
  }
  
  public HostStorageSystemVmfsVolumeResult createHostStorageSystemVmfsVolumeResult() {
    return new HostStorageSystemVmfsVolumeResult();
  }
  
  public DVSFailureCriteria createDVSFailureCriteria() {
    return new DVSFailureCriteria();
  }
  
  public HostLowLevelProvisioningManagerFileDeleteSpec createHostLowLevelProvisioningManagerFileDeleteSpec() {
    return new HostLowLevelProvisioningManagerFileDeleteSpec();
  }
  
  public ArrayOfUserProfile createArrayOfUserProfile() {
    return new ArrayOfUserProfile();
  }
  
  public ArrayOfVirtualMachinePrecisionClockInfo createArrayOfVirtualMachinePrecisionClockInfo() {
    return new ArrayOfVirtualMachinePrecisionClockInfo();
  }
  
  public HostNetworkInfo createHostNetworkInfo() {
    return new HostNetworkInfo();
  }
  
  public HostDiagnosticPartitionCreateSpec createHostDiagnosticPartitionCreateSpec() {
    return new HostDiagnosticPartitionCreateSpec();
  }
  
  public VirtualSIOController createVirtualSIOController() {
    return new VirtualSIOController();
  }
  
  public HostStatusChangedEvent createHostStatusChangedEvent() {
    return new HostStatusChangedEvent();
  }
  
  public ArrayOfVirtualMachineVMCIDeviceFilterSpec createArrayOfVirtualMachineVMCIDeviceFilterSpec() {
    return new ArrayOfVirtualMachineVMCIDeviceFilterSpec();
  }
  
  public VMwareDVSConfigSpec createVMwareDVSConfigSpec() {
    return new VMwareDVSConfigSpec();
  }
  
  public VirtualWDT createVirtualWDT() {
    return new VirtualWDT();
  }
  
  public VMwareDvsLagVlanConfig createVMwareDvsLagVlanConfig() {
    return new VMwareDvsLagVlanConfig();
  }
  
  public EntityBackupConfig createEntityBackupConfig() {
    return new EntityBackupConfig();
  }
  
  public ArrayOfHostFirewallConfigRuleSetConfig createArrayOfHostFirewallConfigRuleSetConfig() {
    return new ArrayOfHostFirewallConfigRuleSetConfig();
  }
  
  public ArrayOfDistributedVirtualPortgroupProblem createArrayOfDistributedVirtualPortgroupProblem() {
    return new ArrayOfDistributedVirtualPortgroupProblem();
  }
  
  public ArrayOfCustomFieldValue createArrayOfCustomFieldValue() {
    return new ArrayOfCustomFieldValue();
  }
  
  public TaskReasonUser createTaskReasonUser() {
    return new TaskReasonUser();
  }
  
  public NvdimmSystemInfo createNvdimmSystemInfo() {
    return new NvdimmSystemInfo();
  }
  
  public CustomizationDhcpIpGenerator createCustomizationDhcpIpGenerator() {
    return new CustomizationDhcpIpGenerator();
  }
  
  public VirtualMachineProfileRawData createVirtualMachineProfileRawData() {
    return new VirtualMachineProfileRawData();
  }
  
  public HostHardwareStatusInfo createHostHardwareStatusInfo() {
    return new HostHardwareStatusInfo();
  }
  
  public DvsEvent createDvsEvent() {
    return new DvsEvent();
  }
  
  public HostSriovNetworkDevicePoolInfo createHostSriovNetworkDevicePoolInfo() {
    return new HostSriovNetworkDevicePoolInfo();
  }
  
  public IntOption createIntOption() {
    return new IntOption();
  }
  
  public VmWwnAssignedEvent createVmWwnAssignedEvent() {
    return new VmWwnAssignedEvent();
  }
  
  public ArrayOfDatastoreHostMount createArrayOfDatastoreHostMount() {
    return new ArrayOfDatastoreHostMount();
  }
  
  public HostCnxFailedCcagentUpgradeEvent createHostCnxFailedCcagentUpgradeEvent() {
    return new HostCnxFailedCcagentUpgradeEvent();
  }
  
  public AlarmReconfiguredEvent createAlarmReconfiguredEvent() {
    return new AlarmReconfiguredEvent();
  }
  
  public VmDasUpdateOkEvent createVmDasUpdateOkEvent() {
    return new VmDasUpdateOkEvent();
  }
  
  public HostInternetScsiHbaDigestCapabilities createHostInternetScsiHbaDigestCapabilities() {
    return new HostInternetScsiHbaDigestCapabilities();
  }
  
  public ArrayOfClusterDrsRecommendation createArrayOfClusterDrsRecommendation() {
    return new ArrayOfClusterDrsRecommendation();
  }
  
  public ArrayOfGuestAuthAliasInfo createArrayOfGuestAuthAliasInfo() {
    return new ArrayOfGuestAuthAliasInfo();
  }
  
  public ArrayOfGuestInfoNamespaceGenerationInfo createArrayOfGuestInfoNamespaceGenerationInfo() {
    return new ArrayOfGuestInfoNamespaceGenerationInfo();
  }
  
  public VmDasResetFailedEvent createVmDasResetFailedEvent() {
    return new VmDasResetFailedEvent();
  }
  
  public ArrayOfVirtualMachineUsbInfo createArrayOfVirtualMachineUsbInfo() {
    return new ArrayOfVirtualMachineUsbInfo();
  }
  
  public ArrayOfHostNumericSensorInfo createArrayOfHostNumericSensorInfo() {
    return new ArrayOfHostNumericSensorInfo();
  }
  
  public NvdimmGuid createNvdimmGuid() {
    return new NvdimmGuid();
  }
  
  public VirtualDiskRawDiskMappingVer1BackingInfo createVirtualDiskRawDiskMappingVer1BackingInfo() {
    return new VirtualDiskRawDiskMappingVer1BackingInfo();
  }
  
  public ArrayOfVirtualMachineMessage createArrayOfVirtualMachineMessage() {
    return new ArrayOfVirtualMachineMessage();
  }
  
  public VirtualMachineSriovInfo createVirtualMachineSriovInfo() {
    return new VirtualMachineSriovInfo();
  }
  
  public AlarmRemovedEvent createAlarmRemovedEvent() {
    return new AlarmRemovedEvent();
  }
  
  public FaultToleranceMetaSpec createFaultToleranceMetaSpec() {
    return new FaultToleranceMetaSpec();
  }
  
  public VirtualMachineQuickStats createVirtualMachineQuickStats() {
    return new VirtualMachineQuickStats();
  }
  
  public ArrayOfVirtualMachinePciPassthroughInfo createArrayOfVirtualMachinePciPassthroughInfo() {
    return new ArrayOfVirtualMachinePciPassthroughInfo();
  }
  
  public TeamingMisMatchEvent createTeamingMisMatchEvent() {
    return new TeamingMisMatchEvent();
  }
  
  public CustomizationFixedIpV6 createCustomizationFixedIpV6() {
    return new CustomizationFixedIpV6();
  }
  
  public DVPortgroupCreatedEvent createDVPortgroupCreatedEvent() {
    return new DVPortgroupCreatedEvent();
  }
  
  public HostConnectedEvent createHostConnectedEvent() {
    return new HostConnectedEvent();
  }
  
  public VmwareDistributedVirtualSwitchTrunkVlanSpec createVmwareDistributedVirtualSwitchTrunkVlanSpec() {
    return new VmwareDistributedVirtualSwitchTrunkVlanSpec();
  }
  
  public ArrayOfOvfDeploymentOption createArrayOfOvfDeploymentOption() {
    return new ArrayOfOvfDeploymentOption();
  }
  
  public ArrayOfHostIpRouteEntry createArrayOfHostIpRouteEntry() {
    return new ArrayOfHostIpRouteEntry();
  }
  
  public HostExtraNetworksEvent createHostExtraNetworksEvent() {
    return new HostExtraNetworksEvent();
  }
  
  public IsoImageFileQuery createIsoImageFileQuery() {
    return new IsoImageFileQuery();
  }
  
  public ArrayOfHostMultipathInfoLogicalUnit createArrayOfHostMultipathInfoLogicalUnit() {
    return new ArrayOfHostMultipathInfoLogicalUnit();
  }
  
  public ArrayOfHostDhcpServiceConfig createArrayOfHostDhcpServiceConfig() {
    return new ArrayOfHostDhcpServiceConfig();
  }
  
  public CustomFieldDefAddedEvent createCustomFieldDefAddedEvent() {
    return new CustomFieldDefAddedEvent();
  }
  
  public HostSriovConfig createHostSriovConfig() {
    return new HostSriovConfig();
  }
  
  public IscsiDependencyEntity createIscsiDependencyEntity() {
    return new IscsiDependencyEntity();
  }
  
  public ClusterDasHostRecommendation createClusterDasHostRecommendation() {
    return new ClusterDasHostRecommendation();
  }
  
  public VirtualMachineBootOptions createVirtualMachineBootOptions() {
    return new VirtualMachineBootOptions();
  }
  
  public HostVirtualNicOpaqueNetworkSpec createHostVirtualNicOpaqueNetworkSpec() {
    return new HostVirtualNicOpaqueNetworkSpec();
  }
  
  public HostOvercommittedEvent createHostOvercommittedEvent() {
    return new HostOvercommittedEvent();
  }
  
  public HostServiceInfo createHostServiceInfo() {
    return new HostServiceInfo();
  }
  
  public VAppCloneSpecNetworkMappingPair createVAppCloneSpecNetworkMappingPair() {
    return new VAppCloneSpecNetworkMappingPair();
  }
  
  public ArrayOfClusterDrsVmConfigInfo createArrayOfClusterDrsVmConfigInfo() {
    return new ArrayOfClusterDrsVmConfigInfo();
  }
  
  public HostHardwareInfo createHostHardwareInfo() {
    return new HostHardwareInfo();
  }
  
  public VirtualUSBRemoteClientBackingOption createVirtualUSBRemoteClientBackingOption() {
    return new VirtualUSBRemoteClientBackingOption();
  }
  
  public PrivilegePolicyDef createPrivilegePolicyDef() {
    return new PrivilegePolicyDef();
  }
  
  public ArrayOfVStorageObjectAssociations createArrayOfVStorageObjectAssociations() {
    return new ArrayOfVStorageObjectAssociations();
  }
  
  public HostIpRouteTableInfo createHostIpRouteTableInfo() {
    return new HostIpRouteTableInfo();
  }
  
  public VirtualMachineConfigInfo createVirtualMachineConfigInfo() {
    return new VirtualMachineConfigInfo();
  }
  
  public ArrayOfHostPlugStoreTopologyPath createArrayOfHostPlugStoreTopologyPath() {
    return new ArrayOfHostPlugStoreTopologyPath();
  }
  
  public DuplicateIpDetectedEvent createDuplicateIpDetectedEvent() {
    return new DuplicateIpDetectedEvent();
  }
  
  public ArrayOfNetIpStackInfoNetToMedia createArrayOfNetIpStackInfoNetToMedia() {
    return new ArrayOfNetIpStackInfoNetToMedia();
  }
  
  public ClusterDpmHostConfigInfo createClusterDpmHostConfigInfo() {
    return new ClusterDpmHostConfigInfo();
  }
  
  public HostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption createHostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption() {
    return new HostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption();
  }
  
  public HostSystemSwapConfigurationDisabledOption createHostSystemSwapConfigurationDisabledOption() {
    return new HostSystemSwapConfigurationDisabledOption();
  }
  
  public HostDatastoreConnectInfo createHostDatastoreConnectInfo() {
    return new HostDatastoreConnectInfo();
  }
  
  public HostEventArgument createHostEventArgument() {
    return new HostEventArgument();
  }
  
  public ArrayOfHostProxySwitch createArrayOfHostProxySwitch() {
    return new ArrayOfHostProxySwitch();
  }
  
  public HostIpConfigIpV6AddressConfiguration createHostIpConfigIpV6AddressConfiguration() {
    return new HostIpConfigIpV6AddressConfiguration();
  }
  
  public VmGuestRebootEvent createVmGuestRebootEvent() {
    return new VmGuestRebootEvent();
  }
  
  public ArrayOfGuestInfoVirtualDiskMapping createArrayOfGuestInfoVirtualDiskMapping() {
    return new ArrayOfGuestInfoVirtualDiskMapping();
  }
  
  public MtuMismatchEvent createMtuMismatchEvent() {
    return new MtuMismatchEvent();
  }
  
  public FaultsByHost createFaultsByHost() {
    return new FaultsByHost();
  }
  
  public BoolOption createBoolOption() {
    return new BoolOption();
  }
  
  public EventFilterSpec createEventFilterSpec() {
    return new EventFilterSpec();
  }
  
  public VirtualMachinePropertyRelation createVirtualMachinePropertyRelation() {
    return new VirtualMachinePropertyRelation();
  }
  
  public ArrayOfGuestDiskInfo createArrayOfGuestDiskInfo() {
    return new ArrayOfGuestDiskInfo();
  }
  
  public DvsHostInfrastructureTrafficResource createDvsHostInfrastructureTrafficResource() {
    return new DvsHostInfrastructureTrafficResource();
  }
  
  public VirtualMachineDatastoreInfo createVirtualMachineDatastoreInfo() {
    return new VirtualMachineDatastoreInfo();
  }
  
  public LocalLicenseSource createLocalLicenseSource() {
    return new LocalLicenseSource();
  }
  
  public VirtualDeviceOption createVirtualDeviceOption() {
    return new VirtualDeviceOption();
  }
  
  public VmReconfiguredEvent createVmReconfiguredEvent() {
    return new VmReconfiguredEvent();
  }
  
  public ProfileParameterMetadata createProfileParameterMetadata() {
    return new ProfileParameterMetadata();
  }
  
  public NvdimmPMemNamespaceCreateSpec createNvdimmPMemNamespaceCreateSpec() {
    return new NvdimmPMemNamespaceCreateSpec();
  }
  
  public EventAlarmExpressionComparison createEventAlarmExpressionComparison() {
    return new EventAlarmExpressionComparison();
  }
  
  public VmFailedToShutdownGuestEvent createVmFailedToShutdownGuestEvent() {
    return new VmFailedToShutdownGuestEvent();
  }
  
  public ArrayOfUserSession createArrayOfUserSession() {
    return new ArrayOfUserSession();
  }
  
  public ClusterComputeResourceClusterConfigResult createClusterComputeResourceClusterConfigResult() {
    return new ClusterComputeResourceClusterConfigResult();
  }
  
  public VirtualMachineSummary createVirtualMachineSummary() {
    return new VirtualMachineSummary();
  }
  
  public VmFailedToResetEvent createVmFailedToResetEvent() {
    return new VmFailedToResetEvent();
  }
  
  public DVSHealthCheckConfig createDVSHealthCheckConfig() {
    return new DVSHealthCheckConfig();
  }
  
  public VirtualDiskSeSparseBackingInfo createVirtualDiskSeSparseBackingInfo() {
    return new VirtualDiskSeSparseBackingInfo();
  }
  
  public VirtualMachineWindowsQuiesceSpec createVirtualMachineWindowsQuiesceSpec() {
    return new VirtualMachineWindowsQuiesceSpec();
  }
  
  public VmSnapshotFileQuery createVmSnapshotFileQuery() {
    return new VmSnapshotFileQuery();
  }
  
  public VsanHostDiskMapInfo createVsanHostDiskMapInfo() {
    return new VsanHostDiskMapInfo();
  }
  
  public ServiceLocatorSAMLCredential createServiceLocatorSAMLCredential() {
    return new ServiceLocatorSAMLCredential();
  }
  
  public ArrayOfVimVasaProviderStatePerArray createArrayOfVimVasaProviderStatePerArray() {
    return new ArrayOfVimVasaProviderStatePerArray();
  }
  
  public CryptoSpecShallowRecrypt createCryptoSpecShallowRecrypt() {
    return new CryptoSpecShallowRecrypt();
  }
  
  public EventArgument createEventArgument() {
    return new EventArgument();
  }
  
  public ProfileCompositeExpression createProfileCompositeExpression() {
    return new ProfileCompositeExpression();
  }
  
  public OvfConsumerOvfSection createOvfConsumerOvfSection() {
    return new OvfConsumerOvfSection();
  }
  
  public HostLowLevelProvisioningManagerVmMigrationStatus createHostLowLevelProvisioningManagerVmMigrationStatus() {
    return new HostLowLevelProvisioningManagerVmMigrationStatus();
  }
  
  public ArrayOfDistributedVirtualSwitchManagerHostDvsFilterSpec createArrayOfDistributedVirtualSwitchManagerHostDvsFilterSpec() {
    return new ArrayOfDistributedVirtualSwitchManagerHostDvsFilterSpec();
  }
  
  public ChangesInfoEventArgument createChangesInfoEventArgument() {
    return new ChangesInfoEventArgument();
  }
  
  public DatastoreSummary createDatastoreSummary() {
    return new DatastoreSummary();
  }
  
  public HostNvmeTopology createHostNvmeTopology() {
    return new HostNvmeTopology();
  }
  
  public EnvironmentBrowserConfigOptionQuerySpec createEnvironmentBrowserConfigOptionQuerySpec() {
    return new EnvironmentBrowserConfigOptionQuerySpec();
  }
  
  public ArrayOfHostDiskMappingPartitionOption createArrayOfHostDiskMappingPartitionOption() {
    return new ArrayOfHostDiskMappingPartitionOption();
  }
  
  public ArrayOfHostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption createArrayOfHostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption() {
    return new ArrayOfHostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption();
  }
  
  public HostSgxInfo createHostSgxInfo() {
    return new HostSgxInfo();
  }
  
  public ArrayOfGuestProcessInfo createArrayOfGuestProcessInfo() {
    return new ArrayOfGuestProcessInfo();
  }
  
  public VMwareDVSVspanConfigSpec createVMwareDVSVspanConfigSpec() {
    return new VMwareDVSVspanConfigSpec();
  }
  
  public VirtualWDTOption createVirtualWDTOption() {
    return new VirtualWDTOption();
  }
  
  public VmSuspendingEvent createVmSuspendingEvent() {
    return new VmSuspendingEvent();
  }
  
  public HostIpChangedEvent createHostIpChangedEvent() {
    return new HostIpChangedEvent();
  }
  
  public HostVirtualNicManagerNicTypeSelection createHostVirtualNicManagerNicTypeSelection() {
    return new HostVirtualNicManagerNicTypeSelection();
  }
  
  public HostFibreChannelOverEthernetHbaLinkInfo createHostFibreChannelOverEthernetHbaLinkInfo() {
    return new HostFibreChannelOverEthernetHbaLinkInfo();
  }
  
  public VmStartingSecondaryEvent createVmStartingSecondaryEvent() {
    return new VmStartingSecondaryEvent();
  }
  
  public ArrayOfVirtualMachineFileLayoutExDiskLayout createArrayOfVirtualMachineFileLayoutExDiskLayout() {
    return new ArrayOfVirtualMachineFileLayoutExDiskLayout();
  }
  
  public VirtualMachineVMCIDeviceOptionFilterSpecOption createVirtualMachineVMCIDeviceOptionFilterSpecOption() {
    return new VirtualMachineVMCIDeviceOptionFilterSpecOption();
  }
  
  public DvsTrafficRule createDvsTrafficRule() {
    return new DvsTrafficRule();
  }
  
  public DrsSoftRuleViolationEvent createDrsSoftRuleViolationEvent() {
    return new DrsSoftRuleViolationEvent();
  }
  
  public ArrayOfVslmTagEntry createArrayOfVslmTagEntry() {
    return new ArrayOfVslmTagEntry();
  }
  
  public ClusterComputeResourceDVSSettingDVPortgroupToServiceMapping createClusterComputeResourceDVSSettingDVPortgroupToServiceMapping() {
    return new ClusterComputeResourceDVSSettingDVPortgroupToServiceMapping();
  }
  
  public VirtualUSBControllerPciBusSlotInfo createVirtualUSBControllerPciBusSlotInfo() {
    return new VirtualUSBControllerPciBusSlotInfo();
  }
  
  public VsanHostConfigInfoNetworkInfoPortConfig createVsanHostConfigInfoNetworkInfoPortConfig() {
    return new VsanHostConfigInfoNetworkInfoPortConfig();
  }
  
  public DvsFilterConfigSpec createDvsFilterConfigSpec() {
    return new DvsFilterConfigSpec();
  }
  
  public RetrieveVStorageObjSpec createRetrieveVStorageObjSpec() {
    return new RetrieveVStorageObjSpec();
  }
  
  public VimVasaProviderInfo createVimVasaProviderInfo() {
    return new VimVasaProviderInfo();
  }
  
  public VirtualAppSummary createVirtualAppSummary() {
    return new VirtualAppSummary();
  }
  
  public PerfMetricSeriesCSV createPerfMetricSeriesCSV() {
    return new PerfMetricSeriesCSV();
  }
  
  public VmOrphanedEvent createVmOrphanedEvent() {
    return new VmOrphanedEvent();
  }
  
  public VirtualMachineDefaultProfileSpec createVirtualMachineDefaultProfileSpec() {
    return new VirtualMachineDefaultProfileSpec();
  }
  
  public ArrayOfMethodActionArgument createArrayOfMethodActionArgument() {
    return new ArrayOfMethodActionArgument();
  }
  
  public ArrayOfvslmInfrastructureObjectPolicy createArrayOfvslmInfrastructureObjectPolicy() {
    return new ArrayOfvslmInfrastructureObjectPolicy();
  }
  
  public VmFailedToPowerOffEvent createVmFailedToPowerOffEvent() {
    return new VmFailedToPowerOffEvent();
  }
  
  public VirtualIDEControllerOption createVirtualIDEControllerOption() {
    return new VirtualIDEControllerOption();
  }
  
  public VirtualAppImportSpec createVirtualAppImportSpec() {
    return new VirtualAppImportSpec();
  }
  
  public VirtualDeviceConfigSpec createVirtualDeviceConfigSpec() {
    return new VirtualDeviceConfigSpec();
  }
  
  public HostNvmeOpaqueTransportParameters createHostNvmeOpaqueTransportParameters() {
    return new HostNvmeOpaqueTransportParameters();
  }
  
  public DVPortgroupReconfiguredEvent createDVPortgroupReconfiguredEvent() {
    return new DVPortgroupReconfiguredEvent();
  }
  
  public DvsOutOfSyncHostArgument createDvsOutOfSyncHostArgument() {
    return new DvsOutOfSyncHostArgument();
  }
  
  public ClusterComputeResourceHCIConfigInfo createClusterComputeResourceHCIConfigInfo() {
    return new ClusterComputeResourceHCIConfigInfo();
  }
  
  public VsanHostConfigInfoNetworkInfo createVsanHostConfigInfoNetworkInfo() {
    return new VsanHostConfigInfoNetworkInfo();
  }
  
  public ArrayOfOptionValue createArrayOfOptionValue() {
    return new ArrayOfOptionValue();
  }
  
  public TicketedSessionAuthentication createTicketedSessionAuthentication() {
    return new TicketedSessionAuthentication();
  }
  
  public VirtualDiskSpec createVirtualDiskSpec() {
    return new VirtualDiskSpec();
  }
  
  public OpaqueNetworkCapability createOpaqueNetworkCapability() {
    return new OpaqueNetworkCapability();
  }
  
  public ArrayOfHostSystemSwapConfigurationSystemSwapOption createArrayOfHostSystemSwapConfigurationSystemSwapOption() {
    return new ArrayOfHostSystemSwapConfigurationSystemSwapOption();
  }
  
  public ResourcePoolDestroyedEvent createResourcePoolDestroyedEvent() {
    return new ResourcePoolDestroyedEvent();
  }
  
  public DatacenterEventArgument createDatacenterEventArgument() {
    return new DatacenterEventArgument();
  }
  
  public VMwareDVSPvlanMapEntry createVMwareDVSPvlanMapEntry() {
    return new VMwareDVSPvlanMapEntry();
  }
  
  public StorageDrsConfigSpec createStorageDrsConfigSpec() {
    return new StorageDrsConfigSpec();
  }
  
  public ArrayOfVAppEntityConfigInfo createArrayOfVAppEntityConfigInfo() {
    return new ArrayOfVAppEntityConfigInfo();
  }
  
  public ArrayOfVAppCloneSpecResourceMap createArrayOfVAppCloneSpecResourceMap() {
    return new ArrayOfVAppCloneSpecResourceMap();
  }
  
  public PhysicalNicCdpDeviceCapability createPhysicalNicCdpDeviceCapability() {
    return new PhysicalNicCdpDeviceCapability();
  }
  
  public SessionEvent createSessionEvent() {
    return new SessionEvent();
  }
  
  public ArrayOfClusterDrsFaults createArrayOfClusterDrsFaults() {
    return new ArrayOfClusterDrsFaults();
  }
  
  public DrsResourceConfigureSyncedEvent createDrsResourceConfigureSyncedEvent() {
    return new DrsResourceConfigureSyncedEvent();
  }
  
  public ClusterInitialPlacementAction createClusterInitialPlacementAction() {
    return new ClusterInitialPlacementAction();
  }
  
  public AlarmTriggeringActionTransitionSpec createAlarmTriggeringActionTransitionSpec() {
    return new AlarmTriggeringActionTransitionSpec();
  }
  
  public CustomizationDhcpIpV6Generator createCustomizationDhcpIpV6Generator() {
    return new CustomizationDhcpIpV6Generator();
  }
  
  public InvalidEditionEvent createInvalidEditionEvent() {
    return new InvalidEditionEvent();
  }
  
  public HostDatastoreSystemVvolDatastoreSpec createHostDatastoreSystemVvolDatastoreSpec() {
    return new HostDatastoreSystemVvolDatastoreSpec();
  }
  
  public HostVirtualSwitchBondBridge createHostVirtualSwitchBondBridge() {
    return new HostVirtualSwitchBondBridge();
  }
  
  public CustomizationGlobalIPSettings createCustomizationGlobalIPSettings() {
    return new CustomizationGlobalIPSettings();
  }
  
  public HostListSummary createHostListSummary() {
    return new HostListSummary();
  }
  
  public NvdimmNamespaceCreateSpec createNvdimmNamespaceCreateSpec() {
    return new NvdimmNamespaceCreateSpec();
  }
  
  public PhysicalNicProfile createPhysicalNicProfile() {
    return new PhysicalNicProfile();
  }
  
  public FileQuery createFileQuery() {
    return new FileQuery();
  }
  
  public HostFaultToleranceManagerComponentHealthInfo createHostFaultToleranceManagerComponentHealthInfo() {
    return new HostFaultToleranceManagerComponentHealthInfo();
  }
  
  public VmRemovedEvent createVmRemovedEvent() {
    return new VmRemovedEvent();
  }
  
  public ArrayOfUserGroupProfile createArrayOfUserGroupProfile() {
    return new ArrayOfUserGroupProfile();
  }
  
  public VirtualDevicePciBusSlotInfo createVirtualDevicePciBusSlotInfo() {
    return new VirtualDevicePciBusSlotInfo();
  }
  
  public GuestInfoVirtualDiskMapping createGuestInfoVirtualDiskMapping() {
    return new GuestInfoVirtualDiskMapping();
  }
  
  public ArrayOfVirtualMachineFeatureRequirement createArrayOfVirtualMachineFeatureRequirement() {
    return new ArrayOfVirtualMachineFeatureRequirement();
  }
  
  public RoleUpdatedEvent createRoleUpdatedEvent() {
    return new RoleUpdatedEvent();
  }
  
  public CustomizationCustomName createCustomizationCustomName() {
    return new CustomizationCustomName();
  }
  
  public LicenseRestrictedEvent createLicenseRestrictedEvent() {
    return new LicenseRestrictedEvent();
  }
  
  public ArrayOfManagedEntityStatus createArrayOfManagedEntityStatus() {
    return new ArrayOfManagedEntityStatus();
  }
  
  public ArrayOfHostProxySwitchConfig createArrayOfHostProxySwitchConfig() {
    return new ArrayOfHostProxySwitchConfig();
  }
  
  public ArrayOfProfileMetadataProfileOperationMessage createArrayOfProfileMetadataProfileOperationMessage() {
    return new ArrayOfProfileMetadataProfileOperationMessage();
  }
  
  public VchaClusterDeploymentSpec createVchaClusterDeploymentSpec() {
    return new VchaClusterDeploymentSpec();
  }
  
  public HostDiskPartitionSpec createHostDiskPartitionSpec() {
    return new HostDiskPartitionSpec();
  }
  
  public HostInternetScsiHba createHostInternetScsiHba() {
    return new HostInternetScsiHba();
  }
  
  public HostTargetTransport createHostTargetTransport() {
    return new HostTargetTransport();
  }
  
  public ArrayOfUpdateVirtualMachineFilesResultFailedVmFileInfo createArrayOfUpdateVirtualMachineFilesResultFailedVmFileInfo() {
    return new ArrayOfUpdateVirtualMachineFilesResultFailedVmFileInfo();
  }
  
  public VirtualMachineSerialInfo createVirtualMachineSerialInfo() {
    return new VirtualMachineSerialInfo();
  }
  
  public ArrayOfVirtualMachineDeviceRuntimeInfo createArrayOfVirtualMachineDeviceRuntimeInfo() {
    return new ArrayOfVirtualMachineDeviceRuntimeInfo();
  }
  
  public VirtualMachineDisplayTopology createVirtualMachineDisplayTopology() {
    return new VirtualMachineDisplayTopology();
  }
  
  public DVSNameArrayUplinkPortPolicy createDVSNameArrayUplinkPortPolicy() {
    return new DVSNameArrayUplinkPortPolicy();
  }
  
  public HostNasVolumeSpec createHostNasVolumeSpec() {
    return new HostNasVolumeSpec();
  }
  
  public WitnessNodeInfo createWitnessNodeInfo() {
    return new WitnessNodeInfo();
  }
  
  public ArrayOfStorageDrsVmConfigInfo createArrayOfStorageDrsVmConfigInfo() {
    return new ArrayOfStorageDrsVmConfigInfo();
  }
  
  public HostConfigInfo createHostConfigInfo() {
    return new HostConfigInfo();
  }
  
  public IpPoolIpPoolConfigInfo createIpPoolIpPoolConfigInfo() {
    return new IpPoolIpPoolConfigInfo();
  }
  
  public HostVFlashResourceConfigurationResult createHostVFlashResourceConfigurationResult() {
    return new HostVFlashResourceConfigurationResult();
  }
  
  public ArrayOfVsanPolicySatisfiability createArrayOfVsanPolicySatisfiability() {
    return new ArrayOfVsanPolicySatisfiability();
  }
  
  public ArrayOfFolderFailedHostResult createArrayOfFolderFailedHostResult() {
    return new ArrayOfFolderFailedHostResult();
  }
  
  public ExtensionTaskTypeInfo createExtensionTaskTypeInfo() {
    return new ExtensionTaskTypeInfo();
  }
  
  public HbrManagerVmReplicationCapability createHbrManagerVmReplicationCapability() {
    return new HbrManagerVmReplicationCapability();
  }
  
  public ArrayOfVsanHostDiskMapInfo createArrayOfVsanHostDiskMapInfo() {
    return new ArrayOfVsanHostDiskMapInfo();
  }
  
  public HostFeatureVersionInfo createHostFeatureVersionInfo() {
    return new HostFeatureVersionInfo();
  }
  
  public DvsHostStatusUpdated createDvsHostStatusUpdated() {
    return new DvsHostStatusUpdated();
  }
  
  public ArrayOfHostScsiTopologyTarget createArrayOfHostScsiTopologyTarget() {
    return new ArrayOfHostScsiTopologyTarget();
  }
  
  public VMwareDVSConfigInfo createVMwareDVSConfigInfo() {
    return new VMwareDVSConfigInfo();
  }
  
  public DistributedVirtualSwitchHostMemberPnicBacking createDistributedVirtualSwitchHostMemberPnicBacking() {
    return new DistributedVirtualSwitchHostMemberPnicBacking();
  }
  
  public NodeDeploymentSpec createNodeDeploymentSpec() {
    return new NodeDeploymentSpec();
  }
  
  public DvsPortLeavePortgroupEvent createDvsPortLeavePortgroupEvent() {
    return new DvsPortLeavePortgroupEvent();
  }
  
  public NetDnsConfigSpec createNetDnsConfigSpec() {
    return new NetDnsConfigSpec();
  }
  
  public StringExpression createStringExpression() {
    return new StringExpression();
  }
  
  public HostCacheConfigurationSpec createHostCacheConfigurationSpec() {
    return new HostCacheConfigurationSpec();
  }
  
  public ApplyStorageRecommendationResult createApplyStorageRecommendationResult() {
    return new ApplyStorageRecommendationResult();
  }
  
  public GuestScreenInfo createGuestScreenInfo() {
    return new GuestScreenInfo();
  }
  
  public HostNetOffloadCapabilities createHostNetOffloadCapabilities() {
    return new HostNetOffloadCapabilities();
  }
  
  public FolderEventArgument createFolderEventArgument() {
    return new FolderEventArgument();
  }
  
  public VirtualUSBRemoteClientBackingInfo createVirtualUSBRemoteClientBackingInfo() {
    return new VirtualUSBRemoteClientBackingInfo();
  }
  
  public DatastoreDuplicatedEvent createDatastoreDuplicatedEvent() {
    return new DatastoreDuplicatedEvent();
  }
  
  public ArrayOfFolderNewHostSpec createArrayOfFolderNewHostSpec() {
    return new ArrayOfFolderNewHostSpec();
  }
  
  public ArrayOfCustomizationIpV6Generator createArrayOfCustomizationIpV6Generator() {
    return new ArrayOfCustomizationIpV6Generator();
  }
  
  public ArrayOfMethodFault createArrayOfMethodFault() {
    return new ArrayOfMethodFault();
  }
  
  public DistributedVirtualSwitchManagerDvsProductSpec createDistributedVirtualSwitchManagerDvsProductSpec() {
    return new DistributedVirtualSwitchManagerDvsProductSpec();
  }
  
  public VirtualUSBOption createVirtualUSBOption() {
    return new VirtualUSBOption();
  }
  
  public VmWwnChangedEvent createVmWwnChangedEvent() {
    return new VmWwnChangedEvent();
  }
  
  public ClusterVmOrchestrationSpec createClusterVmOrchestrationSpec() {
    return new ClusterVmOrchestrationSpec();
  }
  
  public ArrayOfVMwareDVSVspanConfigSpec createArrayOfVMwareDVSVspanConfigSpec() {
    return new ArrayOfVMwareDVSVspanConfigSpec();
  }
  
  public VirtualMachineMetadataManagerVmMetadataResult createVirtualMachineMetadataManagerVmMetadataResult() {
    return new VirtualMachineMetadataManagerVmMetadataResult();
  }
  
  public ExtensionEventTypeInfo createExtensionEventTypeInfo() {
    return new ExtensionEventTypeInfo();
  }
  
  public VirtualCdromRemotePassthroughBackingInfo createVirtualCdromRemotePassthroughBackingInfo() {
    return new VirtualCdromRemotePassthroughBackingInfo();
  }
  
  public VirtualDiskConfigSpec createVirtualDiskConfigSpec() {
    return new VirtualDiskConfigSpec();
  }
  
  public HostNotInClusterEvent createHostNotInClusterEvent() {
    return new HostNotInClusterEvent();
  }
  
  public VirtualMachineCapability createVirtualMachineCapability() {
    return new VirtualMachineCapability();
  }
  
  public NasDatastoreInfo createNasDatastoreInfo() {
    return new NasDatastoreInfo();
  }
  
  public ArrayOfKeyAnyValue createArrayOfKeyAnyValue() {
    return new ArrayOfKeyAnyValue();
  }
  
  public HostTpmEventDetails createHostTpmEventDetails() {
    return new HostTpmEventDetails();
  }
  
  public ArrayOfAnswerFileStatusError createArrayOfAnswerFileStatusError() {
    return new ArrayOfAnswerFileStatusError();
  }
  
  public SendSNMPAction createSendSNMPAction() {
    return new SendSNMPAction();
  }
  
  public UsbScanCodeSpec createUsbScanCodeSpec() {
    return new UsbScanCodeSpec();
  }
  
  public ArrayOfVirtualDiskDeltaDiskFormatsSupported createArrayOfVirtualDiskDeltaDiskFormatsSupported() {
    return new ArrayOfVirtualDiskDeltaDiskFormatsSupported();
  }
  
  public DvsReconfiguredEvent createDvsReconfiguredEvent() {
    return new DvsReconfiguredEvent();
  }
  
  public BaseConfigInfoRawDiskMappingBackingInfo createBaseConfigInfoRawDiskMappingBackingInfo() {
    return new BaseConfigInfoRawDiskMappingBackingInfo();
  }
  
  public VmBeingHotMigratedEvent createVmBeingHotMigratedEvent() {
    return new VmBeingHotMigratedEvent();
  }
  
  public ArrayOfIpPoolAssociation createArrayOfIpPoolAssociation() {
    return new ArrayOfIpPoolAssociation();
  }
  
  public VirtualMachineBootOptionsBootableEthernetDevice createVirtualMachineBootOptionsBootableEthernetDevice() {
    return new VirtualMachineBootOptionsBootableEthernetDevice();
  }
  
  public TaskScheduler createTaskScheduler() {
    return new TaskScheduler();
  }
  
  public VirtualDeviceConfigSpecBackingSpec createVirtualDeviceConfigSpecBackingSpec() {
    return new VirtualDeviceConfigSpecBackingSpec();
  }
  
  public DvsFilterConfig createDvsFilterConfig() {
    return new DvsFilterConfig();
  }
  
  public HostTpmBootSecurityOptionEventDetails createHostTpmBootSecurityOptionEventDetails() {
    return new HostTpmBootSecurityOptionEventDetails();
  }
  
  public CustomFieldStringValue createCustomFieldStringValue() {
    return new CustomFieldStringValue();
  }
  
  public AlarmEvent createAlarmEvent() {
    return new AlarmEvent();
  }
  
  public ArrayOfHostLowLevelProvisioningManagerFileDeleteResult createArrayOfHostLowLevelProvisioningManagerFileDeleteResult() {
    return new ArrayOfHostLowLevelProvisioningManagerFileDeleteResult();
  }
  
  public FirewallProfileRulesetProfile createFirewallProfileRulesetProfile() {
    return new FirewallProfileRulesetProfile();
  }
  
  public SessionManagerVmomiServiceRequestSpec createSessionManagerVmomiServiceRequestSpec() {
    return new SessionManagerVmomiServiceRequestSpec();
  }
  
  public ComputeResourceConfigSpec createComputeResourceConfigSpec() {
    return new ComputeResourceConfigSpec();
  }
  
  public HostPortGroupPort createHostPortGroupPort() {
    return new HostPortGroupPort();
  }
  
  public VirtualMachineConfigSummary createVirtualMachineConfigSummary() {
    return new VirtualMachineConfigSummary();
  }
  
  public NetworkSummary createNetworkSummary() {
    return new NetworkSummary();
  }
  
  public HostVMotionManagerSrcInstantCloneResult createHostVMotionManagerSrcInstantCloneResult() {
    return new HostVMotionManagerSrcInstantCloneResult();
  }
  
  public HostUnresolvedVmfsResignatureSpec createHostUnresolvedVmfsResignatureSpec() {
    return new HostUnresolvedVmfsResignatureSpec();
  }
  
  public VirtualEthernetCardNetworkBackingInfo createVirtualEthernetCardNetworkBackingInfo() {
    return new VirtualEthernetCardNetworkBackingInfo();
  }
  
  public ArrayOfHostVMotionCompatibility createArrayOfHostVMotionCompatibility() {
    return new ArrayOfHostVMotionCompatibility();
  }
  
  public HostCnxFailedNoAccessEvent createHostCnxFailedNoAccessEvent() {
    return new HostCnxFailedNoAccessEvent();
  }
  
  public CustomizationLinuxIdentityFailed createCustomizationLinuxIdentityFailed() {
    return new CustomizationLinuxIdentityFailed();
  }
  
  public HostCnxFailedBadCcagentEvent createHostCnxFailedBadCcagentEvent() {
    return new HostCnxFailedBadCcagentEvent();
  }
  
  public ArrayOfOptionProfile createArrayOfOptionProfile() {
    return new ArrayOfOptionProfile();
  }
  
  public HostDasDisabledEvent createHostDasDisabledEvent() {
    return new HostDasDisabledEvent();
  }
  
  public VMwareVspanSession createVMwareVspanSession() {
    return new VMwareVspanSession();
  }
  
  public ArrayOfHostDateTimeSystemTimeZone createArrayOfHostDateTimeSystemTimeZone() {
    return new ArrayOfHostDateTimeSystemTimeZone();
  }
  
  public VirtualVmxnet3VrdmaOption createVirtualVmxnet3VrdmaOption() {
    return new VirtualVmxnet3VrdmaOption();
  }
  
  public HostVmfsSpec createHostVmfsSpec() {
    return new HostVmfsSpec();
  }
  
  public VsanUpgradeSystemUpgradeHistoryPreflightFail createVsanUpgradeSystemUpgradeHistoryPreflightFail() {
    return new VsanUpgradeSystemUpgradeHistoryPreflightFail();
  }
  
  public ArrayOfStorageDrsOptionSpec createArrayOfStorageDrsOptionSpec() {
    return new ArrayOfStorageDrsOptionSpec();
  }
  
  public HostSystemSwapConfigurationDatastoreOption createHostSystemSwapConfigurationDatastoreOption() {
    return new HostSystemSwapConfigurationDatastoreOption();
  }
  
  public ArrayOfAlarmAction createArrayOfAlarmAction() {
    return new ArrayOfAlarmAction();
  }
  
  public ArrayOfReplicationInfoDiskSettings createArrayOfReplicationInfoDiskSettings() {
    return new ArrayOfReplicationInfoDiskSettings();
  }
  
  public NodeNetworkSpec createNodeNetworkSpec() {
    return new NodeNetworkSpec();
  }
  
  public ArrayOfHealthUpdate createArrayOfHealthUpdate() {
    return new ArrayOfHealthUpdate();
  }
  
  public HostUnresolvedVmfsResolutionSpec createHostUnresolvedVmfsResolutionSpec() {
    return new HostUnresolvedVmfsResolutionSpec();
  }
  
  public VirtualDiskSparseVer2BackingInfo createVirtualDiskSparseVer2BackingInfo() {
    return new VirtualDiskSparseVer2BackingInfo();
  }
  
  public ArrayOfClusterIoFilterInfo createArrayOfClusterIoFilterInfo() {
    return new ArrayOfClusterIoFilterInfo();
  }
  
  public DVSHostLocalPortInfo createDVSHostLocalPortInfo() {
    return new DVSHostLocalPortInfo();
  }
  
  public HostPlugStoreTopologyPlugin createHostPlugStoreTopologyPlugin() {
    return new HostPlugStoreTopologyPlugin();
  }
  
  public HostInAuditModeEvent createHostInAuditModeEvent() {
    return new HostInAuditModeEvent();
  }
  
  public ArrayOfDvsApplyOperationFaultFaultOnObject createArrayOfDvsApplyOperationFaultFaultOnObject() {
    return new ArrayOfDvsApplyOperationFaultFaultOnObject();
  }
  
  public ArrayOfOptionDef createArrayOfOptionDef() {
    return new ArrayOfOptionDef();
  }
  
  public ArrayOfVirtualAppLinkInfo createArrayOfVirtualAppLinkInfo() {
    return new ArrayOfVirtualAppLinkInfo();
  }
  
  public ArrayOfHostInternetScsiHbaParamValue createArrayOfHostInternetScsiHbaParamValue() {
    return new ArrayOfHostInternetScsiHbaParamValue();
  }
  
  public VirtualPCIPassthroughOption createVirtualPCIPassthroughOption() {
    return new VirtualPCIPassthroughOption();
  }
  
  public DvsMacRewriteNetworkRuleAction createDvsMacRewriteNetworkRuleAction() {
    return new DvsMacRewriteNetworkRuleAction();
  }
  
  public DvsPortDisconnectedEvent createDvsPortDisconnectedEvent() {
    return new DvsPortDisconnectedEvent();
  }
  
  public HostSpecificationChangedEvent createHostSpecificationChangedEvent() {
    return new HostSpecificationChangedEvent();
  }
  
  public ProfileConfigInfo createProfileConfigInfo() {
    return new ProfileConfigInfo();
  }
  
  public VirtualVmxnet3Option createVirtualVmxnet3Option() {
    return new VirtualVmxnet3Option();
  }
  
  public VirtualMachineStorageInfo createVirtualMachineStorageInfo() {
    return new VirtualMachineStorageInfo();
  }
  
  public HostHyperThreadScheduleInfo createHostHyperThreadScheduleInfo() {
    return new HostHyperThreadScheduleInfo();
  }
  
  public SourceNodeSpec createSourceNodeSpec() {
    return new SourceNodeSpec();
  }
  
  public ArrayOfGuestAuthSubject createArrayOfGuestAuthSubject() {
    return new ArrayOfGuestAuthSubject();
  }
  
  public Relation createRelation() {
    return new Relation();
  }
  
  public FaultToleranceConfigSpec createFaultToleranceConfigSpec() {
    return new FaultToleranceConfigSpec();
  }
  
  public ArrayOfHostUnresolvedVmfsResolutionResult createArrayOfHostUnresolvedVmfsResolutionResult() {
    return new ArrayOfHostUnresolvedVmfsResolutionResult();
  }
  
  public VirtualDiskAntiAffinityRuleSpec createVirtualDiskAntiAffinityRuleSpec() {
    return new VirtualDiskAntiAffinityRuleSpec();
  }
  
  public ManagedByInfo createManagedByInfo() {
    return new ManagedByInfo();
  }
  
  public ArrayOfClusterDasVmConfigSpec createArrayOfClusterDasVmConfigSpec() {
    return new ArrayOfClusterDasVmConfigSpec();
  }
  
  public HostSystemSwapConfigurationSystemSwapOption createHostSystemSwapConfigurationSystemSwapOption() {
    return new HostSystemSwapConfigurationSystemSwapOption();
  }
  
  public GuestFileInfo createGuestFileInfo() {
    return new GuestFileInfo();
  }
  
  public ScheduledTaskStartedEvent createScheduledTaskStartedEvent() {
    return new ScheduledTaskStartedEvent();
  }
  
  public ArrayOfClusterVmOrchestrationInfo createArrayOfClusterVmOrchestrationInfo() {
    return new ArrayOfClusterVmOrchestrationInfo();
  }
  
  public VMwareDVSPortgroupPolicy createVMwareDVSPortgroupPolicy() {
    return new VMwareDVSPortgroupPolicy();
  }
  
  public ArrayOfLicenseAssignmentManagerLicenseAssignment createArrayOfLicenseAssignmentManagerLicenseAssignment() {
    return new ArrayOfLicenseAssignmentManagerLicenseAssignment();
  }
  
  public DrsEnteringStandbyModeEvent createDrsEnteringStandbyModeEvent() {
    return new DrsEnteringStandbyModeEvent();
  }
  
  public VirtualMachineSgxTargetInfo createVirtualMachineSgxTargetInfo() {
    return new VirtualMachineSgxTargetInfo();
  }
  
  public KeyAnyValue createKeyAnyValue() {
    return new KeyAnyValue();
  }
  
  public VsanHostFaultDomainInfo createVsanHostFaultDomainInfo() {
    return new VsanHostFaultDomainInfo();
  }
  
  public VirtualBusLogicControllerOption createVirtualBusLogicControllerOption() {
    return new VirtualBusLogicControllerOption();
  }
  
  public VsanUpgradeSystemMissingHostsInClusterIssue createVsanUpgradeSystemMissingHostsInClusterIssue() {
    return new VsanUpgradeSystemMissingHostsInClusterIssue();
  }
  
  public NetDhcpConfigSpecDhcpOptionsSpec createNetDhcpConfigSpecDhcpOptionsSpec() {
    return new NetDhcpConfigSpecDhcpOptionsSpec();
  }
  
  public ExtensionOvfConsumerInfo createExtensionOvfConsumerInfo() {
    return new ExtensionOvfConsumerInfo();
  }
  
  public ArrayOfVAppCloneSpecNetworkMappingPair createArrayOfVAppCloneSpecNetworkMappingPair() {
    return new ArrayOfVAppCloneSpecNetworkMappingPair();
  }
  
  public SecurityProfile createSecurityProfile() {
    return new SecurityProfile();
  }
  
  public ArrayOfVirtualMachineFileLayoutExFileInfo createArrayOfVirtualMachineFileLayoutExFileInfo() {
    return new ArrayOfVirtualMachineFileLayoutExFileInfo();
  }
  
  public ArrayOfDvsNetworkRuleQualifier createArrayOfDvsNetworkRuleQualifier() {
    return new ArrayOfDvsNetworkRuleQualifier();
  }
  
  public ArrayOfVsanUpgradeSystemPreflightCheckIssue createArrayOfVsanUpgradeSystemPreflightCheckIssue() {
    return new ArrayOfVsanUpgradeSystemPreflightCheckIssue();
  }
  
  public GuestRegValueStringSpec createGuestRegValueStringSpec() {
    return new GuestRegValueStringSpec();
  }
  
  public SeSparseVirtualDiskSpec createSeSparseVirtualDiskSpec() {
    return new SeSparseVirtualDiskSpec();
  }
  
  public CustomFieldEvent createCustomFieldEvent() {
    return new CustomFieldEvent();
  }
  
  public HostSpecificationUpdateEvent createHostSpecificationUpdateEvent() {
    return new HostSpecificationUpdateEvent();
  }
  
  public DistributedVirtualSwitchPortStatistics createDistributedVirtualSwitchPortStatistics() {
    return new DistributedVirtualSwitchPortStatistics();
  }
  
  public VslmCreateSpecDiskFileBackingSpec createVslmCreateSpecDiskFileBackingSpec() {
    return new VslmCreateSpecDiskFileBackingSpec();
  }
  
  public GuestStackInfo createGuestStackInfo() {
    return new GuestStackInfo();
  }
  
  public LicenseEvent createLicenseEvent() {
    return new LicenseEvent();
  }
  
  public DVSNetworkResourcePool createDVSNetworkResourcePool() {
    return new DVSNetworkResourcePool();
  }
  
  public DistributedVirtualSwitchManagerHostDvsMembershipFilter createDistributedVirtualSwitchManagerHostDvsMembershipFilter() {
    return new DistributedVirtualSwitchManagerHostDvsMembershipFilter();
  }
  
  public DVSContactInfo createDVSContactInfo() {
    return new DVSContactInfo();
  }
  
  public GhostDvsProxySwitchRemovedEvent createGhostDvsProxySwitchRemovedEvent() {
    return new GhostDvsProxySwitchRemovedEvent();
  }
  
  public BoolPolicy createBoolPolicy() {
    return new BoolPolicy();
  }
  
  public ArrayOfVirtualMachineConfigInfoDatastoreUrlPair createArrayOfVirtualMachineConfigInfoDatastoreUrlPair() {
    return new ArrayOfVirtualMachineConfigInfoDatastoreUrlPair();
  }
  
  public VirtualDiskFlatVer1BackingOption createVirtualDiskFlatVer1BackingOption() {
    return new VirtualDiskFlatVer1BackingOption();
  }
  
  public HostVirtualNicManagerInfo createHostVirtualNicManagerInfo() {
    return new HostVirtualNicManagerInfo();
  }
  
  public DvsDestroyedEvent createDvsDestroyedEvent() {
    return new DvsDestroyedEvent();
  }
  
  public VMFSDatastoreCreatedEvent createVMFSDatastoreCreatedEvent() {
    return new VMFSDatastoreCreatedEvent();
  }
  
  public HostStorageElementInfo createHostStorageElementInfo() {
    return new HostStorageElementInfo();
  }
  
  public HostNasVolumeConfig createHostNasVolumeConfig() {
    return new HostNasVolumeConfig();
  }
  
  public ArrayOfDiagnosticManagerLogDescriptor createArrayOfDiagnosticManagerLogDescriptor() {
    return new ArrayOfDiagnosticManagerLogDescriptor();
  }
  
  public DvpgRestoreEvent createDvpgRestoreEvent() {
    return new DvpgRestoreEvent();
  }
  
  public ArrayOfProfileExpression createArrayOfProfileExpression() {
    return new ArrayOfProfileExpression();
  }
  
  public VMwareDVSHealthCheckCapability createVMwareDVSHealthCheckCapability() {
    return new VMwareDVSHealthCheckCapability();
  }
  
  public HostFibreChannelHba createHostFibreChannelHba() {
    return new HostFibreChannelHba();
  }
  
  public ArrayOfUsbScanCodeSpecKeyEvent createArrayOfUsbScanCodeSpecKeyEvent() {
    return new ArrayOfUsbScanCodeSpecKeyEvent();
  }
  
  public DrsVmPoweredOnEvent createDrsVmPoweredOnEvent() {
    return new DrsVmPoweredOnEvent();
  }
  
  public VsanHostDiskMapResult createVsanHostDiskMapResult() {
    return new VsanHostDiskMapResult();
  }
  
  public HostActiveDirectoryInfo createHostActiveDirectoryInfo() {
    return new HostActiveDirectoryInfo();
  }
  
  public ArrayOfPropertyChange createArrayOfPropertyChange() {
    return new ArrayOfPropertyChange();
  }
  
  public ArrayOfClusterComputeResourceHostVmkNicInfo createArrayOfClusterComputeResourceHostVmkNicInfo() {
    return new ArrayOfClusterComputeResourceHostVmkNicInfo();
  }
  
  public DesiredSoftwareSpec createDesiredSoftwareSpec() {
    return new DesiredSoftwareSpec();
  }
  
  public RunScriptAction createRunScriptAction() {
    return new RunScriptAction();
  }
  
  public CryptoManagerKmipClusterStatus createCryptoManagerKmipClusterStatus() {
    return new CryptoManagerKmipClusterStatus();
  }
  
  public HostPosixAccountSpec createHostPosixAccountSpec() {
    return new HostPosixAccountSpec();
  }
  
  public RecurrentTaskScheduler createRecurrentTaskScheduler() {
    return new RecurrentTaskScheduler();
  }
  
  public VirtualPrecisionClockOption createVirtualPrecisionClockOption() {
    return new VirtualPrecisionClockOption();
  }
  
  public VirtualDiskRawDiskVer2BackingInfo createVirtualDiskRawDiskVer2BackingInfo() {
    return new VirtualDiskRawDiskVer2BackingInfo();
  }
  
  public VirtualDiskOption createVirtualDiskOption() {
    return new VirtualDiskOption();
  }
  
  public HostSharedGpuCapabilities createHostSharedGpuCapabilities() {
    return new HostSharedGpuCapabilities();
  }
  
  public VmFaultToleranceVmTerminatedEvent createVmFaultToleranceVmTerminatedEvent() {
    return new VmFaultToleranceVmTerminatedEvent();
  }
  
  public HostAuthenticationManagerInfo createHostAuthenticationManagerInfo() {
    return new HostAuthenticationManagerInfo();
  }
  
  public VmRemoteConsoleDisconnectedEvent createVmRemoteConsoleDisconnectedEvent() {
    return new VmRemoteConsoleDisconnectedEvent();
  }
  
  public StorageDrsConfigInfo createStorageDrsConfigInfo() {
    return new StorageDrsConfigInfo();
  }
  
  public NvdimmInterleaveSetInfo createNvdimmInterleaveSetInfo() {
    return new NvdimmInterleaveSetInfo();
  }
  
  public ArrayOfHostAssignableHardwareConfigAttributeOverride createArrayOfHostAssignableHardwareConfigAttributeOverride() {
    return new ArrayOfHostAssignableHardwareConfigAttributeOverride();
  }
  
  public UserGroupProfile createUserGroupProfile() {
    return new UserGroupProfile();
  }
  
  public ArrayOfVirtualMachineVcpuConfig createArrayOfVirtualMachineVcpuConfig() {
    return new ArrayOfVirtualMachineVcpuConfig();
  }
  
  public HostGraphicsConfigDeviceType createHostGraphicsConfigDeviceType() {
    return new HostGraphicsConfigDeviceType();
  }
  
  public VsanHostIpConfig createVsanHostIpConfig() {
    return new VsanHostIpConfig();
  }
  
  public VirtualNVMEControllerOption createVirtualNVMEControllerOption() {
    return new VirtualNVMEControllerOption();
  }
  
  public VirtualSCSIControllerOption createVirtualSCSIControllerOption() {
    return new VirtualSCSIControllerOption();
  }
  
  public ExtensionClientInfo createExtensionClientInfo() {
    return new ExtensionClientInfo();
  }
  
  public ArrayOfPropertyFilterUpdate createArrayOfPropertyFilterUpdate() {
    return new ArrayOfPropertyFilterUpdate();
  }
  
  public CustomFieldDefRenamedEvent createCustomFieldDefRenamedEvent() {
    return new CustomFieldDefRenamedEvent();
  }
  
  public ProfileApplyProfileProperty createProfileApplyProfileProperty() {
    return new ProfileApplyProfileProperty();
  }
  
  public ArrayOfDiagnosticManagerBundleInfo createArrayOfDiagnosticManagerBundleInfo() {
    return new ArrayOfDiagnosticManagerBundleInfo();
  }
  
  public ArrayOfHostDiagnosticPartition createArrayOfHostDiagnosticPartition() {
    return new ArrayOfHostDiagnosticPartition();
  }
  
  public GeneralVmInfoEvent createGeneralVmInfoEvent() {
    return new GeneralVmInfoEvent();
  }
  
  public VirtualUSBUSBBackingOption createVirtualUSBUSBBackingOption() {
    return new VirtualUSBUSBBackingOption();
  }
  
  public ClusterAttemptedVmInfo createClusterAttemptedVmInfo() {
    return new ClusterAttemptedVmInfo();
  }
  
  public VirtualHardwareOption createVirtualHardwareOption() {
    return new VirtualHardwareOption();
  }
  
  public PermissionAddedEvent createPermissionAddedEvent() {
    return new PermissionAddedEvent();
  }
  
  public DesiredSoftwareSpecBaseImageSpec createDesiredSoftwareSpecBaseImageSpec() {
    return new DesiredSoftwareSpecBaseImageSpec();
  }
  
  public UpgradeEvent createUpgradeEvent() {
    return new UpgradeEvent();
  }
  
  public VslmCreateSpecBackingSpec createVslmCreateSpecBackingSpec() {
    return new VslmCreateSpecBackingSpec();
  }
  
  public ArrayOfProfileExecuteError createArrayOfProfileExecuteError() {
    return new ArrayOfProfileExecuteError();
  }
  
  public ResourcePoolRuntimeInfo createResourcePoolRuntimeInfo() {
    return new ResourcePoolRuntimeInfo();
  }
  
  public ClusterSlotPolicy createClusterSlotPolicy() {
    return new ClusterSlotPolicy();
  }
  
  public HostMultipathInfoHppLogicalUnitPolicy createHostMultipathInfoHppLogicalUnitPolicy() {
    return new HostMultipathInfoHppLogicalUnitPolicy();
  }
  
  public ArrayOfIpPoolManagerIpAllocation createArrayOfIpPoolManagerIpAllocation() {
    return new ArrayOfIpPoolManagerIpAllocation();
  }
  
  public ArrayOfHostStorageElementInfo createArrayOfHostStorageElementInfo() {
    return new ArrayOfHostStorageElementInfo();
  }
  
  public ClusterComputeResourceHCIConfigSpec createClusterComputeResourceHCIConfigSpec() {
    return new ClusterComputeResourceHCIConfigSpec();
  }
  
  public MissingObject createMissingObject() {
    return new MissingObject();
  }
  
  public ArrayOfCryptoKeyId createArrayOfCryptoKeyId() {
    return new ArrayOfCryptoKeyId();
  }
  
  public CustomizationUnknownIpGenerator createCustomizationUnknownIpGenerator() {
    return new CustomizationUnknownIpGenerator();
  }
  
  public HostDateTimeConfig createHostDateTimeConfig() {
    return new HostDateTimeConfig();
  }
  
  public UnlicensedVirtualMachinesEvent createUnlicensedVirtualMachinesEvent() {
    return new UnlicensedVirtualMachinesEvent();
  }
  
  public Capability createCapability() {
    return new Capability();
  }
  
  public ArrayOfVAppProductInfo createArrayOfVAppProductInfo() {
    return new ArrayOfVAppProductInfo();
  }
  
  public CryptoSpecDecrypt createCryptoSpecDecrypt() {
    return new CryptoSpecDecrypt();
  }
  
  public HostNicFailureCriteria createHostNicFailureCriteria() {
    return new HostNicFailureCriteria();
  }
  
  public VirtualCdromAtapiBackingInfo createVirtualCdromAtapiBackingInfo() {
    return new VirtualCdromAtapiBackingInfo();
  }
  
  public VmSecondaryStartedEvent createVmSecondaryStartedEvent() {
    return new VmSecondaryStartedEvent();
  }
  
  public DvsSingleIpPort createDvsSingleIpPort() {
    return new DvsSingleIpPort();
  }
  
  public HostRuntimeInfoNetworkRuntimeInfo createHostRuntimeInfoNetworkRuntimeInfo() {
    return new HostRuntimeInfoNetworkRuntimeInfo();
  }
  
  public VirtualMachinePrecisionClockInfo createVirtualMachinePrecisionClockInfo() {
    return new VirtualMachinePrecisionClockInfo();
  }
  
  public VirtualMachineFeatureRequirement createVirtualMachineFeatureRequirement() {
    return new VirtualMachineFeatureRequirement();
  }
  
  public ArrayOfVVolHostPE createArrayOfVVolHostPE() {
    return new ArrayOfVVolHostPE();
  }
  
  public NoMaintenanceModeDrsRecommendationForVM createNoMaintenanceModeDrsRecommendationForVM() {
    return new NoMaintenanceModeDrsRecommendationForVM();
  }
  
  public AlarmEmailCompletedEvent createAlarmEmailCompletedEvent() {
    return new AlarmEmailCompletedEvent();
  }
  
  public HostServiceSourcePackage createHostServiceSourcePackage() {
    return new HostServiceSourcePackage();
  }
  
  public DvsPortVendorSpecificStateChangeEvent createDvsPortVendorSpecificStateChangeEvent() {
    return new DvsPortVendorSpecificStateChangeEvent();
  }
  
  public ResourceAllocationInfo createResourceAllocationInfo() {
    return new ResourceAllocationInfo();
  }
  
  public ArrayOfPnicUplinkProfile createArrayOfPnicUplinkProfile() {
    return new ArrayOfPnicUplinkProfile();
  }
  
  public VirtualSATAController createVirtualSATAController() {
    return new VirtualSATAController();
  }
  
  public PerfInterval createPerfInterval() {
    return new PerfInterval();
  }
  
  public HostScsiTopologyLun createHostScsiTopologyLun() {
    return new HostScsiTopologyLun();
  }
  
  public ScheduledTaskEmailFailedEvent createScheduledTaskEmailFailedEvent() {
    return new ScheduledTaskEmailFailedEvent();
  }
  
  public VirtualMachineSriovNetworkDevicePoolInfo createVirtualMachineSriovNetworkDevicePoolInfo() {
    return new VirtualMachineSriovNetworkDevicePoolInfo();
  }
  
  public ArrayOfHostPlugStoreTopologyPlugin createArrayOfHostPlugStoreTopologyPlugin() {
    return new ArrayOfHostPlugStoreTopologyPlugin();
  }
  
  public VmfsDatastoreBaseOption createVmfsDatastoreBaseOption() {
    return new VmfsDatastoreBaseOption();
  }
  
  public VirtualSCSIPassthroughOption createVirtualSCSIPassthroughOption() {
    return new VirtualSCSIPassthroughOption();
  }
  
  public HostMemorySpec createHostMemorySpec() {
    return new HostMemorySpec();
  }
  
  public ScheduledTaskCreatedEvent createScheduledTaskCreatedEvent() {
    return new ScheduledTaskCreatedEvent();
  }
  
  public ObjectUpdate createObjectUpdate() {
    return new ObjectUpdate();
  }
  
  public VirtualMachineNetworkInfo createVirtualMachineNetworkInfo() {
    return new VirtualMachineNetworkInfo();
  }
  
  public VirtualParallelPortDeviceBackingInfo createVirtualParallelPortDeviceBackingInfo() {
    return new VirtualParallelPortDeviceBackingInfo();
  }
  
  public HostDisconnectedEvent createHostDisconnectedEvent() {
    return new HostDisconnectedEvent();
  }
  
  public DiskChangeExtent createDiskChangeExtent() {
    return new DiskChangeExtent();
  }
  
  public ProfileParameterMetadataParameterRelationMetadata createProfileParameterMetadataParameterRelationMetadata() {
    return new ProfileParameterMetadataParameterRelationMetadata();
  }
  
  public VirtualMachineImportSpec createVirtualMachineImportSpec() {
    return new VirtualMachineImportSpec();
  }
  
  public ClusterMigrationAction createClusterMigrationAction() {
    return new ClusterMigrationAction();
  }
  
  public TemplateBeingUpgradedEvent createTemplateBeingUpgradedEvent() {
    return new TemplateBeingUpgradedEvent();
  }
  
  public VsanUpgradeSystemUpgradeHistoryItem createVsanUpgradeSystemUpgradeHistoryItem() {
    return new VsanUpgradeSystemUpgradeHistoryItem();
  }
  
  public ArrayOfHostPowerPolicy createArrayOfHostPowerPolicy() {
    return new ArrayOfHostPowerPolicy();
  }
  
  public ArrayOfDVSHealthCheckConfig createArrayOfDVSHealthCheckConfig() {
    return new ArrayOfDVSHealthCheckConfig();
  }
  
  public AccountCreatedEvent createAccountCreatedEvent() {
    return new AccountCreatedEvent();
  }
  
  public VirtualDiskDeltaDiskFormatsSupported createVirtualDiskDeltaDiskFormatsSupported() {
    return new VirtualDiskDeltaDiskFormatsSupported();
  }
  
  public VirtualEthernetCard createVirtualEthernetCard() {
    return new VirtualEthernetCard();
  }
  
  public ArrayOfVAppProductSpec createArrayOfVAppProductSpec() {
    return new ArrayOfVAppProductSpec();
  }
  
  public HostDigestInfo createHostDigestInfo() {
    return new HostDigestInfo();
  }
  
  public PortGroupProfile createPortGroupProfile() {
    return new PortGroupProfile();
  }
  
  public CustomizationAutoIpV6Generator createCustomizationAutoIpV6Generator() {
    return new CustomizationAutoIpV6Generator();
  }
  
  public ClusterHostPowerAction createClusterHostPowerAction() {
    return new ClusterHostPowerAction();
  }
  
  public HostOpaqueSwitch createHostOpaqueSwitch() {
    return new HostOpaqueSwitch();
  }
  
  public ArrayOfOvfNetworkInfo createArrayOfOvfNetworkInfo() {
    return new ArrayOfOvfNetworkInfo();
  }
  
  public VirtualSoundCardOption createVirtualSoundCardOption() {
    return new VirtualSoundCardOption();
  }
  
  public DasHostIsolatedEvent createDasHostIsolatedEvent() {
    return new DasHostIsolatedEvent();
  }
  
  public TemplateConfigFileQuery createTemplateConfigFileQuery() {
    return new TemplateConfigFileQuery();
  }
  
  public HostSystemSwapConfigurationHostCacheOption createHostSystemSwapConfigurationHostCacheOption() {
    return new HostSystemSwapConfigurationHostCacheOption();
  }
  
  public PerfEntityMetric createPerfEntityMetric() {
    return new PerfEntityMetric();
  }
  
  public PowerSystemInfo createPowerSystemInfo() {
    return new PowerSystemInfo();
  }
  
  public HostAccountSpec createHostAccountSpec() {
    return new HostAccountSpec();
  }
  
  public ArrayOfLocalizationManagerMessageCatalog createArrayOfLocalizationManagerMessageCatalog() {
    return new ArrayOfLocalizationManagerMessageCatalog();
  }
  
  public HostProfileManagerCompositionResult createHostProfileManagerCompositionResult() {
    return new HostProfileManagerCompositionResult();
  }
  
  public ArrayOfMissingProperty createArrayOfMissingProperty() {
    return new ArrayOfMissingProperty();
  }
  
  public VmDiskFileQueryFilter createVmDiskFileQueryFilter() {
    return new VmDiskFileQueryFilter();
  }
  
  public VirtualMachinePciPassthroughInfo createVirtualMachinePciPassthroughInfo() {
    return new VirtualMachinePciPassthroughInfo();
  }
  
  public VirtualMachineInstantCloneSpec createVirtualMachineInstantCloneSpec() {
    return new VirtualMachineInstantCloneSpec();
  }
  
  public MigrationWarningEvent createMigrationWarningEvent() {
    return new MigrationWarningEvent();
  }
  
  public DvsEventArgument createDvsEventArgument() {
    return new DvsEventArgument();
  }
  
  public DVPortSetting createDVPortSetting() {
    return new DVPortSetting();
  }
  
  public ScsiLunCapabilities createScsiLunCapabilities() {
    return new ScsiLunCapabilities();
  }
  
  public HostNvmeTopologyInterface createHostNvmeTopologyInterface() {
    return new HostNvmeTopologyInterface();
  }
  
  public VirtualUSBXHCIControllerOption createVirtualUSBXHCIControllerOption() {
    return new VirtualUSBXHCIControllerOption();
  }
  
  public VsanUpgradeSystemV2ObjectsPresentDuringDowngradeIssue createVsanUpgradeSystemV2ObjectsPresentDuringDowngradeIssue() {
    return new VsanUpgradeSystemV2ObjectsPresentDuringDowngradeIssue();
  }
  
  public AlarmTriggeringAction createAlarmTriggeringAction() {
    return new AlarmTriggeringAction();
  }
  
  public BatchResult createBatchResult() {
    return new BatchResult();
  }
  
  public ScheduledTaskCompletedEvent createScheduledTaskCompletedEvent() {
    return new ScheduledTaskCompletedEvent();
  }
  
  public AccountRemovedEvent createAccountRemovedEvent() {
    return new AccountRemovedEvent();
  }
  
  public VAppCloneSpec createVAppCloneSpec() {
    return new VAppCloneSpec();
  }
  
  public ArrayOfPerfQuerySpec createArrayOfPerfQuerySpec() {
    return new ArrayOfPerfQuerySpec();
  }
  
  public ArrayOfRelation createArrayOfRelation() {
    return new ArrayOfRelation();
  }
  
  public DVSPolicy createDVSPolicy() {
    return new DVSPolicy();
  }
  
  public HostAutoStartManagerConfig createHostAutoStartManagerConfig() {
    return new HostAutoStartManagerConfig();
  }
  
  public HostDiskMappingOption createHostDiskMappingOption() {
    return new HostDiskMappingOption();
  }
  
  public ArrayOfBoolean createArrayOfBoolean() {
    return new ArrayOfBoolean();
  }
  
  public CryptoManagerKmipServerStatus createCryptoManagerKmipServerStatus() {
    return new CryptoManagerKmipServerStatus();
  }
  
  public ArrayOfConflictingConfigurationConfig createArrayOfConflictingConfigurationConfig() {
    return new ArrayOfConflictingConfigurationConfig();
  }
  
  public BaseConfigInfoFileBackingInfo createBaseConfigInfoFileBackingInfo() {
    return new BaseConfigInfoFileBackingInfo();
  }
  
  public VmDiskFailedEvent createVmDiskFailedEvent() {
    return new VmDiskFailedEvent();
  }
  
  public AnswerFileStatusError createAnswerFileStatusError() {
    return new AnswerFileStatusError();
  }
  
  public DvsOperationBulkFaultFaultOnHost createDvsOperationBulkFaultFaultOnHost() {
    return new DvsOperationBulkFaultFaultOnHost();
  }
  
  public ArrayOfCheckResult createArrayOfCheckResult() {
    return new ArrayOfCheckResult();
  }
  
  public VirtualMachineMetadataManagerVmMetadata createVirtualMachineMetadataManagerVmMetadata() {
    return new VirtualMachineMetadataManagerVmMetadata();
  }
  
  public VirtualSoundCardDeviceBackingOption createVirtualSoundCardDeviceBackingOption() {
    return new VirtualSoundCardDeviceBackingOption();
  }
  
  public HostInternetScsiHbaIPProperties createHostInternetScsiHbaIPProperties() {
    return new HostInternetScsiHbaIPProperties();
  }
  
  public DvsHostJoinedEvent createDvsHostJoinedEvent() {
    return new DvsHostJoinedEvent();
  }
  
  public FloppyImageFileQuery createFloppyImageFileQuery() {
    return new FloppyImageFileQuery();
  }
  
  public HostSnmpSystemAgentLimits createHostSnmpSystemAgentLimits() {
    return new HostSnmpSystemAgentLimits();
  }
  
  public HostEnterMaintenanceResult createHostEnterMaintenanceResult() {
    return new HostEnterMaintenanceResult();
  }
  
  public AfterStartupTaskScheduler createAfterStartupTaskScheduler() {
    return new AfterStartupTaskScheduler();
  }
  
  public ProfileReferenceHostChangedEvent createProfileReferenceHostChangedEvent() {
    return new ProfileReferenceHostChangedEvent();
  }
  
  public VirtualSerialPortFileBackingInfo createVirtualSerialPortFileBackingInfo() {
    return new VirtualSerialPortFileBackingInfo();
  }
  
  public HostCnxFailedAlreadyManagedEvent createHostCnxFailedAlreadyManagedEvent() {
    return new HostCnxFailedAlreadyManagedEvent();
  }
  
  public ArrayOfVirtualMachineParallelInfo createArrayOfVirtualMachineParallelInfo() {
    return new ArrayOfVirtualMachineParallelInfo();
  }
  
  public EventFilterSpecByEntity createEventFilterSpecByEntity() {
    return new EventFilterSpecByEntity();
  }
  
  public HostInventoryFullEvent createHostInventoryFullEvent() {
    return new HostInventoryFullEvent();
  }
  
  public ServiceLocator createServiceLocator() {
    return new ServiceLocator();
  }
  
  public VirtualMachineDatastoreVolumeOption createVirtualMachineDatastoreVolumeOption() {
    return new VirtualMachineDatastoreVolumeOption();
  }
  
  public CryptoSpecRegister createCryptoSpecRegister() {
    return new CryptoSpecRegister();
  }
  
  public VirtualDeviceBackingOption createVirtualDeviceBackingOption() {
    return new VirtualDeviceBackingOption();
  }
  
  public DailyTaskScheduler createDailyTaskScheduler() {
    return new DailyTaskScheduler();
  }
  
  public ArrayOfIscsiPortInfo createArrayOfIscsiPortInfo() {
    return new ArrayOfIscsiPortInfo();
  }
  
  public VirtualSerialPortThinPrintBackingInfo createVirtualSerialPortThinPrintBackingInfo() {
    return new VirtualSerialPortThinPrintBackingInfo();
  }
  
  public VirtualSerialPort createVirtualSerialPort() {
    return new VirtualSerialPort();
  }
  
  public HostApplyProfile createHostApplyProfile() {
    return new HostApplyProfile();
  }
  
  public VirtualMachineDeviceRuntimeInfo createVirtualMachineDeviceRuntimeInfo() {
    return new VirtualMachineDeviceRuntimeInfo();
  }
  
  public ScheduledTaskEventArgument createScheduledTaskEventArgument() {
    return new ScheduledTaskEventArgument();
  }
  
  public VirtualMachineGuestIntegrityInfo createVirtualMachineGuestIntegrityInfo() {
    return new VirtualMachineGuestIntegrityInfo();
  }
  
  public ArrayOfHostStorageSystemVmfsVolumeResult createArrayOfHostStorageSystemVmfsVolumeResult() {
    return new ArrayOfHostStorageSystemVmfsVolumeResult();
  }
  
  public DatastoreDiscoveredEvent createDatastoreDiscoveredEvent() {
    return new DatastoreDiscoveredEvent();
  }
  
  public HostFirewallConfig createHostFirewallConfig() {
    return new HostFirewallConfig();
  }
  
  public HbrManagerReplicationVmInfo createHbrManagerReplicationVmInfo() {
    return new HbrManagerReplicationVmInfo();
  }
  
  public ArrayOfClusterComputeResourceDVSSettingDVPortgroupToServiceMapping createArrayOfClusterComputeResourceDVSSettingDVPortgroupToServiceMapping() {
    return new ArrayOfClusterComputeResourceDVSSettingDVPortgroupToServiceMapping();
  }
  
  public DvsPortEnteredPassthruEvent createDvsPortEnteredPassthruEvent() {
    return new DvsPortEnteredPassthruEvent();
  }
  
  public OvfOptionInfo createOvfOptionInfo() {
    return new OvfOptionInfo();
  }
  
  public VirtualMachineMessage createVirtualMachineMessage() {
    return new VirtualMachineMessage();
  }
  
  public CustomizationEvent createCustomizationEvent() {
    return new CustomizationEvent();
  }
  
  public HostNatServicePortForwardSpec createHostNatServicePortForwardSpec() {
    return new HostNatServicePortForwardSpec();
  }
  
  public VirtualDeviceBusSlotOption createVirtualDeviceBusSlotOption() {
    return new VirtualDeviceBusSlotOption();
  }
  
  public ArrayOfHostSharedGpuCapabilities createArrayOfHostSharedGpuCapabilities() {
    return new ArrayOfHostSharedGpuCapabilities();
  }
  
  public ArrayOfProfileExpressionMetadata createArrayOfProfileExpressionMetadata() {
    return new ArrayOfProfileExpressionMetadata();
  }
  
  public ResourcePoolCreatedEvent createResourcePoolCreatedEvent() {
    return new ResourcePoolCreatedEvent();
  }
  
  public ArrayOfNsxHostVNicProfile createArrayOfNsxHostVNicProfile() {
    return new ArrayOfNsxHostVNicProfile();
  }
  
  public HostSystemRemediationState createHostSystemRemediationState() {
    return new HostSystemRemediationState();
  }
  
  public HostProxySwitchConfig createHostProxySwitchConfig() {
    return new HostProxySwitchConfig();
  }
  
  public VirtualMachineSgxInfo createVirtualMachineSgxInfo() {
    return new VirtualMachineSgxInfo();
  }
  
  public VMwareDVSVspanCapability createVMwareDVSVspanCapability() {
    return new VMwareDVSVspanCapability();
  }
  
  public ArrayOfHostPciDevice createArrayOfHostPciDevice() {
    return new ArrayOfHostPciDevice();
  }
  
  public VirtualSerialPortFileBackingOption createVirtualSerialPortFileBackingOption() {
    return new VirtualSerialPortFileBackingOption();
  }
  
  public DVPortgroupRenamedEvent createDVPortgroupRenamedEvent() {
    return new DVPortgroupRenamedEvent();
  }
  
  public HostProfilesEntityCustomizations createHostProfilesEntityCustomizations() {
    return new HostProfilesEntityCustomizations();
  }
  
  public GuestRegKeyNameSpec createGuestRegKeyNameSpec() {
    return new GuestRegKeyNameSpec();
  }
  
  public VirtualParallelPort createVirtualParallelPort() {
    return new VirtualParallelPort();
  }
  
  public ExtSolutionManagerInfo createExtSolutionManagerInfo() {
    return new ExtSolutionManagerInfo();
  }
  
  public ResourcePoolResourceUsage createResourcePoolResourceUsage() {
    return new ResourcePoolResourceUsage();
  }
  
  public ArrayOfHostOpaqueSwitch createArrayOfHostOpaqueSwitch() {
    return new ArrayOfHostOpaqueSwitch();
  }
  
  public NetworkEventArgument createNetworkEventArgument() {
    return new NetworkEventArgument();
  }
  
  public VsanUpgradeSystemAutoClaimEnabledOnHostsIssue createVsanUpgradeSystemAutoClaimEnabledOnHostsIssue() {
    return new VsanUpgradeSystemAutoClaimEnabledOnHostsIssue();
  }
  
  public ArrayOfClusterDpmHostConfigInfo createArrayOfClusterDpmHostConfigInfo() {
    return new ArrayOfClusterDpmHostConfigInfo();
  }
  
  public ArrayOfVmPodConfigForPlacement createArrayOfVmPodConfigForPlacement() {
    return new ArrayOfVmPodConfigForPlacement();
  }
  
  public ArrayOfClusterRuleInfo createArrayOfClusterRuleInfo() {
    return new ArrayOfClusterRuleInfo();
  }
  
  public VmNoNetworkAccessEvent createVmNoNetworkAccessEvent() {
    return new VmNoNetworkAccessEvent();
  }
  
  public VirtualDiskLocalPMemBackingOption createVirtualDiskLocalPMemBackingOption() {
    return new VirtualDiskLocalPMemBackingOption();
  }
  
  public VirtualMachineAffinityInfo createVirtualMachineAffinityInfo() {
    return new VirtualMachineAffinityInfo();
  }
  
  public ArrayOfOvfConsumerOvfSection createArrayOfOvfConsumerOvfSection() {
    return new ArrayOfOvfConsumerOvfSection();
  }
  
  public ArrayOfLicenseReservationInfo createArrayOfLicenseReservationInfo() {
    return new ArrayOfLicenseReservationInfo();
  }
  
  public HostNoHAEnabledPortGroupsEvent createHostNoHAEnabledPortGroupsEvent() {
    return new HostNoHAEnabledPortGroupsEvent();
  }
  
  public HostConnectionLostEvent createHostConnectionLostEvent() {
    return new HostConnectionLostEvent();
  }
  
  public ArrayOfHostAccessControlEntry createArrayOfHostAccessControlEntry() {
    return new ArrayOfHostAccessControlEntry();
  }
  
  public ClusterVmHostRuleInfo createClusterVmHostRuleInfo() {
    return new ClusterVmHostRuleInfo();
  }
  
  public HostShortNameInconsistentEvent createHostShortNameInconsistentEvent() {
    return new HostShortNameInconsistentEvent();
  }
  
  public ArrayOfProfilePolicyOptionMetadata createArrayOfProfilePolicyOptionMetadata() {
    return new ArrayOfProfilePolicyOptionMetadata();
  }
  
  public HostShortNameToIpFailedEvent createHostShortNameToIpFailedEvent() {
    return new HostShortNameToIpFailedEvent();
  }
  
  public ArrayOfVirtualMachineIdeDiskDeviceInfo createArrayOfVirtualMachineIdeDiskDeviceInfo() {
    return new ArrayOfVirtualMachineIdeDiskDeviceInfo();
  }
  
  public ArrayOfHostProfilesEntityCustomizations createArrayOfHostProfilesEntityCustomizations() {
    return new ArrayOfHostProfilesEntityCustomizations();
  }
  
  public DvsHostVNicProfile createDvsHostVNicProfile() {
    return new DvsHostVNicProfile();
  }
  
  public ArrayOfHostMultipathInfoPath createArrayOfHostMultipathInfoPath() {
    return new ArrayOfHostMultipathInfoPath();
  }
  
  public ArrayOfVASAStorageArray createArrayOfVASAStorageArray() {
    return new ArrayOfVASAStorageArray();
  }
  
  public ArrayOfVirtualDiskRuleSpec createArrayOfVirtualDiskRuleSpec() {
    return new ArrayOfVirtualDiskRuleSpec();
  }
  
  public VirtualPCIPassthroughAllowedDevice createVirtualPCIPassthroughAllowedDevice() {
    return new VirtualPCIPassthroughAllowedDevice();
  }
  
  public StateAlarmExpression createStateAlarmExpression() {
    return new StateAlarmExpression();
  }
  
  public ArrayOfVirtualDisk createArrayOfVirtualDisk() {
    return new ArrayOfVirtualDisk();
  }
  
  public HostTpmSoftwareComponentEventDetails createHostTpmSoftwareComponentEventDetails() {
    return new HostTpmSoftwareComponentEventDetails();
  }
  
  public ArrayOfPerformanceManagerCounterLevelMapping createArrayOfPerformanceManagerCounterLevelMapping() {
    return new ArrayOfPerformanceManagerCounterLevelMapping();
  }
  
  public DvsPortReconfiguredEvent createDvsPortReconfiguredEvent() {
    return new DvsPortReconfiguredEvent();
  }
  
  public VirtualMachineGuestMonitoringModeInfo createVirtualMachineGuestMonitoringModeInfo() {
    return new VirtualMachineGuestMonitoringModeInfo();
  }
  
  public ArrayOfStorageRequirement createArrayOfStorageRequirement() {
    return new ArrayOfStorageRequirement();
  }
  
  public HostMultipathInfo createHostMultipathInfo() {
    return new HostMultipathInfo();
  }
  
  public VmConnectedEvent createVmConnectedEvent() {
    return new VmConnectedEvent();
  }
  
  public ArrayOfVirtualMachineFloppyInfo createArrayOfVirtualMachineFloppyInfo() {
    return new ArrayOfVirtualMachineFloppyInfo();
  }
  
  public HealthStatusChangedEvent createHealthStatusChangedEvent() {
    return new HealthStatusChangedEvent();
  }
  
  public VirtualDeviceBusSlotInfo createVirtualDeviceBusSlotInfo() {
    return new VirtualDeviceBusSlotInfo();
  }
  
  public FolderFileInfo createFolderFileInfo() {
    return new FolderFileInfo();
  }
  
  public ArrayOfHostOpaqueNetworkInfo createArrayOfHostOpaqueNetworkInfo() {
    return new ArrayOfHostOpaqueNetworkInfo();
  }
  
  public VirtualPCIPassthroughVmiopBackingOption createVirtualPCIPassthroughVmiopBackingOption() {
    return new VirtualPCIPassthroughVmiopBackingOption();
  }
  
  public VirtualNVMEController createVirtualNVMEController() {
    return new VirtualNVMEController();
  }
  
  public ClusterComputeResourceDVSSetting createClusterComputeResourceDVSSetting() {
    return new ClusterComputeResourceDVSSetting();
  }
  
  public VmfsDatastoreSpec createVmfsDatastoreSpec() {
    return new VmfsDatastoreSpec();
  }
  
  public HostPcieHba createHostPcieHba() {
    return new HostPcieHba();
  }
  
  public ArrayOfUserSearchResult createArrayOfUserSearchResult() {
    return new ArrayOfUserSearchResult();
  }
  
  public ArrayOfPerfInterval createArrayOfPerfInterval() {
    return new ArrayOfPerfInterval();
  }
  
  public ProfileEventArgument createProfileEventArgument() {
    return new ProfileEventArgument();
  }
  
  public AlarmEmailFailedEvent createAlarmEmailFailedEvent() {
    return new AlarmEmailFailedEvent();
  }
  
  public ExtensionFaultTypeInfo createExtensionFaultTypeInfo() {
    return new ExtensionFaultTypeInfo();
  }
  
  public DatastoreCapability createDatastoreCapability() {
    return new DatastoreCapability();
  }
  
  public VirtualMachineConfigInfoOverheadInfo createVirtualMachineConfigInfoOverheadInfo() {
    return new VirtualMachineConfigInfoOverheadInfo();
  }
  
  public ArrayOfTaskInfoState createArrayOfTaskInfoState() {
    return new ArrayOfTaskInfoState();
  }
  
  public ClusterDasAdvancedRuntimeInfoVmcpCapabilityInfo createClusterDasAdvancedRuntimeInfoVmcpCapabilityInfo() {
    return new ClusterDasAdvancedRuntimeInfoVmcpCapabilityInfo();
  }
  
  public ArrayOfHostAssignableHardwareBinding createArrayOfHostAssignableHardwareBinding() {
    return new ArrayOfHostAssignableHardwareBinding();
  }
  
  public IpRouteProfile createIpRouteProfile() {
    return new IpRouteProfile();
  }
  
  public HostNvmeConnectSpec createHostNvmeConnectSpec() {
    return new HostNvmeConnectSpec();
  }
  
  public ArrayOfEventDescriptionEventDetail createArrayOfEventDescriptionEventDetail() {
    return new ArrayOfEventDescriptionEventDetail();
  }
  
  public VmStartingEvent createVmStartingEvent() {
    return new VmStartingEvent();
  }
  
  public GuestAuthAnySubject createGuestAuthAnySubject() {
    return new GuestAuthAnySubject();
  }
  
  public LocalizationManagerMessageCatalog createLocalizationManagerMessageCatalog() {
    return new LocalizationManagerMessageCatalog();
  }
  
  public ResourcePoolMovedEvent createResourcePoolMovedEvent() {
    return new ResourcePoolMovedEvent();
  }
  
  public ArrayOfHostVsanInternalSystemDeleteVsanObjectsResult createArrayOfHostVsanInternalSystemDeleteVsanObjectsResult() {
    return new ArrayOfHostVsanInternalSystemDeleteVsanObjectsResult();
  }
  
  public ArrayOfServiceProfile createArrayOfServiceProfile() {
    return new ArrayOfServiceProfile();
  }
  
  public VirtualPrecisionClock createVirtualPrecisionClock() {
    return new VirtualPrecisionClock();
  }
  
  public DvsMergedEvent createDvsMergedEvent() {
    return new DvsMergedEvent();
  }
  
  public HostInternetScsiHbaStaticTarget createHostInternetScsiHbaStaticTarget() {
    return new HostInternetScsiHbaStaticTarget();
  }
  
  public NetworkProfileDnsConfigProfile createNetworkProfileDnsConfigProfile() {
    return new NetworkProfileDnsConfigProfile();
  }
  
  public OptionDef createOptionDef() {
    return new OptionDef();
  }
  
  public HostEvent createHostEvent() {
    return new HostEvent();
  }
  
  public ArrayOfRetrieveVStorageObjSpec createArrayOfRetrieveVStorageObjSpec() {
    return new ArrayOfRetrieveVStorageObjSpec();
  }
  
  public ArrayOfVVolVmConfigFileUpdateResultFailedVmConfigFileInfo createArrayOfVVolVmConfigFileUpdateResultFailedVmConfigFileInfo() {
    return new ArrayOfVVolVmConfigFileUpdateResultFailedVmConfigFileInfo();
  }
  
  public ClusterInfraUpdateHaConfigInfo createClusterInfraUpdateHaConfigInfo() {
    return new ClusterInfraUpdateHaConfigInfo();
  }
  
  public HostCpuPowerManagementInfo createHostCpuPowerManagementInfo() {
    return new HostCpuPowerManagementInfo();
  }
  
  public GuestRegValueQwordSpec createGuestRegValueQwordSpec() {
    return new GuestRegValueQwordSpec();
  }
  
  public VMwareDvsLacpGroupConfig createVMwareDvsLacpGroupConfig() {
    return new VMwareDvsLacpGroupConfig();
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddFilter")
  public JAXBElement<AddFilterRequestType> createAddFilter(AddFilterRequestType paramAddFilterRequestType) {
    return new JAXBElement(_AddFilter_QNAME, AddFilterRequestType.class, null, paramAddFilterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateCounterLevelMapping")
  public JAXBElement<UpdateCounterLevelMappingRequestType> createUpdateCounterLevelMapping(UpdateCounterLevelMappingRequestType paramUpdateCounterLevelMappingRequestType) {
    return new JAXBElement(_UpdateCounterLevelMapping_QNAME, UpdateCounterLevelMappingRequestType.class, null, paramUpdateCounterLevelMappingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FilesystemQuiesceFaultFault")
  public JAXBElement<FilesystemQuiesceFault> createFilesystemQuiesceFaultFault(FilesystemQuiesceFault paramFilesystemQuiesceFault) {
    return new JAXBElement(_FilesystemQuiesceFaultFault_QNAME, FilesystemQuiesceFault.class, null, paramFilesystemQuiesceFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestRegistryKeyAlreadyExistsFault")
  public JAXBElement<GuestRegistryKeyAlreadyExists> createGuestRegistryKeyAlreadyExistsFault(GuestRegistryKeyAlreadyExists paramGuestRegistryKeyAlreadyExists) {
    return new JAXBElement(_GuestRegistryKeyAlreadyExistsFault_QNAME, GuestRegistryKeyAlreadyExists.class, null, paramGuestRegistryKeyAlreadyExists);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RectifyDvsOnHost_Task")
  public JAXBElement<RectifyDvsOnHostRequestType> createRectifyDvsOnHostTask(RectifyDvsOnHostRequestType paramRectifyDvsOnHostRequestType) {
    return new JAXBElement(_RectifyDvsOnHostTask_QNAME, RectifyDvsOnHostRequestType.class, null, paramRectifyDvsOnHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateServiceMessage")
  public JAXBElement<UpdateServiceMessageRequestType> createUpdateServiceMessage(UpdateServiceMessageRequestType paramUpdateServiceMessageRequestType) {
    return new JAXBElement(_UpdateServiceMessage_QNAME, UpdateServiceMessageRequestType.class, null, paramUpdateServiceMessageRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedHostSoftwareFault")
  public JAXBElement<EVCAdmissionFailedHostSoftware> createEVCAdmissionFailedHostSoftwareFault(EVCAdmissionFailedHostSoftware paramEVCAdmissionFailedHostSoftware) {
    return new JAXBElement(_EVCAdmissionFailedHostSoftwareFault_QNAME, EVCAdmissionFailedHostSoftware.class, null, paramEVCAdmissionFailedHostSoftware);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AcquireLocalTicket")
  public JAXBElement<AcquireLocalTicketRequestType> createAcquireLocalTicket(AcquireLocalTicketRequestType paramAcquireLocalTicketRequestType) {
    return new JAXBElement(_AcquireLocalTicket_QNAME, AcquireLocalTicketRequestType.class, null, paramAcquireLocalTicketRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryManagedBy")
  public JAXBElement<QueryManagedByRequestType> createQueryManagedBy(QueryManagedByRequestType paramQueryManagedByRequestType) {
    return new JAXBElement(_QueryManagedBy_QNAME, QueryManagedByRequestType.class, null, paramQueryManagedByRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveAllPermissions")
  public JAXBElement<RetrieveAllPermissionsRequestType> createRetrieveAllPermissions(RetrieveAllPermissionsRequestType paramRetrieveAllPermissionsRequestType) {
    return new JAXBElement(_RetrieveAllPermissions_QNAME, RetrieveAllPermissionsRequestType.class, null, paramRetrieveAllPermissionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateAssignableHardwareConfig")
  public JAXBElement<UpdateAssignableHardwareConfigRequestType> createUpdateAssignableHardwareConfig(UpdateAssignableHardwareConfigRequestType paramUpdateAssignableHardwareConfigRequestType) {
    return new JAXBElement(_UpdateAssignableHardwareConfig_QNAME, UpdateAssignableHardwareConfigRequestType.class, null, paramUpdateAssignableHardwareConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestRegistryFaultFault")
  public JAXBElement<GuestRegistryFault> createGuestRegistryFaultFault(GuestRegistryFault paramGuestRegistryFault) {
    return new JAXBElement(_GuestRegistryFaultFault_QNAME, GuestRegistryFault.class, null, paramGuestRegistryFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVirtualMachineFiles_Task")
  public JAXBElement<UpdateVirtualMachineFilesRequestType> createUpdateVirtualMachineFilesTask(UpdateVirtualMachineFilesRequestType paramUpdateVirtualMachineFilesRequestType) {
    return new JAXBElement(_UpdateVirtualMachineFilesTask_QNAME, UpdateVirtualMachineFilesRequestType.class, null, paramUpdateVirtualMachineFilesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryConfiguredModuleOptionString")
  public JAXBElement<QueryConfiguredModuleOptionStringRequestType> createQueryConfiguredModuleOptionString(QueryConfiguredModuleOptionStringRequestType paramQueryConfiguredModuleOptionStringRequestType) {
    return new JAXBElement(_QueryConfiguredModuleOptionString_QNAME, QueryConfiguredModuleOptionStringRequestType.class, null, paramQueryConfiguredModuleOptionStringRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ValidateMigration")
  public JAXBElement<ValidateMigrationRequestType> createValidateMigration(ValidateMigrationRequestType paramValidateMigrationRequestType) {
    return new JAXBElement(_ValidateMigration_QNAME, ValidateMigrationRequestType.class, null, paramValidateMigrationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnmountForceMountedVmfsVolume")
  public JAXBElement<UnmountForceMountedVmfsVolumeRequestType> createUnmountForceMountedVmfsVolume(UnmountForceMountedVmfsVolumeRequestType paramUnmountForceMountedVmfsVolumeRequestType) {
    return new JAXBElement(_UnmountForceMountedVmfsVolume_QNAME, UnmountForceMountedVmfsVolumeRequestType.class, null, paramUnmountForceMountedVmfsVolumeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVmfsDatastoreExpandOptions")
  public JAXBElement<QueryVmfsDatastoreExpandOptionsRequestType> createQueryVmfsDatastoreExpandOptions(QueryVmfsDatastoreExpandOptionsRequestType paramQueryVmfsDatastoreExpandOptionsRequestType) {
    return new JAXBElement(_QueryVmfsDatastoreExpandOptions_QNAME, QueryVmfsDatastoreExpandOptionsRequestType.class, null, paramQueryVmfsDatastoreExpandOptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfElementFault")
  public JAXBElement<OvfElement> createOvfElementFault(OvfElement paramOvfElement) {
    return new JAXBElement(_OvfElementFault_QNAME, OvfElement.class, null, paramOvfElement);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DoesCustomizationSpecExist")
  public JAXBElement<DoesCustomizationSpecExistRequestType> createDoesCustomizationSpecExist(DoesCustomizationSpecExistRequestType paramDoesCustomizationSpecExistRequestType) {
    return new JAXBElement(_DoesCustomizationSpecExist_QNAME, DoesCustomizationSpecExistRequestType.class, null, paramDoesCustomizationSpecExistRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryHostProfileMetadata")
  public JAXBElement<QueryHostProfileMetadataRequestType> createQueryHostProfileMetadata(QueryHostProfileMetadataRequestType paramQueryHostProfileMetadataRequestType) {
    return new JAXBElement(_QueryHostProfileMetadata_QNAME, QueryHostProfileMetadataRequestType.class, null, paramQueryHostProfileMetadataRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DVSRollback_Task")
  public JAXBElement<DVSRollbackRequestType> createDVSRollbackTask(DVSRollbackRequestType paramDVSRollbackRequestType) {
    return new JAXBElement(_DVSRollbackTask_QNAME, DVSRollbackRequestType.class, null, paramDVSRollbackRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateVvolDatastore")
  public JAXBElement<CreateVvolDatastoreRequestType> createCreateVvolDatastore(CreateVvolDatastoreRequestType paramCreateVvolDatastoreRequestType) {
    return new JAXBElement(_CreateVvolDatastore_QNAME, CreateVvolDatastoreRequestType.class, null, paramCreateVvolDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "queryDatacenterConfigOptionDescriptor")
  public JAXBElement<QueryDatacenterConfigOptionDescriptorRequestType> createQueryDatacenterConfigOptionDescriptor(QueryDatacenterConfigOptionDescriptorRequestType paramQueryDatacenterConfigOptionDescriptorRequestType) {
    return new JAXBElement(_QueryDatacenterConfigOptionDescriptor_QNAME, QueryDatacenterConfigOptionDescriptorRequestType.class, null, paramQueryDatacenterConfigOptionDescriptorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PowerOnFtSecondaryFailedFault")
  public JAXBElement<PowerOnFtSecondaryFailed> createPowerOnFtSecondaryFailedFault(PowerOnFtSecondaryFailed paramPowerOnFtSecondaryFailed) {
    return new JAXBElement(_PowerOnFtSecondaryFailedFault_QNAME, PowerOnFtSecondaryFailed.class, null, paramPowerOnFtSecondaryFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryIORMConfigOption")
  public JAXBElement<QueryIORMConfigOptionRequestType> createQueryIORMConfigOption(QueryIORMConfigOptionRequestType paramQueryIORMConfigOptionRequestType) {
    return new JAXBElement(_QueryIORMConfigOption_QNAME, QueryIORMConfigOptionRequestType.class, null, paramQueryIORMConfigOptionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshDatastoreStorageInfo")
  public JAXBElement<RefreshDatastoreStorageInfoRequestType> createRefreshDatastoreStorageInfo(RefreshDatastoreStorageInfoRequestType paramRefreshDatastoreStorageInfoRequestType) {
    return new JAXBElement(_RefreshDatastoreStorageInfo_QNAME, RefreshDatastoreStorageInfoRequestType.class, null, paramRefreshDatastoreStorageInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientFailoverResourcesFaultFault")
  public JAXBElement<InsufficientFailoverResourcesFault> createInsufficientFailoverResourcesFaultFault(InsufficientFailoverResourcesFault paramInsufficientFailoverResourcesFault) {
    return new JAXBElement(_InsufficientFailoverResourcesFaultFault_QNAME, InsufficientFailoverResourcesFault.class, null, paramInsufficientFailoverResourcesFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidEventFault")
  public JAXBElement<InvalidEvent> createInvalidEventFault(InvalidEvent paramInvalidEvent) {
    return new JAXBElement(_InvalidEventFault_QNAME, InvalidEvent.class, null, paramInvalidEvent);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ProfileUpdateFailedFault")
  public JAXBElement<ProfileUpdateFailed> createProfileUpdateFailedFault(ProfileUpdateFailed paramProfileUpdateFailed) {
    return new JAXBElement(_ProfileUpdateFailedFault_QNAME, ProfileUpdateFailed.class, null, paramProfileUpdateFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExecuteSimpleCommand")
  public JAXBElement<ExecuteSimpleCommandRequestType> createExecuteSimpleCommand(ExecuteSimpleCommandRequestType paramExecuteSimpleCommandRequestType) {
    return new JAXBElement(_ExecuteSimpleCommand_QNAME, ExecuteSimpleCommandRequestType.class, null, paramExecuteSimpleCommandRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReadPreviousEvents")
  public JAXBElement<ReadPreviousEventsRequestType> createReadPreviousEvents(ReadPreviousEventsRequestType paramReadPreviousEventsRequestType) {
    return new JAXBElement(_ReadPreviousEvents_QNAME, ReadPreviousEventsRequestType.class, null, paramReadPreviousEventsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteRegistryValueInGuest")
  public JAXBElement<DeleteRegistryValueInGuestRequestType> createDeleteRegistryValueInGuest(DeleteRegistryValueInGuestRequestType paramDeleteRegistryValueInGuestRequestType) {
    return new JAXBElement(_DeleteRegistryValueInGuest_QNAME, DeleteRegistryValueInGuestRequestType.class, null, paramDeleteRegistryValueInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedHostInHAClusterFault")
  public JAXBElement<NotSupportedHostInHACluster> createNotSupportedHostInHAClusterFault(NotSupportedHostInHACluster paramNotSupportedHostInHACluster) {
    return new JAXBElement(_NotSupportedHostInHAClusterFault_QNAME, NotSupportedHostInHACluster.class, null, paramNotSupportedHostInHACluster);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HasMonitoredEntity")
  public JAXBElement<HasMonitoredEntityRequestType> createHasMonitoredEntity(HasMonitoredEntityRequestType paramHasMonitoredEntityRequestType) {
    return new JAXBElement(_HasMonitoredEntity_QNAME, HasMonitoredEntityRequestType.class, null, paramHasMonitoredEntityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableNetworkResourceManagement")
  public JAXBElement<EnableNetworkResourceManagementRequestType> createEnableNetworkResourceManagement(EnableNetworkResourceManagementRequestType paramEnableNetworkResourceManagementRequestType) {
    return new JAXBElement(_EnableNetworkResourceManagement_QNAME, EnableNetworkResourceManagementRequestType.class, null, paramEnableNetworkResourceManagementRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfPropertyNetworkExportFault")
  public JAXBElement<OvfPropertyNetworkExport> createOvfPropertyNetworkExportFault(OvfPropertyNetworkExport paramOvfPropertyNetworkExport) {
    return new JAXBElement(_OvfPropertyNetworkExportFault_QNAME, OvfPropertyNetworkExport.class, null, paramOvfPropertyNetworkExport);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateDVPortgroup_Task")
  public JAXBElement<CreateDVPortgroupRequestType> createCreateDVPortgroupTask(CreateDVPortgroupRequestType paramCreateDVPortgroupRequestType) {
    return new JAXBElement(_CreateDVPortgroupTask_QNAME, CreateDVPortgroupRequestType.class, null, paramCreateDVPortgroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StopReplaying_Task")
  public JAXBElement<StopReplayingRequestType> createStopReplayingTask(StopReplayingRequestType paramStopReplayingRequestType) {
    return new JAXBElement(_StopReplayingTask_QNAME, StopReplayingRequestType.class, null, paramStopReplayingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientDisksFault")
  public JAXBElement<InsufficientDisks> createInsufficientDisksFault(InsufficientDisks paramInsufficientDisks) {
    return new JAXBElement(_InsufficientDisksFault_QNAME, InsufficientDisks.class, null, paramInsufficientDisks);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateInternetScsiAlias")
  public JAXBElement<UpdateInternetScsiAliasRequestType> createUpdateInternetScsiAlias(UpdateInternetScsiAliasRequestType paramUpdateInternetScsiAliasRequestType) {
    return new JAXBElement(_UpdateInternetScsiAlias_QNAME, UpdateInternetScsiAliasRequestType.class, null, paramUpdateInternetScsiAliasRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveArgumentDescription")
  public JAXBElement<RetrieveArgumentDescriptionRequestType> createRetrieveArgumentDescription(RetrieveArgumentDescriptionRequestType paramRetrieveArgumentDescriptionRequestType) {
    return new JAXBElement(_RetrieveArgumentDescription_QNAME, RetrieveArgumentDescriptionRequestType.class, null, paramRetrieveArgumentDescriptionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfHostValueNotParsedFault")
  public JAXBElement<OvfHostValueNotParsed> createOvfHostValueNotParsedFault(OvfHostValueNotParsed paramOvfHostValueNotParsed) {
    return new JAXBElement(_OvfHostValueNotParsedFault_QNAME, OvfHostValueNotParsed.class, null, paramOvfHostValueNotParsed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InstallHostPatch_Task")
  public JAXBElement<InstallHostPatchRequestType> createInstallHostPatchTask(InstallHostPatchRequestType paramInstallHostPatchRequestType) {
    return new JAXBElement(_InstallHostPatchTask_QNAME, InstallHostPatchRequestType.class, null, paramInstallHostPatchRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SecondaryVmNotRegisteredFault")
  public JAXBElement<SecondaryVmNotRegistered> createSecondaryVmNotRegisteredFault(SecondaryVmNotRegistered paramSecondaryVmNotRegistered) {
    return new JAXBElement(_SecondaryVmNotRegisteredFault_QNAME, SecondaryVmNotRegistered.class, null, paramSecondaryVmNotRegistered);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateLicenseLabel")
  public JAXBElement<UpdateLicenseLabelRequestType> createUpdateLicenseLabel(UpdateLicenseLabelRequestType paramUpdateLicenseLabelRequestType) {
    return new JAXBElement(_UpdateLicenseLabel_QNAME, UpdateLicenseLabelRequestType.class, null, paramUpdateLicenseLabelRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HttpNfcLeaseProgress")
  public JAXBElement<HttpNfcLeaseProgressRequestType> createHttpNfcLeaseProgress(HttpNfcLeaseProgressRequestType paramHttpNfcLeaseProgressRequestType) {
    return new JAXBElement(_HttpNfcLeaseProgress_QNAME, HttpNfcLeaseProgressRequestType.class, null, paramHttpNfcLeaseProgressRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InaccessibleDatastoreFault")
  public JAXBElement<InaccessibleDatastore> createInaccessibleDatastoreFault(InaccessibleDatastore paramInaccessibleDatastore) {
    return new JAXBElement(_InaccessibleDatastoreFault_QNAME, InaccessibleDatastore.class, null, paramInaccessibleDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenerateLogBundles_Task")
  public JAXBElement<GenerateLogBundlesRequestType> createGenerateLogBundlesTask(GenerateLogBundlesRequestType paramGenerateLogBundlesRequestType) {
    return new JAXBElement(_GenerateLogBundlesTask_QNAME, GenerateLogBundlesRequestType.class, null, paramGenerateLogBundlesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultVnicHasWrongUplinkFault")
  public JAXBElement<IscsiFaultVnicHasWrongUplink> createIscsiFaultVnicHasWrongUplinkFault(IscsiFaultVnicHasWrongUplink paramIscsiFaultVnicHasWrongUplink) {
    return new JAXBElement(_IscsiFaultVnicHasWrongUplinkFault_QNAME, IscsiFaultVnicHasWrongUplink.class, null, paramIscsiFaultVnicHasWrongUplink);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MemorySizeNotSupportedFault")
  public JAXBElement<MemorySizeNotSupported> createMemorySizeNotSupportedFault(MemorySizeNotSupported paramMemorySizeNotSupported) {
    return new JAXBElement(_MemorySizeNotSupportedFault_QNAME, MemorySizeNotSupported.class, null, paramMemorySizeNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IsSharedGraphicsActive")
  public JAXBElement<IsSharedGraphicsActiveRequestType> createIsSharedGraphicsActive(IsSharedGraphicsActiveRequestType paramIsSharedGraphicsActiveRequestType) {
    return new JAXBElement(_IsSharedGraphicsActive_QNAME, IsSharedGraphicsActiveRequestType.class, null, paramIsSharedGraphicsActiveRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigureEvcMode_Task")
  public JAXBElement<ConfigureEvcModeRequestType> createConfigureEvcModeTask(ConfigureEvcModeRequestType paramConfigureEvcModeRequestType) {
    return new JAXBElement(_ConfigureEvcModeTask_QNAME, ConfigureEvcModeRequestType.class, null, paramConfigureEvcModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeltaDiskFormatNotSupportedFault")
  public JAXBElement<DeltaDiskFormatNotSupported> createDeltaDiskFormatNotSupportedFault(DeltaDiskFormatNotSupported paramDeltaDiskFormatNotSupported) {
    return new JAXBElement(_DeltaDiskFormatNotSupportedFault_QNAME, DeltaDiskFormatNotSupported.class, null, paramDeltaDiskFormatNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ContinueRetrievePropertiesEx")
  public JAXBElement<ContinueRetrievePropertiesExRequestType> createContinueRetrievePropertiesEx(ContinueRetrievePropertiesExRequestType paramContinueRetrievePropertiesExRequestType) {
    return new JAXBElement(_ContinueRetrievePropertiesEx_QNAME, ContinueRetrievePropertiesExRequestType.class, null, paramContinueRetrievePropertiesExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostRetrieveVStorageObjectState")
  public JAXBElement<HostRetrieveVStorageObjectStateRequestType> createHostRetrieveVStorageObjectState(HostRetrieveVStorageObjectStateRequestType paramHostRetrieveVStorageObjectStateRequestType) {
    return new JAXBElement(_HostRetrieveVStorageObjectState_QNAME, HostRetrieveVStorageObjectStateRequestType.class, null, paramHostRetrieveVStorageObjectStateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddNetworkResourcePool")
  public JAXBElement<AddNetworkResourcePoolRequestType> createAddNetworkResourcePool(AddNetworkResourcePoolRequestType paramAddNetworkResourcePoolRequestType) {
    return new JAXBElement(_AddNetworkResourcePool_QNAME, AddNetworkResourcePoolRequestType.class, null, paramAddNetworkResourcePoolRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AlreadyBeingManagedFault")
  public JAXBElement<AlreadyBeingManaged> createAlreadyBeingManagedFault(AlreadyBeingManaged paramAlreadyBeingManaged) {
    return new JAXBElement(_AlreadyBeingManagedFault_QNAME, AlreadyBeingManaged.class, null, paramAlreadyBeingManaged);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InstantClone_Task")
  public JAXBElement<InstantCloneRequestType> createInstantCloneTask(InstantCloneRequestType paramInstantCloneRequestType) {
    return new JAXBElement(_InstantCloneTask_QNAME, InstantCloneRequestType.class, null, paramInstantCloneRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsDisabledOnVmFault")
  public JAXBElement<StorageDrsDisabledOnVm> createStorageDrsDisabledOnVmFault(StorageDrsDisabledOnVm paramStorageDrsDisabledOnVm) {
    return new JAXBElement(_StorageDrsDisabledOnVmFault_QNAME, StorageDrsDisabledOnVm.class, null, paramStorageDrsDisabledOnVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExpiredFeatureLicenseFault")
  public JAXBElement<ExpiredFeatureLicense> createExpiredFeatureLicenseFault(ExpiredFeatureLicense paramExpiredFeatureLicense) {
    return new JAXBElement(_ExpiredFeatureLicenseFault_QNAME, ExpiredFeatureLicense.class, null, paramExpiredFeatureLicense);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfPropertyQualifierFault")
  public JAXBElement<OvfPropertyQualifier> createOvfPropertyQualifierFault(OvfPropertyQualifier paramOvfPropertyQualifier) {
    return new JAXBElement(_OvfPropertyQualifierFault_QNAME, OvfPropertyQualifier.class, null, paramOvfPropertyQualifier);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveDescription")
  public JAXBElement<RetrieveDescriptionRequestType> createRetrieveDescription(RetrieveDescriptionRequestType paramRetrieveDescriptionRequestType) {
    return new JAXBElement(_RetrieveDescription_QNAME, RetrieveDescriptionRequestType.class, null, paramRetrieveDescriptionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddServiceConsoleVirtualNic")
  public JAXBElement<AddServiceConsoleVirtualNicRequestType> createAddServiceConsoleVirtualNic(AddServiceConsoleVirtualNicRequestType paramAddServiceConsoleVirtualNicRequestType) {
    return new JAXBElement(_AddServiceConsoleVirtualNic_QNAME, AddServiceConsoleVirtualNicRequestType.class, null, paramAddServiceConsoleVirtualNicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CertMgrRevokeCertificates_Task")
  public JAXBElement<CertMgrRevokeCertificatesRequestType> createCertMgrRevokeCertificatesTask(CertMgrRevokeCertificatesRequestType paramCertMgrRevokeCertificatesRequestType) {
    return new JAXBElement(_CertMgrRevokeCertificatesTask_QNAME, CertMgrRevokeCertificatesRequestType.class, null, paramCertMgrRevokeCertificatesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmMonitorIncompatibleForFaultToleranceFault")
  public JAXBElement<VmMonitorIncompatibleForFaultTolerance> createVmMonitorIncompatibleForFaultToleranceFault(VmMonitorIncompatibleForFaultTolerance paramVmMonitorIncompatibleForFaultTolerance) {
    return new JAXBElement(_VmMonitorIncompatibleForFaultToleranceFault_QNAME, VmMonitorIncompatibleForFaultTolerance.class, null, paramVmMonitorIncompatibleForFaultTolerance);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AttachScsiLunEx_Task")
  public JAXBElement<AttachScsiLunExRequestType> createAttachScsiLunExTask(AttachScsiLunExRequestType paramAttachScsiLunExRequestType) {
    return new JAXBElement(_AttachScsiLunExTask_QNAME, AttachScsiLunExRequestType.class, null, paramAttachScsiLunExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfPropertyExportFault")
  public JAXBElement<OvfPropertyExport> createOvfPropertyExportFault(OvfPropertyExport paramOvfPropertyExport) {
    return new JAXBElement(_OvfPropertyExportFault_QNAME, OvfPropertyExport.class, null, paramOvfPropertyExport);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InflateVirtualDisk_Task")
  public JAXBElement<InflateVirtualDiskRequestType> createInflateVirtualDiskTask(InflateVirtualDiskRequestType paramInflateVirtualDiskRequestType) {
    return new JAXBElement(_InflateVirtualDiskTask_QNAME, InflateVirtualDiskRequestType.class, null, paramInflateVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDatastoreStateFault")
  public JAXBElement<InvalidDatastoreState> createInvalidDatastoreStateFault(InvalidDatastoreState paramInvalidDatastoreState) {
    return new JAXBElement(_InvalidDatastoreStateFault_QNAME, InvalidDatastoreState.class, null, paramInvalidDatastoreState);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateDiskFromSnapshot_Task")
  public JAXBElement<CreateDiskFromSnapshotRequestType> createCreateDiskFromSnapshotTask(CreateDiskFromSnapshotRequestType paramCreateDiskFromSnapshotRequestType) {
    return new JAXBElement(_CreateDiskFromSnapshotTask_QNAME, CreateDiskFromSnapshotRequestType.class, null, paramCreateDiskFromSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestRegistryKeyFaultFault")
  public JAXBElement<GuestRegistryKeyFault> createGuestRegistryKeyFaultFault(GuestRegistryKeyFault paramGuestRegistryKeyFault) {
    return new JAXBElement(_GuestRegistryKeyFaultFault_QNAME, GuestRegistryKeyFault.class, null, paramGuestRegistryKeyFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RestartService")
  public JAXBElement<RestartServiceRequestType> createRestartService(RestartServiceRequestType paramRestartServiceRequestType) {
    return new JAXBElement(_RestartService_QNAME, RestartServiceRequestType.class, null, paramRestartServiceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DiskMoveTypeNotSupportedFault")
  public JAXBElement<DiskMoveTypeNotSupported> createDiskMoveTypeNotSupportedFault(DiskMoveTypeNotSupported paramDiskMoveTypeNotSupported) {
    return new JAXBElement(_DiskMoveTypeNotSupportedFault_QNAME, DiskMoveTypeNotSupported.class, null, paramDiskMoveTypeNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureAlarm")
  public JAXBElement<ReconfigureAlarmRequestType> createReconfigureAlarm(ReconfigureAlarmRequestType paramReconfigureAlarmRequestType) {
    return new JAXBElement(_ReconfigureAlarm_QNAME, ReconfigureAlarmRequestType.class, null, paramReconfigureAlarmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SSPIChallengeFault")
  public JAXBElement<SSPIChallenge> createSSPIChallengeFault(SSPIChallenge paramSSPIChallenge) {
    return new JAXBElement(_SSPIChallengeFault_QNAME, SSPIChallenge.class, null, paramSSPIChallenge);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpgradeVsanObjects")
  public JAXBElement<UpgradeVsanObjectsRequestType> createUpgradeVsanObjects(UpgradeVsanObjectsRequestType paramUpgradeVsanObjectsRequestType) {
    return new JAXBElement(_UpgradeVsanObjects_QNAME, UpgradeVsanObjectsRequestType.class, null, paramUpgradeVsanObjectsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmConfigIncompatibleForFaultToleranceFault")
  public JAXBElement<VmConfigIncompatibleForFaultTolerance> createVmConfigIncompatibleForFaultToleranceFault(VmConfigIncompatibleForFaultTolerance paramVmConfigIncompatibleForFaultTolerance) {
    return new JAXBElement(_VmConfigIncompatibleForFaultToleranceFault_QNAME, VmConfigIncompatibleForFaultTolerance.class, null, paramVmConfigIncompatibleForFaultTolerance);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GatewayHostNotReachableFault")
  public JAXBElement<GatewayHostNotReachable> createGatewayHostNotReachableFault(GatewayHostNotReachable paramGatewayHostNotReachable) {
    return new JAXBElement(_GatewayHostNotReachableFault_QNAME, GatewayHostNotReachable.class, null, paramGatewayHostNotReachable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExpandVmfsExtent")
  public JAXBElement<ExpandVmfsExtentRequestType> createExpandVmfsExtent(ExpandVmfsExtentRequestType paramExpandVmfsExtentRequestType) {
    return new JAXBElement(_ExpandVmfsExtent_QNAME, ExpandVmfsExtentRequestType.class, null, paramExpandVmfsExtentRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IncompatibleSettingFault")
  public JAXBElement<IncompatibleSetting> createIncompatibleSettingFault(IncompatibleSetting paramIncompatibleSetting) {
    return new JAXBElement(_IncompatibleSettingFault_QNAME, IncompatibleSetting.class, null, paramIncompatibleSetting);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotModifyConfigCpuRequirementsFault")
  public JAXBElement<CannotModifyConfigCpuRequirements> createCannotModifyConfigCpuRequirementsFault(CannotModifyConfigCpuRequirements paramCannotModifyConfigCpuRequirements) {
    return new JAXBElement(_CannotModifyConfigCpuRequirementsFault_QNAME, CannotModifyConfigCpuRequirements.class, null, paramCannotModifyConfigCpuRequirements);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DirectoryNotEmptyFault")
  public JAXBElement<DirectoryNotEmpty> createDirectoryNotEmptyFault(DirectoryNotEmpty paramDirectoryNotEmpty) {
    return new JAXBElement(_DirectoryNotEmptyFault_QNAME, DirectoryNotEmpty.class, null, paramDirectoryNotEmpty);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientNetworkResourcePoolCapacityFault")
  public JAXBElement<InsufficientNetworkResourcePoolCapacity> createInsufficientNetworkResourcePoolCapacityFault(InsufficientNetworkResourcePoolCapacity paramInsufficientNetworkResourcePoolCapacity) {
    return new JAXBElement(_InsufficientNetworkResourcePoolCapacityFault_QNAME, InsufficientNetworkResourcePoolCapacity.class, null, paramInsufficientNetworkResourcePoolCapacity);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfPropertyQualifierIgnoredFault")
  public JAXBElement<OvfPropertyQualifierIgnored> createOvfPropertyQualifierIgnoredFault(OvfPropertyQualifierIgnored paramOvfPropertyQualifierIgnored) {
    return new JAXBElement(_OvfPropertyQualifierIgnoredFault_QNAME, OvfPropertyQualifierIgnored.class, null, paramOvfPropertyQualifierIgnored);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AnswerVM")
  public JAXBElement<AnswerVMRequestType> createAnswerVM(AnswerVMRequestType paramAnswerVMRequestType) {
    return new JAXBElement(_AnswerVM_QNAME, AnswerVMRequestType.class, null, paramAnswerVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CanProvisionObjects")
  public JAXBElement<CanProvisionObjectsRequestType> createCanProvisionObjects(CanProvisionObjectsRequestType paramCanProvisionObjectsRequestType) {
    return new JAXBElement(_CanProvisionObjects_QNAME, CanProvisionObjectsRequestType.class, null, paramCanProvisionObjectsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LimitExceededFault")
  public JAXBElement<LimitExceeded> createLimitExceededFault(LimitExceeded paramLimitExceeded) {
    return new JAXBElement(_LimitExceededFault_QNAME, LimitExceeded.class, null, paramLimitExceeded);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TerminateFaultTolerantVM_Task")
  public JAXBElement<TerminateFaultTolerantVMRequestType> createTerminateFaultTolerantVMTask(TerminateFaultTolerantVMRequestType paramTerminateFaultTolerantVMRequestType) {
    return new JAXBElement(_TerminateFaultTolerantVMTask_QNAME, TerminateFaultTolerantVMRequestType.class, null, paramTerminateFaultTolerantVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPartitionCreateDesc")
  public JAXBElement<QueryPartitionCreateDescRequestType> createQueryPartitionCreateDesc(QueryPartitionCreateDescRequestType paramQueryPartitionCreateDescRequestType) {
    return new JAXBElement(_QueryPartitionCreateDesc_QNAME, QueryPartitionCreateDescRequestType.class, null, paramQueryPartitionCreateDescRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmValidateMaxDeviceFault")
  public JAXBElement<VmValidateMaxDevice> createVmValidateMaxDeviceFault(VmValidateMaxDevice paramVmValidateMaxDevice) {
    return new JAXBElement(_VmValidateMaxDeviceFault_QNAME, VmValidateMaxDevice.class, null, paramVmValidateMaxDevice);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCConfigFaultFault")
  public JAXBElement<EVCConfigFault> createEVCConfigFaultFault(EVCConfigFault paramEVCConfigFault) {
    return new JAXBElement(_EVCConfigFaultFault_QNAME, EVCConfigFault.class, null, paramEVCConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddVirtualSwitch")
  public JAXBElement<AddVirtualSwitchRequestType> createAddVirtualSwitch(AddVirtualSwitchRequestType paramAddVirtualSwitchRequestType) {
    return new JAXBElement(_AddVirtualSwitch_QNAME, AddVirtualSwitchRequestType.class, null, paramAddVirtualSwitchRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryEvents")
  public JAXBElement<QueryEventsRequestType> createQueryEvents(QueryEventsRequestType paramQueryEventsRequestType) {
    return new JAXBElement(_QueryEvents_QNAME, QueryEventsRequestType.class, null, paramQueryEventsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateSystemSwapConfiguration")
  public JAXBElement<UpdateSystemSwapConfigurationRequestType> createUpdateSystemSwapConfiguration(UpdateSystemSwapConfigurationRequestType paramUpdateSystemSwapConfigurationRequestType) {
    return new JAXBElement(_UpdateSystemSwapConfiguration_QNAME, UpdateSystemSwapConfigurationRequestType.class, null, paramUpdateSystemSwapConfigurationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotEnoughCpusFault")
  public JAXBElement<NotEnoughCpus> createNotEnoughCpusFault(NotEnoughCpus paramNotEnoughCpus) {
    return new JAXBElement(_NotEnoughCpusFault_QNAME, NotEnoughCpus.class, null, paramNotEnoughCpus);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidCollectorVersionFault")
  public JAXBElement<InvalidCollectorVersion> createInvalidCollectorVersionFault(InvalidCollectorVersion paramInvalidCollectorVersion) {
    return new JAXBElement(_InvalidCollectorVersionFault_QNAME, InvalidCollectorVersion.class, null, paramInvalidCollectorVersion);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SecurityErrorFault")
  public JAXBElement<SecurityError> createSecurityErrorFault(SecurityError paramSecurityError) {
    return new JAXBElement(_SecurityErrorFault_QNAME, SecurityError.class, null, paramSecurityError);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MemorySizeNotSupportedByDatastoreFault")
  public JAXBElement<MemorySizeNotSupportedByDatastore> createMemorySizeNotSupportedByDatastoreFault(MemorySizeNotSupportedByDatastore paramMemorySizeNotSupportedByDatastore) {
    return new JAXBElement(_MemorySizeNotSupportedByDatastoreFault_QNAME, MemorySizeNotSupportedByDatastore.class, null, paramMemorySizeNotSupportedByDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotLockedFault")
  public JAXBElement<SnapshotLocked> createSnapshotLockedFault(SnapshotLocked paramSnapshotLocked) {
    return new JAXBElement(_SnapshotLockedFault_QNAME, SnapshotLocked.class, null, paramSnapshotLocked);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateClusterProfile")
  public JAXBElement<UpdateClusterProfileRequestType> createUpdateClusterProfile(UpdateClusterProfileRequestType paramUpdateClusterProfileRequestType) {
    return new JAXBElement(_UpdateClusterProfile_QNAME, UpdateClusterProfileRequestType.class, null, paramUpdateClusterProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteHostSubSpecification")
  public JAXBElement<DeleteHostSubSpecificationRequestType> createDeleteHostSubSpecification(DeleteHostSubSpecificationRequestType paramDeleteHostSubSpecificationRequestType) {
    return new JAXBElement(_DeleteHostSubSpecification_QNAME, DeleteHostSubSpecificationRequestType.class, null, paramDeleteHostSubSpecificationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RestartServiceConsoleVirtualNic")
  public JAXBElement<RestartServiceConsoleVirtualNicRequestType> createRestartServiceConsoleVirtualNic(RestartServiceConsoleVirtualNicRequestType paramRestartServiceConsoleVirtualNicRequestType) {
    return new JAXBElement(_RestartServiceConsoleVirtualNic_QNAME, RestartServiceConsoleVirtualNicRequestType.class, null, paramRestartServiceConsoleVirtualNicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QuerySupportedFeatures")
  public JAXBElement<QuerySupportedFeaturesRequestType> createQuerySupportedFeatures(QuerySupportedFeaturesRequestType paramQuerySupportedFeaturesRequestType) {
    return new JAXBElement(_QuerySupportedFeatures_QNAME, QuerySupportedFeaturesRequestType.class, null, paramQuerySupportedFeaturesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryAvailableDisksForVmfs")
  public JAXBElement<QueryAvailableDisksForVmfsRequestType> createQueryAvailableDisksForVmfs(QueryAvailableDisksForVmfsRequestType paramQueryAvailableDisksForVmfsRequestType) {
    return new JAXBElement(_QueryAvailableDisksForVmfs_QNAME, QueryAvailableDisksForVmfsRequestType.class, null, paramQueryAvailableDisksForVmfsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateAnswerFile_Task")
  public JAXBElement<UpdateAnswerFileRequestType> createUpdateAnswerFileTask(UpdateAnswerFileRequestType paramUpdateAnswerFileRequestType) {
    return new JAXBElement(_UpdateAnswerFileTask_QNAME, UpdateAnswerFileRequestType.class, null, paramUpdateAnswerFileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotRevertIssueFault")
  public JAXBElement<SnapshotRevertIssue> createSnapshotRevertIssueFault(SnapshotRevertIssue paramSnapshotRevertIssue) {
    return new JAXBElement(_SnapshotRevertIssueFault_QNAME, SnapshotRevertIssue.class, null, paramSnapshotRevertIssue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveDiskInMultiWriterModeFault")
  public JAXBElement<StorageDrsCannotMoveDiskInMultiWriterMode> createStorageDrsCannotMoveDiskInMultiWriterModeFault(StorageDrsCannotMoveDiskInMultiWriterMode paramStorageDrsCannotMoveDiskInMultiWriterMode) {
    return new JAXBElement(_StorageDrsCannotMoveDiskInMultiWriterModeFault_QNAME, StorageDrsCannotMoveDiskInMultiWriterMode.class, null, paramStorageDrsCannotMoveDiskInMultiWriterMode);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ScanHostPatch_Task")
  public JAXBElement<ScanHostPatchRequestType> createScanHostPatchTask(ScanHostPatchRequestType paramScanHostPatchRequestType) {
    return new JAXBElement(_ScanHostPatchTask_QNAME, ScanHostPatchRequestType.class, null, paramScanHostPatchRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StandbyGuest")
  public JAXBElement<StandbyGuestRequestType> createStandbyGuest(StandbyGuestRequestType paramStandbyGuestRequestType) {
    return new JAXBElement(_StandbyGuest_QNAME, StandbyGuestRequestType.class, null, paramStandbyGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RenameCustomizationSpec")
  public JAXBElement<RenameCustomizationSpecRequestType> createRenameCustomizationSpec(RenameCustomizationSpecRequestType paramRenameCustomizationSpecRequestType) {
    return new JAXBElement(_RenameCustomizationSpec_QNAME, RenameCustomizationSpecRequestType.class, null, paramRenameCustomizationSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryNetConfig")
  public JAXBElement<QueryNetConfigRequestType> createQueryNetConfig(QueryNetConfigRequestType paramQueryNetConfigRequestType) {
    return new JAXBElement(_QueryNetConfig_QNAME, QueryNetConfigRequestType.class, null, paramQueryNetConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HAErrorsAtDestFault")
  public JAXBElement<HAErrorsAtDest> createHAErrorsAtDestFault(HAErrorsAtDest paramHAErrorsAtDest) {
    return new JAXBElement(_HAErrorsAtDestFault_QNAME, HAErrorsAtDest.class, null, paramHAErrorsAtDest);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryConfigOption")
  public JAXBElement<QueryConfigOptionRequestType> createQueryConfigOption(QueryConfigOptionRequestType paramQueryConfigOptionRequestType) {
    return new JAXBElement(_QueryConfigOption_QNAME, QueryConfigOptionRequestType.class, null, paramQueryConfigOptionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnmountToolsInstaller")
  public JAXBElement<UnmountToolsInstallerRequestType> createUnmountToolsInstaller(UnmountToolsInstallerRequestType paramUnmountToolsInstallerRequestType) {
    return new JAXBElement(_UnmountToolsInstaller_QNAME, UnmountToolsInstallerRequestType.class, null, paramUnmountToolsInstallerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfHardwareExportFault")
  public JAXBElement<OvfHardwareExport> createOvfHardwareExportFault(OvfHardwareExport paramOvfHardwareExport) {
    return new JAXBElement(_OvfHardwareExportFault_QNAME, OvfHardwareExport.class, null, paramOvfHardwareExport);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmToolsUpgradeFaultFault")
  public JAXBElement<VmToolsUpgradeFault> createVmToolsUpgradeFaultFault(VmToolsUpgradeFault paramVmToolsUpgradeFault) {
    return new JAXBElement(_VmToolsUpgradeFaultFault_QNAME, VmToolsUpgradeFault.class, null, paramVmToolsUpgradeFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VirtualHardwareCompatibilityIssueFault")
  public JAXBElement<VirtualHardwareCompatibilityIssue> createVirtualHardwareCompatibilityIssueFault(VirtualHardwareCompatibilityIssue paramVirtualHardwareCompatibilityIssue) {
    return new JAXBElement(_VirtualHardwareCompatibilityIssueFault_QNAME, VirtualHardwareCompatibilityIssue.class, null, paramVirtualHardwareCompatibilityIssue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMotionNotConfiguredFault")
  public JAXBElement<VMotionNotConfigured> createVMotionNotConfiguredFault(VMotionNotConfigured paramVMotionNotConfigured) {
    return new JAXBElement(_VMotionNotConfiguredFault_QNAME, VMotionNotConfigured.class, null, paramVMotionNotConfigured);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SoftRuleVioCorrectionImpactFault")
  public JAXBElement<SoftRuleVioCorrectionImpact> createSoftRuleVioCorrectionImpactFault(SoftRuleVioCorrectionImpact paramSoftRuleVioCorrectionImpact) {
    return new JAXBElement(_SoftRuleVioCorrectionImpactFault_QNAME, SoftRuleVioCorrectionImpact.class, null, paramSoftRuleVioCorrectionImpact);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVVolVirtualMachineFiles_Task")
  public JAXBElement<UpdateVVolVirtualMachineFilesRequestType> createUpdateVVolVirtualMachineFilesTask(UpdateVVolVirtualMachineFilesRequestType paramUpdateVVolVirtualMachineFilesRequestType) {
    return new JAXBElement(_UpdateVVolVirtualMachineFilesTask_QNAME, UpdateVVolVirtualMachineFilesRequestType.class, null, paramUpdateVVolVirtualMachineFilesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteNvdimmBlockNamespaces_Task")
  public JAXBElement<DeleteNvdimmBlockNamespacesRequestType> createDeleteNvdimmBlockNamespacesTask(DeleteNvdimmBlockNamespacesRequestType paramDeleteNvdimmBlockNamespacesRequestType) {
    return new JAXBElement(_DeleteNvdimmBlockNamespacesTask_QNAME, DeleteNvdimmBlockNamespacesRequestType.class, null, paramDeleteNvdimmBlockNamespacesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DatastoreNotWritableOnHostFault")
  public JAXBElement<DatastoreNotWritableOnHost> createDatastoreNotWritableOnHostFault(DatastoreNotWritableOnHost paramDatastoreNotWritableOnHost) {
    return new JAXBElement(_DatastoreNotWritableOnHostFault_QNAME, DatastoreNotWritableOnHost.class, null, paramDatastoreNotWritableOnHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConnectedDeviceIsoFault")
  public JAXBElement<OvfConnectedDeviceIso> createOvfConnectedDeviceIsoFault(OvfConnectedDeviceIso paramOvfConnectedDeviceIso) {
    return new JAXBElement(_OvfConnectedDeviceIsoFault_QNAME, OvfConnectedDeviceIso.class, null, paramOvfConnectedDeviceIso);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfInvalidValueConfigurationFault")
  public JAXBElement<OvfInvalidValueConfiguration> createOvfInvalidValueConfigurationFault(OvfInvalidValueConfiguration paramOvfInvalidValueConfiguration) {
    return new JAXBElement(_OvfInvalidValueConfigurationFault_QNAME, OvfInvalidValueConfiguration.class, null, paramOvfInvalidValueConfiguration);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostHasComponentFailureFault")
  public JAXBElement<HostHasComponentFailure> createHostHasComponentFailureFault(HostHasComponentFailure paramHostHasComponentFailure) {
    return new JAXBElement(_HostHasComponentFailureFault_QNAME, HostHasComponentFailure.class, null, paramHostHasComponentFailure);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryProviderName")
  public JAXBElement<QueryProviderNameRequestType> createQueryProviderName(QueryProviderNameRequestType paramQueryProviderNameRequestType) {
    return new JAXBElement(_QueryProviderName_QNAME, QueryProviderNameRequestType.class, null, paramQueryProviderNameRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateReferenceHost")
  public JAXBElement<UpdateReferenceHostRequestType> createUpdateReferenceHost(UpdateReferenceHostRequestType paramUpdateReferenceHostRequestType) {
    return new JAXBElement(_UpdateReferenceHost_QNAME, UpdateReferenceHostRequestType.class, null, paramUpdateReferenceHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfDiskMappingNotFoundFault")
  public JAXBElement<OvfDiskMappingNotFound> createOvfDiskMappingNotFoundFault(OvfDiskMappingNotFound paramOvfDiskMappingNotFound) {
    return new JAXBElement(_OvfDiskMappingNotFoundFault_QNAME, OvfDiskMappingNotFound.class, null, paramOvfDiskMappingNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableFeature")
  public JAXBElement<EnableFeatureRequestType> createEnableFeature(EnableFeatureRequestType paramEnableFeatureRequestType) {
    return new JAXBElement(_EnableFeature_QNAME, EnableFeatureRequestType.class, null, paramEnableFeatureRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResetListViewFromView")
  public JAXBElement<ResetListViewFromViewRequestType> createResetListViewFromView(ResetListViewFromViewRequestType paramResetListViewFromViewRequestType) {
    return new JAXBElement(_ResetListViewFromView_QNAME, ResetListViewFromViewRequestType.class, null, paramResetListViewFromViewRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NonADUserRequiredFault")
  public JAXBElement<NonADUserRequired> createNonADUserRequiredFault(NonADUserRequired paramNonADUserRequired) {
    return new JAXBElement(_NonADUserRequiredFault_QNAME, NonADUserRequired.class, null, paramNonADUserRequired);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigureCryptoKey")
  public JAXBElement<ConfigureCryptoKeyRequestType> createConfigureCryptoKey(ConfigureCryptoKeyRequestType paramConfigureCryptoKeyRequestType) {
    return new JAXBElement(_ConfigureCryptoKey_QNAME, ConfigureCryptoKeyRequestType.class, null, paramConfigureCryptoKeyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnregisterKmsCluster")
  public JAXBElement<UnregisterKmsClusterRequestType> createUnregisterKmsCluster(UnregisterKmsClusterRequestType paramUnregisterKmsClusterRequestType) {
    return new JAXBElement(_UnregisterKmsCluster_QNAME, UnregisterKmsClusterRequestType.class, null, paramUnregisterKmsClusterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveFilter")
  public JAXBElement<RemoveFilterRequestType> createRemoveFilter(RemoveFilterRequestType paramRemoveFilterRequestType) {
    return new JAXBElement(_RemoveFilter_QNAME, RemoveFilterRequestType.class, null, paramRemoveFilterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpgradeIoFilter_Task")
  public JAXBElement<UpgradeIoFilterRequestType> createUpgradeIoFilterTask(UpgradeIoFilterRequestType paramUpgradeIoFilterRequestType) {
    return new JAXBElement(_UpgradeIoFilterTask_QNAME, UpgradeIoFilterRequestType.class, null, paramUpgradeIoFilterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DVPortgroupRollback_Task")
  public JAXBElement<DVPortgroupRollbackRequestType> createDVPortgroupRollbackTask(DVPortgroupRollbackRequestType paramDVPortgroupRollbackRequestType) {
    return new JAXBElement(_DVPortgroupRollbackTask_QNAME, DVPortgroupRollbackRequestType.class, null, paramDVPortgroupRollbackRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveNvmeOverRdmaAdapter")
  public JAXBElement<RemoveNvmeOverRdmaAdapterRequestType> createRemoveNvmeOverRdmaAdapter(RemoveNvmeOverRdmaAdapterRequestType paramRemoveNvmeOverRdmaAdapterRequestType) {
    return new JAXBElement(_RemoveNvmeOverRdmaAdapter_QNAME, RemoveNvmeOverRdmaAdapterRequestType.class, null, paramRemoveNvmeOverRdmaAdapterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVnicStatus")
  public JAXBElement<QueryVnicStatusRequestType> createQueryVnicStatus(QueryVnicStatusRequestType paramQueryVnicStatusRequestType) {
    return new JAXBElement(_QueryVnicStatus_QNAME, QueryVnicStatusRequestType.class, null, paramQueryVnicStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDvsFeatureCapability")
  public JAXBElement<QueryDvsFeatureCapabilityRequestType> createQueryDvsFeatureCapability(QueryDvsFeatureCapabilityRequestType paramQueryDvsFeatureCapabilityRequestType) {
    return new JAXBElement(_QueryDvsFeatureCapability_QNAME, QueryDvsFeatureCapabilityRequestType.class, null, paramQueryDvsFeatureCapabilityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ZeroFillVirtualDisk_Task")
  public JAXBElement<ZeroFillVirtualDiskRequestType> createZeroFillVirtualDiskTask(ZeroFillVirtualDiskRequestType paramZeroFillVirtualDiskRequestType) {
    return new JAXBElement(_ZeroFillVirtualDiskTask_QNAME, ZeroFillVirtualDiskRequestType.class, null, paramZeroFillVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveAnswerFileForProfile")
  public JAXBElement<RetrieveAnswerFileForProfileRequestType> createRetrieveAnswerFileForProfile(RetrieveAnswerFileForProfileRequestType paramRetrieveAnswerFileForProfileRequestType) {
    return new JAXBElement(_RetrieveAnswerFileForProfile_QNAME, RetrieveAnswerFileForProfileRequestType.class, null, paramRetrieveAnswerFileForProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DuplicateNameFault")
  public JAXBElement<DuplicateName> createDuplicateNameFault(DuplicateName paramDuplicateName) {
    return new JAXBElement(_DuplicateNameFault_QNAME, DuplicateName.class, null, paramDuplicateName);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TaskInProgressFault")
  public JAXBElement<TaskInProgress> createTaskInProgressFault(TaskInProgress paramTaskInProgress) {
    return new JAXBElement(_TaskInProgressFault_QNAME, TaskInProgress.class, null, paramTaskInProgress);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryCryptoKeyStatus")
  public JAXBElement<QueryCryptoKeyStatusRequestType> createQueryCryptoKeyStatus(QueryCryptoKeyStatusRequestType paramQueryCryptoKeyStatusRequestType) {
    return new JAXBElement(_QueryCryptoKeyStatus_QNAME, QueryCryptoKeyStatusRequestType.class, null, paramQueryCryptoKeyStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RuntimeFaultFault")
  public JAXBElement<RuntimeFault> createRuntimeFaultFault(RuntimeFault paramRuntimeFault) {
    return new JAXBElement(_RuntimeFaultFault_QNAME, RuntimeFault.class, null, paramRuntimeFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ScheduleReconcileDatastoreInventory")
  public JAXBElement<ScheduleReconcileDatastoreInventoryRequestType> createScheduleReconcileDatastoreInventory(ScheduleReconcileDatastoreInventoryRequestType paramScheduleReconcileDatastoreInventoryRequestType) {
    return new JAXBElement(_ScheduleReconcileDatastoreInventory_QNAME, ScheduleReconcileDatastoreInventoryRequestType.class, null, paramScheduleReconcileDatastoreInventoryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MigrationDisabledFault")
  public JAXBElement<MigrationDisabled> createMigrationDisabledFault(MigrationDisabled paramMigrationDisabled) {
    return new JAXBElement(_MigrationDisabledFault_QNAME, MigrationDisabled.class, null, paramMigrationDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MountVffsVolume")
  public JAXBElement<MountVffsVolumeRequestType> createMountVffsVolume(MountVffsVolumeRequestType paramMountVffsVolumeRequestType) {
    return new JAXBElement(_MountVffsVolume_QNAME, MountVffsVolumeRequestType.class, null, paramMountVffsVolumeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResolveInstallationErrorsOnCluster_Task")
  public JAXBElement<ResolveInstallationErrorsOnClusterRequestType> createResolveInstallationErrorsOnClusterTask(ResolveInstallationErrorsOnClusterRequestType paramResolveInstallationErrorsOnClusterRequestType) {
    return new JAXBElement(_ResolveInstallationErrorsOnClusterTask_QNAME, ResolveInstallationErrorsOnClusterRequestType.class, null, paramResolveInstallationErrorsOnClusterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveGuestAlias")
  public JAXBElement<RemoveGuestAliasRequestType> createRemoveGuestAlias(RemoveGuestAliasRequestType paramRemoveGuestAliasRequestType) {
    return new JAXBElement(_RemoveGuestAlias_QNAME, RemoveGuestAliasRequestType.class, null, paramRemoveGuestAliasRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PhysCompatRDMNotSupportedFault")
  public JAXBElement<PhysCompatRDMNotSupported> createPhysCompatRDMNotSupportedFault(PhysCompatRDMNotSupported paramPhysCompatRDMNotSupported) {
    return new JAXBElement(_PhysCompatRDMNotSupportedFault_QNAME, PhysCompatRDMNotSupported.class, null, paramPhysCompatRDMNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateOptions")
  public JAXBElement<UpdateOptionsRequestType> createUpdateOptions(UpdateOptionsRequestType paramUpdateOptionsRequestType) {
    return new JAXBElement(_UpdateOptions_QNAME, UpdateOptionsRequestType.class, null, paramUpdateOptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SwapPlacementOverrideNotSupportedFault")
  public JAXBElement<SwapPlacementOverrideNotSupported> createSwapPlacementOverrideNotSupportedFault(SwapPlacementOverrideNotSupported paramSwapPlacementOverrideNotSupported) {
    return new JAXBElement(_SwapPlacementOverrideNotSupportedFault_QNAME, SwapPlacementOverrideNotSupported.class, null, paramSwapPlacementOverrideNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetDefaultKmsCluster")
  public JAXBElement<SetDefaultKmsClusterRequestType> createSetDefaultKmsCluster(SetDefaultKmsClusterRequestType paramSetDefaultKmsClusterRequestType) {
    return new JAXBElement(_SetDefaultKmsCluster_QNAME, SetDefaultKmsClusterRequestType.class, null, paramSetDefaultKmsClusterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkPerenniallyReservedEx_Task")
  public JAXBElement<MarkPerenniallyReservedExRequestType> createMarkPerenniallyReservedExTask(MarkPerenniallyReservedExRequestType paramMarkPerenniallyReservedExRequestType) {
    return new JAXBElement(_MarkPerenniallyReservedExTask_QNAME, MarkPerenniallyReservedExRequestType.class, null, paramMarkPerenniallyReservedExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "versionURI")
  public JAXBElement<String> createVersionURI(String paramString) {
    return new JAXBElement(_VersionURI_QNAME, String.class, null, paramString);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UncustomizableGuestFault")
  public JAXBElement<UncustomizableGuest> createUncustomizableGuestFault(UncustomizableGuest paramUncustomizableGuest) {
    return new JAXBElement(_UncustomizableGuestFault_QNAME, UncustomizableGuest.class, null, paramUncustomizableGuest);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidPropertyTypeFault")
  public JAXBElement<InvalidPropertyType> createInvalidPropertyTypeFault(InvalidPropertyType paramInvalidPropertyType) {
    return new JAXBElement(_InvalidPropertyTypeFault_QNAME, InvalidPropertyType.class, null, paramInvalidPropertyType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResetFirmwareToFactoryDefaults")
  public JAXBElement<ResetFirmwareToFactoryDefaultsRequestType> createResetFirmwareToFactoryDefaults(ResetFirmwareToFactoryDefaultsRequestType paramResetFirmwareToFactoryDefaultsRequestType) {
    return new JAXBElement(_ResetFirmwareToFactoryDefaults_QNAME, ResetFirmwareToFactoryDefaultsRequestType.class, null, paramResetFirmwareToFactoryDefaultsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateDefaultPolicy")
  public JAXBElement<UpdateDefaultPolicyRequestType> createUpdateDefaultPolicy(UpdateDefaultPolicyRequestType paramUpdateDefaultPolicyRequestType) {
    return new JAXBElement(_UpdateDefaultPolicy_QNAME, UpdateDefaultPolicyRequestType.class, null, paramUpdateDefaultPolicyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVsanObjects")
  public JAXBElement<QueryVsanObjectsRequestType> createQueryVsanObjects(QueryVsanObjectsRequestType paramQueryVsanObjectsRequestType) {
    return new JAXBElement(_QueryVsanObjects_QNAME, QueryVsanObjectsRequestType.class, null, paramQueryVsanObjectsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkAsSsd_Task")
  public JAXBElement<MarkAsSsdRequestType> createMarkAsSsdTask(MarkAsSsdRequestType paramMarkAsSsdRequestType) {
    return new JAXBElement(_MarkAsSsdTask_QNAME, MarkAsSsdRequestType.class, null, paramMarkAsSsdRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConsumerFaultFault")
  public JAXBElement<OvfConsumerFault> createOvfConsumerFaultFault(OvfConsumerFault paramOvfConsumerFault) {
    return new JAXBElement(_OvfConsumerFaultFault_QNAME, OvfConsumerFault.class, null, paramOvfConsumerFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyIpPool")
  public JAXBElement<DestroyIpPoolRequestType> createDestroyIpPool(DestroyIpPoolRequestType paramDestroyIpPoolRequestType) {
    return new JAXBElement(_DestroyIpPool_QNAME, DestroyIpPoolRequestType.class, null, paramDestroyIpPoolRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DrsVmotionIncompatibleFaultFault")
  public JAXBElement<DrsVmotionIncompatibleFault> createDrsVmotionIncompatibleFaultFault(DrsVmotionIncompatibleFault paramDrsVmotionIncompatibleFault) {
    return new JAXBElement(_DrsVmotionIncompatibleFaultFault_QNAME, DrsVmotionIncompatibleFault.class, null, paramDrsVmotionIncompatibleFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckCompatibility_Task")
  public JAXBElement<CheckCompatibilityRequestType> createCheckCompatibilityTask(CheckCompatibilityRequestType paramCheckCompatibilityRequestType) {
    return new JAXBElement(_CheckCompatibilityTask_QNAME, CheckCompatibilityRequestType.class, null, paramCheckCompatibilityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VimFaultFault")
  public JAXBElement<VimFault> createVimFaultFault(VimFault paramVimFault) {
    return new JAXBElement(_VimFaultFault_QNAME, VimFault.class, null, paramVimFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfPropertyTypeFault")
  public JAXBElement<OvfPropertyType> createOvfPropertyTypeFault(OvfPropertyType paramOvfPropertyType) {
    return new JAXBElement(_OvfPropertyTypeFault_QNAME, OvfPropertyType.class, null, paramOvfPropertyType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAccessVmDeviceFault")
  public JAXBElement<CannotAccessVmDevice> createCannotAccessVmDeviceFault(CannotAccessVmDevice paramCannotAccessVmDevice) {
    return new JAXBElement(_CannotAccessVmDeviceFault_QNAME, CannotAccessVmDevice.class, null, paramCannotAccessVmDevice);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VspanPromiscuousPortNotSupportedFault")
  public JAXBElement<VspanPromiscuousPortNotSupported> createVspanPromiscuousPortNotSupportedFault(VspanPromiscuousPortNotSupported paramVspanPromiscuousPortNotSupported) {
    return new JAXBElement(_VspanPromiscuousPortNotSupportedFault_QNAME, VspanPromiscuousPortNotSupported.class, null, paramVspanPromiscuousPortNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedDeviceBackingInfoFault")
  public JAXBElement<OvfUnsupportedDeviceBackingInfo> createOvfUnsupportedDeviceBackingInfoFault(OvfUnsupportedDeviceBackingInfo paramOvfUnsupportedDeviceBackingInfo) {
    return new JAXBElement(_OvfUnsupportedDeviceBackingInfoFault_QNAME, OvfUnsupportedDeviceBackingInfo.class, null, paramOvfUnsupportedDeviceBackingInfo);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ImportCertificateForCAM_Task")
  public JAXBElement<ImportCertificateForCAMRequestType> createImportCertificateForCAMTask(ImportCertificateForCAMRequestType paramImportCertificateForCAMRequestType) {
    return new JAXBElement(_ImportCertificateForCAMTask_QNAME, ImportCertificateForCAMRequestType.class, null, paramImportCertificateForCAMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryHostStatus")
  public JAXBElement<QueryHostStatusRequestType> createQueryHostStatus(QueryHostStatusRequestType paramQueryHostStatusRequestType) {
    return new JAXBElement(_QueryHostStatus_QNAME, QueryHostStatusRequestType.class, null, paramQueryHostStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableAlarm")
  public JAXBElement<DisableAlarmRequestType> createDisableAlarm(DisableAlarmRequestType paramDisableAlarmRequestType) {
    return new JAXBElement(_DisableAlarm_QNAME, DisableAlarmRequestType.class, null, paramDisableAlarmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GetAlarm")
  public JAXBElement<GetAlarmRequestType> createGetAlarm(GetAlarmRequestType paramGetAlarmRequestType) {
    return new JAXBElement(_GetAlarm_QNAME, GetAlarmRequestType.class, null, paramGetAlarmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ComputeDiskPartitionInfoForResize")
  public JAXBElement<ComputeDiskPartitionInfoForResizeRequestType> createComputeDiskPartitionInfoForResize(ComputeDiskPartitionInfoForResizeRequestType paramComputeDiskPartitionInfoForResizeRequestType) {
    return new JAXBElement(_ComputeDiskPartitionInfoForResize_QNAME, ComputeDiskPartitionInfoForResizeRequestType.class, null, paramComputeDiskPartitionInfoForResizeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientStandbyMemoryResourceFault")
  public JAXBElement<InsufficientStandbyMemoryResource> createInsufficientStandbyMemoryResourceFault(InsufficientStandbyMemoryResource paramInsufficientStandbyMemoryResource) {
    return new JAXBElement(_InsufficientStandbyMemoryResourceFault_QNAME, InsufficientStandbyMemoryResource.class, null, paramInsufficientStandbyMemoryResource);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VirtualHardwareVersionNotSupportedFault")
  public JAXBElement<VirtualHardwareVersionNotSupported> createVirtualHardwareVersionNotSupportedFault(VirtualHardwareVersionNotSupported paramVirtualHardwareVersionNotSupported) {
    return new JAXBElement(_VirtualHardwareVersionNotSupportedFault_QNAME, VirtualHardwareVersionNotSupported.class, null, paramVirtualHardwareVersionNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IDEDiskNotSupportedFault")
  public JAXBElement<IDEDiskNotSupported> createIDEDiskNotSupportedFault(IDEDiskNotSupported paramIDEDiskNotSupported) {
    return new JAXBElement(_IDEDiskNotSupportedFault_QNAME, IDEDiskNotSupported.class, null, paramIDEDiskNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "deployVcha_Task")
  public JAXBElement<DeployVchaRequestType> createDeployVchaTask(DeployVchaRequestType paramDeployVchaRequestType) {
    return new JAXBElement(_DeployVchaTask_QNAME, DeployVchaRequestType.class, null, paramDeployVchaRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidLoginFault")
  public JAXBElement<InvalidLogin> createInvalidLoginFault(InvalidLogin paramInvalidLogin) {
    return new JAXBElement(_InvalidLoginFault_QNAME, InvalidLogin.class, null, paramInvalidLogin);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RunScheduledTask")
  public JAXBElement<RunScheduledTaskRequestType> createRunScheduledTask(RunScheduledTaskRequestType paramRunScheduledTaskRequestType) {
    return new JAXBElement(_RunScheduledTask_QNAME, RunScheduledTaskRequestType.class, null, paramRunScheduledTaskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RenameVStorageObject")
  public JAXBElement<RenameVStorageObjectRequestType> createRenameVStorageObject(RenameVStorageObjectRequestType paramRenameVStorageObjectRequestType) {
    return new JAXBElement(_RenameVStorageObject_QNAME, RenameVStorageObjectRequestType.class, null, paramRenameVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SolutionUserRequiredFault")
  public JAXBElement<SolutionUserRequired> createSolutionUserRequiredFault(SolutionUserRequired paramSolutionUserRequired) {
    return new JAXBElement(_SolutionUserRequiredFault_QNAME, SolutionUserRequired.class, null, paramSolutionUserRequired);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InitializeDisks_Task")
  public JAXBElement<InitializeDisksRequestType> createInitializeDisksTask(InitializeDisksRequestType paramInitializeDisksRequestType) {
    return new JAXBElement(_InitializeDisksTask_QNAME, InitializeDisksRequestType.class, null, paramInitializeDisksRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GetAlarmState")
  public JAXBElement<GetAlarmStateRequestType> createGetAlarmState(GetAlarmStateRequestType paramGetAlarmStateRequestType) {
    return new JAXBElement(_GetAlarmState_QNAME, GetAlarmStateRequestType.class, null, paramGetAlarmStateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InstallSmartCardTrustAnchor")
  public JAXBElement<InstallSmartCardTrustAnchorRequestType> createInstallSmartCardTrustAnchor(InstallSmartCardTrustAnchorRequestType paramInstallSmartCardTrustAnchorRequestType) {
    return new JAXBElement(_InstallSmartCardTrustAnchor_QNAME, InstallSmartCardTrustAnchorRequestType.class, null, paramInstallSmartCardTrustAnchorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshStorageInfo")
  public JAXBElement<RefreshStorageInfoRequestType> createRefreshStorageInfo(RefreshStorageInfoRequestType paramRefreshStorageInfoRequestType) {
    return new JAXBElement(_RefreshStorageInfo_QNAME, RefreshStorageInfoRequestType.class, null, paramRefreshStorageInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmMetadataManagerFaultFault")
  public JAXBElement<VmMetadataManagerFault> createVmMetadataManagerFaultFault(VmMetadataManagerFault paramVmMetadataManagerFault) {
    return new JAXBElement(_VmMetadataManagerFaultFault_QNAME, VmMetadataManagerFault.class, null, paramVmMetadataManagerFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResolveMultipleUnresolvedVmfsVolumes")
  public JAXBElement<ResolveMultipleUnresolvedVmfsVolumesRequestType> createResolveMultipleUnresolvedVmfsVolumes(ResolveMultipleUnresolvedVmfsVolumesRequestType paramResolveMultipleUnresolvedVmfsVolumesRequestType) {
    return new JAXBElement(_ResolveMultipleUnresolvedVmfsVolumes_QNAME, ResolveMultipleUnresolvedVmfsVolumesRequestType.class, null, paramResolveMultipleUnresolvedVmfsVolumesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PowerOnVM_Task")
  public JAXBElement<PowerOnVMRequestType> createPowerOnVMTask(PowerOnVMRequestType paramPowerOnVMRequestType) {
    return new JAXBElement(_PowerOnVMTask_QNAME, PowerOnVMRequestType.class, null, paramPowerOnVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoPermissionOnHostFault")
  public JAXBElement<NoPermissionOnHost> createNoPermissionOnHostFault(NoPermissionOnHost paramNoPermissionOnHost) {
    return new JAXBElement(_NoPermissionOnHostFault_QNAME, NoPermissionOnHost.class, null, paramNoPermissionOnHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDasRestartPriorityForFtVmFault")
  public JAXBElement<InvalidDasRestartPriorityForFtVm> createInvalidDasRestartPriorityForFtVmFault(InvalidDasRestartPriorityForFtVm paramInvalidDasRestartPriorityForFtVm) {
    return new JAXBElement(_InvalidDasRestartPriorityForFtVmFault_QNAME, InvalidDasRestartPriorityForFtVm.class, null, paramInvalidDasRestartPriorityForFtVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResetListView")
  public JAXBElement<ResetListViewRequestType> createResetListView(ResetListViewRequestType paramResetListViewRequestType) {
    return new JAXBElement(_ResetListView_QNAME, ResetListViewRequestType.class, null, paramResetListViewRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryFaultToleranceCompatibilityEx")
  public JAXBElement<QueryFaultToleranceCompatibilityExRequestType> createQueryFaultToleranceCompatibilityEx(QueryFaultToleranceCompatibilityExRequestType paramQueryFaultToleranceCompatibilityExRequestType) {
    return new JAXBElement(_QueryFaultToleranceCompatibilityEx_QNAME, QueryFaultToleranceCompatibilityExRequestType.class, null, paramQueryFaultToleranceCompatibilityExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfMissingHardwareFault")
  public JAXBElement<OvfMissingHardware> createOvfMissingHardwareFault(OvfMissingHardware paramOvfMissingHardware) {
    return new JAXBElement(_OvfMissingHardwareFault_QNAME, OvfMissingHardware.class, null, paramOvfMissingHardware);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GatewayToHostTrustVerifyFaultFault")
  public JAXBElement<GatewayToHostTrustVerifyFault> createGatewayToHostTrustVerifyFaultFault(GatewayToHostTrustVerifyFault paramGatewayToHostTrustVerifyFault) {
    return new JAXBElement(_GatewayToHostTrustVerifyFaultFault_QNAME, GatewayToHostTrustVerifyFault.class, null, paramGatewayToHostTrustVerifyFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfMissingElementNormalBoundaryFault")
  public JAXBElement<OvfMissingElementNormalBoundary> createOvfMissingElementNormalBoundaryFault(OvfMissingElementNormalBoundary paramOvfMissingElementNormalBoundary) {
    return new JAXBElement(_OvfMissingElementNormalBoundaryFault_QNAME, OvfMissingElementNormalBoundary.class, null, paramOvfMissingElementNormalBoundary);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResourceInUseFault")
  public JAXBElement<ResourceInUse> createResourceInUseFault(ResourceInUse paramResourceInUse) {
    return new JAXBElement(_ResourceInUseFault_QNAME, ResourceInUse.class, null, paramResourceInUse);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureComputeResource_Task")
  public JAXBElement<ReconfigureComputeResourceRequestType> createReconfigureComputeResourceTask(ReconfigureComputeResourceRequestType paramReconfigureComputeResourceRequestType) {
    return new JAXBElement(_ReconfigureComputeResourceTask_QNAME, ReconfigureComputeResourceRequestType.class, null, paramReconfigureComputeResourceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoPermissionOnADFault")
  public JAXBElement<NoPermissionOnAD> createNoPermissionOnADFault(NoPermissionOnAD paramNoPermissionOnAD) {
    return new JAXBElement(_NoPermissionOnADFault_QNAME, NoPermissionOnAD.class, null, paramNoPermissionOnAD);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConcurrentAccessFault")
  public JAXBElement<ConcurrentAccess> createConcurrentAccessFault(ConcurrentAccess paramConcurrentAccess) {
    return new JAXBElement(_ConcurrentAccessFault_QNAME, ConcurrentAccess.class, null, paramConcurrentAccess);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NonVmwareOuiMacNotSupportedHostFault")
  public JAXBElement<NonVmwareOuiMacNotSupportedHost> createNonVmwareOuiMacNotSupportedHostFault(NonVmwareOuiMacNotSupportedHost paramNonVmwareOuiMacNotSupportedHost) {
    return new JAXBElement(_NonVmwareOuiMacNotSupportedHostFault_QNAME, NonVmwareOuiMacNotSupportedHost.class, null, paramNonVmwareOuiMacNotSupportedHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDatastorePathFault")
  public JAXBElement<InvalidDatastorePath> createInvalidDatastorePathFault(InvalidDatastorePath paramInvalidDatastorePath) {
    return new JAXBElement(_InvalidDatastorePathFault_QNAME, InvalidDatastorePath.class, null, paramInvalidDatastorePath);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidHostConnectionStateFault")
  public JAXBElement<InvalidHostConnectionState> createInvalidHostConnectionStateFault(InvalidHostConnectionState paramInvalidHostConnectionState) {
    return new JAXBElement(_InvalidHostConnectionStateFault_QNAME, InvalidHostConnectionState.class, null, paramInvalidHostConnectionState);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPnicStatus")
  public JAXBElement<QueryPnicStatusRequestType> createQueryPnicStatus(QueryPnicStatusRequestType paramQueryPnicStatusRequestType) {
    return new JAXBElement(_QueryPnicStatus_QNAME, QueryPnicStatusRequestType.class, null, paramQueryPnicStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateGraphicsConfig")
  public JAXBElement<UpdateGraphicsConfigRequestType> createUpdateGraphicsConfig(UpdateGraphicsConfigRequestType paramUpdateGraphicsConfigRequestType) {
    return new JAXBElement(_UpdateGraphicsConfig_QNAME, UpdateGraphicsConfigRequestType.class, null, paramUpdateGraphicsConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestMultipleMappingsFault")
  public JAXBElement<GuestMultipleMappings> createGuestMultipleMappingsFault(GuestMultipleMappings paramGuestMultipleMappings) {
    return new JAXBElement(_GuestMultipleMappingsFault_QNAME, GuestMultipleMappings.class, null, paramGuestMultipleMappings);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CancelRecommendation")
  public JAXBElement<CancelRecommendationRequestType> createCancelRecommendation(CancelRecommendationRequestType paramCancelRecommendationRequestType) {
    return new JAXBElement(_CancelRecommendation_QNAME, CancelRecommendationRequestType.class, null, paramCancelRecommendationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientHostMemoryCapacityFaultFault")
  public JAXBElement<InsufficientHostMemoryCapacityFault> createInsufficientHostMemoryCapacityFaultFault(InsufficientHostMemoryCapacityFault paramInsufficientHostMemoryCapacityFault) {
    return new JAXBElement(_InsufficientHostMemoryCapacityFaultFault_QNAME, InsufficientHostMemoryCapacityFault.class, null, paramInsufficientHostMemoryCapacityFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CompositeHostProfile_Task")
  public JAXBElement<CompositeHostProfileRequestType> createCompositeHostProfileTask(CompositeHostProfileRequestType paramCompositeHostProfileRequestType) {
    return new JAXBElement(_CompositeHostProfileTask_QNAME, CompositeHostProfileRequestType.class, null, paramCompositeHostProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeselectVnic")
  public JAXBElement<DeselectVnicRequestType> createDeselectVnic(DeselectVnicRequestType paramDeselectVnicRequestType) {
    return new JAXBElement(_DeselectVnic_QNAME, DeselectVnicRequestType.class, null, paramDeselectVnicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientMemoryResourcesFaultFault")
  public JAXBElement<InsufficientMemoryResourcesFault> createInsufficientMemoryResourcesFaultFault(InsufficientMemoryResourcesFault paramInsufficientMemoryResourcesFault) {
    return new JAXBElement(_InsufficientMemoryResourcesFaultFault_QNAME, InsufficientMemoryResourcesFault.class, null, paramInsufficientMemoryResourcesFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateIpPool")
  public JAXBElement<UpdateIpPoolRequestType> createUpdateIpPool(UpdateIpPoolRequestType paramUpdateIpPoolRequestType) {
    return new JAXBElement(_UpdateIpPool_QNAME, UpdateIpPoolRequestType.class, null, paramUpdateIpPoolRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkAsNonLocal_Task")
  public JAXBElement<MarkAsNonLocalRequestType> createMarkAsNonLocalTask(MarkAsNonLocalRequestType paramMarkAsNonLocalRequestType) {
    return new JAXBElement(_MarkAsNonLocalTask_QNAME, MarkAsNonLocalRequestType.class, null, paramMarkAsNonLocalRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotPowerOffVmInClusterFault")
  public JAXBElement<CannotPowerOffVmInCluster> createCannotPowerOffVmInClusterFault(CannotPowerOffVmInCluster paramCannotPowerOffVmInCluster) {
    return new JAXBElement(_CannotPowerOffVmInClusterFault_QNAME, CannotPowerOffVmInCluster.class, null, paramCannotPowerOffVmInCluster);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VstorageObjectVCenterQueryChangedDiskAreas")
  public JAXBElement<VstorageObjectVCenterQueryChangedDiskAreasRequestType> createVstorageObjectVCenterQueryChangedDiskAreas(VstorageObjectVCenterQueryChangedDiskAreasRequestType paramVstorageObjectVCenterQueryChangedDiskAreasRequestType) {
    return new JAXBElement(_VstorageObjectVCenterQueryChangedDiskAreas_QNAME, VstorageObjectVCenterQueryChangedDiskAreasRequestType.class, null, paramVstorageObjectVCenterQueryChangedDiskAreasRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FilterInUseFault")
  public JAXBElement<FilterInUse> createFilterInUseFault(FilterInUse paramFilterInUse) {
    return new JAXBElement(_FilterInUseFault_QNAME, FilterInUse.class, null, paramFilterInUse);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAccessNetworkFault")
  public JAXBElement<CannotAccessNetwork> createCannotAccessNetworkFault(CannotAccessNetwork paramCannotAccessNetwork) {
    return new JAXBElement(_CannotAccessNetworkFault_QNAME, CannotAccessNetwork.class, null, paramCannotAccessNetwork);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmfsAlreadyMountedFault")
  public JAXBElement<VmfsAlreadyMounted> createVmfsAlreadyMountedFault(VmfsAlreadyMounted paramVmfsAlreadyMounted) {
    return new JAXBElement(_VmfsAlreadyMountedFault_QNAME, VmfsAlreadyMounted.class, null, paramVmfsAlreadyMounted);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PowerDownHostToStandBy_Task")
  public JAXBElement<PowerDownHostToStandByRequestType> createPowerDownHostToStandByTask(PowerDownHostToStandByRequestType paramPowerDownHostToStandByRequestType) {
    return new JAXBElement(_PowerDownHostToStandByTask_QNAME, PowerDownHostToStandByRequestType.class, null, paramPowerDownHostToStandByRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmAlreadyExistsInDatacenterFault")
  public JAXBElement<VmAlreadyExistsInDatacenter> createVmAlreadyExistsInDatacenterFault(VmAlreadyExistsInDatacenter paramVmAlreadyExistsInDatacenter) {
    return new JAXBElement(_VmAlreadyExistsInDatacenterFault_QNAME, VmAlreadyExistsInDatacenter.class, null, paramVmAlreadyExistsInDatacenter);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientHostCapacityFaultFault")
  public JAXBElement<InsufficientHostCapacityFault> createInsufficientHostCapacityFaultFault(InsufficientHostCapacityFault paramInsufficientHostCapacityFault) {
    return new JAXBElement(_InsufficientHostCapacityFaultFault_QNAME, InsufficientHostCapacityFault.class, null, paramInsufficientHostCapacityFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableRuleset")
  public JAXBElement<EnableRulesetRequestType> createEnableRuleset(EnableRulesetRequestType paramEnableRulesetRequestType) {
    return new JAXBElement(_EnableRuleset_QNAME, EnableRulesetRequestType.class, null, paramEnableRulesetRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MountErrorFault")
  public JAXBElement<MountError> createMountErrorFault(MountError paramMountError) {
    return new JAXBElement(_MountErrorFault_QNAME, MountError.class, null, paramMountError);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckPowerOn_Task")
  public JAXBElement<CheckPowerOnRequestType> createCheckPowerOnTask(CheckPowerOnRequestType paramCheckPowerOnRequestType) {
    return new JAXBElement(_CheckPowerOnTask_QNAME, CheckPowerOnRequestType.class, null, paramCheckPowerOnRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryAvailablePerfMetric")
  public JAXBElement<QueryAvailablePerfMetricRequestType> createQueryAvailablePerfMetric(QueryAvailablePerfMetricRequestType paramQueryAvailablePerfMetricRequestType) {
    return new JAXBElement(_QueryAvailablePerfMetric_QNAME, QueryAvailablePerfMetricRequestType.class, null, paramQueryAvailablePerfMetricRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ActiveVMsBlockingEVCFault")
  public JAXBElement<ActiveVMsBlockingEVC> createActiveVMsBlockingEVCFault(ActiveVMsBlockingEVC paramActiveVMsBlockingEVC) {
    return new JAXBElement(_ActiveVMsBlockingEVCFault_QNAME, ActiveVMsBlockingEVC.class, null, paramActiveVMsBlockingEVC);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenericVmConfigFaultFault")
  public JAXBElement<GenericVmConfigFault> createGenericVmConfigFaultFault(GenericVmConfigFault paramGenericVmConfigFault) {
    return new JAXBElement(_GenericVmConfigFaultFault_QNAME, GenericVmConfigFault.class, null, paramGenericVmConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DuplicateCustomizationSpec")
  public JAXBElement<DuplicateCustomizationSpecRequestType> createDuplicateCustomizationSpec(DuplicateCustomizationSpecRequestType paramDuplicateCustomizationSpecRequestType) {
    return new JAXBElement(_DuplicateCustomizationSpec_QNAME, DuplicateCustomizationSpecRequestType.class, null, paramDuplicateCustomizationSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfAttributeFault")
  public JAXBElement<OvfAttribute> createOvfAttributeFault(OvfAttribute paramOvfAttribute) {
    return new JAXBElement(_OvfAttributeFault_QNAME, OvfAttribute.class, null, paramOvfAttribute);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotMoveToNonHomeNotSupportedFault")
  public JAXBElement<SnapshotMoveToNonHomeNotSupported> createSnapshotMoveToNonHomeNotSupportedFault(SnapshotMoveToNonHomeNotSupported paramSnapshotMoveToNonHomeNotSupported) {
    return new JAXBElement(_SnapshotMoveToNonHomeNotSupportedFault_QNAME, SnapshotMoveToNonHomeNotSupported.class, null, paramSnapshotMoveToNonHomeNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostSpecGetUpdatedHosts")
  public JAXBElement<HostSpecGetUpdatedHostsRequestType> createHostSpecGetUpdatedHosts(HostSpecGetUpdatedHostsRequestType paramHostSpecGetUpdatedHostsRequestType) {
    return new JAXBElement(_HostSpecGetUpdatedHosts_QNAME, HostSpecGetUpdatedHostsRequestType.class, null, paramHostSpecGetUpdatedHostsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientVFlashResourcesFaultFault")
  public JAXBElement<InsufficientVFlashResourcesFault> createInsufficientVFlashResourcesFaultFault(InsufficientVFlashResourcesFault paramInsufficientVFlashResourcesFault) {
    return new JAXBElement(_InsufficientVFlashResourcesFaultFault_QNAME, InsufficientVFlashResourcesFault.class, null, paramInsufficientVFlashResourcesFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QuerySyncingVsanObjects")
  public JAXBElement<QuerySyncingVsanObjectsRequestType> createQuerySyncingVsanObjects(QuerySyncingVsanObjectsRequestType paramQuerySyncingVsanObjectsRequestType) {
    return new JAXBElement(_QuerySyncingVsanObjects_QNAME, QuerySyncingVsanObjectsRequestType.class, null, paramQuerySyncingVsanObjectsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UninstallHostPatch_Task")
  public JAXBElement<UninstallHostPatchRequestType> createUninstallHostPatchTask(UninstallHostPatchRequestType paramUninstallHostPatchRequestType) {
    return new JAXBElement(_UninstallHostPatchTask_QNAME, UninstallHostPatchRequestType.class, null, paramUninstallHostPatchRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "getClusterMode")
  public JAXBElement<GetClusterModeRequestType> createGetClusterMode(GetClusterModeRequestType paramGetClusterModeRequestType) {
    return new JAXBElement(_GetClusterMode_QNAME, GetClusterModeRequestType.class, null, paramGetClusterModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FetchDVPortKeys")
  public JAXBElement<FetchDVPortKeysRequestType> createFetchDVPortKeys(FetchDVPortKeysRequestType paramFetchDVPortKeysRequestType) {
    return new JAXBElement(_FetchDVPortKeys_QNAME, FetchDVPortKeysRequestType.class, null, paramFetchDVPortKeysRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PrepareCrypto")
  public JAXBElement<PrepareCryptoRequestType> createPrepareCrypto(PrepareCryptoRequestType paramPrepareCryptoRequestType) {
    return new JAXBElement(_PrepareCrypto_QNAME, PrepareCryptoRequestType.class, null, paramPrepareCryptoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "JoinDomain_Task")
  public JAXBElement<JoinDomainRequestType> createJoinDomainTask(JoinDomainRequestType paramJoinDomainRequestType) {
    return new JAXBElement(_JoinDomainTask_QNAME, JoinDomainRequestType.class, null, paramJoinDomainRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostDeleteVStorageObject_Task")
  public JAXBElement<HostDeleteVStorageObjectRequestType> createHostDeleteVStorageObjectTask(HostDeleteVStorageObjectRequestType paramHostDeleteVStorageObjectRequestType) {
    return new JAXBElement(_HostDeleteVStorageObjectTask_QNAME, HostDeleteVStorageObjectRequestType.class, null, paramHostDeleteVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SuspendedRelocateNotSupportedFault")
  public JAXBElement<SuspendedRelocateNotSupported> createSuspendedRelocateNotSupportedFault(SuspendedRelocateNotSupported paramSuspendedRelocateNotSupported) {
    return new JAXBElement(_SuspendedRelocateNotSupportedFault_QNAME, SuspendedRelocateNotSupported.class, null, paramSuspendedRelocateNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnmountVmfsVolume")
  public JAXBElement<UnmountVmfsVolumeRequestType> createUnmountVmfsVolume(UnmountVmfsVolumeRequestType paramUnmountVmfsVolumeRequestType) {
    return new JAXBElement(_UnmountVmfsVolume_QNAME, UnmountVmfsVolumeRequestType.class, null, paramUnmountVmfsVolumeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeviceNotSupportedFault")
  public JAXBElement<DeviceNotSupported> createDeviceNotSupportedFault(DeviceNotSupported paramDeviceNotSupported) {
    return new JAXBElement(_DeviceNotSupportedFault_QNAME, DeviceNotSupported.class, null, paramDeviceNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteHostSpecification")
  public JAXBElement<DeleteHostSpecificationRequestType> createDeleteHostSpecification(DeleteHostSpecificationRequestType paramDeleteHostSpecificationRequestType) {
    return new JAXBElement(_DeleteHostSpecification_QNAME, DeleteHostSpecificationRequestType.class, null, paramDeleteHostSpecificationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfInternalErrorFault")
  public JAXBElement<OvfInternalError> createOvfInternalErrorFault(OvfInternalError paramOvfInternalError) {
    return new JAXBElement(_OvfInternalErrorFault_QNAME, OvfInternalError.class, null, paramOvfInternalError);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidIpfixConfigFault")
  public JAXBElement<InvalidIpfixConfig> createInvalidIpfixConfigFault(InvalidIpfixConfig paramInvalidIpfixConfig) {
    return new JAXBElement(_InvalidIpfixConfigFault_QNAME, InvalidIpfixConfig.class, null, paramInvalidIpfixConfig);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultPnicInUseFault")
  public JAXBElement<IscsiFaultPnicInUse> createIscsiFaultPnicInUseFault(IscsiFaultPnicInUse paramIscsiFaultPnicInUse) {
    return new JAXBElement(_IscsiFaultPnicInUseFault_QNAME, IscsiFaultPnicInUse.class, null, paramIscsiFaultPnicInUse);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostRegisterDisk")
  public JAXBElement<HostRegisterDiskRequestType> createHostRegisterDisk(HostRegisterDiskRequestType paramHostRegisterDiskRequestType) {
    return new JAXBElement(_HostRegisterDisk_QNAME, HostRegisterDiskRequestType.class, null, paramHostRegisterDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostConfigureVFlashResource")
  public JAXBElement<HostConfigureVFlashResourceRequestType> createHostConfigureVFlashResource(HostConfigureVFlashResourceRequestType paramHostConfigureVFlashResourceRequestType) {
    return new JAXBElement(_HostConfigureVFlashResource_QNAME, HostConfigureVFlashResourceRequestType.class, null, paramHostConfigureVFlashResourceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateHostImageAcceptanceLevel")
  public JAXBElement<UpdateHostImageAcceptanceLevelRequestType> createUpdateHostImageAcceptanceLevel(UpdateHostImageAcceptanceLevelRequestType paramUpdateHostImageAcceptanceLevelRequestType) {
    return new JAXBElement(_UpdateHostImageAcceptanceLevel_QNAME, UpdateHostImageAcceptanceLevelRequestType.class, null, paramUpdateHostImageAcceptanceLevelRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryServiceList")
  public JAXBElement<QueryServiceListRequestType> createQueryServiceList(QueryServiceListRequestType paramQueryServiceListRequestType) {
    return new JAXBElement(_QueryServiceList_QNAME, QueryServiceListRequestType.class, null, paramQueryServiceListRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableClusteredVmdkSupport")
  public JAXBElement<DisableClusteredVmdkSupportRequestType> createDisableClusteredVmdkSupport(DisableClusteredVmdkSupportRequestType paramDisableClusteredVmdkSupportRequestType) {
    return new JAXBElement(_DisableClusteredVmdkSupport_QNAME, DisableClusteredVmdkSupportRequestType.class, null, paramDisableClusteredVmdkSupportRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "BackupBlobWriteFailureFault")
  public JAXBElement<BackupBlobWriteFailure> createBackupBlobWriteFailureFault(BackupBlobWriteFailure paramBackupBlobWriteFailure) {
    return new JAXBElement(_BackupBlobWriteFailureFault_QNAME, BackupBlobWriteFailure.class, null, paramBackupBlobWriteFailure);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveServiceContent")
  public JAXBElement<RetrieveServiceContentRequestType> createRetrieveServiceContent(RetrieveServiceContentRequestType paramRetrieveServiceContentRequestType) {
    return new JAXBElement(_RetrieveServiceContent_QNAME, RetrieveServiceContentRequestType.class, null, paramRetrieveServiceContentRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnbindVnic")
  public JAXBElement<UnbindVnicRequestType> createUnbindVnic(UnbindVnicRequestType paramUnbindVnicRequestType) {
    return new JAXBElement(_UnbindVnic_QNAME, UnbindVnicRequestType.class, null, paramUnbindVnicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateDatacenter")
  public JAXBElement<CreateDatacenterRequestType> createCreateDatacenter(CreateDatacenterRequestType paramCreateDatacenterRequestType) {
    return new JAXBElement(_CreateDatacenter_QNAME, CreateDatacenterRequestType.class, null, paramCreateDatacenterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveKeys")
  public JAXBElement<RemoveKeysRequestType> createRemoveKeys(RemoveKeysRequestType paramRemoveKeysRequestType) {
    return new JAXBElement(_RemoveKeys_QNAME, RemoveKeysRequestType.class, null, paramRemoveKeysRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateDateTime")
  public JAXBElement<UpdateDateTimeRequestType> createUpdateDateTime(UpdateDateTimeRequestType paramUpdateDateTimeRequestType) {
    return new JAXBElement(_UpdateDateTime_QNAME, UpdateDateTimeRequestType.class, null, paramUpdateDateTimeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SwapDatastoreUnsetFault")
  public JAXBElement<SwapDatastoreUnset> createSwapDatastoreUnsetFault(SwapDatastoreUnset paramSwapDatastoreUnset) {
    return new JAXBElement(_SwapDatastoreUnsetFault_QNAME, SwapDatastoreUnset.class, null, paramSwapDatastoreUnset);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveNetworkResourcePool")
  public JAXBElement<RemoveNetworkResourcePoolRequestType> createRemoveNetworkResourcePool(RemoveNetworkResourcePoolRequestType paramRemoveNetworkResourcePoolRequestType) {
    return new JAXBElement(_RemoveNetworkResourcePool_QNAME, RemoveNetworkResourcePoolRequestType.class, null, paramRemoveNetworkResourcePoolRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestProcessNotFoundFault")
  public JAXBElement<GuestProcessNotFound> createGuestProcessNotFoundFault(GuestProcessNotFound paramGuestProcessNotFound) {
    return new JAXBElement(_GuestProcessNotFoundFault_QNAME, GuestProcessNotFound.class, null, paramGuestProcessNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoClientCertificateFault")
  public JAXBElement<NoClientCertificate> createNoClientCertificateFault(NoClientCertificate paramNoClientCertificate) {
    return new JAXBElement(_NoClientCertificateFault_QNAME, NoClientCertificate.class, null, paramNoClientCertificate);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplicationDiskConfigFaultFault")
  public JAXBElement<ReplicationDiskConfigFault> createReplicationDiskConfigFaultFault(ReplicationDiskConfigFault paramReplicationDiskConfigFault) {
    return new JAXBElement(_ReplicationDiskConfigFaultFault_QNAME, ReplicationDiskConfigFault.class, null, paramReplicationDiskConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LoginExtensionByCertificate")
  public JAXBElement<LoginExtensionByCertificateRequestType> createLoginExtensionByCertificate(LoginExtensionByCertificateRequestType paramLoginExtensionByCertificateRequestType) {
    return new JAXBElement(_LoginExtensionByCertificate_QNAME, LoginExtensionByCertificateRequestType.class, null, paramLoginExtensionByCertificateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DiskIsUSBFault")
  public JAXBElement<DiskIsUSB> createDiskIsUSBFault(DiskIsUSB paramDiskIsUSB) {
    return new JAXBElement(_DiskIsUSBFault_QNAME, DiskIsUSB.class, null, paramDiskIsUSB);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveGuestAliasByCert")
  public JAXBElement<RemoveGuestAliasByCertRequestType> createRemoveGuestAliasByCert(RemoveGuestAliasByCertRequestType paramRemoveGuestAliasByCertRequestType) {
    return new JAXBElement(_RemoveGuestAliasByCert_QNAME, RemoveGuestAliasByCertRequestType.class, null, paramRemoveGuestAliasByCertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryAvailableDvsSpec")
  public JAXBElement<QueryAvailableDvsSpecRequestType> createQueryAvailableDvsSpec(QueryAvailableDvsSpecRequestType paramQueryAvailableDvsSpecRequestType) {
    return new JAXBElement(_QueryAvailableDvsSpec_QNAME, QueryAvailableDvsSpecRequestType.class, null, paramQueryAvailableDvsSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "XmlToCustomizationSpecItem")
  public JAXBElement<XmlToCustomizationSpecItemRequestType> createXmlToCustomizationSpecItem(XmlToCustomizationSpecItemRequestType paramXmlToCustomizationSpecItemRequestType) {
    return new JAXBElement(_XmlToCustomizationSpecItem_QNAME, XmlToCustomizationSpecItemRequestType.class, null, paramXmlToCustomizationSpecItemRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NasConnectionLimitReachedFault")
  public JAXBElement<NasConnectionLimitReached> createNasConnectionLimitReachedFault(NasConnectionLimitReached paramNasConnectionLimitReached) {
    return new JAXBElement(_NasConnectionLimitReachedFault_QNAME, NasConnectionLimitReached.class, null, paramNasConnectionLimitReached);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ToolsUnavailableFault")
  public JAXBElement<ToolsUnavailable> createToolsUnavailableFault(ToolsUnavailable paramToolsUnavailable) {
    return new JAXBElement(_ToolsUnavailableFault_QNAME, ToolsUnavailable.class, null, paramToolsUnavailable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckAddHostEvc_Task")
  public JAXBElement<CheckAddHostEvcRequestType> createCheckAddHostEvcTask(CheckAddHostEvcRequestType paramCheckAddHostEvcRequestType) {
    return new JAXBElement(_CheckAddHostEvcTask_QNAME, CheckAddHostEvcRequestType.class, null, paramCheckAddHostEvcRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnmountVmfsVolumeEx_Task")
  public JAXBElement<UnmountVmfsVolumeExRequestType> createUnmountVmfsVolumeExTask(UnmountVmfsVolumeExRequestType paramUnmountVmfsVolumeExRequestType) {
    return new JAXBElement(_UnmountVmfsVolumeExTask_QNAME, UnmountVmfsVolumeExRequestType.class, null, paramUnmountVmfsVolumeExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDeviceOperationFault")
  public JAXBElement<InvalidDeviceOperation> createInvalidDeviceOperationFault(InvalidDeviceOperation paramInvalidDeviceOperation) {
    return new JAXBElement(_InvalidDeviceOperationFault_QNAME, InvalidDeviceOperation.class, null, paramInvalidDeviceOperation);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SecondaryVmAlreadyDisabledFault")
  public JAXBElement<SecondaryVmAlreadyDisabled> createSecondaryVmAlreadyDisabledFault(SecondaryVmAlreadyDisabled paramSecondaryVmAlreadyDisabled) {
    return new JAXBElement(_SecondaryVmAlreadyDisabledFault_QNAME, SecondaryVmAlreadyDisabled.class, null, paramSecondaryVmAlreadyDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateSnapshotEx_Task")
  public JAXBElement<CreateSnapshotExRequestType> createCreateSnapshotExTask(CreateSnapshotExRequestType paramCreateSnapshotExRequestType) {
    return new JAXBElement(_CreateSnapshotExTask_QNAME, CreateSnapshotExRequestType.class, null, paramCreateSnapshotExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MissingPowerOnConfigurationFault")
  public JAXBElement<MissingPowerOnConfiguration> createMissingPowerOnConfigurationFault(MissingPowerOnConfiguration paramMissingPowerOnConfiguration) {
    return new JAXBElement(_MissingPowerOnConfigurationFault_QNAME, MissingPowerOnConfiguration.class, null, paramMissingPowerOnConfiguration);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryExpressionMetadata")
  public JAXBElement<QueryExpressionMetadataRequestType> createQueryExpressionMetadata(QueryExpressionMetadataRequestType paramQueryExpressionMetadataRequestType) {
    return new JAXBElement(_QueryExpressionMetadata_QNAME, QueryExpressionMetadataRequestType.class, null, paramQueryExpressionMetadataRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DownloadDescriptionTree")
  public JAXBElement<DownloadDescriptionTreeRequestType> createDownloadDescriptionTree(DownloadDescriptionTreeRequestType paramDownloadDescriptionTreeRequestType) {
    return new JAXBElement(_DownloadDescriptionTree_QNAME, DownloadDescriptionTreeRequestType.class, null, paramDownloadDescriptionTreeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StampAllRulesWithUuid_Task")
  public JAXBElement<StampAllRulesWithUuidRequestType> createStampAllRulesWithUuidTask(StampAllRulesWithUuidRequestType paramStampAllRulesWithUuidRequestType) {
    return new JAXBElement(_StampAllRulesWithUuidTask_QNAME, StampAllRulesWithUuidRequestType.class, null, paramStampAllRulesWithUuidRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisconnectNvmeController")
  public JAXBElement<DisconnectNvmeControllerRequestType> createDisconnectNvmeController(DisconnectNvmeControllerRequestType paramDisconnectNvmeControllerRequestType) {
    return new JAXBElement(_DisconnectNvmeController_QNAME, DisconnectNvmeControllerRequestType.class, null, paramDisconnectNvmeControllerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultVnicHasActivePathsFault")
  public JAXBElement<IscsiFaultVnicHasActivePaths> createIscsiFaultVnicHasActivePathsFault(IscsiFaultVnicHasActivePaths paramIscsiFaultVnicHasActivePaths) {
    return new JAXBElement(_IscsiFaultVnicHasActivePathsFault_QNAME, IscsiFaultVnicHasActivePaths.class, null, paramIscsiFaultVnicHasActivePaths);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListVStorageObjectsAttachedToTag")
  public JAXBElement<ListVStorageObjectsAttachedToTagRequestType> createListVStorageObjectsAttachedToTag(ListVStorageObjectsAttachedToTagRequestType paramListVStorageObjectsAttachedToTagRequestType) {
    return new JAXBElement(_ListVStorageObjectsAttachedToTag_QNAME, ListVStorageObjectsAttachedToTagRequestType.class, null, paramListVStorageObjectsAttachedToTagRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureScheduledTask")
  public JAXBElement<ReconfigureScheduledTaskRequestType> createReconfigureScheduledTask(ReconfigureScheduledTaskRequestType paramReconfigureScheduledTaskRequestType) {
    return new JAXBElement(_ReconfigureScheduledTask_QNAME, ReconfigureScheduledTaskRequestType.class, null, paramReconfigureScheduledTaskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CertMgrRefreshCACertificatesAndCRLs_Task")
  public JAXBElement<CertMgrRefreshCACertificatesAndCRLsRequestType> createCertMgrRefreshCACertificatesAndCRLsTask(CertMgrRefreshCACertificatesAndCRLsRequestType paramCertMgrRefreshCACertificatesAndCRLsRequestType) {
    return new JAXBElement(_CertMgrRefreshCACertificatesAndCRLsTask_QNAME, CertMgrRefreshCACertificatesAndCRLsRequestType.class, null, paramCertMgrRefreshCACertificatesAndCRLsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CryptoUnlock_Task")
  public JAXBElement<CryptoUnlockRequestType> createCryptoUnlockTask(CryptoUnlockRequestType paramCryptoUnlockRequestType) {
    return new JAXBElement(_CryptoUnlockTask_QNAME, CryptoUnlockRequestType.class, null, paramCryptoUnlockRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureAutostart")
  public JAXBElement<ReconfigureAutostartRequestType> createReconfigureAutostart(ReconfigureAutostartRequestType paramReconfigureAutostartRequestType) {
    return new JAXBElement(_ReconfigureAutostart_QNAME, ReconfigureAutostartRequestType.class, null, paramReconfigureAutostartRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateLockdownExceptions")
  public JAXBElement<UpdateLockdownExceptionsRequestType> createUpdateLockdownExceptions(UpdateLockdownExceptionsRequestType paramUpdateLockdownExceptionsRequestType) {
    return new JAXBElement(_UpdateLockdownExceptions_QNAME, UpdateLockdownExceptionsRequestType.class, null, paramUpdateLockdownExceptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MoveHostInto_Task")
  public JAXBElement<MoveHostIntoRequestType> createMoveHostIntoTask(MoveHostIntoRequestType paramMoveHostIntoRequestType) {
    return new JAXBElement(_MoveHostIntoTask_QNAME, MoveHostIntoRequestType.class, null, paramMoveHostIntoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidHostStateFault")
  public JAXBElement<InvalidHostState> createInvalidHostStateFault(InvalidHostState paramInvalidHostState) {
    return new JAXBElement(_InvalidHostStateFault_QNAME, InvalidHostState.class, null, paramInvalidHostState);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckProfileCompliance_Task")
  public JAXBElement<CheckProfileComplianceRequestType> createCheckProfileComplianceTask(CheckProfileComplianceRequestType paramCheckProfileComplianceRequestType) {
    return new JAXBElement(_CheckProfileComplianceTask_QNAME, CheckProfileComplianceRequestType.class, null, paramCheckProfileComplianceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ClearComplianceStatus")
  public JAXBElement<ClearComplianceStatusRequestType> createClearComplianceStatus(ClearComplianceStatusRequestType paramClearComplianceStatusRequestType) {
    return new JAXBElement(_ClearComplianceStatus_QNAME, ClearComplianceStatusRequestType.class, null, paramClearComplianceStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NetworksMayNotBeTheSameFault")
  public JAXBElement<NetworksMayNotBeTheSame> createNetworksMayNotBeTheSameFault(NetworksMayNotBeTheSame paramNetworksMayNotBeTheSame) {
    return new JAXBElement(_NetworksMayNotBeTheSameFault_QNAME, NetworksMayNotBeTheSame.class, null, paramNetworksMayNotBeTheSame);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigureVFlashResourceEx_Task")
  public JAXBElement<ConfigureVFlashResourceExRequestType> createConfigureVFlashResourceExTask(ConfigureVFlashResourceExRequestType paramConfigureVFlashResourceExRequestType) {
    return new JAXBElement(_ConfigureVFlashResourceExTask_QNAME, ConfigureVFlashResourceExRequestType.class, null, paramConfigureVFlashResourceExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckRelocate_Task")
  public JAXBElement<CheckRelocateRequestType> createCheckRelocateTask(CheckRelocateRequestType paramCheckRelocateRequestType) {
    return new JAXBElement(_CheckRelocateTask_QNAME, CheckRelocateRequestType.class, null, paramCheckRelocateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FaultToleranceNotLicensedFault")
  public JAXBElement<FaultToleranceNotLicensed> createFaultToleranceNotLicensedFault(FaultToleranceNotLicensed paramFaultToleranceNotLicensed) {
    return new JAXBElement(_FaultToleranceNotLicensedFault_QNAME, FaultToleranceNotLicensed.class, null, paramFaultToleranceNotLicensed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconnectHost_Task")
  public JAXBElement<ReconnectHostRequestType> createReconnectHostTask(ReconnectHostRequestType paramReconnectHostRequestType) {
    return new JAXBElement(_ReconnectHostTask_QNAME, ReconnectHostRequestType.class, null, paramReconnectHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "setClusterMode_Task")
  public JAXBElement<SetClusterModeRequestType> createSetClusterModeTask(SetClusterModeRequestType paramSetClusterModeRequestType) {
    return new JAXBElement(_SetClusterModeTask_QNAME, SetClusterModeRequestType.class, null, paramSetClusterModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAccessVmConfigFault")
  public JAXBElement<CannotAccessVmConfig> createCannotAccessVmConfigFault(CannotAccessVmConfig paramCannotAccessVmConfig) {
    return new JAXBElement(_CannotAccessVmConfigFault_QNAME, CannotAccessVmConfig.class, null, paramCannotAccessVmConfig);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListFilesInGuest")
  public JAXBElement<ListFilesInGuestRequestType> createListFilesInGuest(ListFilesInGuestRequestType paramListFilesInGuestRequestType) {
    return new JAXBElement(_ListFilesInGuest_QNAME, ListFilesInGuestRequestType.class, null, paramListFilesInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "fetchSoftwarePackages")
  public JAXBElement<FetchSoftwarePackagesRequestType> createFetchSoftwarePackages(FetchSoftwarePackagesRequestType paramFetchSoftwarePackagesRequestType) {
    return new JAXBElement(_FetchSoftwarePackages_QNAME, FetchSoftwarePackagesRequestType.class, null, paramFetchSoftwarePackagesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostNotReachableFault")
  public JAXBElement<HostNotReachable> createHostNotReachableFault(HostNotReachable paramHostNotReachable) {
    return new JAXBElement(_HostNotReachableFault_QNAME, HostNotReachable.class, null, paramHostNotReachable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultVnicAlreadyBoundFault")
  public JAXBElement<IscsiFaultVnicAlreadyBound> createIscsiFaultVnicAlreadyBoundFault(IscsiFaultVnicAlreadyBound paramIscsiFaultVnicAlreadyBound) {
    return new JAXBElement(_IscsiFaultVnicAlreadyBoundFault_QNAME, IscsiFaultVnicAlreadyBound.class, null, paramIscsiFaultVnicAlreadyBound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVirtualSwitch")
  public JAXBElement<UpdateVirtualSwitchRequestType> createUpdateVirtualSwitch(UpdateVirtualSwitchRequestType paramUpdateVirtualSwitchRequestType) {
    return new JAXBElement(_UpdateVirtualSwitch_QNAME, UpdateVirtualSwitchRequestType.class, null, paramUpdateVirtualSwitchRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GetDefaultKmsCluster")
  public JAXBElement<GetDefaultKmsClusterRequestType> createGetDefaultKmsCluster(GetDefaultKmsClusterRequestType paramGetDefaultKmsClusterRequestType) {
    return new JAXBElement(_GetDefaultKmsCluster_QNAME, GetDefaultKmsClusterRequestType.class, null, paramGetDefaultKmsClusterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LookupDvPortGroup")
  public JAXBElement<LookupDvPortGroupRequestType> createLookupDvPortGroup(LookupDvPortGroupRequestType paramLookupDvPortGroupRequestType) {
    return new JAXBElement(_LookupDvPortGroup_QNAME, LookupDvPortGroupRequestType.class, null, paramLookupDvPortGroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MountVmfsVolumeEx_Task")
  public JAXBElement<MountVmfsVolumeExRequestType> createMountVmfsVolumeExTask(MountVmfsVolumeExRequestType paramMountVmfsVolumeExRequestType) {
    return new JAXBElement(_MountVmfsVolumeExTask_QNAME, MountVmfsVolumeExRequestType.class, null, paramMountVmfsVolumeExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidResourcePoolStructureFaultFault")
  public JAXBElement<InvalidResourcePoolStructureFault> createInvalidResourcePoolStructureFaultFault(InvalidResourcePoolStructureFault paramInvalidResourcePoolStructureFault) {
    return new JAXBElement(_InvalidResourcePoolStructureFaultFault_QNAME, InvalidResourcePoolStructureFault.class, null, paramInvalidResourcePoolStructureFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "WaitForUpdates")
  public JAXBElement<WaitForUpdatesRequestType> createWaitForUpdates(WaitForUpdatesRequestType paramWaitForUpdatesRequestType) {
    return new JAXBElement(_WaitForUpdates_QNAME, WaitForUpdatesRequestType.class, null, paramWaitForUpdatesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientStandbyCpuResourceFault")
  public JAXBElement<InsufficientStandbyCpuResource> createInsufficientStandbyCpuResourceFault(InsufficientStandbyCpuResource paramInsufficientStandbyCpuResource) {
    return new JAXBElement(_InsufficientStandbyCpuResourceFault_QNAME, InsufficientStandbyCpuResource.class, null, paramInsufficientStandbyCpuResource);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AcquireGenericServiceTicket")
  public JAXBElement<AcquireGenericServiceTicketRequestType> createAcquireGenericServiceTicket(AcquireGenericServiceTicketRequestType paramAcquireGenericServiceTicketRequestType) {
    return new JAXBElement(_AcquireGenericServiceTicket_QNAME, AcquireGenericServiceTicketRequestType.class, null, paramAcquireGenericServiceTicketRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InUseFeatureManipulationDisallowedFault")
  public JAXBElement<InUseFeatureManipulationDisallowed> createInUseFeatureManipulationDisallowedFault(InUseFeatureManipulationDisallowed paramInUseFeatureManipulationDisallowed) {
    return new JAXBElement(_InUseFeatureManipulationDisallowedFault_QNAME, InUseFeatureManipulationDisallowed.class, null, paramInUseFeatureManipulationDisallowed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetPublicKey")
  public JAXBElement<SetPublicKeyRequestType> createSetPublicKey(SetPublicKeyRequestType paramSetPublicKeyRequestType) {
    return new JAXBElement(_SetPublicKey_QNAME, SetPublicKeyRequestType.class, null, paramSetPublicKeyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidAffinitySettingFaultFault")
  public JAXBElement<InvalidAffinitySettingFault> createInvalidAffinitySettingFaultFault(InvalidAffinitySettingFault paramInvalidAffinitySettingFault) {
    return new JAXBElement(_InvalidAffinitySettingFaultFault_QNAME, InvalidAffinitySettingFault.class, null, paramInvalidAffinitySettingFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "WillLoseHAProtectionFault")
  public JAXBElement<WillLoseHAProtection> createWillLoseHAProtectionFault(WillLoseHAProtection paramWillLoseHAProtection) {
    return new JAXBElement(_WillLoseHAProtectionFault_QNAME, WillLoseHAProtection.class, null, paramWillLoseHAProtection);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVmfsUnmapBandwidth")
  public JAXBElement<UpdateVmfsUnmapBandwidthRequestType> createUpdateVmfsUnmapBandwidth(UpdateVmfsUnmapBandwidthRequestType paramUpdateVmfsUnmapBandwidthRequestType) {
    return new JAXBElement(_UpdateVmfsUnmapBandwidth_QNAME, UpdateVmfsUnmapBandwidthRequestType.class, null, paramUpdateVmfsUnmapBandwidthRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedDeviceExportFault")
  public JAXBElement<OvfUnsupportedDeviceExport> createOvfUnsupportedDeviceExportFault(OvfUnsupportedDeviceExport paramOvfUnsupportedDeviceExport) {
    return new JAXBElement(_OvfUnsupportedDeviceExportFault_QNAME, OvfUnsupportedDeviceExport.class, null, paramOvfUnsupportedDeviceExport);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddDisks_Task")
  public JAXBElement<AddDisksRequestType> createAddDisksTask(AddDisksRequestType paramAddDisksRequestType) {
    return new JAXBElement(_AddDisksTask_QNAME, AddDisksRequestType.class, null, paramAddDisksRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RDMNotSupportedOnDatastoreFault")
  public JAXBElement<RDMNotSupportedOnDatastore> createRDMNotSupportedOnDatastoreFault(RDMNotSupportedOnDatastore paramRDMNotSupportedOnDatastore) {
    return new JAXBElement(_RDMNotSupportedOnDatastoreFault_QNAME, RDMNotSupportedOnDatastore.class, null, paramRDMNotSupportedOnDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetCryptoMode")
  public JAXBElement<SetCryptoModeRequestType> createSetCryptoMode(SetCryptoModeRequestType paramSetCryptoModeRequestType) {
    return new JAXBElement(_SetCryptoMode_QNAME, SetCryptoModeRequestType.class, null, paramSetCryptoModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ClusterEnterMaintenanceMode")
  public JAXBElement<ClusterEnterMaintenanceModeRequestType> createClusterEnterMaintenanceMode(ClusterEnterMaintenanceModeRequestType paramClusterEnterMaintenanceModeRequestType) {
    return new JAXBElement(_ClusterEnterMaintenanceMode_QNAME, ClusterEnterMaintenanceModeRequestType.class, null, paramClusterEnterMaintenanceModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveUser")
  public JAXBElement<RemoveUserRequestType> createRemoveUser(RemoveUserRequestType paramRemoveUserRequestType) {
    return new JAXBElement(_RemoveUser_QNAME, RemoveUserRequestType.class, null, paramRemoveUserRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CancelTask")
  public JAXBElement<CancelTaskRequestType> createCancelTask(CancelTaskRequestType paramCancelTaskRequestType) {
    return new JAXBElement(_CancelTask_QNAME, CancelTaskRequestType.class, null, paramCancelTaskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableSecondaryVM_Task")
  public JAXBElement<EnableSecondaryVMRequestType> createEnableSecondaryVMTask(EnableSecondaryVMRequestType paramEnableSecondaryVMRequestType) {
    return new JAXBElement(_EnableSecondaryVMTask_QNAME, EnableSecondaryVMRequestType.class, null, paramEnableSecondaryVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientCpuResourcesFaultFault")
  public JAXBElement<InsufficientCpuResourcesFault> createInsufficientCpuResourcesFaultFault(InsufficientCpuResourcesFault paramInsufficientCpuResourcesFault) {
    return new JAXBElement(_InsufficientCpuResourcesFaultFault_QNAME, InsufficientCpuResourcesFault.class, null, paramInsufficientCpuResourcesFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisallowedChangeByServiceFault")
  public JAXBElement<DisallowedChangeByService> createDisallowedChangeByServiceFault(DisallowedChangeByService paramDisallowedChangeByService) {
    return new JAXBElement(_DisallowedChangeByServiceFault_QNAME, DisallowedChangeByService.class, null, paramDisallowedChangeByService);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MigrationFaultFault")
  public JAXBElement<MigrationFault> createMigrationFaultFault(MigrationFault paramMigrationFault) {
    return new JAXBElement(_MigrationFaultFault_QNAME, MigrationFault.class, null, paramMigrationFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckInstantClone_Task")
  public JAXBElement<CheckInstantCloneRequestType> createCheckInstantCloneTask(CheckInstantCloneRequestType paramCheckInstantCloneRequestType) {
    return new JAXBElement(_CheckInstantCloneTask_QNAME, CheckInstantCloneRequestType.class, null, paramCheckInstantCloneRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MissingPowerOffConfigurationFault")
  public JAXBElement<MissingPowerOffConfiguration> createMissingPowerOffConfigurationFault(MissingPowerOffConfiguration paramMissingPowerOffConfiguration) {
    return new JAXBElement(_MissingPowerOffConfigurationFault_QNAME, MissingPowerOffConfiguration.class, null, paramMissingPowerOffConfiguration);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryAssignedLicenses")
  public JAXBElement<QueryAssignedLicensesRequestType> createQueryAssignedLicenses(QueryAssignedLicensesRequestType paramQueryAssignedLicensesRequestType) {
    return new JAXBElement(_QueryAssignedLicenses_QNAME, QueryAssignedLicensesRequestType.class, null, paramQueryAssignedLicensesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NamespaceFullFault")
  public JAXBElement<NamespaceFull> createNamespaceFullFault(NamespaceFull paramNamespaceFull) {
    return new JAXBElement(_NamespaceFullFault_QNAME, NamespaceFull.class, null, paramNamespaceFull);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateDirectory")
  public JAXBElement<CreateDirectoryRequestType> createCreateDirectory(CreateDirectoryRequestType paramCreateDirectoryRequestType) {
    return new JAXBElement(_CreateDirectory_QNAME, CreateDirectoryRequestType.class, null, paramCreateDirectoryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestOperationsUnavailableFault")
  public JAXBElement<GuestOperationsUnavailable> createGuestOperationsUnavailableFault(GuestOperationsUnavailable paramGuestOperationsUnavailable) {
    return new JAXBElement(_GuestOperationsUnavailableFault_QNAME, GuestOperationsUnavailable.class, null, paramGuestOperationsUnavailable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DvsNotAuthorizedFault")
  public JAXBElement<DvsNotAuthorized> createDvsNotAuthorizedFault(DvsNotAuthorized paramDvsNotAuthorized) {
    return new JAXBElement(_DvsNotAuthorizedFault_QNAME, DvsNotAuthorized.class, null, paramDvsNotAuthorized);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CpuIncompatible1ECXFault")
  public JAXBElement<CpuIncompatible1ECX> createCpuIncompatible1ECXFault(CpuIncompatible1ECX paramCpuIncompatible1ECX) {
    return new JAXBElement(_CpuIncompatible1ECXFault_QNAME, CpuIncompatible1ECX.class, null, paramCpuIncompatible1ECX);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RegisterVM_Task")
  public JAXBElement<RegisterVMRequestType> createRegisterVMTask(RegisterVMRequestType paramRegisterVMRequestType) {
    return new JAXBElement(_RegisterVMTask_QNAME, RegisterVMRequestType.class, null, paramRegisterVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "Refresh")
  public JAXBElement<RefreshRequestType> createRefresh(RefreshRequestType paramRefreshRequestType) {
    return new JAXBElement(_Refresh_QNAME, RefreshRequestType.class, null, paramRefreshRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedHostInClusterFault")
  public JAXBElement<NotSupportedHostInCluster> createNotSupportedHostInClusterFault(NotSupportedHostInCluster paramNotSupportedHostInCluster) {
    return new JAXBElement(_NotSupportedHostInClusterFault_QNAME, NotSupportedHostInCluster.class, null, paramNotSupportedHostInCluster);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostAccessRestrictedToManagementServerFault")
  public JAXBElement<HostAccessRestrictedToManagementServer> createHostAccessRestrictedToManagementServerFault(HostAccessRestrictedToManagementServer paramHostAccessRestrictedToManagementServer) {
    return new JAXBElement(_HostAccessRestrictedToManagementServerFault_QNAME, HostAccessRestrictedToManagementServer.class, null, paramHostAccessRestrictedToManagementServer);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateDiagnosticPartition")
  public JAXBElement<CreateDiagnosticPartitionRequestType> createCreateDiagnosticPartition(CreateDiagnosticPartitionRequestType paramCreateDiagnosticPartitionRequestType) {
    return new JAXBElement(_CreateDiagnosticPartition_QNAME, CreateDiagnosticPartitionRequestType.class, null, paramCreateDiagnosticPartitionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SystemErrorFault")
  public JAXBElement<SystemError> createSystemErrorFault(SystemError paramSystemError) {
    return new JAXBElement(_SystemErrorFault_QNAME, SystemError.class, null, paramSystemError);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostRetrieveVStorageInfrastructureObjectPolicy")
  public JAXBElement<HostRetrieveVStorageInfrastructureObjectPolicyRequestType> createHostRetrieveVStorageInfrastructureObjectPolicy(HostRetrieveVStorageInfrastructureObjectPolicyRequestType paramHostRetrieveVStorageInfrastructureObjectPolicyRequestType) {
    return new JAXBElement(_HostRetrieveVStorageInfrastructureObjectPolicy_QNAME, HostRetrieveVStorageInfrastructureObjectPolicyRequestType.class, null, paramHostRetrieveVStorageInfrastructureObjectPolicyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryBoundVnics")
  public JAXBElement<QueryBoundVnicsRequestType> createQueryBoundVnics(QueryBoundVnicsRequestType paramQueryBoundVnicsRequestType) {
    return new JAXBElement(_QueryBoundVnics_QNAME, QueryBoundVnicsRequestType.class, null, paramQueryBoundVnicsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AttachDisk_Task")
  public JAXBElement<AttachDiskRequestType> createAttachDiskTask(AttachDiskRequestType paramAttachDiskRequestType) {
    return new JAXBElement(_AttachDiskTask_QNAME, AttachDiskRequestType.class, null, paramAttachDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindAssociatedProfile")
  public JAXBElement<FindAssociatedProfileRequestType> createFindAssociatedProfile(FindAssociatedProfileRequestType paramFindAssociatedProfileRequestType) {
    return new JAXBElement(_FindAssociatedProfile_QNAME, FindAssociatedProfileRequestType.class, null, paramFindAssociatedProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchMetadataCorruptedFault")
  public JAXBElement<PatchMetadataCorrupted> createPatchMetadataCorruptedFault(PatchMetadataCorrupted paramPatchMetadataCorrupted) {
    return new JAXBElement(_PatchMetadataCorruptedFault_QNAME, PatchMetadataCorrupted.class, null, paramPatchMetadataCorrupted);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SecondaryVmAlreadyRegisteredFault")
  public JAXBElement<SecondaryVmAlreadyRegistered> createSecondaryVmAlreadyRegisteredFault(SecondaryVmAlreadyRegistered paramSecondaryVmAlreadyRegistered) {
    return new JAXBElement(_SecondaryVmAlreadyRegisteredFault_QNAME, SecondaryVmAlreadyRegistered.class, null, paramSecondaryVmAlreadyRegistered);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InitiateFileTransferFromGuest")
  public JAXBElement<InitiateFileTransferFromGuestRequestType> createInitiateFileTransferFromGuest(InitiateFileTransferFromGuestRequestType paramInitiateFileTransferFromGuestRequestType) {
    return new JAXBElement(_InitiateFileTransferFromGuest_QNAME, InitiateFileTransferFromGuestRequestType.class, null, paramInitiateFileTransferFromGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VsanIncompatibleDiskMappingFault")
  public JAXBElement<VsanIncompatibleDiskMapping> createVsanIncompatibleDiskMappingFault(VsanIncompatibleDiskMapping paramVsanIncompatibleDiskMapping) {
    return new JAXBElement(_VsanIncompatibleDiskMappingFault_QNAME, VsanIncompatibleDiskMapping.class, null, paramVsanIncompatibleDiskMapping);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AbandonHciWorkflow")
  public JAXBElement<AbandonHciWorkflowRequestType> createAbandonHciWorkflow(AbandonHciWorkflowRequestType paramAbandonHciWorkflowRequestType) {
    return new JAXBElement(_AbandonHciWorkflow_QNAME, AbandonHciWorkflowRequestType.class, null, paramAbandonHciWorkflowRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateIpPool")
  public JAXBElement<CreateIpPoolRequestType> createCreateIpPool(CreateIpPoolRequestType paramCreateIpPoolRequestType) {
    return new JAXBElement(_CreateIpPool_QNAME, CreateIpPoolRequestType.class, null, paramCreateIpPoolRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidVmStateFault")
  public JAXBElement<InvalidVmState> createInvalidVmStateFault(InvalidVmState paramInvalidVmState) {
    return new JAXBElement(_InvalidVmStateFault_QNAME, InvalidVmState.class, null, paramInvalidVmState);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FileAlreadyExistsFault")
  public JAXBElement<FileAlreadyExists> createFileAlreadyExistsFault(FileAlreadyExists paramFileAlreadyExists) {
    return new JAXBElement(_FileAlreadyExistsFault_QNAME, FileAlreadyExists.class, null, paramFileAlreadyExists);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableHyperThreading")
  public JAXBElement<EnableHyperThreadingRequestType> createEnableHyperThreading(EnableHyperThreadingRequestType paramEnableHyperThreadingRequestType) {
    return new JAXBElement(_EnableHyperThreading_QNAME, EnableHyperThreadingRequestType.class, null, paramEnableHyperThreadingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AttachScsiLun")
  public JAXBElement<AttachScsiLunRequestType> createAttachScsiLun(AttachScsiLunRequestType paramAttachScsiLunRequestType) {
    return new JAXBElement(_AttachScsiLun_QNAME, AttachScsiLunRequestType.class, null, paramAttachScsiLunRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostConfigFaultFault")
  public JAXBElement<HostConfigFault> createHostConfigFaultFault(HostConfigFault paramHostConfigFault) {
    return new JAXBElement(_HostConfigFaultFault_QNAME, HostConfigFault.class, null, paramHostConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AreAlarmActionsEnabled")
  public JAXBElement<AreAlarmActionsEnabledRequestType> createAreAlarmActionsEnabled(AreAlarmActionsEnabledRequestType paramAreAlarmActionsEnabledRequestType) {
    return new JAXBElement(_AreAlarmActionsEnabled_QNAME, AreAlarmActionsEnabledRequestType.class, null, paramAreAlarmActionsEnabledRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveAnswerFile")
  public JAXBElement<RetrieveAnswerFileRequestType> createRetrieveAnswerFile(RetrieveAnswerFileRequestType paramRetrieveAnswerFileRequestType) {
    return new JAXBElement(_RetrieveAnswerFile_QNAME, RetrieveAnswerFileRequestType.class, null, paramRetrieveAnswerFileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DatastoreExitMaintenanceMode_Task")
  public JAXBElement<DatastoreExitMaintenanceModeRequestType> createDatastoreExitMaintenanceModeTask(DatastoreExitMaintenanceModeRequestType paramDatastoreExitMaintenanceModeRequestType) {
    return new JAXBElement(_DatastoreExitMaintenanceModeTask_QNAME, DatastoreExitMaintenanceModeRequestType.class, null, paramDatastoreExitMaintenanceModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PostEvent")
  public JAXBElement<PostEventRequestType> createPostEvent(PostEventRequestType paramPostEventRequestType) {
    return new JAXBElement(_PostEvent_QNAME, PostEventRequestType.class, null, paramPostEventRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConsumerUndeclaredSectionFault")
  public JAXBElement<OvfConsumerUndeclaredSection> createOvfConsumerUndeclaredSectionFault(OvfConsumerUndeclaredSection paramOvfConsumerUndeclaredSection) {
    return new JAXBElement(_OvfConsumerUndeclaredSectionFault_QNAME, OvfConsumerUndeclaredSection.class, null, paramOvfConsumerUndeclaredSection);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "WaitForUpdatesEx")
  public JAXBElement<WaitForUpdatesExRequestType> createWaitForUpdatesEx(WaitForUpdatesExRequestType paramWaitForUpdatesExRequestType) {
    return new JAXBElement(_WaitForUpdatesEx_QNAME, WaitForUpdatesExRequestType.class, null, paramWaitForUpdatesExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateKmsSignedCsrClientCert")
  public JAXBElement<UpdateKmsSignedCsrClientCertRequestType> createUpdateKmsSignedCsrClientCert(UpdateKmsSignedCsrClientCertRequestType paramUpdateKmsSignedCsrClientCertRequestType) {
    return new JAXBElement(_UpdateKmsSignedCsrClientCert_QNAME, UpdateKmsSignedCsrClientCertRequestType.class, null, paramUpdateKmsSignedCsrClientCertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostListVStorageObject")
  public JAXBElement<HostListVStorageObjectRequestType> createHostListVStorageObject(HostListVStorageObjectRequestType paramHostListVStorageObjectRequestType) {
    return new JAXBElement(_HostListVStorageObject_QNAME, HostListVStorageObjectRequestType.class, null, paramHostListVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveManuallyPlacedVmFault")
  public JAXBElement<StorageDrsCannotMoveManuallyPlacedVm> createStorageDrsCannotMoveManuallyPlacedVmFault(StorageDrsCannotMoveManuallyPlacedVm paramStorageDrsCannotMoveManuallyPlacedVm) {
    return new JAXBElement(_StorageDrsCannotMoveManuallyPlacedVmFault_QNAME, StorageDrsCannotMoveManuallyPlacedVm.class, null, paramStorageDrsCannotMoveManuallyPlacedVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVMotionCompatibility")
  public JAXBElement<QueryVMotionCompatibilityRequestType> createQueryVMotionCompatibility(QueryVMotionCompatibilityRequestType paramQueryVMotionCompatibilityRequestType) {
    return new JAXBElement(_QueryVMotionCompatibility_QNAME, QueryVMotionCompatibilityRequestType.class, null, paramQueryVMotionCompatibilityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EstimateStorageForConsolidateSnapshots_Task")
  public JAXBElement<EstimateStorageForConsolidateSnapshotsRequestType> createEstimateStorageForConsolidateSnapshotsTask(EstimateStorageForConsolidateSnapshotsRequestType paramEstimateStorageForConsolidateSnapshotsRequestType) {
    return new JAXBElement(_EstimateStorageForConsolidateSnapshotsTask_QNAME, EstimateStorageForConsolidateSnapshotsRequestType.class, null, paramEstimateStorageForConsolidateSnapshotsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnregisterExtension")
  public JAXBElement<UnregisterExtensionRequestType> createUnregisterExtension(UnregisterExtensionRequestType paramUnregisterExtensionRequestType) {
    return new JAXBElement(_UnregisterExtension_QNAME, UnregisterExtensionRequestType.class, null, paramUnregisterExtensionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableSecondaryVM_Task")
  public JAXBElement<DisableSecondaryVMRequestType> createDisableSecondaryVMTask(DisableSecondaryVMRequestType paramDisableSecondaryVMRequestType) {
    return new JAXBElement(_DisableSecondaryVMTask_QNAME, DisableSecondaryVMRequestType.class, null, paramDisableSecondaryVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RDMPointsToInaccessibleDiskFault")
  public JAXBElement<RDMPointsToInaccessibleDisk> createRDMPointsToInaccessibleDiskFault(RDMPointsToInaccessibleDisk paramRDMPointsToInaccessibleDisk) {
    return new JAXBElement(_RDMPointsToInaccessibleDiskFault_QNAME, RDMPointsToInaccessibleDisk.class, null, paramRDMPointsToInaccessibleDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotNoChangeFault")
  public JAXBElement<SnapshotNoChange> createSnapshotNoChangeFault(SnapshotNoChange paramSnapshotNoChange) {
    return new JAXBElement(_SnapshotNoChangeFault_QNAME, SnapshotNoChange.class, null, paramSnapshotNoChange);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RelocateVM_Task")
  public JAXBElement<RelocateVMRequestType> createRelocateVMTask(RelocateVMRequestType paramRelocateVMRequestType) {
    return new JAXBElement(_RelocateVMTask_QNAME, RelocateVMRequestType.class, null, paramRelocateVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfInvalidValueReferenceFault")
  public JAXBElement<OvfInvalidValueReference> createOvfInvalidValueReferenceFault(OvfInvalidValueReference paramOvfInvalidValueReference) {
    return new JAXBElement(_OvfInvalidValueReferenceFault_QNAME, OvfInvalidValueReference.class, null, paramOvfInvalidValueReference);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DefragmentVirtualDisk_Task")
  public JAXBElement<DefragmentVirtualDiskRequestType> createDefragmentVirtualDiskTask(DefragmentVirtualDiskRequestType paramDefragmentVirtualDiskRequestType) {
    return new JAXBElement(_DefragmentVirtualDiskTask_QNAME, DefragmentVirtualDiskRequestType.class, null, paramDefragmentVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LargeRDMNotSupportedOnDatastoreFault")
  public JAXBElement<LargeRDMNotSupportedOnDatastore> createLargeRDMNotSupportedOnDatastoreFault(LargeRDMNotSupportedOnDatastore paramLargeRDMNotSupportedOnDatastore) {
    return new JAXBElement(_LargeRDMNotSupportedOnDatastoreFault_QNAME, LargeRDMNotSupportedOnDatastore.class, null, paramLargeRDMNotSupportedOnDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EstimateDatabaseSize")
  public JAXBElement<EstimateDatabaseSizeRequestType> createEstimateDatabaseSize(EstimateDatabaseSizeRequestType paramEstimateDatabaseSizeRequestType) {
    return new JAXBElement(_EstimateDatabaseSize_QNAME, EstimateDatabaseSizeRequestType.class, null, paramEstimateDatabaseSizeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListRegistryKeysInGuest")
  public JAXBElement<ListRegistryKeysInGuestRequestType> createListRegistryKeysInGuest(ListRegistryKeysInGuestRequestType paramListRegistryKeysInGuestRequestType) {
    return new JAXBElement(_ListRegistryKeysInGuest_QNAME, ListRegistryKeysInGuestRequestType.class, null, paramListRegistryKeysInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenerateSelfSignedClientCert")
  public JAXBElement<GenerateSelfSignedClientCertRequestType> createGenerateSelfSignedClientCert(GenerateSelfSignedClientCertRequestType paramGenerateSelfSignedClientCertRequestType) {
    return new JAXBElement(_GenerateSelfSignedClientCert_QNAME, GenerateSelfSignedClientCertRequestType.class, null, paramGenerateSelfSignedClientCertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryModules")
  public JAXBElement<QueryModulesRequestType> createQueryModules(QueryModulesRequestType paramQueryModulesRequestType) {
    return new JAXBElement(_QueryModules_QNAME, QueryModulesRequestType.class, null, paramQueryModulesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveDynamicPassthroughInfo")
  public JAXBElement<RetrieveDynamicPassthroughInfoRequestType> createRetrieveDynamicPassthroughInfo(RetrieveDynamicPassthroughInfoRequestType paramRetrieveDynamicPassthroughInfoRequestType) {
    return new JAXBElement(_RetrieveDynamicPassthroughInfo_QNAME, RetrieveDynamicPassthroughInfoRequestType.class, null, paramRetrieveDynamicPassthroughInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshStorageDrsRecommendationsForPod_Task")
  public JAXBElement<RefreshStorageDrsRecommendationsForPodRequestType> createRefreshStorageDrsRecommendationsForPodTask(RefreshStorageDrsRecommendationsForPodRequestType paramRefreshStorageDrsRecommendationsForPodRequestType) {
    return new JAXBElement(_RefreshStorageDrsRecommendationsForPodTask_QNAME, RefreshStorageDrsRecommendationsForPodRequestType.class, null, paramRefreshStorageDrsRecommendationsForPodRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateVM_Task")
  public JAXBElement<CreateVMRequestType> createCreateVMTask(CreateVMRequestType paramCreateVMRequestType) {
    return new JAXBElement(_CreateVMTask_QNAME, CreateVMRequestType.class, null, paramCreateVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EvcManager")
  public JAXBElement<EvcManagerRequestType> createEvcManager(EvcManagerRequestType paramEvcManagerRequestType) {
    return new JAXBElement(_EvcManager_QNAME, EvcManagerRequestType.class, null, paramEvcManagerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDatastoreFault")
  public JAXBElement<InvalidDatastore> createInvalidDatastoreFault(InvalidDatastore paramInvalidDatastore) {
    return new JAXBElement(_InvalidDatastoreFault_QNAME, InvalidDatastore.class, null, paramInvalidDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigureDatastoreIORM_Task")
  public JAXBElement<ConfigureDatastoreIORMRequestType> createConfigureDatastoreIORMTask(ConfigureDatastoreIORMRequestType paramConfigureDatastoreIORMRequestType) {
    return new JAXBElement(_ConfigureDatastoreIORMTask_QNAME, ConfigureDatastoreIORMRequestType.class, null, paramConfigureDatastoreIORMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PerformVsanUpgrade_Task")
  public JAXBElement<PerformVsanUpgradeRequestType> createPerformVsanUpgradeTask(PerformVsanUpgradeRequestType paramPerformVsanUpgradeRequestType) {
    return new JAXBElement(_PerformVsanUpgradeTask_QNAME, PerformVsanUpgradeRequestType.class, null, paramPerformVsanUpgradeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateDateTimeConfig")
  public JAXBElement<UpdateDateTimeConfigRequestType> createUpdateDateTimeConfig(UpdateDateTimeConfigRequestType paramUpdateDateTimeConfigRequestType) {
    return new JAXBElement(_UpdateDateTimeConfig_QNAME, UpdateDateTimeConfigRequestType.class, null, paramUpdateDateTimeConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddAuthorizationRole")
  public JAXBElement<AddAuthorizationRoleRequestType> createAddAuthorizationRole(AddAuthorizationRoleRequestType paramAddAuthorizationRoleRequestType) {
    return new JAXBElement(_AddAuthorizationRole_QNAME, AddAuthorizationRoleRequestType.class, null, paramAddAuthorizationRoleRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryConfigTarget")
  public JAXBElement<QueryConfigTargetRequestType> createQueryConfigTarget(QueryConfigTargetRequestType paramQueryConfigTargetRequestType) {
    return new JAXBElement(_QueryConfigTarget_QNAME, QueryConfigTargetRequestType.class, null, paramQueryConfigTargetRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidSnapshotFormatFault")
  public JAXBElement<InvalidSnapshotFormat> createInvalidSnapshotFormatFault(InvalidSnapshotFormat paramInvalidSnapshotFormat) {
    return new JAXBElement(_InvalidSnapshotFormatFault_QNAME, InvalidSnapshotFormat.class, null, paramInvalidSnapshotFormat);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ValidateHostProfileComposition_Task")
  public JAXBElement<ValidateHostProfileCompositionRequestType> createValidateHostProfileCompositionTask(ValidateHostProfileCompositionRequestType paramValidateHostProfileCompositionRequestType) {
    return new JAXBElement(_ValidateHostProfileCompositionTask_QNAME, ValidateHostProfileCompositionRequestType.class, null, paramValidateHostProfileCompositionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QuerySystemUsers")
  public JAXBElement<QuerySystemUsersRequestType> createQuerySystemUsers(QuerySystemUsersRequestType paramQuerySystemUsersRequestType) {
    return new JAXBElement(_QuerySystemUsers_QNAME, QuerySystemUsersRequestType.class, null, paramQuerySystemUsersRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TooManyNativeCloneLevelsFault")
  public JAXBElement<TooManyNativeCloneLevels> createTooManyNativeCloneLevelsFault(TooManyNativeCloneLevels paramTooManyNativeCloneLevels) {
    return new JAXBElement(_TooManyNativeCloneLevelsFault_QNAME, TooManyNativeCloneLevels.class, null, paramTooManyNativeCloneLevels);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostIncompatibleForFaultToleranceFault")
  public JAXBElement<HostIncompatibleForFaultTolerance> createHostIncompatibleForFaultToleranceFault(HostIncompatibleForFaultTolerance paramHostIncompatibleForFaultTolerance) {
    return new JAXBElement(_HostIncompatibleForFaultToleranceFault_QNAME, HostIncompatibleForFaultTolerance.class, null, paramHostIncompatibleForFaultTolerance);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InstallIoFilter_Task")
  public JAXBElement<InstallIoFilterRequestType> createInstallIoFilterTask(InstallIoFilterRequestType paramInstallIoFilterRequestType) {
    return new JAXBElement(_InstallIoFilterTask_QNAME, InstallIoFilterRequestType.class, null, paramInstallIoFilterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "WakeOnLanNotSupportedByVmotionNICFault")
  public JAXBElement<WakeOnLanNotSupportedByVmotionNIC> createWakeOnLanNotSupportedByVmotionNICFault(WakeOnLanNotSupportedByVmotionNIC paramWakeOnLanNotSupportedByVmotionNIC) {
    return new JAXBElement(_WakeOnLanNotSupportedByVmotionNICFault_QNAME, WakeOnLanNotSupportedByVmotionNIC.class, null, paramWakeOnLanNotSupportedByVmotionNIC);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NamespaceLimitReachedFault")
  public JAXBElement<NamespaceLimitReached> createNamespaceLimitReachedFault(NamespaceLimitReached paramNamespaceLimitReached) {
    return new JAXBElement(_NamespaceLimitReachedFault_QNAME, NamespaceLimitReached.class, null, paramNamespaceLimitReached);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveSharedDiskFault")
  public JAXBElement<StorageDrsCannotMoveSharedDisk> createStorageDrsCannotMoveSharedDiskFault(StorageDrsCannotMoveSharedDisk paramStorageDrsCannotMoveSharedDisk) {
    return new JAXBElement(_StorageDrsCannotMoveSharedDiskFault_QNAME, StorageDrsCannotMoveSharedDisk.class, null, paramStorageDrsCannotMoveSharedDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnsupportedDatastoreFault")
  public JAXBElement<UnsupportedDatastore> createUnsupportedDatastoreFault(UnsupportedDatastore paramUnsupportedDatastore) {
    return new JAXBElement(_UnsupportedDatastoreFault_QNAME, UnsupportedDatastore.class, null, paramUnsupportedDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateInternetScsiDigestProperties")
  public JAXBElement<UpdateInternetScsiDigestPropertiesRequestType> createUpdateInternetScsiDigestProperties(UpdateInternetScsiDigestPropertiesRequestType paramUpdateInternetScsiDigestPropertiesRequestType) {
    return new JAXBElement(_UpdateInternetScsiDigestProperties_QNAME, UpdateInternetScsiDigestPropertiesRequestType.class, null, paramUpdateInternetScsiDigestPropertiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveObjectScheduledTask")
  public JAXBElement<RetrieveObjectScheduledTaskRequestType> createRetrieveObjectScheduledTask(RetrieveObjectScheduledTaskRequestType paramRetrieveObjectScheduledTaskRequestType) {
    return new JAXBElement(_RetrieveObjectScheduledTask_QNAME, RetrieveObjectScheduledTaskRequestType.class, null, paramRetrieveObjectScheduledTaskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExpiredAddonLicenseFault")
  public JAXBElement<ExpiredAddonLicense> createExpiredAddonLicenseFault(ExpiredAddonLicense paramExpiredAddonLicense) {
    return new JAXBElement(_ExpiredAddonLicenseFault_QNAME, ExpiredAddonLicense.class, null, paramExpiredAddonLicense);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LoginByToken")
  public JAXBElement<LoginByTokenRequestType> createLoginByToken(LoginByTokenRequestType paramLoginByTokenRequestType) {
    return new JAXBElement(_LoginByToken_QNAME, LoginByTokenRequestType.class, null, paramLoginByTokenRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotIncompatibleDeviceInVmFault")
  public JAXBElement<SnapshotIncompatibleDeviceInVm> createSnapshotIncompatibleDeviceInVmFault(SnapshotIncompatibleDeviceInVm paramSnapshotIncompatibleDeviceInVm) {
    return new JAXBElement(_SnapshotIncompatibleDeviceInVmFault_QNAME, SnapshotIncompatibleDeviceInVm.class, null, paramSnapshotIncompatibleDeviceInVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateLocalSwapDatastore")
  public JAXBElement<UpdateLocalSwapDatastoreRequestType> createUpdateLocalSwapDatastore(UpdateLocalSwapDatastoreRequestType paramUpdateLocalSwapDatastoreRequestType) {
    return new JAXBElement(_UpdateLocalSwapDatastore_QNAME, UpdateLocalSwapDatastoreRequestType.class, null, paramUpdateLocalSwapDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnmountDiskMapping_Task")
  public JAXBElement<UnmountDiskMappingRequestType> createUnmountDiskMappingTask(UnmountDiskMappingRequestType paramUnmountDiskMappingRequestType) {
    return new JAXBElement(_UnmountDiskMappingTask_QNAME, UnmountDiskMappingRequestType.class, null, paramUnmountDiskMappingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryUnownedFiles")
  public JAXBElement<QueryUnownedFilesRequestType> createQueryUnownedFiles(QueryUnownedFilesRequestType paramQueryUnownedFilesRequestType) {
    return new JAXBElement(_QueryUnownedFiles_QNAME, QueryUnownedFilesRequestType.class, null, paramQueryUnownedFilesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DasConfigFaultFault")
  public JAXBElement<DasConfigFault> createDasConfigFaultFault(DasConfigFault paramDasConfigFault) {
    return new JAXBElement(_DasConfigFaultFault_QNAME, DasConfigFault.class, null, paramDasConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveVmWithNoFilesInLayoutFault")
  public JAXBElement<StorageDrsCannotMoveVmWithNoFilesInLayout> createStorageDrsCannotMoveVmWithNoFilesInLayoutFault(StorageDrsCannotMoveVmWithNoFilesInLayout paramStorageDrsCannotMoveVmWithNoFilesInLayout) {
    return new JAXBElement(_StorageDrsCannotMoveVmWithNoFilesInLayoutFault_QNAME, StorageDrsCannotMoveVmWithNoFilesInLayout.class, null, paramStorageDrsCannotMoveVmWithNoFilesInLayout);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfFaultFault")
  public JAXBElement<OvfFault> createOvfFaultFault(OvfFault paramOvfFault) {
    return new JAXBElement(_OvfFaultFault_QNAME, OvfFault.class, null, paramOvfFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TooManyConsecutiveOverridesFault")
  public JAXBElement<TooManyConsecutiveOverrides> createTooManyConsecutiveOverridesFault(TooManyConsecutiveOverrides paramTooManyConsecutiveOverrides) {
    return new JAXBElement(_TooManyConsecutiveOverridesFault_QNAME, TooManyConsecutiveOverrides.class, null, paramTooManyConsecutiveOverrides);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AllocateIpv4Address")
  public JAXBElement<AllocateIpv4AddressRequestType> createAllocateIpv4Address(AllocateIpv4AddressRequestType paramAllocateIpv4AddressRequestType) {
    return new JAXBElement(_AllocateIpv4Address_QNAME, AllocateIpv4AddressRequestType.class, null, paramAllocateIpv4AddressRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AdminDisabledFault")
  public JAXBElement<AdminDisabled> createAdminDisabledFault(AdminDisabled paramAdminDisabled) {
    return new JAXBElement(_AdminDisabledFault_QNAME, AdminDisabled.class, null, paramAdminDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MultipleCertificatesVerifyFaultFault")
  public JAXBElement<MultipleCertificatesVerifyFault> createMultipleCertificatesVerifyFaultFault(MultipleCertificatesVerifyFault paramMultipleCertificatesVerifyFault) {
    return new JAXBElement(_MultipleCertificatesVerifyFaultFault_QNAME, MultipleCertificatesVerifyFault.class, null, paramMultipleCertificatesVerifyFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMINotSupportedFault")
  public JAXBElement<VMINotSupported> createVMINotSupportedFault(VMINotSupported paramVMINotSupported) {
    return new JAXBElement(_VMINotSupportedFault_QNAME, VMINotSupported.class, null, paramVMINotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ApplyStorageDrsRecommendationToPod_Task")
  public JAXBElement<ApplyStorageDrsRecommendationToPodRequestType> createApplyStorageDrsRecommendationToPodTask(ApplyStorageDrsRecommendationToPodRequestType paramApplyStorageDrsRecommendationToPodRequestType) {
    return new JAXBElement(_ApplyStorageDrsRecommendationToPodTask_QNAME, ApplyStorageDrsRecommendationToPodRequestType.class, null, paramApplyStorageDrsRecommendationToPodRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddInternetScsiStaticTargets")
  public JAXBElement<AddInternetScsiStaticTargetsRequestType> createAddInternetScsiStaticTargets(AddInternetScsiStaticTargetsRequestType paramAddInternetScsiStaticTargetsRequestType) {
    return new JAXBElement(_AddInternetScsiStaticTargets_QNAME, AddInternetScsiStaticTargetsRequestType.class, null, paramAddInternetScsiStaticTargetsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CustomizationSpecItemToXml")
  public JAXBElement<CustomizationSpecItemToXmlRequestType> createCustomizationSpecItemToXml(CustomizationSpecItemToXmlRequestType paramCustomizationSpecItemToXmlRequestType) {
    return new JAXBElement(_CustomizationSpecItemToXml_QNAME, CustomizationSpecItemToXmlRequestType.class, null, paramCustomizationSpecItemToXmlRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MigrationNotReadyFault")
  public JAXBElement<MigrationNotReady> createMigrationNotReadyFault(MigrationNotReady paramMigrationNotReady) {
    return new JAXBElement(_MigrationNotReadyFault_QNAME, MigrationNotReady.class, null, paramMigrationNotReady);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DatabaseErrorFault")
  public JAXBElement<DatabaseError> createDatabaseErrorFault(DatabaseError paramDatabaseError) {
    return new JAXBElement(_DatabaseErrorFault_QNAME, DatabaseError.class, null, paramDatabaseError);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVmfsConfigOption")
  public JAXBElement<QueryVmfsConfigOptionRequestType> createQueryVmfsConfigOption(QueryVmfsConfigOptionRequestType paramQueryVmfsConfigOptionRequestType) {
    return new JAXBElement(_QueryVmfsConfigOption_QNAME, QueryVmfsConfigOptionRequestType.class, null, paramQueryVmfsConfigOptionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExpandVmfsDatastore")
  public JAXBElement<ExpandVmfsDatastoreRequestType> createExpandVmfsDatastore(ExpandVmfsDatastoreRequestType paramExpandVmfsDatastoreRequestType) {
    return new JAXBElement(_ExpandVmfsDatastore_QNAME, ExpandVmfsDatastoreRequestType.class, null, paramExpandVmfsDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FailToLockFaultToleranceVMsFault")
  public JAXBElement<FailToLockFaultToleranceVMs> createFailToLockFaultToleranceVMsFault(FailToLockFaultToleranceVMs paramFailToLockFaultToleranceVMs) {
    return new JAXBElement(_FailToLockFaultToleranceVMsFault_QNAME, FailToLockFaultToleranceVMs.class, null, paramFailToLockFaultToleranceVMs);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshFirewall")
  public JAXBElement<RefreshFirewallRequestType> createRefreshFirewall(RefreshFirewallRequestType paramRefreshFirewallRequestType) {
    return new JAXBElement(_RefreshFirewall_QNAME, RefreshFirewallRequestType.class, null, paramRefreshFirewallRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MissingControllerFault")
  public JAXBElement<MissingController> createMissingControllerFault(MissingController paramMissingController) {
    return new JAXBElement(_MissingControllerFault_QNAME, MissingController.class, null, paramMissingController);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultFault")
  public JAXBElement<IscsiFault> createIscsiFaultFault(IscsiFault paramIscsiFault) {
    return new JAXBElement(_IscsiFaultFault_QNAME, IscsiFault.class, null, paramIscsiFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnmarkServiceProviderEntities")
  public JAXBElement<UnmarkServiceProviderEntitiesRequestType> createUnmarkServiceProviderEntities(UnmarkServiceProviderEntitiesRequestType paramUnmarkServiceProviderEntitiesRequestType) {
    return new JAXBElement(_UnmarkServiceProviderEntities_QNAME, UnmarkServiceProviderEntitiesRequestType.class, null, paramUnmarkServiceProviderEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateInternetScsiIPProperties")
  public JAXBElement<UpdateInternetScsiIPPropertiesRequestType> createUpdateInternetScsiIPProperties(UpdateInternetScsiIPPropertiesRequestType paramUpdateInternetScsiIPPropertiesRequestType) {
    return new JAXBElement(_UpdateInternetScsiIPProperties_QNAME, UpdateInternetScsiIPPropertiesRequestType.class, null, paramUpdateInternetScsiIPPropertiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "BindVnic")
  public JAXBElement<BindVnicRequestType> createBindVnic(BindVnicRequestType paramBindVnicRequestType) {
    return new JAXBElement(_BindVnic_QNAME, BindVnicRequestType.class, null, paramBindVnicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FaultToleranceNotSameBuildFault")
  public JAXBElement<FaultToleranceNotSameBuild> createFaultToleranceNotSameBuildFault(FaultToleranceNotSameBuild paramFaultToleranceNotSameBuild) {
    return new JAXBElement(_FaultToleranceNotSameBuildFault_QNAME, FaultToleranceNotSameBuild.class, null, paramFaultToleranceNotSameBuild);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OperationDisabledByGuestFault")
  public JAXBElement<OperationDisabledByGuest> createOperationDisabledByGuestFault(OperationDisabledByGuest paramOperationDisabledByGuest) {
    return new JAXBElement(_OperationDisabledByGuestFault_QNAME, OperationDisabledByGuest.class, null, paramOperationDisabledByGuest);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveFilterEntities")
  public JAXBElement<RemoveFilterEntitiesRequestType> createRemoveFilterEntities(RemoveFilterEntitiesRequestType paramRemoveFilterEntitiesRequestType) {
    return new JAXBElement(_RemoveFilterEntities_QNAME, RemoveFilterEntitiesRequestType.class, null, paramRemoveFilterEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateResourcePool")
  public JAXBElement<CreateResourcePoolRequestType> createCreateResourcePool(CreateResourcePoolRequestType paramCreateResourcePoolRequestType) {
    return new JAXBElement(_CreateResourcePool_QNAME, CreateResourcePoolRequestType.class, null, paramCreateResourcePoolRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateDisk_Task")
  public JAXBElement<CreateDiskRequestType> createCreateDiskTask(CreateDiskRequestType paramCreateDiskRequestType) {
    return new JAXBElement(_CreateDiskTask_QNAME, CreateDiskRequestType.class, null, paramCreateDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostVStorageObjectDeleteSnapshot_Task")
  public JAXBElement<HostVStorageObjectDeleteSnapshotRequestType> createHostVStorageObjectDeleteSnapshotTask(HostVStorageObjectDeleteSnapshotRequestType paramHostVStorageObjectDeleteSnapshotRequestType) {
    return new JAXBElement(_HostVStorageObjectDeleteSnapshotTask_QNAME, HostVStorageObjectDeleteSnapshotRequestType.class, null, paramHostVStorageObjectDeleteSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InitiateFileTransferToGuest")
  public JAXBElement<InitiateFileTransferToGuestRequestType> createInitiateFileTransferToGuest(InitiateFileTransferToGuestRequestType paramInitiateFileTransferToGuestRequestType) {
    return new JAXBElement(_InitiateFileTransferToGuest_QNAME, InitiateFileTransferToGuestRequestType.class, null, paramInitiateFileTransferToGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MultiWriterNotSupportedFault")
  public JAXBElement<MultiWriterNotSupported> createMultiWriterNotSupportedFault(MultiWriterNotSupported paramMultiWriterNotSupported) {
    return new JAXBElement(_MultiWriterNotSupportedFault_QNAME, MultiWriterNotSupported.class, null, paramMultiWriterNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidPropertyFault")
  public JAXBElement<InvalidProperty> createInvalidPropertyFault(InvalidProperty paramInvalidProperty) {
    return new JAXBElement(_InvalidPropertyFault_QNAME, InvalidProperty.class, null, paramInvalidProperty);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfPropertyQualifierDuplicateFault")
  public JAXBElement<OvfPropertyQualifierDuplicate> createOvfPropertyQualifierDuplicateFault(OvfPropertyQualifierDuplicate paramOvfPropertyQualifierDuplicate) {
    return new JAXBElement(_OvfPropertyQualifierDuplicateFault_QNAME, OvfPropertyQualifierDuplicate.class, null, paramOvfPropertyQualifierDuplicate);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientResourcesFaultFault")
  public JAXBElement<InsufficientResourcesFault> createInsufficientResourcesFaultFault(InsufficientResourcesFault paramInsufficientResourcesFault) {
    return new JAXBElement(_InsufficientResourcesFaultFault_QNAME, InsufficientResourcesFault.class, null, paramInsufficientResourcesFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PowerOnMultiVM_Task")
  public JAXBElement<PowerOnMultiVMRequestType> createPowerOnMultiVMTask(PowerOnMultiVMRequestType paramPowerOnMultiVMRequestType) {
    return new JAXBElement(_PowerOnMultiVMTask_QNAME, PowerOnMultiVMRequestType.class, null, paramPowerOnMultiVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateInternetScsiDiscoveryProperties")
  public JAXBElement<UpdateInternetScsiDiscoveryPropertiesRequestType> createUpdateInternetScsiDiscoveryProperties(UpdateInternetScsiDiscoveryPropertiesRequestType paramUpdateInternetScsiDiscoveryPropertiesRequestType) {
    return new JAXBElement(_UpdateInternetScsiDiscoveryProperties_QNAME, UpdateInternetScsiDiscoveryPropertiesRequestType.class, null, paramUpdateInternetScsiDiscoveryPropertiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveDiskPartitionInfo")
  public JAXBElement<RetrieveDiskPartitionInfoRequestType> createRetrieveDiskPartitionInfo(RetrieveDiskPartitionInfoRequestType paramRetrieveDiskPartitionInfoRequestType) {
    return new JAXBElement(_RetrieveDiskPartitionInfo_QNAME, RetrieveDiskPartitionInfoRequestType.class, null, paramRetrieveDiskPartitionInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReadPreviousTasks")
  public JAXBElement<ReadPreviousTasksRequestType> createReadPreviousTasks(ReadPreviousTasksRequestType paramReadPreviousTasksRequestType) {
    return new JAXBElement(_ReadPreviousTasks_QNAME, ReadPreviousTasksRequestType.class, null, paramReadPreviousTasksRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StartProgramInGuest")
  public JAXBElement<StartProgramInGuestRequestType> createStartProgramInGuest(StartProgramInGuestRequestType paramStartProgramInGuestRequestType) {
    return new JAXBElement(_StartProgramInGuest_QNAME, StartProgramInGuestRequestType.class, null, paramStartProgramInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AllocateIpv6Address")
  public JAXBElement<AllocateIpv6AddressRequestType> createAllocateIpv6Address(AllocateIpv6AddressRequestType paramAllocateIpv6AddressRequestType) {
    return new JAXBElement(_AllocateIpv6Address_QNAME, AllocateIpv6AddressRequestType.class, null, paramAllocateIpv6AddressRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LicenseDowngradeDisallowedFault")
  public JAXBElement<LicenseDowngradeDisallowed> createLicenseDowngradeDisallowedFault(LicenseDowngradeDisallowed paramLicenseDowngradeDisallowed) {
    return new JAXBElement(_LicenseDowngradeDisallowedFault_QNAME, LicenseDowngradeDisallowed.class, null, paramLicenseDowngradeDisallowed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListKmsClusters")
  public JAXBElement<ListKmsClustersRequestType> createListKmsClusters(ListKmsClustersRequestType paramListKmsClustersRequestType) {
    return new JAXBElement(_ListKmsClusters_QNAME, ListKmsClustersRequestType.class, null, paramListKmsClustersRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckCustomizationSpec")
  public JAXBElement<CheckCustomizationSpecRequestType> createCheckCustomizationSpec(CheckCustomizationSpecRequestType paramCheckCustomizationSpecRequestType) {
    return new JAXBElement(_CheckCustomizationSpec_QNAME, CheckCustomizationSpecRequestType.class, null, paramCheckCustomizationSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AcquireTicket")
  public JAXBElement<AcquireTicketRequestType> createAcquireTicket(AcquireTicketRequestType paramAcquireTicketRequestType) {
    return new JAXBElement(_AcquireTicket_QNAME, AcquireTicketRequestType.class, null, paramAcquireTicketRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdatePassthruConfig")
  public JAXBElement<UpdatePassthruConfigRequestType> createUpdatePassthruConfig(UpdatePassthruConfigRequestType paramUpdatePassthruConfigRequestType) {
    return new JAXBElement(_UpdatePassthruConfig_QNAME, UpdatePassthruConfigRequestType.class, null, paramUpdatePassthruConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnsupportedVmxLocationFault")
  public JAXBElement<UnsupportedVmxLocation> createUnsupportedVmxLocationFault(UnsupportedVmxLocation paramUnsupportedVmxLocation) {
    return new JAXBElement(_UnsupportedVmxLocationFault_QNAME, UnsupportedVmxLocation.class, null, paramUnsupportedVmxLocation);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ValidateHost")
  public JAXBElement<ValidateHostRequestType> createValidateHost(ValidateHostRequestType paramValidateHostRequestType) {
    return new JAXBElement(_ValidateHost_QNAME, ValidateHostRequestType.class, null, paramValidateHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveHostCustomizations")
  public JAXBElement<RetrieveHostCustomizationsRequestType> createRetrieveHostCustomizations(RetrieveHostCustomizationsRequestType paramRetrieveHostCustomizationsRequestType) {
    return new JAXBElement(_RetrieveHostCustomizations_QNAME, RetrieveHostCustomizationsRequestType.class, null, paramRetrieveHostCustomizationsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetTaskState")
  public JAXBElement<SetTaskStateRequestType> createSetTaskState(SetTaskStateRequestType paramSetTaskStateRequestType) {
    return new JAXBElement(_SetTaskState_QNAME, SetTaskStateRequestType.class, null, paramSetTaskStateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NasVolumeNotMountedFault")
  public JAXBElement<NasVolumeNotMounted> createNasVolumeNotMountedFault(NasVolumeNotMounted paramNasVolumeNotMounted) {
    return new JAXBElement(_NasVolumeNotMountedFault_QNAME, NasVolumeNotMounted.class, null, paramNasVolumeNotMounted);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OperationDisallowedOnHostFault")
  public JAXBElement<OperationDisallowedOnHost> createOperationDisallowedOnHostFault(OperationDisallowedOnHost paramOperationDisallowedOnHost) {
    return new JAXBElement(_OperationDisallowedOnHostFault_QNAME, OperationDisallowedOnHost.class, null, paramOperationDisallowedOnHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AgentInstallFailedFault")
  public JAXBElement<AgentInstallFailed> createAgentInstallFailedFault(AgentInstallFailed paramAgentInstallFailed) {
    return new JAXBElement(_AgentInstallFailedFault_QNAME, AgentInstallFailed.class, null, paramAgentInstallFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateHostCustomizations_Task")
  public JAXBElement<UpdateHostCustomizationsRequestType> createUpdateHostCustomizationsTask(UpdateHostCustomizationsRequestType paramUpdateHostCustomizationsRequestType) {
    return new JAXBElement(_UpdateHostCustomizationsTask_QNAME, UpdateHostCustomizationsRequestType.class, null, paramUpdateHostCustomizationsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplicationNotSupportedOnHostFault")
  public JAXBElement<ReplicationNotSupportedOnHost> createReplicationNotSupportedOnHostFault(ReplicationNotSupportedOnHost paramReplicationNotSupportedOnHost) {
    return new JAXBElement(_ReplicationNotSupportedOnHostFault_QNAME, ReplicationNotSupportedOnHost.class, null, paramReplicationNotSupportedOnHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryProductLockerLocation")
  public JAXBElement<QueryProductLockerLocationRequestType> createQueryProductLockerLocation(QueryProductLockerLocationRequestType paramQueryProductLockerLocationRequestType) {
    return new JAXBElement(_QueryProductLockerLocation_QNAME, QueryProductLockerLocationRequestType.class, null, paramQueryProductLockerLocationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryCompatibleHostForExistingDvs")
  public JAXBElement<QueryCompatibleHostForExistingDvsRequestType> createQueryCompatibleHostForExistingDvs(QueryCompatibleHostForExistingDvsRequestType paramQueryCompatibleHostForExistingDvsRequestType) {
    return new JAXBElement(_QueryCompatibleHostForExistingDvs_QNAME, QueryCompatibleHostForExistingDvsRequestType.class, null, paramQueryCompatibleHostForExistingDvsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostRemoveVFlashResource")
  public JAXBElement<HostRemoveVFlashResourceRequestType> createHostRemoveVFlashResource(HostRemoveVFlashResourceRequestType paramHostRemoveVFlashResourceRequestType) {
    return new JAXBElement(_HostRemoveVFlashResource_QNAME, HostRemoveVFlashResourceRequestType.class, null, paramHostRemoveVFlashResourceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidCAMServerFault")
  public JAXBElement<InvalidCAMServer> createInvalidCAMServerFault(InvalidCAMServer paramInvalidCAMServer) {
    return new JAXBElement(_InvalidCAMServerFault_QNAME, InvalidCAMServer.class, null, paramInvalidCAMServer);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveServiceProviderEntities")
  public JAXBElement<RetrieveServiceProviderEntitiesRequestType> createRetrieveServiceProviderEntities(RetrieveServiceProviderEntitiesRequestType paramRetrieveServiceProviderEntitiesRequestType) {
    return new JAXBElement(_RetrieveServiceProviderEntities_QNAME, RetrieveServiceProviderEntitiesRequestType.class, null, paramRetrieveServiceProviderEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ToolsImageSignatureCheckFailedFault")
  public JAXBElement<ToolsImageSignatureCheckFailed> createToolsImageSignatureCheckFailedFault(ToolsImageSignatureCheckFailed paramToolsImageSignatureCheckFailed) {
    return new JAXBElement(_ToolsImageSignatureCheckFailedFault_QNAME, ToolsImageSignatureCheckFailed.class, null, paramToolsImageSignatureCheckFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateFilter")
  public JAXBElement<CreateFilterRequestType> createCreateFilter(CreateFilterRequestType paramCreateFilterRequestType) {
    return new JAXBElement(_CreateFilter_QNAME, CreateFilterRequestType.class, null, paramCreateFilterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryTargetCapabilities")
  public JAXBElement<QueryTargetCapabilitiesRequestType> createQueryTargetCapabilities(QueryTargetCapabilitiesRequestType paramQueryTargetCapabilitiesRequestType) {
    return new JAXBElement(_QueryTargetCapabilities_QNAME, QueryTargetCapabilitiesRequestType.class, null, paramQueryTargetCapabilitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateSecondaryVMEx_Task")
  public JAXBElement<CreateSecondaryVMExRequestType> createCreateSecondaryVMExTask(CreateSecondaryVMExRequestType paramCreateSecondaryVMExRequestType) {
    return new JAXBElement(_CreateSecondaryVMExTask_QNAME, CreateSecondaryVMExRequestType.class, null, paramCreateSecondaryVMExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVAppConfig")
  public JAXBElement<UpdateVAppConfigRequestType> createUpdateVAppConfig(UpdateVAppConfigRequestType paramUpdateVAppConfigRequestType) {
    return new JAXBElement(_UpdateVAppConfig_QNAME, UpdateVAppConfigRequestType.class, null, paramUpdateVAppConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableAlarmActions")
  public JAXBElement<EnableAlarmActionsRequestType> createEnableAlarmActions(EnableAlarmActionsRequestType paramEnableAlarmActionsRequestType) {
    return new JAXBElement(_EnableAlarmActions_QNAME, EnableAlarmActionsRequestType.class, null, paramEnableAlarmActionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateNetworkConfig")
  public JAXBElement<UpdateNetworkConfigRequestType> createUpdateNetworkConfig(UpdateNetworkConfigRequestType paramUpdateNetworkConfigRequestType) {
    return new JAXBElement(_UpdateNetworkConfig_QNAME, UpdateNetworkConfigRequestType.class, null, paramUpdateNetworkConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoCompatibleDatastoreFault")
  public JAXBElement<NoCompatibleDatastore> createNoCompatibleDatastoreFault(NoCompatibleDatastore paramNoCompatibleDatastore) {
    return new JAXBElement(_NoCompatibleDatastoreFault_QNAME, NoCompatibleDatastore.class, null, paramNoCompatibleDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MoveDVPort_Task")
  public JAXBElement<MoveDVPortRequestType> createMoveDVPortTask(MoveDVPortRequestType paramMoveDVPortRequestType) {
    return new JAXBElement(_MoveDVPortTask_QNAME, MoveDVPortRequestType.class, null, paramMoveDVPortRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmWwnConflictFault")
  public JAXBElement<VmWwnConflict> createVmWwnConflictFault(VmWwnConflict paramVmWwnConflict) {
    return new JAXBElement(_VmWwnConflictFault_QNAME, VmWwnConflict.class, null, paramVmWwnConflict);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VirtualDiskModeNotSupportedFault")
  public JAXBElement<VirtualDiskModeNotSupported> createVirtualDiskModeNotSupportedFault(VirtualDiskModeNotSupported paramVirtualDiskModeNotSupported) {
    return new JAXBElement(_VirtualDiskModeNotSupportedFault_QNAME, VirtualDiskModeNotSupported.class, null, paramVirtualDiskModeNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DatacenterMismatchFault")
  public JAXBElement<DatacenterMismatch> createDatacenterMismatchFault(DatacenterMismatch paramDatacenterMismatch) {
    return new JAXBElement(_DatacenterMismatchFault_QNAME, DatacenterMismatch.class, null, paramDatacenterMismatch);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SearchDatastoreSubFolders_Task")
  public JAXBElement<SearchDatastoreSubFoldersRequestType> createSearchDatastoreSubFoldersTask(SearchDatastoreSubFoldersRequestType paramSearchDatastoreSubFoldersRequestType) {
    return new JAXBElement(_SearchDatastoreSubFoldersTask_QNAME, SearchDatastoreSubFoldersRequestType.class, null, paramSearchDatastoreSubFoldersRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreatePropertyCollector")
  public JAXBElement<CreatePropertyCollectorRequestType> createCreatePropertyCollector(CreatePropertyCollectorRequestType paramCreatePropertyCollectorRequestType) {
    return new JAXBElement(_CreatePropertyCollector_QNAME, CreatePropertyCollectorRequestType.class, null, paramCreatePropertyCollectorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyProfile")
  public JAXBElement<DestroyProfileRequestType> createDestroyProfile(DestroyProfileRequestType paramDestroyProfileRequestType) {
    return new JAXBElement(_DestroyProfile_QNAME, DestroyProfileRequestType.class, null, paramDestroyProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplicationVmFaultFault")
  public JAXBElement<ReplicationVmFault> createReplicationVmFaultFault(ReplicationVmFault paramReplicationVmFault) {
    return new JAXBElement(_ReplicationVmFaultFault_QNAME, ReplicationVmFault.class, null, paramReplicationVmFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateHppMultipathLunPolicy")
  public JAXBElement<UpdateHppMultipathLunPolicyRequestType> createUpdateHppMultipathLunPolicy(UpdateHppMultipathLunPolicyRequestType paramUpdateHppMultipathLunPolicyRequestType) {
    return new JAXBElement(_UpdateHppMultipathLunPolicy_QNAME, UpdateHppMultipathLunPolicyRequestType.class, null, paramUpdateHppMultipathLunPolicyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpgradeVmfs")
  public JAXBElement<UpgradeVmfsRequestType> createUpgradeVmfs(UpgradeVmfsRequestType paramUpgradeVmfsRequestType) {
    return new JAXBElement(_UpgradeVmfs_QNAME, UpgradeVmfsRequestType.class, null, paramUpgradeVmfsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryIoFilterInfo")
  public JAXBElement<QueryIoFilterInfoRequestType> createQueryIoFilterInfo(QueryIoFilterInfoRequestType paramQueryIoFilterInfoRequestType) {
    return new JAXBElement(_QueryIoFilterInfo_QNAME, QueryIoFilterInfoRequestType.class, null, paramQueryIoFilterInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConsumerCommunicationErrorFault")
  public JAXBElement<OvfConsumerCommunicationError> createOvfConsumerCommunicationErrorFault(OvfConsumerCommunicationError paramOvfConsumerCommunicationError) {
    return new JAXBElement(_OvfConsumerCommunicationErrorFault_QNAME, OvfConsumerCommunicationError.class, null, paramOvfConsumerCommunicationError);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VirtualDiskBlocksNotFullyProvisionedFault")
  public JAXBElement<VirtualDiskBlocksNotFullyProvisioned> createVirtualDiskBlocksNotFullyProvisionedFault(VirtualDiskBlocksNotFullyProvisioned paramVirtualDiskBlocksNotFullyProvisioned) {
    return new JAXBElement(_VirtualDiskBlocksNotFullyProvisionedFault_QNAME, VirtualDiskBlocksNotFullyProvisioned.class, null, paramVirtualDiskBlocksNotFullyProvisioned);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureDVPort_Task")
  public JAXBElement<ReconfigureDVPortRequestType> createReconfigureDVPortTask(ReconfigureDVPortRequestType paramReconfigureDVPortRequestType) {
    return new JAXBElement(_ReconfigureDVPortTask_QNAME, ReconfigureDVPortRequestType.class, null, paramReconfigureDVPortRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkAsLocal_Task")
  public JAXBElement<MarkAsLocalRequestType> createMarkAsLocalTask(MarkAsLocalRequestType paramMarkAsLocalRequestType) {
    return new JAXBElement(_MarkAsLocalTask_QNAME, MarkAsLocalRequestType.class, null, paramMarkAsLocalRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MergePermissions")
  public JAXBElement<MergePermissionsRequestType> createMergePermissions(MergePermissionsRequestType paramMergePermissionsRequestType) {
    return new JAXBElement(_MergePermissions_QNAME, MergePermissionsRequestType.class, null, paramMergePermissionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfToXmlUnsupportedElementFault")
  public JAXBElement<OvfToXmlUnsupportedElement> createOvfToXmlUnsupportedElementFault(OvfToXmlUnsupportedElement paramOvfToXmlUnsupportedElement) {
    return new JAXBElement(_OvfToXmlUnsupportedElementFault_QNAME, OvfToXmlUnsupportedElement.class, null, paramOvfToXmlUnsupportedElement);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LogUserEvent")
  public JAXBElement<LogUserEventRequestType> createLogUserEvent(LogUserEventRequestType paramLogUserEventRequestType) {
    return new JAXBElement(_LogUserEvent_QNAME, LogUserEventRequestType.class, null, paramLogUserEventRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AcquireMksTicket")
  public JAXBElement<AcquireMksTicketRequestType> createAcquireMksTicket(AcquireMksTicketRequestType paramAcquireMksTicketRequestType) {
    return new JAXBElement(_AcquireMksTicket_QNAME, AcquireMksTicketRequestType.class, null, paramAcquireMksTicketRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigureLicenseSource")
  public JAXBElement<ConfigureLicenseSourceRequestType> createConfigureLicenseSource(ConfigureLicenseSourceRequestType paramConfigureLicenseSourceRequestType) {
    return new JAXBElement(_ConfigureLicenseSource_QNAME, ConfigureLicenseSourceRequestType.class, null, paramConfigureLicenseSourceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveInternetScsiSendTargets")
  public JAXBElement<RemoveInternetScsiSendTargetsRequestType> createRemoveInternetScsiSendTargets(RemoveInternetScsiSendTargetsRequestType paramRemoveInternetScsiSendTargetsRequestType) {
    return new JAXBElement(_RemoveInternetScsiSendTargets_QNAME, RemoveInternetScsiSendTargetsRequestType.class, null, paramRemoveInternetScsiSendTargetsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostSpecificationOperationFailedFault")
  public JAXBElement<HostSpecificationOperationFailed> createHostSpecificationOperationFailedFault(HostSpecificationOperationFailed paramHostSpecificationOperationFailed) {
    return new JAXBElement(_HostSpecificationOperationFailedFault_QNAME, HostSpecificationOperationFailed.class, null, paramHostSpecificationOperationFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VsanFaultFault")
  public JAXBElement<VsanFault> createVsanFaultFault(VsanFault paramVsanFault) {
    return new JAXBElement(_VsanFaultFault_QNAME, VsanFault.class, null, paramVsanFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CustomizationFaultFault")
  public JAXBElement<CustomizationFault> createCustomizationFaultFault(CustomizationFault paramCustomizationFault) {
    return new JAXBElement(_CustomizationFaultFault_QNAME, CustomizationFault.class, null, paramCustomizationFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetRegistryValueInGuest")
  public JAXBElement<SetRegistryValueInGuestRequestType> createSetRegistryValueInGuest(SetRegistryValueInGuestRequestType paramSetRegistryValueInGuestRequestType) {
    return new JAXBElement(_SetRegistryValueInGuest_QNAME, SetRegistryValueInGuestRequestType.class, null, paramSetRegistryValueInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NamespaceWriteProtectedFault")
  public JAXBElement<NamespaceWriteProtected> createNamespaceWriteProtectedFault(NamespaceWriteProtected paramNamespaceWriteProtected) {
    return new JAXBElement(_NamespaceWriteProtectedFault_QNAME, NamespaceWriteProtected.class, null, paramNamespaceWriteProtected);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StopService")
  public JAXBElement<StopServiceRequestType> createStopService(StopServiceRequestType paramStopServiceRequestType) {
    return new JAXBElement(_StopService_QNAME, StopServiceRequestType.class, null, paramStopServiceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientStandbyResourceFault")
  public JAXBElement<InsufficientStandbyResource> createInsufficientStandbyResourceFault(InsufficientStandbyResource paramInsufficientStandbyResource) {
    return new JAXBElement(_InsufficientStandbyResourceFault_QNAME, InsufficientStandbyResource.class, null, paramInsufficientStandbyResource);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfMissingElementFault")
  public JAXBElement<OvfMissingElement> createOvfMissingElementFault(OvfMissingElement paramOvfMissingElement) {
    return new JAXBElement(_OvfMissingElementFault_QNAME, OvfMissingElement.class, null, paramOvfMissingElement);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindByIp")
  public JAXBElement<FindByIpRequestType> createFindByIp(FindByIpRequestType paramFindByIpRequestType) {
    return new JAXBElement(_FindByIp_QNAME, FindByIpRequestType.class, null, paramFindByIpRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FaultToleranceNeedsThickDiskFault")
  public JAXBElement<FaultToleranceNeedsThickDisk> createFaultToleranceNeedsThickDiskFault(FaultToleranceNeedsThickDisk paramFaultToleranceNeedsThickDisk) {
    return new JAXBElement(_FaultToleranceNeedsThickDiskFault_QNAME, FaultToleranceNeedsThickDisk.class, null, paramFaultToleranceNeedsThickDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateGroup")
  public JAXBElement<CreateGroupRequestType> createCreateGroup(CreateGroupRequestType paramCreateGroupRequestType) {
    return new JAXBElement(_CreateGroup_QNAME, CreateGroupRequestType.class, null, paramCreateGroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDvsConfigTarget")
  public JAXBElement<QueryDvsConfigTargetRequestType> createQueryDvsConfigTarget(QueryDvsConfigTargetRequestType paramQueryDvsConfigTargetRequestType) {
    return new JAXBElement(_QueryDvsConfigTarget_QNAME, QueryDvsConfigTargetRequestType.class, null, paramQueryDvsConfigTargetRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnknownEntityFault")
  public JAXBElement<OvfUnknownEntity> createOvfUnknownEntityFault(OvfUnknownEntity paramOvfUnknownEntity) {
    return new JAXBElement(_OvfUnknownEntityFault_QNAME, OvfUnknownEntity.class, null, paramOvfUnknownEntity);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableRuleset")
  public JAXBElement<DisableRulesetRequestType> createDisableRuleset(DisableRulesetRequestType paramDisableRulesetRequestType) {
    return new JAXBElement(_DisableRuleset_QNAME, DisableRulesetRequestType.class, null, paramDisableRulesetRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AcquireCredentialsInGuest")
  public JAXBElement<AcquireCredentialsInGuestRequestType> createAcquireCredentialsInGuest(AcquireCredentialsInGuestRequestType paramAcquireCredentialsInGuestRequestType) {
    return new JAXBElement(_AcquireCredentialsInGuest_QNAME, AcquireCredentialsInGuestRequestType.class, null, paramAcquireCredentialsInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveHostSpecification")
  public JAXBElement<RetrieveHostSpecificationRequestType> createRetrieveHostSpecification(RetrieveHostSpecificationRequestType paramRetrieveHostSpecificationRequestType) {
    return new JAXBElement(_RetrieveHostSpecification_QNAME, RetrieveHostSpecificationRequestType.class, null, paramRetrieveHostSpecificationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ShutdownGuest")
  public JAXBElement<ShutdownGuestRequestType> createShutdownGuest(ShutdownGuestRequestType paramShutdownGuestRequestType) {
    return new JAXBElement(_ShutdownGuest_QNAME, ShutdownGuestRequestType.class, null, paramShutdownGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveFreeEpcMemory")
  public JAXBElement<RetrieveFreeEpcMemoryRequestType> createRetrieveFreeEpcMemory(RetrieveFreeEpcMemoryRequestType paramRetrieveFreeEpcMemoryRequestType) {
    return new JAXBElement(_RetrieveFreeEpcMemory_QNAME, RetrieveFreeEpcMemoryRequestType.class, null, paramRetrieveFreeEpcMemoryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostScheduleReconcileDatastoreInventory")
  public JAXBElement<HostScheduleReconcileDatastoreInventoryRequestType> createHostScheduleReconcileDatastoreInventory(HostScheduleReconcileDatastoreInventoryRequestType paramHostScheduleReconcileDatastoreInventoryRequestType) {
    return new JAXBElement(_HostScheduleReconcileDatastoreInventory_QNAME, HostScheduleReconcileDatastoreInventoryRequestType.class, null, paramHostScheduleReconcileDatastoreInventoryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpgradeTools_Task")
  public JAXBElement<UpgradeToolsRequestType> createUpgradeToolsTask(UpgradeToolsRequestType paramUpgradeToolsRequestType) {
    return new JAXBElement(_UpgradeToolsTask_QNAME, UpgradeToolsRequestType.class, null, paramUpgradeToolsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ImportHostAddFailureFault")
  public JAXBElement<ImportHostAddFailure> createImportHostAddFailureFault(ImportHostAddFailure paramImportHostAddFailure) {
    return new JAXBElement(_ImportHostAddFailureFault_QNAME, ImportHostAddFailure.class, null, paramImportHostAddFailure);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyPropertyFilter")
  public JAXBElement<DestroyPropertyFilterRequestType> createDestroyPropertyFilter(DestroyPropertyFilterRequestType paramDestroyPropertyFilterRequestType) {
    return new JAXBElement(_DestroyPropertyFilter_QNAME, DestroyPropertyFilterRequestType.class, null, paramDestroyPropertyFilterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateNasDatastore")
  public JAXBElement<CreateNasDatastoreRequestType> createCreateNasDatastore(CreateNasDatastoreRequestType paramCreateNasDatastoreRequestType) {
    return new JAXBElement(_CreateNasDatastore_QNAME, CreateNasDatastoreRequestType.class, null, paramCreateNasDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PowerOnFtSecondaryTimedoutFault")
  public JAXBElement<PowerOnFtSecondaryTimedout> createPowerOnFtSecondaryTimedoutFault(PowerOnFtSecondaryTimedout paramPowerOnFtSecondaryTimedout) {
    return new JAXBElement(_PowerOnFtSecondaryTimedoutFault_QNAME, PowerOnFtSecondaryTimedout.class, null, paramPowerOnFtSecondaryTimedout);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMotionAcrossNetworkNotSupportedFault")
  public JAXBElement<VMotionAcrossNetworkNotSupported> createVMotionAcrossNetworkNotSupportedFault(VMotionAcrossNetworkNotSupported paramVMotionAcrossNetworkNotSupported) {
    return new JAXBElement(_VMotionAcrossNetworkNotSupportedFault_QNAME, VMotionAcrossNetworkNotSupported.class, null, paramVMotionAcrossNetworkNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NetworkInaccessibleFault")
  public JAXBElement<NetworkInaccessible> createNetworkInaccessibleFault(NetworkInaccessible paramNetworkInaccessible) {
    return new JAXBElement(_NetworkInaccessibleFault_QNAME, NetworkInaccessible.class, null, paramNetworkInaccessible);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ChangePassword")
  public JAXBElement<ChangePasswordRequestType> createChangePassword(ChangePasswordRequestType paramChangePasswordRequestType) {
    return new JAXBElement(_ChangePassword_QNAME, ChangePasswordRequestType.class, null, paramChangePasswordRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfDiskOrderConstraintFault")
  public JAXBElement<OvfDiskOrderConstraint> createOvfDiskOrderConstraintFault(OvfDiskOrderConstraint paramOvfDiskOrderConstraint) {
    return new JAXBElement(_OvfDiskOrderConstraintFault_QNAME, OvfDiskOrderConstraint.class, null, paramOvfDiskOrderConstraint);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ThirdPartyLicenseAssignmentFailedFault")
  public JAXBElement<ThirdPartyLicenseAssignmentFailed> createThirdPartyLicenseAssignmentFailedFault(ThirdPartyLicenseAssignmentFailed paramThirdPartyLicenseAssignmentFailed) {
    return new JAXBElement(_ThirdPartyLicenseAssignmentFailedFault_QNAME, ThirdPartyLicenseAssignmentFailed.class, null, paramThirdPartyLicenseAssignmentFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateExtension")
  public JAXBElement<UpdateExtensionRequestType> createUpdateExtension(UpdateExtensionRequestType paramUpdateExtensionRequestType) {
    return new JAXBElement(_UpdateExtension_QNAME, UpdateExtensionRequestType.class, null, paramUpdateExtensionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GetResourceUsage")
  public JAXBElement<GetResourceUsageRequestType> createGetResourceUsage(GetResourceUsageRequestType paramGetResourceUsageRequestType) {
    return new JAXBElement(_GetResourceUsage_QNAME, GetResourceUsageRequestType.class, null, paramGetResourceUsageRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VspanDestPortConflictFault")
  public JAXBElement<VspanDestPortConflict> createVspanDestPortConflictFault(VspanDestPortConflict paramVspanDestPortConflict) {
    return new JAXBElement(_VspanDestPortConflictFault_QNAME, VspanDestPortConflict.class, null, paramVspanDestPortConflict);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CancelStorageDrsRecommendation")
  public JAXBElement<CancelStorageDrsRecommendationRequestType> createCancelStorageDrsRecommendation(CancelStorageDrsRecommendationRequestType paramCancelStorageDrsRecommendationRequestType) {
    return new JAXBElement(_CancelStorageDrsRecommendation_QNAME, CancelStorageDrsRecommendationRequestType.class, null, paramCancelStorageDrsRecommendationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVsanStatistics")
  public JAXBElement<QueryVsanStatisticsRequestType> createQueryVsanStatistics(QueryVsanStatisticsRequestType paramQueryVsanStatisticsRequestType) {
    return new JAXBElement(_QueryVsanStatistics_QNAME, QueryVsanStatisticsRequestType.class, null, paramQueryVsanStatisticsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveKmipServersStatus_Task")
  public JAXBElement<RetrieveKmipServersStatusRequestType> createRetrieveKmipServersStatusTask(RetrieveKmipServersStatusRequestType paramRetrieveKmipServersStatusRequestType) {
    return new JAXBElement(_RetrieveKmipServersStatusTask_QNAME, RetrieveKmipServersStatusRequestType.class, null, paramRetrieveKmipServersStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchMetadataNotFoundFault")
  public JAXBElement<PatchMetadataNotFound> createPatchMetadataNotFoundFault(PatchMetadataNotFound paramPatchMetadataNotFound) {
    return new JAXBElement(_PatchMetadataNotFoundFault_QNAME, PatchMetadataNotFound.class, null, paramPatchMetadataNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshDateTimeSystem")
  public JAXBElement<RefreshDateTimeSystemRequestType> createRefreshDateTimeSystem(RefreshDateTimeSystemRequestType paramRefreshDateTimeSystemRequestType) {
    return new JAXBElement(_RefreshDateTimeSystem_QNAME, RefreshDateTimeSystemRequestType.class, null, paramRefreshDateTimeSystemRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TurnOffFaultToleranceForVM_Task")
  public JAXBElement<TurnOffFaultToleranceForVMRequestType> createTurnOffFaultToleranceForVMTask(TurnOffFaultToleranceForVMRequestType paramTurnOffFaultToleranceForVMRequestType) {
    return new JAXBElement(_TurnOffFaultToleranceForVMTask_QNAME, TurnOffFaultToleranceForVMRequestType.class, null, paramTurnOffFaultToleranceForVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveScheduledTask")
  public JAXBElement<RemoveScheduledTaskRequestType> createRemoveScheduledTask(RemoveScheduledTaskRequestType paramRemoveScheduledTaskRequestType) {
    return new JAXBElement(_RemoveScheduledTask_QNAME, RemoveScheduledTaskRequestType.class, null, paramRemoveScheduledTaskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoAvailableIpFault")
  public JAXBElement<NoAvailableIp> createNoAvailableIpFault(NoAvailableIp paramNoAvailableIp) {
    return new JAXBElement(_NoAvailableIpFault_QNAME, NoAvailableIp.class, null, paramNoAvailableIp);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "Logout")
  public JAXBElement<LogoutRequestType> createLogout(LogoutRequestType paramLogoutRequestType) {
    return new JAXBElement(_Logout_QNAME, LogoutRequestType.class, null, paramLogoutRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ChangeOwner")
  public JAXBElement<ChangeOwnerRequestType> createChangeOwner(ChangeOwnerRequestType paramChangeOwnerRequestType) {
    return new JAXBElement(_ChangeOwner_QNAME, ChangeOwnerRequestType.class, null, paramChangeOwnerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryOptions")
  public JAXBElement<QueryOptionsRequestType> createQueryOptions(QueryOptionsRequestType paramQueryOptionsRequestType) {
    return new JAXBElement(_QueryOptions_QNAME, QueryOptionsRequestType.class, null, paramQueryOptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RestrictedByAdministratorFault")
  public JAXBElement<RestrictedByAdministrator> createRestrictedByAdministratorFault(RestrictedByAdministrator paramRestrictedByAdministrator) {
    return new JAXBElement(_RestrictedByAdministratorFault_QNAME, RestrictedByAdministrator.class, null, paramRestrictedByAdministrator);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FcoeFaultFault")
  public JAXBElement<FcoeFault> createFcoeFaultFault(FcoeFault paramFcoeFault) {
    return new JAXBElement(_FcoeFaultFault_QNAME, FcoeFault.class, null, paramFcoeFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultVnicNotBoundFault")
  public JAXBElement<IscsiFaultVnicNotBound> createIscsiFaultVnicNotBoundFault(IscsiFaultVnicNotBound paramIscsiFaultVnicNotBound) {
    return new JAXBElement(_IscsiFaultVnicNotBoundFault_QNAME, IscsiFaultVnicNotBound.class, null, paramIscsiFaultVnicNotBound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsHmsMoveInProgressFault")
  public JAXBElement<StorageDrsHmsMoveInProgress> createStorageDrsHmsMoveInProgressFault(StorageDrsHmsMoveInProgress paramStorageDrsHmsMoveInProgress) {
    return new JAXBElement(_StorageDrsHmsMoveInProgressFault_QNAME, StorageDrsHmsMoveInProgress.class, null, paramStorageDrsHmsMoveInProgress);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyCollector")
  public JAXBElement<DestroyCollectorRequestType> createDestroyCollector(DestroyCollectorRequestType paramDestroyCollectorRequestType) {
    return new JAXBElement(_DestroyCollector_QNAME, DestroyCollectorRequestType.class, null, paramDestroyCollectorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedHostForVsanFault")
  public JAXBElement<NotSupportedHostForVsan> createNotSupportedHostForVsanFault(NotSupportedHostForVsan paramNotSupportedHostForVsan) {
    return new JAXBElement(_NotSupportedHostForVsanFault_QNAME, NotSupportedHostForVsan.class, null, paramNotSupportedHostForVsan);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CpuIncompatible81EDXFault")
  public JAXBElement<CpuIncompatible81EDX> createCpuIncompatible81EDXFault(CpuIncompatible81EDX paramCpuIncompatible81EDX) {
    return new JAXBElement(_CpuIncompatible81EDXFault_QNAME, CpuIncompatible81EDX.class, null, paramCpuIncompatible81EDX);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisconnectedHostsBlockingEVCFault")
  public JAXBElement<DisconnectedHostsBlockingEVC> createDisconnectedHostsBlockingEVCFault(DisconnectedHostsBlockingEVC paramDisconnectedHostsBlockingEVC) {
    return new JAXBElement(_DisconnectedHostsBlockingEVCFault_QNAME, DisconnectedHostsBlockingEVC.class, null, paramDisconnectedHostsBlockingEVC);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteSnapshot_Task")
  public JAXBElement<DeleteSnapshotRequestType> createDeleteSnapshotTask(DeleteSnapshotRequestType paramDeleteSnapshotRequestType) {
    return new JAXBElement(_DeleteSnapshotTask_QNAME, DeleteSnapshotRequestType.class, null, paramDeleteSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SoftRuleVioCorrectionDisallowedFault")
  public JAXBElement<SoftRuleVioCorrectionDisallowed> createSoftRuleVioCorrectionDisallowedFault(SoftRuleVioCorrectionDisallowed paramSoftRuleVioCorrectionDisallowed) {
    return new JAXBElement(_SoftRuleVioCorrectionDisallowedFault_QNAME, SoftRuleVioCorrectionDisallowed.class, null, paramSoftRuleVioCorrectionDisallowed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryProviderList")
  public JAXBElement<QueryProviderListRequestType> createQueryProviderList(QueryProviderListRequestType paramQueryProviderListRequestType) {
    return new JAXBElement(_QueryProviderList_QNAME, QueryProviderListRequestType.class, null, paramQueryProviderListRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfImportFailedFault")
  public JAXBElement<OvfImportFailed> createOvfImportFailedFault(OvfImportFailed paramOvfImportFailed) {
    return new JAXBElement(_OvfImportFailedFault_QNAME, OvfImportFailed.class, null, paramOvfImportFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DvsApplyOperationFaultFault")
  public JAXBElement<DvsApplyOperationFault> createDvsApplyOperationFaultFault(DvsApplyOperationFault paramDvsApplyOperationFault) {
    return new JAXBElement(_DvsApplyOperationFaultFault_QNAME, DvsApplyOperationFault.class, null, paramDvsApplyOperationFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NasConfigFaultFault")
  public JAXBElement<NasConfigFault> createNasConfigFaultFault(NasConfigFault paramNasConfigFault) {
    return new JAXBElement(_NasConfigFaultFault_QNAME, NasConfigFault.class, null, paramNasConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TooManyNativeClonesOnFileFault")
  public JAXBElement<TooManyNativeClonesOnFile> createTooManyNativeClonesOnFileFault(TooManyNativeClonesOnFile paramTooManyNativeClonesOnFile) {
    return new JAXBElement(_TooManyNativeClonesOnFileFault_QNAME, TooManyNativeClonesOnFile.class, null, paramTooManyNativeClonesOnFile);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateDnsConfig")
  public JAXBElement<UpdateDnsConfigRequestType> createUpdateDnsConfig(UpdateDnsConfigRequestType paramUpdateDnsConfigRequestType) {
    return new JAXBElement(_UpdateDnsConfig_QNAME, UpdateDnsConfigRequestType.class, null, paramUpdateDnsConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveDiskMapping_Task")
  public JAXBElement<RemoveDiskMappingRequestType> createRemoveDiskMappingTask(RemoveDiskMappingRequestType paramRemoveDiskMappingRequestType) {
    return new JAXBElement(_RemoveDiskMappingTask_QNAME, RemoveDiskMappingRequestType.class, null, paramRemoveDiskMappingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateSystemResources")
  public JAXBElement<UpdateSystemResourcesRequestType> createUpdateSystemResources(UpdateSystemResourcesRequestType paramUpdateSystemResourcesRequestType) {
    return new JAXBElement(_UpdateSystemResources_QNAME, UpdateSystemResourcesRequestType.class, null, paramUpdateSystemResourcesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetMultipathLunPolicy")
  public JAXBElement<SetMultipathLunPolicyRequestType> createSetMultipathLunPolicy(SetMultipathLunPolicyRequestType paramSetMultipathLunPolicyRequestType) {
    return new JAXBElement(_SetMultipathLunPolicy_QNAME, SetMultipathLunPolicyRequestType.class, null, paramSetMultipathLunPolicyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureSnmpAgent")
  public JAXBElement<ReconfigureSnmpAgentRequestType> createReconfigureSnmpAgent(ReconfigureSnmpAgentRequestType paramReconfigureSnmpAgentRequestType) {
    return new JAXBElement(_ReconfigureSnmpAgent_QNAME, ReconfigureSnmpAgentRequestType.class, null, paramReconfigureSnmpAgentRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureHostForDAS_Task")
  public JAXBElement<ReconfigureHostForDASRequestType> createReconfigureHostForDASTask(ReconfigureHostForDASRequestType paramReconfigureHostForDASRequestType) {
    return new JAXBElement(_ReconfigureHostForDASTask_QNAME, ReconfigureHostForDASRequestType.class, null, paramReconfigureHostForDASRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateRegistryKeyInGuest")
  public JAXBElement<CreateRegistryKeyInGuestRequestType> createCreateRegistryKeyInGuest(CreateRegistryKeyInGuestRequestType paramCreateRegistryKeyInGuestRequestType) {
    return new JAXBElement(_CreateRegistryKeyInGuest_QNAME, CreateRegistryKeyInGuestRequestType.class, null, paramCreateRegistryKeyInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DiskHasPartitionsFault")
  public JAXBElement<DiskHasPartitions> createDiskHasPartitionsFault(DiskHasPartitions paramDiskHasPartitions) {
    return new JAXBElement(_DiskHasPartitionsFault_QNAME, DiskHasPartitions.class, null, paramDiskHasPartitions);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedHostInDvsFault")
  public JAXBElement<NotSupportedHostInDvs> createNotSupportedHostInDvsFault(NotSupportedHostInDvs paramNotSupportedHostInDvs) {
    return new JAXBElement(_NotSupportedHostInDvsFault_QNAME, NotSupportedHostInDvs.class, null, paramNotSupportedHostInDvs);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmSmpFaultToleranceTooManyVMsOnHostFault")
  public JAXBElement<VmSmpFaultToleranceTooManyVMsOnHost> createVmSmpFaultToleranceTooManyVMsOnHostFault(VmSmpFaultToleranceTooManyVMsOnHost paramVmSmpFaultToleranceTooManyVMsOnHost) {
    return new JAXBElement(_VmSmpFaultToleranceTooManyVMsOnHostFault_QNAME, VmSmpFaultToleranceTooManyVMsOnHost.class, null, paramVmSmpFaultToleranceTooManyVMsOnHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConsolidateVMDisks_Task")
  public JAXBElement<ConsolidateVMDisksRequestType> createConsolidateVMDisksTask(ConsolidateVMDisksRequestType paramConsolidateVMDisksRequestType) {
    return new JAXBElement(_ConsolidateVMDisksTask_QNAME, ConsolidateVMDisksRequestType.class, null, paramConsolidateVMDisksRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckAnswerFileStatus_Task")
  public JAXBElement<CheckAnswerFileStatusRequestType> createCheckAnswerFileStatusTask(CheckAnswerFileStatusRequestType paramCheckAnswerFileStatusRequestType) {
    return new JAXBElement(_CheckAnswerFileStatusTask_QNAME, CheckAnswerFileStatusRequestType.class, null, paramCheckAnswerFileStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfCpuCompatibilityFault")
  public JAXBElement<OvfCpuCompatibility> createOvfCpuCompatibilityFault(OvfCpuCompatibility paramOvfCpuCompatibility) {
    return new JAXBElement(_OvfCpuCompatibilityFault_QNAME, OvfCpuCompatibility.class, null, paramOvfCpuCompatibility);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestRegistryKeyParentVolatileFault")
  public JAXBElement<GuestRegistryKeyParentVolatile> createGuestRegistryKeyParentVolatileFault(GuestRegistryKeyParentVolatile paramGuestRegistryKeyParentVolatile) {
    return new JAXBElement(_GuestRegistryKeyParentVolatileFault_QNAME, GuestRegistryKeyParentVolatile.class, null, paramGuestRegistryKeyParentVolatile);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveAuthorizationRole")
  public JAXBElement<RemoveAuthorizationRoleRequestType> createRemoveAuthorizationRole(RemoveAuthorizationRoleRequestType paramRemoveAuthorizationRoleRequestType) {
    return new JAXBElement(_RemoveAuthorizationRole_QNAME, RemoveAuthorizationRoleRequestType.class, null, paramRemoveAuthorizationRoleRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveVmInUserFolderFault")
  public JAXBElement<StorageDrsCannotMoveVmInUserFolder> createStorageDrsCannotMoveVmInUserFolderFault(StorageDrsCannotMoveVmInUserFolder paramStorageDrsCannotMoveVmInUserFolder) {
    return new JAXBElement(_StorageDrsCannotMoveVmInUserFolderFault_QNAME, StorageDrsCannotMoveVmInUserFolder.class, null, paramStorageDrsCannotMoveVmInUserFolder);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyNetwork")
  public JAXBElement<DestroyNetworkRequestType> createDestroyNetwork(DestroyNetworkRequestType paramDestroyNetworkRequestType) {
    return new JAXBElement(_DestroyNetwork_QNAME, DestroyNetworkRequestType.class, null, paramDestroyNetworkRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateInternetScsiAuthenticationProperties")
  public JAXBElement<UpdateInternetScsiAuthenticationPropertiesRequestType> createUpdateInternetScsiAuthenticationProperties(UpdateInternetScsiAuthenticationPropertiesRequestType paramUpdateInternetScsiAuthenticationPropertiesRequestType) {
    return new JAXBElement(_UpdateInternetScsiAuthenticationProperties_QNAME, UpdateInternetScsiAuthenticationPropertiesRequestType.class, null, paramUpdateInternetScsiAuthenticationPropertiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDasConfigArgumentFault")
  public JAXBElement<InvalidDasConfigArgument> createInvalidDasConfigArgumentFault(InvalidDasConfigArgument paramInvalidDasConfigArgument) {
    return new JAXBElement(_InvalidDasConfigArgumentFault_QNAME, InvalidDasConfigArgument.class, null, paramInvalidDasConfigArgument);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostCloneVStorageObject_Task")
  public JAXBElement<HostCloneVStorageObjectRequestType> createHostCloneVStorageObjectTask(HostCloneVStorageObjectRequestType paramHostCloneVStorageObjectRequestType) {
    return new JAXBElement(_HostCloneVStorageObjectTask_QNAME, HostCloneVStorageObjectRequestType.class, null, paramHostCloneVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AutoStartPowerOff")
  public JAXBElement<AutoStartPowerOffRequestType> createAutoStartPowerOff(AutoStartPowerOffRequestType paramAutoStartPowerOffRequestType) {
    return new JAXBElement(_AutoStartPowerOff_QNAME, AutoStartPowerOffRequestType.class, null, paramAutoStartPowerOffRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NonHomeRDMVMotionNotSupportedFault")
  public JAXBElement<NonHomeRDMVMotionNotSupported> createNonHomeRDMVMotionNotSupportedFault(NonHomeRDMVMotionNotSupported paramNonHomeRDMVMotionNotSupported) {
    return new JAXBElement(_NonHomeRDMVMotionNotSupportedFault_QNAME, NonHomeRDMVMotionNotSupported.class, null, paramNonHomeRDMVMotionNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedTypeFault")
  public JAXBElement<OvfUnsupportedType> createOvfUnsupportedTypeFault(OvfUnsupportedType paramOvfUnsupportedType) {
    return new JAXBElement(_OvfUnsupportedTypeFault_QNAME, OvfUnsupportedType.class, null, paramOvfUnsupportedType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigureHostCache_Task")
  public JAXBElement<ConfigureHostCacheRequestType> createConfigureHostCacheTask(ConfigureHostCacheRequestType paramConfigureHostCacheRequestType) {
    return new JAXBElement(_ConfigureHostCacheTask_QNAME, ConfigureHostCacheRequestType.class, null, paramConfigureHostCacheRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveDasAdvancedRuntimeInfo")
  public JAXBElement<RetrieveDasAdvancedRuntimeInfoRequestType> createRetrieveDasAdvancedRuntimeInfo(RetrieveDasAdvancedRuntimeInfoRequestType paramRetrieveDasAdvancedRuntimeInfoRequestType) {
    return new JAXBElement(_RetrieveDasAdvancedRuntimeInfo_QNAME, RetrieveDasAdvancedRuntimeInfoRequestType.class, null, paramRetrieveDasAdvancedRuntimeInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AutoStartPowerOn")
  public JAXBElement<AutoStartPowerOnRequestType> createAutoStartPowerOn(AutoStartPowerOnRequestType paramAutoStartPowerOnRequestType) {
    return new JAXBElement(_AutoStartPowerOn_QNAME, AutoStartPowerOnRequestType.class, null, paramAutoStartPowerOnRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveVStorageObjectAssociations")
  public JAXBElement<RetrieveVStorageObjectAssociationsRequestType> createRetrieveVStorageObjectAssociations(RetrieveVStorageObjectAssociationsRequestType paramRetrieveVStorageObjectAssociationsRequestType) {
    return new JAXBElement(_RetrieveVStorageObjectAssociations_QNAME, RetrieveVStorageObjectAssociationsRequestType.class, null, paramRetrieveVStorageObjectAssociationsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InstallHostPatchV2_Task")
  public JAXBElement<InstallHostPatchV2RequestType> createInstallHostPatchV2Task(InstallHostPatchV2RequestType paramInstallHostPatchV2RequestType) {
    return new JAXBElement(_InstallHostPatchV2Task_QNAME, InstallHostPatchV2RequestType.class, null, paramInstallHostPatchV2RequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ClearSystemEventLog")
  public JAXBElement<ClearSystemEventLogRequestType> createClearSystemEventLog(ClearSystemEventLogRequestType paramClearSystemEventLogRequestType) {
    return new JAXBElement(_ClearSystemEventLog_QNAME, ClearSystemEventLogRequestType.class, null, paramClearSystemEventLogRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnknownDeviceFault")
  public JAXBElement<OvfUnknownDevice> createOvfUnknownDeviceFault(OvfUnknownDevice paramOvfUnknownDevice) {
    return new JAXBElement(_OvfUnknownDeviceFault_QNAME, OvfUnknownDevice.class, null, paramOvfUnknownDevice);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DecodeLicense")
  public JAXBElement<DecodeLicenseRequestType> createDecodeLicense(DecodeLicenseRequestType paramDecodeLicenseRequestType) {
    return new JAXBElement(_DecodeLicense_QNAME, DecodeLicenseRequestType.class, null, paramDecodeLicenseRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateTask")
  public JAXBElement<CreateTaskRequestType> createCreateTask(CreateTaskRequestType paramCreateTaskRequestType) {
    return new JAXBElement(_CreateTask_QNAME, CreateTaskRequestType.class, null, paramCreateTaskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigureDatastorePrincipal")
  public JAXBElement<ConfigureDatastorePrincipalRequestType> createConfigureDatastorePrincipal(ConfigureDatastorePrincipalRequestType paramConfigureDatastorePrincipalRequestType) {
    return new JAXBElement(_ConfigureDatastorePrincipal_QNAME, ConfigureDatastorePrincipalRequestType.class, null, paramConfigureDatastorePrincipalRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestAuthenticationChallengeFault")
  public JAXBElement<GuestAuthenticationChallenge> createGuestAuthenticationChallengeFault(GuestAuthenticationChallenge paramGuestAuthenticationChallenge) {
    return new JAXBElement(_GuestAuthenticationChallengeFault_QNAME, GuestAuthenticationChallenge.class, null, paramGuestAuthenticationChallenge);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GatewayToHostConnectFaultFault")
  public JAXBElement<GatewayToHostConnectFault> createGatewayToHostConnectFaultFault(GatewayToHostConnectFault paramGatewayToHostConnectFault) {
    return new JAXBElement(_GatewayToHostConnectFaultFault_QNAME, GatewayToHostConnectFault.class, null, paramGatewayToHostConnectFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshServices")
  public JAXBElement<RefreshServicesRequestType> createRefreshServices(RefreshServicesRequestType paramRefreshServicesRequestType) {
    return new JAXBElement(_RefreshServices_QNAME, RefreshServicesRequestType.class, null, paramRefreshServicesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IncompatibleHostForVmReplicationFault")
  public JAXBElement<IncompatibleHostForVmReplication> createIncompatibleHostForVmReplicationFault(IncompatibleHostForVmReplication paramIncompatibleHostForVmReplication) {
    return new JAXBElement(_IncompatibleHostForVmReplicationFault_QNAME, IncompatibleHostForVmReplication.class, null, paramIncompatibleHostForVmReplication);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfDuplicatedElementBoundaryFault")
  public JAXBElement<OvfDuplicatedElementBoundary> createOvfDuplicatedElementBoundaryFault(OvfDuplicatedElementBoundary paramOvfDuplicatedElementBoundary) {
    return new JAXBElement(_OvfDuplicatedElementBoundaryFault_QNAME, OvfDuplicatedElementBoundary.class, null, paramOvfDuplicatedElementBoundary);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NumVirtualCpusExceedsLimitFault")
  public JAXBElement<NumVirtualCpusExceedsLimit> createNumVirtualCpusExceedsLimitFault(NumVirtualCpusExceedsLimit paramNumVirtualCpusExceedsLimit) {
    return new JAXBElement(_NumVirtualCpusExceedsLimitFault_QNAME, NumVirtualCpusExceedsLimit.class, null, paramNumVirtualCpusExceedsLimit);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfNetworkMappingNotSupportedFault")
  public JAXBElement<OvfNetworkMappingNotSupported> createOvfNetworkMappingNotSupportedFault(OvfNetworkMappingNotSupported paramOvfNetworkMappingNotSupported) {
    return new JAXBElement(_OvfNetworkMappingNotSupportedFault_QNAME, OvfNetworkMappingNotSupported.class, null, paramOvfNetworkMappingNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveEntityPermissions")
  public JAXBElement<RetrieveEntityPermissionsRequestType> createRetrieveEntityPermissions(RetrieveEntityPermissionsRequestType paramRetrieveEntityPermissionsRequestType) {
    return new JAXBElement(_RetrieveEntityPermissions_QNAME, RetrieveEntityPermissionsRequestType.class, null, paramRetrieveEntityPermissionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDrsBehaviorForFtVmFault")
  public JAXBElement<InvalidDrsBehaviorForFtVm> createInvalidDrsBehaviorForFtVmFault(InvalidDrsBehaviorForFtVm paramInvalidDrsBehaviorForFtVm) {
    return new JAXBElement(_InvalidDrsBehaviorForFtVmFault_QNAME, InvalidDrsBehaviorForFtVm.class, null, paramInvalidDrsBehaviorForFtVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveVmWithMountedCDROMFault")
  public JAXBElement<StorageDrsCannotMoveVmWithMountedCDROM> createStorageDrsCannotMoveVmWithMountedCDROMFault(StorageDrsCannotMoveVmWithMountedCDROM paramStorageDrsCannotMoveVmWithMountedCDROM) {
    return new JAXBElement(_StorageDrsCannotMoveVmWithMountedCDROMFault_QNAME, StorageDrsCannotMoveVmWithMountedCDROM.class, null, paramStorageDrsCannotMoveVmWithMountedCDROM);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableMultipathPath")
  public JAXBElement<EnableMultipathPathRequestType> createEnableMultipathPath(EnableMultipathPathRequestType paramEnableMultipathPathRequestType) {
    return new JAXBElement(_EnableMultipathPath_QNAME, EnableMultipathPathRequestType.class, null, paramEnableMultipathPathRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveAssignedLicense")
  public JAXBElement<RemoveAssignedLicenseRequestType> createRemoveAssignedLicense(RemoveAssignedLicenseRequestType paramRemoveAssignedLicenseRequestType) {
    return new JAXBElement(_RemoveAssignedLicense_QNAME, RemoveAssignedLicenseRequestType.class, null, paramRemoveAssignedLicenseRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateInventoryView")
  public JAXBElement<CreateInventoryViewRequestType> createCreateInventoryView(CreateInventoryViewRequestType paramCreateInventoryViewRequestType) {
    return new JAXBElement(_CreateInventoryView_QNAME, CreateInventoryViewRequestType.class, null, paramCreateInventoryViewRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ApplyHostConfig_Task")
  public JAXBElement<ApplyHostConfigRequestType> createApplyHostConfigTask(ApplyHostConfigRequestType paramApplyHostConfigRequestType) {
    return new JAXBElement(_ApplyHostConfigTask_QNAME, ApplyHostConfigRequestType.class, null, paramApplyHostConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ChangeAccessMode")
  public JAXBElement<ChangeAccessModeRequestType> createChangeAccessMode(ChangeAccessModeRequestType paramChangeAccessModeRequestType) {
    return new JAXBElement(_ChangeAccessMode_QNAME, ChangeAccessModeRequestType.class, null, paramChangeAccessModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfDuplicatedPropertyIdImportFault")
  public JAXBElement<OvfDuplicatedPropertyIdImport> createOvfDuplicatedPropertyIdImportFault(OvfDuplicatedPropertyIdImport paramOvfDuplicatedPropertyIdImport) {
    return new JAXBElement(_OvfDuplicatedPropertyIdImportFault_QNAME, OvfDuplicatedPropertyIdImport.class, null, paramOvfDuplicatedPropertyIdImport);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotFaultFault")
  public JAXBElement<SnapshotFault> createSnapshotFaultFault(SnapshotFault paramSnapshotFault) {
    return new JAXBElement(_SnapshotFaultFault_QNAME, SnapshotFault.class, null, paramSnapshotFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ComputeDiskPartitionInfo")
  public JAXBElement<ComputeDiskPartitionInfoRequestType> createComputeDiskPartitionInfo(ComputeDiskPartitionInfoRequestType paramComputeDiskPartitionInfoRequestType) {
    return new JAXBElement(_ComputeDiskPartitionInfo_QNAME, ComputeDiskPartitionInfoRequestType.class, null, paramComputeDiskPartitionInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddMonitoredEntities")
  public JAXBElement<AddMonitoredEntitiesRequestType> createAddMonitoredEntities(AddMonitoredEntitiesRequestType paramAddMonitoredEntitiesRequestType) {
    return new JAXBElement(_AddMonitoredEntities_QNAME, AddMonitoredEntitiesRequestType.class, null, paramAddMonitoredEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfNoSupportedHardwareFamilyFault")
  public JAXBElement<OvfNoSupportedHardwareFamily> createOvfNoSupportedHardwareFamilyFault(OvfNoSupportedHardwareFamily paramOvfNoSupportedHardwareFamily) {
    return new JAXBElement(_OvfNoSupportedHardwareFamilyFault_QNAME, OvfNoSupportedHardwareFamily.class, null, paramOvfNoSupportedHardwareFamily);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ShutdownHost_Task")
  public JAXBElement<ShutdownHostRequestType> createShutdownHostTask(ShutdownHostRequestType paramShutdownHostRequestType) {
    return new JAXBElement(_ShutdownHostTask_QNAME, ShutdownHostRequestType.class, null, paramShutdownHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotEnoughLogicalCpusFault")
  public JAXBElement<NotEnoughLogicalCpus> createNotEnoughLogicalCpusFault(NotEnoughLogicalCpus paramNotEnoughLogicalCpus) {
    return new JAXBElement(_NotEnoughLogicalCpusFault_QNAME, NotEnoughLogicalCpus.class, null, paramNotEnoughLogicalCpus);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MissingWindowsCustResourcesFault")
  public JAXBElement<MissingWindowsCustResources> createMissingWindowsCustResourcesFault(MissingWindowsCustResources paramMissingWindowsCustResources) {
    return new JAXBElement(_MissingWindowsCustResourcesFault_QNAME, MissingWindowsCustResources.class, null, paramMissingWindowsCustResources);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GatewayNotReachableFault")
  public JAXBElement<GatewayNotReachable> createGatewayNotReachableFault(GatewayNotReachable paramGatewayNotReachable) {
    return new JAXBElement(_GatewayNotReachableFault_QNAME, GatewayNotReachable.class, null, paramGatewayNotReachable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmConfigFaultFault")
  public JAXBElement<VmConfigFault> createVmConfigFaultFault(VmConfigFault paramVmConfigFault) {
    return new JAXBElement(_VmConfigFaultFault_QNAME, VmConfigFault.class, null, paramVmConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SessionIsActive")
  public JAXBElement<SessionIsActiveRequestType> createSessionIsActive(SessionIsActiveRequestType paramSessionIsActiveRequestType) {
    return new JAXBElement(_SessionIsActive_QNAME, SessionIsActiveRequestType.class, null, paramSessionIsActiveRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableEvcMode_Task")
  public JAXBElement<DisableEvcModeRequestType> createDisableEvcModeTask(DisableEvcModeRequestType paramDisableEvcModeRequestType) {
    return new JAXBElement(_DisableEvcModeTask_QNAME, DisableEvcModeRequestType.class, null, paramDisableEvcModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotDisableSnapshotFault")
  public JAXBElement<CannotDisableSnapshot> createCannotDisableSnapshotFault(CannotDisableSnapshot paramCannotDisableSnapshot) {
    return new JAXBElement(_CannotDisableSnapshotFault_QNAME, CannotDisableSnapshot.class, null, paramCannotDisableSnapshot);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeviceUnsupportedForVmPlatformFault")
  public JAXBElement<DeviceUnsupportedForVmPlatform> createDeviceUnsupportedForVmPlatformFault(DeviceUnsupportedForVmPlatform paramDeviceUnsupportedForVmPlatform) {
    return new JAXBElement(_DeviceUnsupportedForVmPlatformFault_QNAME, DeviceUnsupportedForVmPlatform.class, null, paramDeviceUnsupportedForVmPlatform);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnassignUserFromGroup")
  public JAXBElement<UnassignUserFromGroupRequestType> createUnassignUserFromGroup(UnassignUserFromGroupRequestType paramUnassignUserFromGroupRequestType) {
    return new JAXBElement(_UnassignUserFromGroup_QNAME, UnassignUserFromGroupRequestType.class, null, paramUnassignUserFromGroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VAppTaskInProgressFault")
  public JAXBElement<VAppTaskInProgress> createVAppTaskInProgressFault(VAppTaskInProgress paramVAppTaskInProgress) {
    return new JAXBElement(_VAppTaskInProgressFault_QNAME, VAppTaskInProgress.class, null, paramVAppTaskInProgress);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DVSManagerLookupDvPortGroup")
  public JAXBElement<DVSManagerLookupDvPortGroupRequestType> createDVSManagerLookupDvPortGroup(DVSManagerLookupDvPortGroupRequestType paramDVSManagerLookupDvPortGroupRequestType) {
    return new JAXBElement(_DVSManagerLookupDvPortGroup_QNAME, DVSManagerLookupDvPortGroupRequestType.class, null, paramDVSManagerLookupDvPortGroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReleaseIpAllocation")
  public JAXBElement<ReleaseIpAllocationRequestType> createReleaseIpAllocation(ReleaseIpAllocationRequestType paramReleaseIpAllocationRequestType) {
    return new JAXBElement(_ReleaseIpAllocation_QNAME, ReleaseIpAllocationRequestType.class, null, paramReleaseIpAllocationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostUpdateVStorageObjectMetadata_Task")
  public JAXBElement<HostUpdateVStorageObjectMetadataRequestType> createHostUpdateVStorageObjectMetadataTask(HostUpdateVStorageObjectMetadataRequestType paramHostUpdateVStorageObjectMetadataRequestType) {
    return new JAXBElement(_HostUpdateVStorageObjectMetadataTask_QNAME, HostUpdateVStorageObjectMetadataRequestType.class, null, paramHostUpdateVStorageObjectMetadataRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DvsFaultFault")
  public JAXBElement<DvsFault> createDvsFaultFault(DvsFault paramDvsFault) {
    return new JAXBElement(_DvsFaultFault_QNAME, DvsFault.class, null, paramDvsFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConstraintFault")
  public JAXBElement<OvfConstraint> createOvfConstraintFault(OvfConstraint paramOvfConstraint) {
    return new JAXBElement(_OvfConstraintFault_QNAME, OvfConstraint.class, null, paramOvfConstraint);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateNetworkResourcePool")
  public JAXBElement<UpdateNetworkResourcePoolRequestType> createUpdateNetworkResourcePool(UpdateNetworkResourcePoolRequestType paramUpdateNetworkResourcePoolRequestType) {
    return new JAXBElement(_UpdateNetworkResourcePool_QNAME, UpdateNetworkResourcePoolRequestType.class, null, paramUpdateNetworkResourcePoolRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GatewayOperationRefusedFault")
  public JAXBElement<GatewayOperationRefused> createGatewayOperationRefusedFault(GatewayOperationRefused paramGatewayOperationRefused) {
    return new JAXBElement(_GatewayOperationRefusedFault_QNAME, GatewayOperationRefused.class, null, paramGatewayOperationRefused);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostRenameVStorageObject")
  public JAXBElement<HostRenameVStorageObjectRequestType> createHostRenameVStorageObject(HostRenameVStorageObjectRequestType paramHostRenameVStorageObjectRequestType) {
    return new JAXBElement(_HostRenameVStorageObject_QNAME, HostRenameVStorageObjectRequestType.class, null, paramHostRenameVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConsumerInvalidSectionFault")
  public JAXBElement<OvfConsumerInvalidSection> createOvfConsumerInvalidSectionFault(OvfConsumerInvalidSection paramOvfConsumerInvalidSection) {
    return new JAXBElement(_OvfConsumerInvalidSectionFault_QNAME, OvfConsumerInvalidSection.class, null, paramOvfConsumerInvalidSection);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryFilterEntities")
  public JAXBElement<QueryFilterEntitiesRequestType> createQueryFilterEntities(QueryFilterEntitiesRequestType paramQueryFilterEntitiesRequestType) {
    return new JAXBElement(_QueryFilterEntities_QNAME, QueryFilterEntitiesRequestType.class, null, paramQueryFilterEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenerateConfigTaskList")
  public JAXBElement<GenerateConfigTaskListRequestType> createGenerateConfigTaskList(GenerateConfigTaskListRequestType paramGenerateConfigTaskListRequestType) {
    return new JAXBElement(_GenerateConfigTaskList_QNAME, GenerateConfigTaskListRequestType.class, null, paramGenerateConfigTaskListRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveSmartCardTrustAnchor")
  public JAXBElement<RemoveSmartCardTrustAnchorRequestType> createRemoveSmartCardTrustAnchor(RemoveSmartCardTrustAnchorRequestType paramRemoveSmartCardTrustAnchorRequestType) {
    return new JAXBElement(_RemoveSmartCardTrustAnchor_QNAME, RemoveSmartCardTrustAnchorRequestType.class, null, paramRemoveSmartCardTrustAnchorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ToolsImageCopyFailedFault")
  public JAXBElement<ToolsImageCopyFailed> createToolsImageCopyFailedFault(ToolsImageCopyFailed paramToolsImageCopyFailed) {
    return new JAXBElement(_ToolsImageCopyFailedFault_QNAME, ToolsImageCopyFailed.class, null, paramToolsImageCopyFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableAlarm")
  public JAXBElement<EnableAlarmRequestType> createEnableAlarm(EnableAlarmRequestType paramEnableAlarmRequestType) {
    return new JAXBElement(_EnableAlarm_QNAME, EnableAlarmRequestType.class, null, paramEnableAlarmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedSubTypeFault")
  public JAXBElement<OvfUnsupportedSubType> createOvfUnsupportedSubTypeFault(OvfUnsupportedSubType paramOvfUnsupportedSubType) {
    return new JAXBElement(_OvfUnsupportedSubTypeFault_QNAME, OvfUnsupportedSubType.class, null, paramOvfUnsupportedSubType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostVStorageObjectRevert_Task")
  public JAXBElement<HostVStorageObjectRevertRequestType> createHostVStorageObjectRevertTask(HostVStorageObjectRevertRequestType paramHostVStorageObjectRevertRequestType) {
    return new JAXBElement(_HostVStorageObjectRevertTask_QNAME, HostVStorageObjectRevertRequestType.class, null, paramHostVStorageObjectRevertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAccessLocalSourceFault")
  public JAXBElement<CannotAccessLocalSource> createCannotAccessLocalSourceFault(CannotAccessLocalSource paramCannotAccessLocalSource) {
    return new JAXBElement(_CannotAccessLocalSourceFault_QNAME, CannotAccessLocalSource.class, null, paramCannotAccessLocalSource);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVsan_Task")
  public JAXBElement<UpdateVsanRequestType> createUpdateVsanTask(UpdateVsanRequestType paramUpdateVsanRequestType) {
    return new JAXBElement(_UpdateVsanTask_QNAME, UpdateVsanRequestType.class, null, paramUpdateVsanRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExportProfile")
  public JAXBElement<ExportProfileRequestType> createExportProfile(ExportProfileRequestType paramExportProfileRequestType) {
    return new JAXBElement(_ExportProfile_QNAME, ExportProfileRequestType.class, null, paramExportProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PostHealthUpdates")
  public JAXBElement<PostHealthUpdatesRequestType> createPostHealthUpdates(PostHealthUpdatesRequestType paramPostHealthUpdatesRequestType) {
    return new JAXBElement(_PostHealthUpdates_QNAME, PostHealthUpdatesRequestType.class, null, paramPostHealthUpdatesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotChangeDrsBehaviorForFtSecondaryFault")
  public JAXBElement<CannotChangeDrsBehaviorForFtSecondary> createCannotChangeDrsBehaviorForFtSecondaryFault(CannotChangeDrsBehaviorForFtSecondary paramCannotChangeDrsBehaviorForFtSecondary) {
    return new JAXBElement(_CannotChangeDrsBehaviorForFtSecondaryFault_QNAME, CannotChangeDrsBehaviorForFtSecondary.class, null, paramCannotChangeDrsBehaviorForFtSecondary);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidArgumentFault")
  public JAXBElement<InvalidArgument> createInvalidArgumentFault(InvalidArgument paramInvalidArgument) {
    return new JAXBElement(_InvalidArgumentFault_QNAME, InvalidArgument.class, null, paramInvalidArgument);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CurrentTime")
  public JAXBElement<CurrentTimeRequestType> createCurrentTime(CurrentTimeRequestType paramCurrentTimeRequestType) {
    return new JAXBElement(_CurrentTime_QNAME, CurrentTimeRequestType.class, null, paramCurrentTimeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryTpmAttestationReport")
  public JAXBElement<QueryTpmAttestationReportRequestType> createQueryTpmAttestationReport(QueryTpmAttestationReportRequestType paramQueryTpmAttestationReportRequestType) {
    return new JAXBElement(_QueryTpmAttestationReport_QNAME, QueryTpmAttestationReportRequestType.class, null, paramQueryTpmAttestationReportRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListGuestMappedAliases")
  public JAXBElement<ListGuestMappedAliasesRequestType> createListGuestMappedAliases(ListGuestMappedAliasesRequestType paramListGuestMappedAliasesRequestType) {
    return new JAXBElement(_ListGuestMappedAliases_QNAME, ListGuestMappedAliasesRequestType.class, null, paramListGuestMappedAliasesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryUsedVlanIdInDvs")
  public JAXBElement<QueryUsedVlanIdInDvsRequestType> createQueryUsedVlanIdInDvs(QueryUsedVlanIdInDvsRequestType paramQueryUsedVlanIdInDvsRequestType) {
    return new JAXBElement(_QueryUsedVlanIdInDvs_QNAME, QueryUsedVlanIdInDvsRequestType.class, null, paramQueryUsedVlanIdInDvsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TooManyConcurrentNativeClonesFault")
  public JAXBElement<TooManyConcurrentNativeClones> createTooManyConcurrentNativeClonesFault(TooManyConcurrentNativeClones paramTooManyConcurrentNativeClones) {
    return new JAXBElement(_TooManyConcurrentNativeClonesFault_QNAME, TooManyConcurrentNativeClones.class, null, paramTooManyConcurrentNativeClones);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidRequestFault")
  public JAXBElement<InvalidRequest> createInvalidRequestFault(InvalidRequest paramInvalidRequest) {
    return new JAXBElement(_InvalidRequestFault_QNAME, InvalidRequest.class, null, paramInvalidRequest);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryFilterName")
  public JAXBElement<QueryFilterNameRequestType> createQueryFilterName(QueryFilterNameRequestType paramQueryFilterNameRequestType) {
    return new JAXBElement(_QueryFilterName_QNAME, QueryFilterNameRequestType.class, null, paramQueryFilterNameRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RegisterChildVM_Task")
  public JAXBElement<RegisterChildVMRequestType> createRegisterChildVMTask(RegisterChildVMRequestType paramRegisterChildVMRequestType) {
    return new JAXBElement(_RegisterChildVMTask_QNAME, RegisterChildVMRequestType.class, null, paramRegisterChildVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryResourceConfigOption")
  public JAXBElement<QueryResourceConfigOptionRequestType> createQueryResourceConfigOption(QueryResourceConfigOptionRequestType paramQueryResourceConfigOptionRequestType) {
    return new JAXBElement(_QueryResourceConfigOption_QNAME, QueryResourceConfigOptionRequestType.class, null, paramQueryResourceConfigOptionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotADirectoryFault")
  public JAXBElement<NotADirectory> createNotADirectoryFault(NotADirectory paramNotADirectory) {
    return new JAXBElement(_NotADirectoryFault_QNAME, NotADirectory.class, null, paramNotADirectory);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateAuthorizationRole")
  public JAXBElement<UpdateAuthorizationRoleRequestType> createUpdateAuthorizationRole(UpdateAuthorizationRoleRequestType paramUpdateAuthorizationRoleRequestType) {
    return new JAXBElement(_UpdateAuthorizationRole_QNAME, UpdateAuthorizationRoleRequestType.class, null, paramUpdateAuthorizationRoleRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateHostSpecification")
  public JAXBElement<UpdateHostSpecificationRequestType> createUpdateHostSpecification(UpdateHostSpecificationRequestType paramUpdateHostSpecificationRequestType) {
    return new JAXBElement(_UpdateHostSpecification_QNAME, UpdateHostSpecificationRequestType.class, null, paramUpdateHostSpecificationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidEditionLicenseFault")
  public JAXBElement<InvalidEditionLicense> createInvalidEditionLicenseFault(InvalidEditionLicense paramInvalidEditionLicense) {
    return new JAXBElement(_InvalidEditionLicenseFault_QNAME, InvalidEditionLicense.class, null, paramInvalidEditionLicense);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveEntityPermission")
  public JAXBElement<RemoveEntityPermissionRequestType> createRemoveEntityPermission(RemoveEntityPermissionRequestType paramRemoveEntityPermissionRequestType) {
    return new JAXBElement(_RemoveEntityPermission_QNAME, RemoveEntityPermissionRequestType.class, null, paramRemoveEntityPermissionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotEnoughLicensesFault")
  public JAXBElement<NotEnoughLicenses> createNotEnoughLicensesFault(NotEnoughLicenses paramNotEnoughLicenses) {
    return new JAXBElement(_NotEnoughLicensesFault_QNAME, NotEnoughLicenses.class, null, paramNotEnoughLicenses);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmHostAffinityRuleViolationFault")
  public JAXBElement<VmHostAffinityRuleViolation> createVmHostAffinityRuleViolationFault(VmHostAffinityRuleViolation paramVmHostAffinityRuleViolation) {
    return new JAXBElement(_VmHostAffinityRuleViolationFault_QNAME, VmHostAffinityRuleViolation.class, null, paramVmHostAffinityRuleViolation);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ActiveDirectoryFaultFault")
  public JAXBElement<ActiveDirectoryFault> createActiveDirectoryFaultFault(ActiveDirectoryFault paramActiveDirectoryFault) {
    return new JAXBElement(_ActiveDirectoryFaultFault_QNAME, ActiveDirectoryFault.class, null, paramActiveDirectoryFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoPermissionFault")
  public JAXBElement<NoPermission> createNoPermissionFault(NoPermission paramNoPermission) {
    return new JAXBElement(_NoPermissionFault_QNAME, NoPermission.class, null, paramNoPermission);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchAlreadyInstalledFault")
  public JAXBElement<PatchAlreadyInstalled> createPatchAlreadyInstalledFault(PatchAlreadyInstalled paramPatchAlreadyInstalled) {
    return new JAXBElement(_PatchAlreadyInstalledFault_QNAME, PatchAlreadyInstalled.class, null, paramPatchAlreadyInstalled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeselectVnicForNicType")
  public JAXBElement<DeselectVnicForNicTypeRequestType> createDeselectVnicForNicType(DeselectVnicForNicTypeRequestType paramDeselectVnicForNicTypeRequestType) {
    return new JAXBElement(_DeselectVnicForNicType_QNAME, DeselectVnicForNicTypeRequestType.class, null, paramDeselectVnicForNicTypeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyDatastore")
  public JAXBElement<DestroyDatastoreRequestType> createDestroyDatastore(DestroyDatastoreRequestType paramDestroyDatastoreRequestType) {
    return new JAXBElement(_DestroyDatastore_QNAME, DestroyDatastoreRequestType.class, null, paramDestroyDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryNetworkHint")
  public JAXBElement<QueryNetworkHintRequestType> createQueryNetworkHint(QueryNetworkHintRequestType paramQueryNetworkHintRequestType) {
    return new JAXBElement(_QueryNetworkHint_QNAME, QueryNetworkHintRequestType.class, null, paramQueryNetworkHintRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableFeature")
  public JAXBElement<DisableFeatureRequestType> createDisableFeature(DisableFeatureRequestType paramDisableFeatureRequestType) {
    return new JAXBElement(_DisableFeature_QNAME, DisableFeatureRequestType.class, null, paramDisableFeatureRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedHostForVmemFileFault")
  public JAXBElement<NotSupportedHostForVmemFile> createNotSupportedHostForVmemFileFault(NotSupportedHostForVmemFile paramNotSupportedHostForVmemFile) {
    return new JAXBElement(_NotSupportedHostForVmemFileFault_QNAME, NotSupportedHostForVmemFile.class, null, paramNotSupportedHostForVmemFile);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenericDrsFaultFault")
  public JAXBElement<GenericDrsFault> createGenericDrsFaultFault(GenericDrsFault paramGenericDrsFault) {
    return new JAXBElement(_GenericDrsFaultFault_QNAME, GenericDrsFault.class, null, paramGenericDrsFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HeterogenousHostsBlockingEVCFault")
  public JAXBElement<HeterogenousHostsBlockingEVC> createHeterogenousHostsBlockingEVCFault(HeterogenousHostsBlockingEVC paramHeterogenousHostsBlockingEVC) {
    return new JAXBElement(_HeterogenousHostsBlockingEVCFault_QNAME, HeterogenousHostsBlockingEVC.class, null, paramHeterogenousHostsBlockingEVC);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDeviceBackingFault")
  public JAXBElement<InvalidDeviceBacking> createInvalidDeviceBackingFault(InvalidDeviceBacking paramInvalidDeviceBacking) {
    return new JAXBElement(_InvalidDeviceBackingFault_QNAME, InvalidDeviceBacking.class, null, paramInvalidDeviceBacking);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryConfigOptionEx")
  public JAXBElement<QueryConfigOptionExRequestType> createQueryConfigOptionEx(QueryConfigOptionExRequestType paramQueryConfigOptionExRequestType) {
    return new JAXBElement(_QueryConfigOptionEx_QNAME, QueryConfigOptionExRequestType.class, null, paramQueryConfigOptionExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HasPrivilegeOnEntities")
  public JAXBElement<HasPrivilegeOnEntitiesRequestType> createHasPrivilegeOnEntities(HasPrivilegeOnEntitiesRequestType paramHasPrivilegeOnEntitiesRequestType) {
    return new JAXBElement(_HasPrivilegeOnEntities_QNAME, HasPrivilegeOnEntitiesRequestType.class, null, paramHasPrivilegeOnEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnregisterVM")
  public JAXBElement<UnregisterVMRequestType> createUnregisterVM(UnregisterVMRequestType paramUnregisterVMRequestType) {
    return new JAXBElement(_UnregisterVM_QNAME, UnregisterVMRequestType.class, null, paramUnregisterVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CloseInventoryViewFolder")
  public JAXBElement<CloseInventoryViewFolderRequestType> createCloseInventoryViewFolder(CloseInventoryViewFolderRequestType paramCloseInventoryViewFolderRequestType) {
    return new JAXBElement(_CloseInventoryViewFolder_QNAME, CloseInventoryViewFolderRequestType.class, null, paramCloseInventoryViewFolderRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateAlarm")
  public JAXBElement<CreateAlarmRequestType> createCreateAlarm(CreateAlarmRequestType paramCreateAlarmRequestType) {
    return new JAXBElement(_CreateAlarm_QNAME, CreateAlarmRequestType.class, null, paramCreateAlarmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidNasCredentialsFault")
  public JAXBElement<InvalidNasCredentials> createInvalidNasCredentialsFault(InvalidNasCredentials paramInvalidNasCredentials) {
    return new JAXBElement(_InvalidNasCredentialsFault_QNAME, InvalidNasCredentials.class, null, paramInvalidNasCredentials);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVirtualDiskGeometry")
  public JAXBElement<QueryVirtualDiskGeometryRequestType> createQueryVirtualDiskGeometry(QueryVirtualDiskGeometryRequestType paramQueryVirtualDiskGeometryRequestType) {
    return new JAXBElement(_QueryVirtualDiskGeometry_QNAME, QueryVirtualDiskGeometryRequestType.class, null, paramQueryVirtualDiskGeometryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AbdicateDomOwnership")
  public JAXBElement<AbdicateDomOwnershipRequestType> createAbdicateDomOwnership(AbdicateDomOwnershipRequestType paramAbdicateDomOwnershipRequestType) {
    return new JAXBElement(_AbdicateDomOwnership_QNAME, AbdicateDomOwnershipRequestType.class, null, paramAbdicateDomOwnershipRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAddHostWithFTVmToNonHAClusterFault")
  public JAXBElement<CannotAddHostWithFTVmToNonHACluster> createCannotAddHostWithFTVmToNonHAClusterFault(CannotAddHostWithFTVmToNonHACluster paramCannotAddHostWithFTVmToNonHACluster) {
    return new JAXBElement(_CannotAddHostWithFTVmToNonHAClusterFault_QNAME, CannotAddHostWithFTVmToNonHACluster.class, null, paramCannotAddHostWithFTVmToNonHACluster);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigurationSatisfiable")
  public JAXBElement<ReconfigurationSatisfiableRequestType> createReconfigurationSatisfiable(ReconfigurationSatisfiableRequestType paramReconfigurationSatisfiableRequestType) {
    return new JAXBElement(_ReconfigurationSatisfiable_QNAME, ReconfigurationSatisfiableRequestType.class, null, paramReconfigurationSatisfiableRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SwapDatastoreNotWritableOnHostFault")
  public JAXBElement<SwapDatastoreNotWritableOnHost> createSwapDatastoreNotWritableOnHostFault(SwapDatastoreNotWritableOnHost paramSwapDatastoreNotWritableOnHost) {
    return new JAXBElement(_SwapDatastoreNotWritableOnHostFault_QNAME, SwapDatastoreNotWritableOnHost.class, null, paramSwapDatastoreNotWritableOnHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestinationSwitchFullFault")
  public JAXBElement<DestinationSwitchFull> createDestinationSwitchFullFault(DestinationSwitchFull paramDestinationSwitchFull) {
    return new JAXBElement(_DestinationSwitchFullFault_QNAME, DestinationSwitchFull.class, null, paramDestinationSwitchFull);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshGraphicsManager")
  public JAXBElement<RefreshGraphicsManagerRequestType> createRefreshGraphicsManager(RefreshGraphicsManagerRequestType paramRefreshGraphicsManagerRequestType) {
    return new JAXBElement(_RefreshGraphicsManager_QNAME, RefreshGraphicsManagerRequestType.class, null, paramRefreshGraphicsManagerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PowerOffVM_Task")
  public JAXBElement<PowerOffVMRequestType> createPowerOffVMTask(PowerOffVMRequestType paramPowerOffVMRequestType) {
    return new JAXBElement(_PowerOffVMTask_QNAME, PowerOffVMRequestType.class, null, paramPowerOffVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedFault")
  public JAXBElement<NotSupported> createNotSupportedFault(NotSupported paramNotSupported) {
    return new JAXBElement(_NotSupportedFault_QNAME, NotSupported.class, null, paramNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedElementFault")
  public JAXBElement<OvfUnsupportedElement> createOvfUnsupportedElementFault(OvfUnsupportedElement paramOvfUnsupportedElement) {
    return new JAXBElement(_OvfUnsupportedElementFault_QNAME, OvfUnsupportedElement.class, null, paramOvfUnsupportedElement);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveDisk_Task")
  public JAXBElement<RemoveDiskRequestType> createRemoveDiskTask(RemoveDiskRequestType paramRemoveDiskRequestType) {
    return new JAXBElement(_RemoveDiskTask_QNAME, RemoveDiskRequestType.class, null, paramRemoveDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LoginExtensionBySubjectName")
  public JAXBElement<LoginExtensionBySubjectNameRequestType> createLoginExtensionBySubjectName(LoginExtensionBySubjectNameRequestType paramLoginExtensionBySubjectNameRequestType) {
    return new JAXBElement(_LoginExtensionBySubjectName_QNAME, LoginExtensionBySubjectNameRequestType.class, null, paramLoginExtensionBySubjectNameRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreatePerfInterval")
  public JAXBElement<CreatePerfIntervalRequestType> createCreatePerfInterval(CreatePerfIntervalRequestType paramCreatePerfIntervalRequestType) {
    return new JAXBElement(_CreatePerfInterval_QNAME, CreatePerfIntervalRequestType.class, null, paramCreatePerfIntervalRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddLicense")
  public JAXBElement<AddLicenseRequestType> createAddLicense(AddLicenseRequestType paramAddLicenseRequestType) {
    return new JAXBElement(_AddLicense_QNAME, AddLicenseRequestType.class, null, paramAddLicenseRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVsanUpgradeStatus")
  public JAXBElement<QueryVsanUpgradeStatusRequestType> createQueryVsanUpgradeStatus(QueryVsanUpgradeStatusRequestType paramQueryVsanUpgradeStatusRequestType) {
    return new JAXBElement(_QueryVsanUpgradeStatus_QNAME, QueryVsanUpgradeStatusRequestType.class, null, paramQueryVsanUpgradeStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FormatVmfs")
  public JAXBElement<FormatVmfsRequestType> createFormatVmfs(FormatVmfsRequestType paramFormatVmfsRequestType) {
    return new JAXBElement(_FormatVmfs_QNAME, FormatVmfsRequestType.class, null, paramFormatVmfsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotPlaceWithoutPrerequisiteMovesFault")
  public JAXBElement<CannotPlaceWithoutPrerequisiteMoves> createCannotPlaceWithoutPrerequisiteMovesFault(CannotPlaceWithoutPrerequisiteMoves paramCannotPlaceWithoutPrerequisiteMoves) {
    return new JAXBElement(_CannotPlaceWithoutPrerequisiteMovesFault_QNAME, CannotPlaceWithoutPrerequisiteMoves.class, null, paramCannotPlaceWithoutPrerequisiteMoves);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDisksUsingFilter")
  public JAXBElement<QueryDisksUsingFilterRequestType> createQueryDisksUsingFilter(QueryDisksUsingFilterRequestType paramQueryDisksUsingFilterRequestType) {
    return new JAXBElement(_QueryDisksUsingFilter_QNAME, QueryDisksUsingFilterRequestType.class, null, paramQueryDisksUsingFilterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmotionInterfaceNotEnabledFault")
  public JAXBElement<VmotionInterfaceNotEnabled> createVmotionInterfaceNotEnabledFault(VmotionInterfaceNotEnabled paramVmotionInterfaceNotEnabled) {
    return new JAXBElement(_VmotionInterfaceNotEnabledFault_QNAME, VmotionInterfaceNotEnabled.class, null, paramVmotionInterfaceNotEnabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryLicenseSourceAvailability")
  public JAXBElement<QueryLicenseSourceAvailabilityRequestType> createQueryLicenseSourceAvailability(QueryLicenseSourceAvailabilityRequestType paramQueryLicenseSourceAvailabilityRequestType) {
    return new JAXBElement(_QueryLicenseSourceAvailability_QNAME, QueryLicenseSourceAvailabilityRequestType.class, null, paramQueryLicenseSourceAvailabilityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveDatastoreEx_Task")
  public JAXBElement<RemoveDatastoreExRequestType> createRemoveDatastoreExTask(RemoveDatastoreExRequestType paramRemoveDatastoreExRequestType) {
    return new JAXBElement(_RemoveDatastoreExTask_QNAME, RemoveDatastoreExRequestType.class, null, paramRemoveDatastoreExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyChildren")
  public JAXBElement<DestroyChildrenRequestType> createDestroyChildren(DestroyChildrenRequestType paramDestroyChildrenRequestType) {
    return new JAXBElement(_DestroyChildren_QNAME, DestroyChildrenRequestType.class, null, paramDestroyChildrenRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DefragmentAllDisks")
  public JAXBElement<DefragmentAllDisksRequestType> createDefragmentAllDisks(DefragmentAllDisksRequestType paramDefragmentAllDisksRequestType) {
    return new JAXBElement(_DefragmentAllDisks_QNAME, DefragmentAllDisksRequestType.class, null, paramDefragmentAllDisksRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfInvalidValueEmptyFault")
  public JAXBElement<OvfInvalidValueEmpty> createOvfInvalidValueEmptyFault(OvfInvalidValueEmpty paramOvfInvalidValueEmpty) {
    return new JAXBElement(_OvfInvalidValueEmptyFault_QNAME, OvfInvalidValueEmpty.class, null, paramOvfInvalidValueEmpty);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCUnsupportedByHostHardwareFault")
  public JAXBElement<EVCUnsupportedByHostHardware> createEVCUnsupportedByHostHardwareFault(EVCUnsupportedByHostHardware paramEVCUnsupportedByHostHardware) {
    return new JAXBElement(_EVCUnsupportedByHostHardwareFault_QNAME, EVCUnsupportedByHostHardware.class, null, paramEVCUnsupportedByHostHardware);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateListView")
  public JAXBElement<CreateListViewRequestType> createCreateListView(CreateListViewRequestType paramCreateListViewRequestType) {
    return new JAXBElement(_CreateListView_QNAME, CreateListViewRequestType.class, null, paramCreateListViewRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RenameDatastore")
  public JAXBElement<RenameDatastoreRequestType> createRenameDatastore(RenameDatastoreRequestType paramRenameDatastoreRequestType) {
    return new JAXBElement(_RenameDatastore_QNAME, RenameDatastoreRequestType.class, null, paramRenameDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AuthMinimumAdminPermissionFault")
  public JAXBElement<AuthMinimumAdminPermission> createAuthMinimumAdminPermissionFault(AuthMinimumAdminPermission paramAuthMinimumAdminPermission) {
    return new JAXBElement(_AuthMinimumAdminPermissionFault_QNAME, AuthMinimumAdminPermission.class, null, paramAuthMinimumAdminPermission);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoGatewayFault")
  public JAXBElement<NoGateway> createNoGatewayFault(NoGateway paramNoGateway) {
    return new JAXBElement(_NoGatewayFault_QNAME, NoGateway.class, null, paramNoGateway);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RegisterKmipServer")
  public JAXBElement<RegisterKmipServerRequestType> createRegisterKmipServer(RegisterKmipServerRequestType paramRegisterKmipServerRequestType) {
    return new JAXBElement(_RegisterKmipServer_QNAME, RegisterKmipServerRequestType.class, null, paramRegisterKmipServerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DetachScsiLun")
  public JAXBElement<DetachScsiLunRequestType> createDetachScsiLun(DetachScsiLunRequestType paramDetachScsiLunRequestType) {
    return new JAXBElement(_DetachScsiLun_QNAME, DetachScsiLunRequestType.class, null, paramDetachScsiLunRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshRecommendation")
  public JAXBElement<RefreshRecommendationRequestType> createRefreshRecommendation(RefreshRecommendationRequestType paramRefreshRecommendationRequestType) {
    return new JAXBElement(_RefreshRecommendation_QNAME, RefreshRecommendationRequestType.class, null, paramRefreshRecommendationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkAsTemplate")
  public JAXBElement<MarkAsTemplateRequestType> createMarkAsTemplate(MarkAsTemplateRequestType paramMarkAsTemplateRequestType) {
    return new JAXBElement(_MarkAsTemplate_QNAME, MarkAsTemplateRequestType.class, null, paramMarkAsTemplateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RecommissionVsanNode_Task")
  public JAXBElement<RecommissionVsanNodeRequestType> createRecommissionVsanNodeTask(RecommissionVsanNodeRequestType paramRecommissionVsanNodeRequestType) {
    return new JAXBElement(_RecommissionVsanNodeTask_QNAME, RecommissionVsanNodeRequestType.class, null, paramRecommissionVsanNodeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "JoinDomainWithCAM_Task")
  public JAXBElement<JoinDomainWithCAMRequestType> createJoinDomainWithCAMTask(JoinDomainWithCAMRequestType paramJoinDomainWithCAMRequestType) {
    return new JAXBElement(_JoinDomainWithCAMTask_QNAME, JoinDomainWithCAMRequestType.class, null, paramJoinDomainWithCAMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RescanAllHba")
  public JAXBElement<RescanAllHbaRequestType> createRescanAllHba(RescanAllHbaRequestType paramRescanAllHbaRequestType) {
    return new JAXBElement(_RescanAllHba_QNAME, RescanAllHbaRequestType.class, null, paramRescanAllHbaRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateImportSpec")
  public JAXBElement<CreateImportSpecRequestType> createCreateImportSpec(CreateImportSpecRequestType paramCreateImportSpecRequestType) {
    return new JAXBElement(_CreateImportSpec_QNAME, CreateImportSpecRequestType.class, null, paramCreateImportSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveSnapshotDetails")
  public JAXBElement<RetrieveSnapshotDetailsRequestType> createRetrieveSnapshotDetails(RetrieveSnapshotDetailsRequestType paramRetrieveSnapshotDetailsRequestType) {
    return new JAXBElement(_RetrieveSnapshotDetails_QNAME, RetrieveSnapshotDetailsRequestType.class, null, paramRetrieveSnapshotDetailsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "configureVcha_Task")
  public JAXBElement<ConfigureVchaRequestType> createConfigureVchaTask(ConfigureVchaRequestType paramConfigureVchaRequestType) {
    return new JAXBElement(_ConfigureVchaTask_QNAME, ConfigureVchaRequestType.class, null, paramConfigureVchaRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "createWitnessNode_Task")
  public JAXBElement<CreateWitnessNodeRequestType> createCreateWitnessNodeTask(CreateWitnessNodeRequestType paramCreateWitnessNodeRequestType) {
    return new JAXBElement(_CreateWitnessNodeTask_QNAME, CreateWitnessNodeRequestType.class, null, paramCreateWitnessNodeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VspanPortPromiscChangeFaultFault")
  public JAXBElement<VspanPortPromiscChangeFault> createVspanPortPromiscChangeFaultFault(VspanPortPromiscChangeFault paramVspanPortPromiscChangeFault) {
    return new JAXBElement(_VspanPortPromiscChangeFaultFault_QNAME, VspanPortPromiscChangeFault.class, null, paramVspanPortPromiscChangeFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MakeDirectory")
  public JAXBElement<MakeDirectoryRequestType> createMakeDirectory(MakeDirectoryRequestType paramMakeDirectoryRequestType) {
    return new JAXBElement(_MakeDirectory_QNAME, MakeDirectoryRequestType.class, null, paramMakeDirectoryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVirtualDiskFragmentation")
  public JAXBElement<QueryVirtualDiskFragmentationRequestType> createQueryVirtualDiskFragmentation(QueryVirtualDiskFragmentationRequestType paramQueryVirtualDiskFragmentationRequestType) {
    return new JAXBElement(_QueryVirtualDiskFragmentation_QNAME, QueryVirtualDiskFragmentationRequestType.class, null, paramQueryVirtualDiskFragmentationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConsumerValidationFaultFault")
  public JAXBElement<OvfConsumerValidationFault> createOvfConsumerValidationFaultFault(OvfConsumerValidationFault paramOvfConsumerValidationFault) {
    return new JAXBElement(_OvfConsumerValidationFaultFault_QNAME, OvfConsumerValidationFault.class, null, paramOvfConsumerValidationFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateDefaultProfile")
  public JAXBElement<CreateDefaultProfileRequestType> createCreateDefaultProfile(CreateDefaultProfileRequestType paramCreateDefaultProfileRequestType) {
    return new JAXBElement(_CreateDefaultProfile_QNAME, CreateDefaultProfileRequestType.class, null, paramCreateDefaultProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResolveMultipleUnresolvedVmfsVolumesEx_Task")
  public JAXBElement<ResolveMultipleUnresolvedVmfsVolumesExRequestType> createResolveMultipleUnresolvedVmfsVolumesExTask(ResolveMultipleUnresolvedVmfsVolumesExRequestType paramResolveMultipleUnresolvedVmfsVolumesExRequestType) {
    return new JAXBElement(_ResolveMultipleUnresolvedVmfsVolumesExTask_QNAME, ResolveMultipleUnresolvedVmfsVolumesExRequestType.class, null, paramResolveMultipleUnresolvedVmfsVolumesExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteNvdimmNamespace_Task")
  public JAXBElement<DeleteNvdimmNamespaceRequestType> createDeleteNvdimmNamespaceTask(DeleteNvdimmNamespaceRequestType paramDeleteNvdimmNamespaceRequestType) {
    return new JAXBElement(_DeleteNvdimmNamespaceTask_QNAME, DeleteNvdimmNamespaceRequestType.class, null, paramDeleteNvdimmNamespaceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostConfigVFlashCache")
  public JAXBElement<HostConfigVFlashCacheRequestType> createHostConfigVFlashCache(HostConfigVFlashCacheRequestType paramHostConfigVFlashCacheRequestType) {
    return new JAXBElement(_HostConfigVFlashCache_QNAME, HostConfigVFlashCacheRequestType.class, null, paramHostConfigVFlashCacheRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPathSelectionPolicyOptions")
  public JAXBElement<QueryPathSelectionPolicyOptionsRequestType> createQueryPathSelectionPolicyOptions(QueryPathSelectionPolicyOptionsRequestType paramQueryPathSelectionPolicyOptionsRequestType) {
    return new JAXBElement(_QueryPathSelectionPolicyOptions_QNAME, QueryPathSelectionPolicyOptionsRequestType.class, null, paramQueryPathSelectionPolicyOptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OutOfBoundsFault")
  public JAXBElement<OutOfBounds> createOutOfBoundsFault(OutOfBounds paramOutOfBounds) {
    return new JAXBElement(_OutOfBoundsFault_QNAME, OutOfBounds.class, null, paramOutOfBounds);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotUseNetworkFault")
  public JAXBElement<CannotUseNetwork> createCannotUseNetworkFault(CannotUseNetwork paramCannotUseNetwork) {
    return new JAXBElement(_CannotUseNetworkFault_QNAME, CannotUseNetwork.class, null, paramCannotUseNetwork);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigureHCI_Task")
  public JAXBElement<ConfigureHCIRequestType> createConfigureHCITask(ConfigureHCIRequestType paramConfigureHCIRequestType) {
    return new JAXBElement(_ConfigureHCITask_QNAME, ConfigureHCIRequestType.class, null, paramConfigureHCIRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMotionNotSupportedFault")
  public JAXBElement<VMotionNotSupported> createVMotionNotSupportedFault(VMotionNotSupported paramVMotionNotSupported) {
    return new JAXBElement(_VMotionNotSupportedFault_QNAME, VMotionNotSupported.class, null, paramVMotionNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FetchDVPorts")
  public JAXBElement<FetchDVPortsRequestType> createFetchDVPorts(FetchDVPortsRequestType paramFetchDVPortsRequestType) {
    return new JAXBElement(_FetchDVPorts_QNAME, FetchDVPortsRequestType.class, null, paramFetchDVPortsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListTagsAttachedToVStorageObject")
  public JAXBElement<ListTagsAttachedToVStorageObjectRequestType> createListTagsAttachedToVStorageObject(ListTagsAttachedToVStorageObjectRequestType paramListTagsAttachedToVStorageObjectRequestType) {
    return new JAXBElement(_ListTagsAttachedToVStorageObject_QNAME, ListTagsAttachedToVStorageObjectRequestType.class, null, paramListTagsAttachedToVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateRuleset")
  public JAXBElement<UpdateRulesetRequestType> createUpdateRuleset(UpdateRulesetRequestType paramUpdateRulesetRequestType) {
    return new JAXBElement(_UpdateRuleset_QNAME, UpdateRulesetRequestType.class, null, paramUpdateRulesetRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SendTestNotification")
  public JAXBElement<SendTestNotificationRequestType> createSendTestNotification(SendTestNotificationRequestType paramSendTestNotificationRequestType) {
    return new JAXBElement(_SendTestNotification_QNAME, SendTestNotificationRequestType.class, null, paramSendTestNotificationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyPropertyCollector")
  public JAXBElement<DestroyPropertyCollectorRequestType> createDestroyPropertyCollector(DestroyPropertyCollectorRequestType paramDestroyPropertyCollectorRequestType) {
    return new JAXBElement(_DestroyPropertyCollector_QNAME, DestroyPropertyCollectorRequestType.class, null, paramDestroyPropertyCollectorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoHostFault")
  public JAXBElement<NoHost> createNoHostFault(NoHost paramNoHost) {
    return new JAXBElement(_NoHostFault_QNAME, NoHost.class, null, paramNoHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConnectedIsoFault")
  public JAXBElement<ConnectedIso> createConnectedIsoFault(ConnectedIso paramConnectedIso) {
    return new JAXBElement(_ConnectedIsoFault_QNAME, ConnectedIso.class, null, paramConnectedIso);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoDiskSpaceFault")
  public JAXBElement<NoDiskSpace> createNoDiskSpaceFault(NoDiskSpace paramNoDiskSpace) {
    return new JAXBElement(_NoDiskSpaceFault_QNAME, NoDiskSpace.class, null, paramNoDiskSpace);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TooManySnapshotLevelsFault")
  public JAXBElement<TooManySnapshotLevels> createTooManySnapshotLevelsFault(TooManySnapshotLevels paramTooManySnapshotLevels) {
    return new JAXBElement(_TooManySnapshotLevelsFault_QNAME, TooManySnapshotLevels.class, null, paramTooManySnapshotLevels);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteVStorageObject_Task")
  public JAXBElement<DeleteVStorageObjectRequestType> createDeleteVStorageObjectTask(DeleteVStorageObjectRequestType paramDeleteVStorageObjectRequestType) {
    return new JAXBElement(_DeleteVStorageObjectTask_QNAME, DeleteVStorageObjectRequestType.class, null, paramDeleteVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfWrongElementFault")
  public JAXBElement<OvfWrongElement> createOvfWrongElementFault(OvfWrongElement paramOvfWrongElement) {
    return new JAXBElement(_OvfWrongElementFault_QNAME, OvfWrongElement.class, null, paramOvfWrongElement);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListKeys")
  public JAXBElement<ListKeysRequestType> createListKeys(ListKeysRequestType paramListKeysRequestType) {
    return new JAXBElement(_ListKeys_QNAME, ListKeysRequestType.class, null, paramListKeysRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemovePerfInterval")
  public JAXBElement<RemovePerfIntervalRequestType> createRemovePerfInterval(RemovePerfIntervalRequestType paramRemovePerfIntervalRequestType) {
    return new JAXBElement(_RemovePerfInterval_QNAME, RemovePerfIntervalRequestType.class, null, paramRemovePerfIntervalRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfHardwareCheckFault")
  public JAXBElement<OvfHardwareCheck> createOvfHardwareCheckFault(OvfHardwareCheck paramOvfHardwareCheck) {
    return new JAXBElement(_OvfHardwareCheckFault_QNAME, OvfHardwareCheck.class, null, paramOvfHardwareCheck);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UninstallService")
  public JAXBElement<UninstallServiceRequestType> createUninstallService(UninstallServiceRequestType paramUninstallServiceRequestType) {
    return new JAXBElement(_UninstallService_QNAME, UninstallServiceRequestType.class, null, paramUninstallServiceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostRetrieveVStorageObject")
  public JAXBElement<HostRetrieveVStorageObjectRequestType> createHostRetrieveVStorageObject(HostRetrieveVStorageObjectRequestType paramHostRetrieveVStorageObjectRequestType) {
    return new JAXBElement(_HostRetrieveVStorageObject_QNAME, HostRetrieveVStorageObjectRequestType.class, null, paramHostRetrieveVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkServiceProviderEntities")
  public JAXBElement<MarkServiceProviderEntitiesRequestType> createMarkServiceProviderEntities(MarkServiceProviderEntitiesRequestType paramMarkServiceProviderEntitiesRequestType) {
    return new JAXBElement(_MarkServiceProviderEntities_QNAME, MarkServiceProviderEntitiesRequestType.class, null, paramMarkServiceProviderEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotMoveVmWithNativeDeltaDiskFault")
  public JAXBElement<CannotMoveVmWithNativeDeltaDisk> createCannotMoveVmWithNativeDeltaDiskFault(CannotMoveVmWithNativeDeltaDisk paramCannotMoveVmWithNativeDeltaDisk) {
    return new JAXBElement(_CannotMoveVmWithNativeDeltaDiskFault_QNAME, CannotMoveVmWithNativeDeltaDisk.class, null, paramCannotMoveVmWithNativeDeltaDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IORMNotSupportedHostOnDatastoreFault")
  public JAXBElement<IORMNotSupportedHostOnDatastore> createIORMNotSupportedHostOnDatastoreFault(IORMNotSupportedHostOnDatastore paramIORMNotSupportedHostOnDatastore) {
    return new JAXBElement(_IORMNotSupportedHostOnDatastoreFault_QNAME, IORMNotSupportedHostOnDatastore.class, null, paramIORMNotSupportedHostOnDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UploadKmipServerCert")
  public JAXBElement<UploadKmipServerCertRequestType> createUploadKmipServerCert(UploadKmipServerCertRequestType paramUploadKmipServerCertRequestType) {
    return new JAXBElement(_UploadKmipServerCert_QNAME, UploadKmipServerCertRequestType.class, null, paramUploadKmipServerCertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoVmInVAppFault")
  public JAXBElement<NoVmInVApp> createNoVmInVAppFault(NoVmInVApp paramNoVmInVApp) {
    return new JAXBElement(_NoVmInVAppFault_QNAME, NoVmInVApp.class, null, paramNoVmInVApp);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AlreadyUpgradedFault")
  public JAXBElement<AlreadyUpgraded> createAlreadyUpgradedFault(AlreadyUpgraded paramAlreadyUpgraded) {
    return new JAXBElement(_AlreadyUpgradedFault_QNAME, AlreadyUpgraded.class, null, paramAlreadyUpgraded);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteVirtualDisk_Task")
  public JAXBElement<DeleteVirtualDiskRequestType> createDeleteVirtualDiskTask(DeleteVirtualDiskRequestType paramDeleteVirtualDiskRequestType) {
    return new JAXBElement(_DeleteVirtualDiskTask_QNAME, DeleteVirtualDiskRequestType.class, null, paramDeleteVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedDeviceForFTFault")
  public JAXBElement<NotSupportedDeviceForFT> createNotSupportedDeviceForFTFault(NotSupportedDeviceForFT paramNotSupportedDeviceForFT) {
    return new JAXBElement(_NotSupportedDeviceForFTFault_QNAME, NotSupportedDeviceForFT.class, null, paramNotSupportedDeviceForFT);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableAdminNotSupportedFault")
  public JAXBElement<DisableAdminNotSupported> createDisableAdminNotSupportedFault(DisableAdminNotSupported paramDisableAdminNotSupported) {
    return new JAXBElement(_DisableAdminNotSupportedFault_QNAME, DisableAdminNotSupported.class, null, paramDisableAdminNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryHealthUpdateInfos")
  public JAXBElement<QueryHealthUpdateInfosRequestType> createQueryHealthUpdateInfos(QueryHealthUpdateInfosRequestType paramQueryHealthUpdateInfosRequestType) {
    return new JAXBElement(_QueryHealthUpdateInfos_QNAME, QueryHealthUpdateInfosRequestType.class, null, paramQueryHealthUpdateInfosRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MakePrimaryVM_Task")
  public JAXBElement<MakePrimaryVMRequestType> createMakePrimaryVMTask(MakePrimaryVMRequestType paramMakePrimaryVMRequestType) {
    return new JAXBElement(_MakePrimaryVMTask_QNAME, MakePrimaryVMRequestType.class, null, paramMakePrimaryVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ChangeKey_Task")
  public JAXBElement<ChangeKeyRequestType> createChangeKeyTask(ChangeKeyRequestType paramChangeKeyRequestType) {
    return new JAXBElement(_ChangeKeyTask_QNAME, ChangeKeyRequestType.class, null, paramChangeKeyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeviceNotFoundFault")
  public JAXBElement<DeviceNotFound> createDeviceNotFoundFault(DeviceNotFound paramDeviceNotFound) {
    return new JAXBElement(_DeviceNotFoundFault_QNAME, DeviceNotFound.class, null, paramDeviceNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MethodNotFoundFault")
  public JAXBElement<MethodNotFound> createMethodNotFoundFault(MethodNotFound paramMethodNotFound) {
    return new JAXBElement(_MethodNotFoundFault_QNAME, MethodNotFound.class, null, paramMethodNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveVirtualNic")
  public JAXBElement<RemoveVirtualNicRequestType> createRemoveVirtualNic(RemoveVirtualNicRequestType paramRemoveVirtualNicRequestType) {
    return new JAXBElement(_RemoveVirtualNic_QNAME, RemoveVirtualNicRequestType.class, null, paramRemoveVirtualNicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "initiateFailover_Task")
  public JAXBElement<InitiateFailoverRequestType> createInitiateFailoverTask(InitiateFailoverRequestType paramInitiateFailoverRequestType) {
    return new JAXBElement(_InitiateFailoverTask_QNAME, InitiateFailoverRequestType.class, null, paramInitiateFailoverRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotAFileFault")
  public JAXBElement<NotAFile> createNotAFileFault(NotAFile paramNotAFile) {
    return new JAXBElement(_NotAFileFault_QNAME, NotAFile.class, null, paramNotAFile);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConflictingDatastoreFoundFault")
  public JAXBElement<ConflictingDatastoreFound> createConflictingDatastoreFoundFault(ConflictingDatastoreFound paramConflictingDatastoreFound) {
    return new JAXBElement(_ConflictingDatastoreFoundFault_QNAME, ConflictingDatastoreFound.class, null, paramConflictingDatastoreFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RebootHost_Task")
  public JAXBElement<RebootHostRequestType> createRebootHostTask(RebootHostRequestType paramRebootHostRequestType) {
    return new JAXBElement(_RebootHostTask_QNAME, RebootHostRequestType.class, null, paramRebootHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QuiesceDatastoreIOForHAFailedFault")
  public JAXBElement<QuiesceDatastoreIOForHAFailed> createQuiesceDatastoreIOForHAFailedFault(QuiesceDatastoreIOForHAFailed paramQuiesceDatastoreIOForHAFailed) {
    return new JAXBElement(_QuiesceDatastoreIOForHAFailedFault_QNAME, QuiesceDatastoreIOForHAFailed.class, null, paramQuiesceDatastoreIOForHAFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenerateCertificateSigningRequest")
  public JAXBElement<GenerateCertificateSigningRequestRequestType> createGenerateCertificateSigningRequest(GenerateCertificateSigningRequestRequestType paramGenerateCertificateSigningRequestRequestType) {
    return new JAXBElement(_GenerateCertificateSigningRequest_QNAME, GenerateCertificateSigningRequestRequestType.class, null, paramGenerateCertificateSigningRequestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OperationNotSupportedByGuestFault")
  public JAXBElement<OperationNotSupportedByGuest> createOperationNotSupportedByGuestFault(OperationNotSupportedByGuest paramOperationNotSupportedByGuest) {
    return new JAXBElement(_OperationNotSupportedByGuestFault_QNAME, OperationNotSupportedByGuest.class, null, paramOperationNotSupportedByGuest);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryUnresolvedVmfsVolumes")
  public JAXBElement<QueryUnresolvedVmfsVolumesRequestType> createQueryUnresolvedVmfsVolumes(QueryUnresolvedVmfsVolumesRequestType paramQueryUnresolvedVmfsVolumesRequestType) {
    return new JAXBElement(_QueryUnresolvedVmfsVolumes_QNAME, QueryUnresolvedVmfsVolumesRequestType.class, null, paramQueryUnresolvedVmfsVolumesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindRulesForVm")
  public JAXBElement<FindRulesForVmRequestType> createFindRulesForVm(FindRulesForVmRequestType paramFindRulesForVmRequestType) {
    return new JAXBElement(_FindRulesForVm_QNAME, FindRulesForVmRequestType.class, null, paramFindRulesForVmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetExtensionCertificate")
  public JAXBElement<SetExtensionCertificateRequestType> createSetExtensionCertificate(SetExtensionCertificateRequestType paramSetExtensionCertificateRequestType) {
    return new JAXBElement(_SetExtensionCertificate_QNAME, SetExtensionCertificateRequestType.class, null, paramSetExtensionCertificateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AffinityConfiguredFault")
  public JAXBElement<AffinityConfigured> createAffinityConfiguredFault(AffinityConfigured paramAffinityConfigured) {
    return new JAXBElement(_AffinityConfiguredFault_QNAME, AffinityConfigured.class, null, paramAffinityConfigured);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVStorageObjectCrypto_Task")
  public JAXBElement<UpdateVStorageObjectCryptoRequestType> createUpdateVStorageObjectCryptoTask(UpdateVStorageObjectCryptoRequestType paramUpdateVStorageObjectCryptoRequestType) {
    return new JAXBElement(_UpdateVStorageObjectCryptoTask_QNAME, UpdateVStorageObjectCryptoRequestType.class, null, paramUpdateVStorageObjectCryptoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateScsiLunDisplayName")
  public JAXBElement<UpdateScsiLunDisplayNameRequestType> createUpdateScsiLunDisplayName(UpdateScsiLunDisplayNameRequestType paramUpdateScsiLunDisplayNameRequestType) {
    return new JAXBElement(_UpdateScsiLunDisplayName_QNAME, UpdateScsiLunDisplayNameRequestType.class, null, paramUpdateScsiLunDisplayNameRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotMoveNotSupportedFault")
  public JAXBElement<SnapshotMoveNotSupported> createSnapshotMoveNotSupportedFault(SnapshotMoveNotSupported paramSnapshotMoveNotSupported) {
    return new JAXBElement(_SnapshotMoveNotSupportedFault_QNAME, SnapshotMoveNotSupported.class, null, paramSnapshotMoveNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "BrowseDiagnosticLog")
  public JAXBElement<BrowseDiagnosticLogRequestType> createBrowseDiagnosticLog(BrowseDiagnosticLogRequestType paramBrowseDiagnosticLogRequestType) {
    return new JAXBElement(_BrowseDiagnosticLog_QNAME, BrowseDiagnosticLogRequestType.class, null, paramBrowseDiagnosticLogRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddFilterEntities")
  public JAXBElement<AddFilterEntitiesRequestType> createAddFilterEntities(AddFilterEntitiesRequestType paramAddFilterEntitiesRequestType) {
    return new JAXBElement(_AddFilterEntities_QNAME, AddFilterEntitiesRequestType.class, null, paramAddFilterEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IsKmsClusterActive")
  public JAXBElement<IsKmsClusterActiveRequestType> createIsKmsClusterActive(IsKmsClusterActiveRequestType paramIsKmsClusterActiveRequestType) {
    return new JAXBElement(_IsKmsClusterActive_QNAME, IsKmsClusterActiveRequestType.class, null, paramIsKmsClusterActiveRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostIncompatibleForRecordReplayFault")
  public JAXBElement<HostIncompatibleForRecordReplay> createHostIncompatibleForRecordReplayFault(HostIncompatibleForRecordReplay paramHostIncompatibleForRecordReplay) {
    return new JAXBElement(_HostIncompatibleForRecordReplayFault_QNAME, HostIncompatibleForRecordReplay.class, null, paramHostIncompatibleForRecordReplay);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotDeleteFileFault")
  public JAXBElement<CannotDeleteFile> createCannotDeleteFileFault(CannotDeleteFile paramCannotDeleteFile) {
    return new JAXBElement(_CannotDeleteFileFault_QNAME, CannotDeleteFile.class, null, paramCannotDeleteFile);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HasUserPrivilegeOnEntities")
  public JAXBElement<HasUserPrivilegeOnEntitiesRequestType> createHasUserPrivilegeOnEntities(HasUserPrivilegeOnEntitiesRequestType paramHasUserPrivilegeOnEntitiesRequestType) {
    return new JAXBElement(_HasUserPrivilegeOnEntities_QNAME, HasUserPrivilegeOnEntitiesRequestType.class, null, paramHasUserPrivilegeOnEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DiskTooSmallFault")
  public JAXBElement<DiskTooSmall> createDiskTooSmallFault(DiskTooSmall paramDiskTooSmall) {
    return new JAXBElement(_DiskTooSmallFault_QNAME, DiskTooSmall.class, null, paramDiskTooSmall);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplicationInvalidOptionsFault")
  public JAXBElement<ReplicationInvalidOptions> createReplicationInvalidOptionsFault(ReplicationInvalidOptions paramReplicationInvalidOptions) {
    return new JAXBElement(_ReplicationInvalidOptionsFault_QNAME, ReplicationInvalidOptions.class, null, paramReplicationInvalidOptions);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HotSnapshotMoveNotSupportedFault")
  public JAXBElement<HotSnapshotMoveNotSupported> createHotSnapshotMoveNotSupportedFault(HotSnapshotMoveNotSupported paramHotSnapshotMoveNotSupported) {
    return new JAXBElement(_HotSnapshotMoveNotSupportedFault_QNAME, HotSnapshotMoveNotSupported.class, null, paramHotSnapshotMoveNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MoveVirtualDisk_Task")
  public JAXBElement<MoveVirtualDiskRequestType> createMoveVirtualDiskTask(MoveVirtualDiskRequestType paramMoveVirtualDiskRequestType) {
    return new JAXBElement(_MoveVirtualDiskTask_QNAME, MoveVirtualDiskRequestType.class, null, paramMoveVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableSmartCardAuthentication")
  public JAXBElement<EnableSmartCardAuthenticationRequestType> createEnableSmartCardAuthentication(EnableSmartCardAuthenticationRequestType paramEnableSmartCardAuthenticationRequestType) {
    return new JAXBElement(_EnableSmartCardAuthentication_QNAME, EnableSmartCardAuthenticationRequestType.class, null, paramEnableSmartCardAuthenticationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnusedVirtualDiskBlocksNotScrubbedFault")
  public JAXBElement<UnusedVirtualDiskBlocksNotScrubbed> createUnusedVirtualDiskBlocksNotScrubbedFault(UnusedVirtualDiskBlocksNotScrubbed paramUnusedVirtualDiskBlocksNotScrubbed) {
    return new JAXBElement(_UnusedVirtualDiskBlocksNotScrubbedFault_QNAME, UnusedVirtualDiskBlocksNotScrubbed.class, null, paramUnusedVirtualDiskBlocksNotScrubbed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoConnectedDatastoreFault")
  public JAXBElement<NoConnectedDatastore> createNoConnectedDatastoreFault(NoConnectedDatastore paramNoConnectedDatastore) {
    return new JAXBElement(_NoConnectedDatastoreFault_QNAME, NoConnectedDatastore.class, null, paramNoConnectedDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IncompatibleHostForFtSecondaryFault")
  public JAXBElement<IncompatibleHostForFtSecondary> createIncompatibleHostForFtSecondaryFault(IncompatibleHostForFtSecondary paramIncompatibleHostForFtSecondary) {
    return new JAXBElement(_IncompatibleHostForFtSecondaryFault_QNAME, IncompatibleHostForFtSecondary.class, null, paramIncompatibleHostForFtSecondary);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDatastorePerformanceSummary")
  public JAXBElement<QueryDatastorePerformanceSummaryRequestType> createQueryDatastorePerformanceSummary(QueryDatastorePerformanceSummaryRequestType paramQueryDatastorePerformanceSummaryRequestType) {
    return new JAXBElement(_QueryDatastorePerformanceSummary_QNAME, QueryDatastorePerformanceSummaryRequestType.class, null, paramQueryDatastorePerformanceSummaryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UninstallIoFilter_Task")
  public JAXBElement<UninstallIoFilterRequestType> createUninstallIoFilterTask(UninstallIoFilterRequestType paramUninstallIoFilterRequestType) {
    return new JAXBElement(_UninstallIoFilterTask_QNAME, UninstallIoFilterRequestType.class, null, paramUninstallIoFilterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CustomizationPendingFault")
  public JAXBElement<CustomizationPending> createCustomizationPendingFault(CustomizationPending paramCustomizationPending) {
    return new JAXBElement(_CustomizationPendingFault_QNAME, CustomizationPending.class, null, paramCustomizationPending);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExtractOvfEnvironment")
  public JAXBElement<ExtractOvfEnvironmentRequestType> createExtractOvfEnvironment(ExtractOvfEnvironmentRequestType paramExtractOvfEnvironmentRequestType) {
    return new JAXBElement(_ExtractOvfEnvironment_QNAME, ExtractOvfEnvironmentRequestType.class, null, paramExtractOvfEnvironmentRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoDisksToCustomizeFault")
  public JAXBElement<NoDisksToCustomize> createNoDisksToCustomizeFault(NoDisksToCustomize paramNoDisksToCustomize) {
    return new JAXBElement(_NoDisksToCustomizeFault_QNAME, NoDisksToCustomize.class, null, paramNoDisksToCustomize);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostVStorageObjectCreateDiskFromSnapshot_Task")
  public JAXBElement<HostVStorageObjectCreateDiskFromSnapshotRequestType> createHostVStorageObjectCreateDiskFromSnapshotTask(HostVStorageObjectCreateDiskFromSnapshotRequestType paramHostVStorageObjectCreateDiskFromSnapshotRequestType) {
    return new JAXBElement(_HostVStorageObjectCreateDiskFromSnapshotTask_QNAME, HostVStorageObjectCreateDiskFromSnapshotRequestType.class, null, paramHostVStorageObjectCreateDiskFromSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveFTVmFault")
  public JAXBElement<StorageDrsCannotMoveFTVm> createStorageDrsCannotMoveFTVmFault(StorageDrsCannotMoveFTVm paramStorageDrsCannotMoveFTVm) {
    return new JAXBElement(_StorageDrsCannotMoveFTVmFault_QNAME, StorageDrsCannotMoveFTVm.class, null, paramStorageDrsCannotMoveFTVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateAssignedLicense")
  public JAXBElement<UpdateAssignedLicenseRequestType> createUpdateAssignedLicense(UpdateAssignedLicenseRequestType paramUpdateAssignedLicenseRequestType) {
    return new JAXBElement(_UpdateAssignedLicense_QNAME, UpdateAssignedLicenseRequestType.class, null, paramUpdateAssignedLicenseRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IncorrectFileTypeFault")
  public JAXBElement<IncorrectFileType> createIncorrectFileTypeFault(IncorrectFileType paramIncorrectFileType) {
    return new JAXBElement(_IncorrectFileTypeFault_QNAME, IncorrectFileType.class, null, paramIncorrectFileType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StopRecording_Task")
  public JAXBElement<StopRecordingRequestType> createStopRecordingTask(StopRecordingRequestType paramStopRecordingRequestType) {
    return new JAXBElement(_StopRecordingTask_QNAME, StopRecordingRequestType.class, null, paramStopRecordingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateVmfsDatastore")
  public JAXBElement<CreateVmfsDatastoreRequestType> createCreateVmfsDatastore(CreateVmfsDatastoreRequestType paramCreateVmfsDatastoreRequestType) {
    return new JAXBElement(_CreateVmfsDatastore_QNAME, CreateVmfsDatastoreRequestType.class, null, paramCreateVmfsDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PromoteDisks_Task")
  public JAXBElement<PromoteDisksRequestType> createPromoteDisksTask(PromoteDisksRequestType paramPromoteDisksRequestType) {
    return new JAXBElement(_PromoteDisksTask_QNAME, PromoteDisksRequestType.class, null, paramPromoteDisksRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VsanClusterUuidMismatchFault")
  public JAXBElement<VsanClusterUuidMismatch> createVsanClusterUuidMismatchFault(VsanClusterUuidMismatch paramVsanClusterUuidMismatch) {
    return new JAXBElement(_VsanClusterUuidMismatchFault_QNAME, VsanClusterUuidMismatch.class, null, paramVsanClusterUuidMismatch);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidOperationOnSecondaryVmFault")
  public JAXBElement<InvalidOperationOnSecondaryVm> createInvalidOperationOnSecondaryVmFault(InvalidOperationOnSecondaryVm paramInvalidOperationOnSecondaryVm) {
    return new JAXBElement(_InvalidOperationOnSecondaryVmFault_QNAME, InvalidOperationOnSecondaryVm.class, null, paramInvalidOperationOnSecondaryVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedCPUVendorFault")
  public JAXBElement<EVCAdmissionFailedCPUVendor> createEVCAdmissionFailedCPUVendorFault(EVCAdmissionFailedCPUVendor paramEVCAdmissionFailedCPUVendor) {
    return new JAXBElement(_EVCAdmissionFailedCPUVendorFault_QNAME, EVCAdmissionFailedCPUVendor.class, null, paramEVCAdmissionFailedCPUVendor);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResourceNotAvailableFault")
  public JAXBElement<ResourceNotAvailable> createResourceNotAvailableFault(ResourceNotAvailable paramResourceNotAvailable) {
    return new JAXBElement(_ResourceNotAvailableFault_QNAME, ResourceNotAvailable.class, null, paramResourceNotAvailable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfSystemFaultFault")
  public JAXBElement<OvfSystemFault> createOvfSystemFaultFault(OvfSystemFault paramOvfSystemFault) {
    return new JAXBElement(_OvfSystemFaultFault_QNAME, OvfSystemFault.class, null, paramOvfSystemFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PerformDvsProductSpecOperation_Task")
  public JAXBElement<PerformDvsProductSpecOperationRequestType> createPerformDvsProductSpecOperationTask(PerformDvsProductSpecOperationRequestType paramPerformDvsProductSpecOperationRequestType) {
    return new JAXBElement(_PerformDvsProductSpecOperationTask_QNAME, PerformDvsProductSpecOperationRequestType.class, null, paramPerformDvsProductSpecOperationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResetSystemHealthInfo")
  public JAXBElement<ResetSystemHealthInfoRequestType> createResetSystemHealthInfo(ResetSystemHealthInfoRequestType paramResetSystemHealthInfoRequestType) {
    return new JAXBElement(_ResetSystemHealthInfo_QNAME, ResetSystemHealthInfoRequestType.class, null, paramResetSystemHealthInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultVnicNotFoundFault")
  public JAXBElement<IscsiFaultVnicNotFound> createIscsiFaultVnicNotFoundFault(IscsiFaultVnicNotFound paramIscsiFaultVnicNotFound) {
    return new JAXBElement(_IscsiFaultVnicNotFoundFault_QNAME, IscsiFaultVnicNotFound.class, null, paramIscsiFaultVnicNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedVmActiveFault")
  public JAXBElement<EVCAdmissionFailedVmActive> createEVCAdmissionFailedVmActiveFault(EVCAdmissionFailedVmActive paramEVCAdmissionFailedVmActive) {
    return new JAXBElement(_EVCAdmissionFailedVmActiveFault_QNAME, EVCAdmissionFailedVmActive.class, null, paramEVCAdmissionFailedVmActive);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshStorageDrsRecommendation")
  public JAXBElement<RefreshStorageDrsRecommendationRequestType> createRefreshStorageDrsRecommendation(RefreshStorageDrsRecommendationRequestType paramRefreshStorageDrsRecommendationRequestType) {
    return new JAXBElement(_RefreshStorageDrsRecommendation_QNAME, RefreshStorageDrsRecommendationRequestType.class, null, paramRefreshStorageDrsRecommendationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UserNotFoundFault")
  public JAXBElement<UserNotFound> createUserNotFoundFault(UserNotFound paramUserNotFound) {
    return new JAXBElement(_UserNotFoundFault_QNAME, UserNotFound.class, null, paramUserNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ValidateStoragePodConfig")
  public JAXBElement<ValidateStoragePodConfigRequestType> createValidateStoragePodConfig(ValidateStoragePodConfigRequestType paramValidateStoragePodConfigRequestType) {
    return new JAXBElement(_ValidateStoragePodConfig_QNAME, ValidateStoragePodConfigRequestType.class, null, paramValidateStoragePodConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateKmipServer")
  public JAXBElement<UpdateKmipServerRequestType> createUpdateKmipServer(UpdateKmipServerRequestType paramUpdateKmipServerRequestType) {
    return new JAXBElement(_UpdateKmipServer_QNAME, UpdateKmipServerRequestType.class, null, paramUpdateKmipServerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VAppOperationInProgressFault")
  public JAXBElement<VAppOperationInProgress> createVAppOperationInProgressFault(VAppOperationInProgress paramVAppOperationInProgress) {
    return new JAXBElement(_VAppOperationInProgressFault_QNAME, VAppOperationInProgress.class, null, paramVAppOperationInProgress);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DissociateProfile")
  public JAXBElement<DissociateProfileRequestType> createDissociateProfile(DissociateProfileRequestType paramDissociateProfileRequestType) {
    return new JAXBElement(_DissociateProfile_QNAME, DissociateProfileRequestType.class, null, paramDissociateProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MismatchedVMotionNetworkNamesFault")
  public JAXBElement<MismatchedVMotionNetworkNames> createMismatchedVMotionNetworkNamesFault(MismatchedVMotionNetworkNames paramMismatchedVMotionNetworkNames) {
    return new JAXBElement(_MismatchedVMotionNetworkNamesFault_QNAME, MismatchedVMotionNetworkNames.class, null, paramMismatchedVMotionNetworkNames);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplaceCACertificatesAndCRLs")
  public JAXBElement<ReplaceCACertificatesAndCRLsRequestType> createReplaceCACertificatesAndCRLs(ReplaceCACertificatesAndCRLsRequestType paramReplaceCACertificatesAndCRLsRequestType) {
    return new JAXBElement(_ReplaceCACertificatesAndCRLs_QNAME, ReplaceCACertificatesAndCRLsRequestType.class, null, paramReplaceCACertificatesAndCRLsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EagerZeroVirtualDisk_Task")
  public JAXBElement<EagerZeroVirtualDiskRequestType> createEagerZeroVirtualDiskTask(EagerZeroVirtualDiskRequestType paramEagerZeroVirtualDiskRequestType) {
    return new JAXBElement(_EagerZeroVirtualDiskTask_QNAME, EagerZeroVirtualDiskRequestType.class, null, paramEagerZeroVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigVM_Task")
  public JAXBElement<ReconfigVMRequestType> createReconfigVMTask(ReconfigVMRequestType paramReconfigVMRequestType) {
    return new JAXBElement(_ReconfigVMTask_QNAME, ReconfigVMRequestType.class, null, paramReconfigVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckCompliance_Task")
  public JAXBElement<CheckComplianceRequestType> createCheckComplianceTask(CheckComplianceRequestType paramCheckComplianceRequestType) {
    return new JAXBElement(_CheckComplianceTask_QNAME, CheckComplianceRequestType.class, null, paramCheckComplianceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HttpNfcLeaseSetManifestChecksumType")
  public JAXBElement<HttpNfcLeaseSetManifestChecksumTypeRequestType> createHttpNfcLeaseSetManifestChecksumType(HttpNfcLeaseSetManifestChecksumTypeRequestType paramHttpNfcLeaseSetManifestChecksumTypeRequestType) {
    return new JAXBElement(_HttpNfcLeaseSetManifestChecksumType_QNAME, HttpNfcLeaseSetManifestChecksumTypeRequestType.class, null, paramHttpNfcLeaseSetManifestChecksumTypeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchNotApplicableFault")
  public JAXBElement<PatchNotApplicable> createPatchNotApplicableFault(PatchNotApplicable paramPatchNotApplicable) {
    return new JAXBElement(_PatchNotApplicableFault_QNAME, PatchNotApplicable.class, null, paramPatchNotApplicable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "destroyVcha_Task")
  public JAXBElement<DestroyVchaRequestType> createDestroyVchaTask(DestroyVchaRequestType paramDestroyVchaRequestType) {
    return new JAXBElement(_DestroyVchaTask_QNAME, DestroyVchaRequestType.class, null, paramDestroyVchaRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NumVirtualCoresPerSocketNotSupportedFault")
  public JAXBElement<NumVirtualCoresPerSocketNotSupported> createNumVirtualCoresPerSocketNotSupportedFault(NumVirtualCoresPerSocketNotSupported paramNumVirtualCoresPerSocketNotSupported) {
    return new JAXBElement(_NumVirtualCoresPerSocketNotSupportedFault_QNAME, NumVirtualCoresPerSocketNotSupported.class, null, paramNumVirtualCoresPerSocketNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExtendHCI_Task")
  public JAXBElement<ExtendHCIRequestType> createExtendHCITask(ExtendHCIRequestType paramExtendHCIRequestType) {
    return new JAXBElement(_ExtendHCITask_QNAME, ExtendHCIRequestType.class, null, paramExtendHCIRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoCompatibleHostWithAccessToDeviceFault")
  public JAXBElement<NoCompatibleHostWithAccessToDevice> createNoCompatibleHostWithAccessToDeviceFault(NoCompatibleHostWithAccessToDevice paramNoCompatibleHostWithAccessToDevice) {
    return new JAXBElement(_NoCompatibleHostWithAccessToDeviceFault_QNAME, NoCompatibleHostWithAccessToDevice.class, null, paramNoCompatibleHostWithAccessToDevice);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfWrongNamespaceFault")
  public JAXBElement<OvfWrongNamespace> createOvfWrongNamespaceFault(OvfWrongNamespace paramOvfWrongNamespace) {
    return new JAXBElement(_OvfWrongNamespaceFault_QNAME, OvfWrongNamespace.class, null, paramOvfWrongNamespace);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenerateCertificateSigningRequestByDn")
  public JAXBElement<GenerateCertificateSigningRequestByDnRequestType> createGenerateCertificateSigningRequestByDn(GenerateCertificateSigningRequestByDnRequestType paramGenerateCertificateSigningRequestByDnRequestType) {
    return new JAXBElement(_GenerateCertificateSigningRequestByDn_QNAME, GenerateCertificateSigningRequestByDnRequestType.class, null, paramGenerateCertificateSigningRequestByDnRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MksConnectionLimitReachedFault")
  public JAXBElement<MksConnectionLimitReached> createMksConnectionLimitReachedFault(MksConnectionLimitReached paramMksConnectionLimitReached) {
    return new JAXBElement(_MksConnectionLimitReachedFault_QNAME, MksConnectionLimitReached.class, null, paramMksConnectionLimitReached);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveProductComponents")
  public JAXBElement<RetrieveProductComponentsRequestType> createRetrieveProductComponents(RetrieveProductComponentsRequestType paramRetrieveProductComponentsRequestType) {
    return new JAXBElement(_RetrieveProductComponents_QNAME, RetrieveProductComponentsRequestType.class, null, paramRetrieveProductComponentsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MissingIpPoolFault")
  public JAXBElement<MissingIpPool> createMissingIpPoolFault(MissingIpPool paramMissingIpPool) {
    return new JAXBElement(_MissingIpPoolFault_QNAME, MissingIpPool.class, null, paramMissingIpPool);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPartitionCreateOptions")
  public JAXBElement<QueryPartitionCreateOptionsRequestType> createQueryPartitionCreateOptions(QueryPartitionCreateOptionsRequestType paramQueryPartitionCreateOptionsRequestType) {
    return new JAXBElement(_QueryPartitionCreateOptions_QNAME, QueryPartitionCreateOptionsRequestType.class, null, paramQueryPartitionCreateOptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PlatformConfigFaultFault")
  public JAXBElement<PlatformConfigFault> createPlatformConfigFaultFault(PlatformConfigFault paramPlatformConfigFault) {
    return new JAXBElement(_PlatformConfigFaultFault_QNAME, PlatformConfigFault.class, null, paramPlatformConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DuplicateDisksFault")
  public JAXBElement<DuplicateDisks> createDuplicateDisksFault(DuplicateDisks paramDuplicateDisks) {
    return new JAXBElement(_DuplicateDisksFault_QNAME, DuplicateDisks.class, null, paramDuplicateDisks);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RegisterExtension")
  public JAXBElement<RegisterExtensionRequestType> createRegisterExtension(RegisterExtensionRequestType paramRegisterExtensionRequestType) {
    return new JAXBElement(_RegisterExtension_QNAME, RegisterExtensionRequestType.class, null, paramRegisterExtensionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LicenseServerUnavailableFault")
  public JAXBElement<LicenseServerUnavailable> createLicenseServerUnavailableFault(LicenseServerUnavailable paramLicenseServerUnavailable) {
    return new JAXBElement(_LicenseServerUnavailableFault_QNAME, LicenseServerUnavailable.class, null, paramLicenseServerUnavailable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "KeyNotFoundFault")
  public JAXBElement<KeyNotFound> createKeyNotFoundFault(KeyNotFound paramKeyNotFound) {
    return new JAXBElement(_KeyNotFoundFault_QNAME, KeyNotFound.class, null, paramKeyNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateSnapshot_Task")
  public JAXBElement<CreateSnapshotRequestType> createCreateSnapshotTask(CreateSnapshotRequestType paramCreateSnapshotRequestType) {
    return new JAXBElement(_CreateSnapshotTask_QNAME, CreateSnapshotRequestType.class, null, paramCreateSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnsupportedGuestFault")
  public JAXBElement<UnsupportedGuest> createUnsupportedGuestFault(UnsupportedGuest paramUnsupportedGuest) {
    return new JAXBElement(_UnsupportedGuestFault_QNAME, UnsupportedGuest.class, null, paramUnsupportedGuest);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteScsiLunState")
  public JAXBElement<DeleteScsiLunStateRequestType> createDeleteScsiLunState(DeleteScsiLunStateRequestType paramDeleteScsiLunStateRequestType) {
    return new JAXBElement(_DeleteScsiLunState_QNAME, DeleteScsiLunStateRequestType.class, null, paramDeleteScsiLunStateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FullStorageVMotionNotSupportedFault")
  public JAXBElement<FullStorageVMotionNotSupported> createFullStorageVMotionNotSupportedFault(FullStorageVMotionNotSupported paramFullStorageVMotionNotSupported) {
    return new JAXBElement(_FullStorageVMotionNotSupportedFault_QNAME, FullStorageVMotionNotSupported.class, null, paramFullStorageVMotionNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryLockdownExceptions")
  public JAXBElement<QueryLockdownExceptionsRequestType> createQueryLockdownExceptions(QueryLockdownExceptionsRequestType paramQueryLockdownExceptionsRequestType) {
    return new JAXBElement(_QueryLockdownExceptions_QNAME, QueryLockdownExceptionsRequestType.class, null, paramQueryLockdownExceptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryHostPatch_Task")
  public JAXBElement<QueryHostPatchRequestType> createQueryHostPatchTask(QueryHostPatchRequestType paramQueryHostPatchRequestType) {
    return new JAXBElement(_QueryHostPatchTask_QNAME, QueryHostPatchRequestType.class, null, paramQueryHostPatchRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NicSettingMismatchFault")
  public JAXBElement<NicSettingMismatch> createNicSettingMismatchFault(NicSettingMismatch paramNicSettingMismatch) {
    return new JAXBElement(_NicSettingMismatchFault_QNAME, NicSettingMismatch.class, null, paramNicSettingMismatch);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckHostPatch_Task")
  public JAXBElement<CheckHostPatchRequestType> createCheckHostPatchTask(CheckHostPatchRequestType paramCheckHostPatchRequestType) {
    return new JAXBElement(_CheckHostPatchTask_QNAME, CheckHostPatchRequestType.class, null, paramCheckHostPatchRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CloneVApp_Task")
  public JAXBElement<CloneVAppRequestType> createCloneVAppTask(CloneVAppRequestType paramCloneVAppRequestType) {
    return new JAXBElement(_CloneVAppTask_QNAME, CloneVAppRequestType.class, null, paramCloneVAppRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VirtualEthernetCardNotSupportedFault")
  public JAXBElement<VirtualEthernetCardNotSupported> createVirtualEthernetCardNotSupportedFault(VirtualEthernetCardNotSupported paramVirtualEthernetCardNotSupported) {
    return new JAXBElement(_VirtualEthernetCardNotSupportedFault_QNAME, VirtualEthernetCardNotSupported.class, null, paramVirtualEthernetCardNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RescanVffs")
  public JAXBElement<RescanVffsRequestType> createRescanVffs(RescanVffsRequestType paramRescanVffsRequestType) {
    return new JAXBElement(_RescanVffs_QNAME, RescanVffsRequestType.class, null, paramRescanVffsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExpiredEditionLicenseFault")
  public JAXBElement<ExpiredEditionLicense> createExpiredEditionLicenseFault(ExpiredEditionLicense paramExpiredEditionLicense) {
    return new JAXBElement(_ExpiredEditionLicenseFault_QNAME, ExpiredEditionLicense.class, null, paramExpiredEditionLicense);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnrecognizedHostFault")
  public JAXBElement<UnrecognizedHost> createUnrecognizedHostFault(UnrecognizedHost paramUnrecognizedHost) {
    return new JAXBElement(_UnrecognizedHostFault_QNAME, UnrecognizedHost.class, null, paramUnrecognizedHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OpenInventoryViewFolder")
  public JAXBElement<OpenInventoryViewFolderRequestType> createOpenInventoryViewFolder(OpenInventoryViewFolderRequestType paramOpenInventoryViewFolderRequestType) {
    return new JAXBElement(_OpenInventoryViewFolder_QNAME, OpenInventoryViewFolderRequestType.class, null, paramOpenInventoryViewFolderRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StageHostPatch_Task")
  public JAXBElement<StageHostPatchRequestType> createStageHostPatchTask(StageHostPatchRequestType paramStageHostPatchRequestType) {
    return new JAXBElement(_StageHostPatchTask_QNAME, StageHostPatchRequestType.class, null, paramStageHostPatchRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkPerenniallyReserved")
  public JAXBElement<MarkPerenniallyReservedRequestType> createMarkPerenniallyReserved(MarkPerenniallyReservedRequestType paramMarkPerenniallyReservedRequestType) {
    return new JAXBElement(_MarkPerenniallyReserved_QNAME, MarkPerenniallyReservedRequestType.class, null, paramMarkPerenniallyReservedRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VFlashModuleNotSupportedFault")
  public JAXBElement<VFlashModuleNotSupported> createVFlashModuleNotSupportedFault(VFlashModuleNotSupported paramVFlashModuleNotSupported) {
    return new JAXBElement(_VFlashModuleNotSupportedFault_QNAME, VFlashModuleNotSupported.class, null, paramVFlashModuleNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StartRecording_Task")
  public JAXBElement<StartRecordingRequestType> createStartRecordingTask(StartRecordingRequestType paramStartRecordingRequestType) {
    return new JAXBElement(_StartRecordingTask_QNAME, StartRecordingRequestType.class, null, paramStartRecordingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateContainerView")
  public JAXBElement<CreateContainerViewRequestType> createCreateContainerView(CreateContainerViewRequestType paramCreateContainerViewRequestType) {
    return new JAXBElement(_CreateContainerView_QNAME, CreateContainerViewRequestType.class, null, paramCreateContainerViewRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FailToEnableSPBMFault")
  public JAXBElement<FailToEnableSPBM> createFailToEnableSPBMFault(FailToEnableSPBM paramFailToEnableSPBM) {
    return new JAXBElement(_FailToEnableSPBMFault_QNAME, FailToEnableSPBM.class, null, paramFailToEnableSPBM);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FaultTolerancePrimaryPowerOnNotAttemptedFault")
  public JAXBElement<FaultTolerancePrimaryPowerOnNotAttempted> createFaultTolerancePrimaryPowerOnNotAttemptedFault(FaultTolerancePrimaryPowerOnNotAttempted paramFaultTolerancePrimaryPowerOnNotAttempted) {
    return new JAXBElement(_FaultTolerancePrimaryPowerOnNotAttemptedFault_QNAME, FaultTolerancePrimaryPowerOnNotAttempted.class, null, paramFaultTolerancePrimaryPowerOnNotAttempted);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ToolsInstallationInProgressFault")
  public JAXBElement<ToolsInstallationInProgress> createToolsInstallationInProgressFault(ToolsInstallationInProgress paramToolsInstallationInProgress) {
    return new JAXBElement(_ToolsInstallationInProgressFault_QNAME, ToolsInstallationInProgress.class, null, paramToolsInstallationInProgress);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetLocale")
  public JAXBElement<SetLocaleRequestType> createSetLocale(SetLocaleRequestType paramSetLocaleRequestType) {
    return new JAXBElement(_SetLocale_QNAME, SetLocaleRequestType.class, null, paramSetLocaleRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveGroup")
  public JAXBElement<RemoveGroupRequestType> createRemoveGroup(RemoveGroupRequestType paramRemoveGroupRequestType) {
    return new JAXBElement(_RemoveGroup_QNAME, RemoveGroupRequestType.class, null, paramRemoveGroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDisksForVsan")
  public JAXBElement<QueryDisksForVsanRequestType> createQueryDisksForVsan(QueryDisksForVsanRequestType paramQueryDisksForVsanRequestType) {
    return new JAXBElement(_QueryDisksForVsan_QNAME, QueryDisksForVsanRequestType.class, null, paramQueryDisksForVsanRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VspanPortgroupTypeChangeFaultFault")
  public JAXBElement<VspanPortgroupTypeChangeFault> createVspanPortgroupTypeChangeFaultFault(VspanPortgroupTypeChangeFault paramVspanPortgroupTypeChangeFault) {
    return new JAXBElement(_VspanPortgroupTypeChangeFaultFault_QNAME, VspanPortgroupTypeChangeFault.class, null, paramVspanPortgroupTypeChangeFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureDomObject")
  public JAXBElement<ReconfigureDomObjectRequestType> createReconfigureDomObject(ReconfigureDomObjectRequestType paramReconfigureDomObjectRequestType) {
    return new JAXBElement(_ReconfigureDomObject_QNAME, ReconfigureDomObjectRequestType.class, null, paramReconfigureDomObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ClearNFSUser")
  public JAXBElement<ClearNFSUserRequestType> createClearNFSUser(ClearNFSUserRequestType paramClearNFSUserRequestType) {
    return new JAXBElement(_ClearNFSUser_QNAME, ClearNFSUserRequestType.class, null, paramClearNFSUserRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateUser")
  public JAXBElement<CreateUserRequestType> createCreateUser(CreateUserRequestType paramCreateUserRequestType) {
    return new JAXBElement(_CreateUser_QNAME, CreateUserRequestType.class, null, paramCreateUserRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshHealthStatusSystem")
  public JAXBElement<RefreshHealthStatusSystemRequestType> createRefreshHealthStatusSystem(RefreshHealthStatusSystemRequestType paramRefreshHealthStatusSystemRequestType) {
    return new JAXBElement(_RefreshHealthStatusSystem_QNAME, RefreshHealthStatusSystemRequestType.class, null, paramRefreshHealthStatusSystemRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CustomizeVM_Task")
  public JAXBElement<CustomizeVMRequestType> createCustomizeVMTask(CustomizeVMRequestType paramCustomizeVMRequestType) {
    return new JAXBElement(_CustomizeVMTask_QNAME, CustomizeVMRequestType.class, null, paramCustomizeVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckVmConfig_Task")
  public JAXBElement<CheckVmConfigRequestType> createCheckVmConfigTask(CheckVmConfigRequestType paramCheckVmConfigRequestType) {
    return new JAXBElement(_CheckVmConfigTask_QNAME, CheckVmConfigRequestType.class, null, paramCheckVmConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DiskNotSupportedFault")
  public JAXBElement<DiskNotSupported> createDiskNotSupportedFault(DiskNotSupported paramDiskNotSupported) {
    return new JAXBElement(_DiskNotSupportedFault_QNAME, DiskNotSupported.class, null, paramDiskNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostVStorageObjectRetrieveSnapshotInfo")
  public JAXBElement<HostVStorageObjectRetrieveSnapshotInfoRequestType> createHostVStorageObjectRetrieveSnapshotInfo(HostVStorageObjectRetrieveSnapshotInfoRequestType paramHostVStorageObjectRetrieveSnapshotInfoRequestType) {
    return new JAXBElement(_HostVStorageObjectRetrieveSnapshotInfo_QNAME, HostVStorageObjectRetrieveSnapshotInfoRequestType.class, null, paramHostVStorageObjectRetrieveSnapshotInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NasSessionCredentialConflictFault")
  public JAXBElement<NasSessionCredentialConflict> createNasSessionCredentialConflictFault(NasSessionCredentialConflict paramNasSessionCredentialConflict) {
    return new JAXBElement(_NasSessionCredentialConflictFault_QNAME, NasSessionCredentialConflict.class, null, paramNasSessionCredentialConflict);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureCluster_Task")
  public JAXBElement<ReconfigureClusterRequestType> createReconfigureClusterTask(ReconfigureClusterRequestType paramReconfigureClusterRequestType) {
    return new JAXBElement(_ReconfigureClusterTask_QNAME, ReconfigureClusterRequestType.class, null, paramReconfigureClusterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConsumerUndefinedPrefixFault")
  public JAXBElement<OvfConsumerUndefinedPrefix> createOvfConsumerUndefinedPrefixFault(OvfConsumerUndefinedPrefix paramOvfConsumerUndefinedPrefix) {
    return new JAXBElement(_OvfConsumerUndefinedPrefixFault_QNAME, OvfConsumerUndefinedPrefix.class, null, paramOvfConsumerUndefinedPrefix);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdatePhysicalNicLinkSpeed")
  public JAXBElement<UpdatePhysicalNicLinkSpeedRequestType> createUpdatePhysicalNicLinkSpeed(UpdatePhysicalNicLinkSpeedRequestType paramUpdatePhysicalNicLinkSpeedRequestType) {
    return new JAXBElement(_UpdatePhysicalNicLinkSpeed_QNAME, UpdatePhysicalNicLinkSpeedRequestType.class, null, paramUpdatePhysicalNicLinkSpeedRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FileTooLargeFault")
  public JAXBElement<FileTooLarge> createFileTooLargeFault(FileTooLarge paramFileTooLarge) {
    return new JAXBElement(_FileTooLargeFault_QNAME, FileTooLarge.class, null, paramFileTooLarge);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckLicenseFeature")
  public JAXBElement<CheckLicenseFeatureRequestType> createCheckLicenseFeature(CheckLicenseFeatureRequestType paramCheckLicenseFeatureRequestType) {
    return new JAXBElement(_CheckLicenseFeature_QNAME, CheckLicenseFeatureRequestType.class, null, paramCheckLicenseFeatureRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveSelfSignedClientCert")
  public JAXBElement<RetrieveSelfSignedClientCertRequestType> createRetrieveSelfSignedClientCert(RetrieveSelfSignedClientCertRequestType paramRetrieveSelfSignedClientCertRequestType) {
    return new JAXBElement(_RetrieveSelfSignedClientCert_QNAME, RetrieveSelfSignedClientCertRequestType.class, null, paramRetrieveSelfSignedClientCertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfDuplicatedPropertyIdExportFault")
  public JAXBElement<OvfDuplicatedPropertyIdExport> createOvfDuplicatedPropertyIdExportFault(OvfDuplicatedPropertyIdExport paramOvfDuplicatedPropertyIdExport) {
    return new JAXBElement(_OvfDuplicatedPropertyIdExportFault_QNAME, OvfDuplicatedPropertyIdExport.class, null, paramOvfDuplicatedPropertyIdExport);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReadHostResourcePoolTreeFailedFault")
  public JAXBElement<ReadHostResourcePoolTreeFailed> createReadHostResourcePoolTreeFailedFault(ReadHostResourcePoolTreeFailed paramReadHostResourcePoolTreeFailed) {
    return new JAXBElement(_ReadHostResourcePoolTreeFailedFault_QNAME, ReadHostResourcePoolTreeFailed.class, null, paramReadHostResourcePoolTreeFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfNoSpaceOnControllerFault")
  public JAXBElement<OvfNoSpaceOnController> createOvfNoSpaceOnControllerFault(OvfNoSpaceOnController paramOvfNoSpaceOnController) {
    return new JAXBElement(_OvfNoSpaceOnControllerFault_QNAME, OvfNoSpaceOnController.class, null, paramOvfNoSpaceOnController);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostProfileResetValidationState")
  public JAXBElement<HostProfileResetValidationStateRequestType> createHostProfileResetValidationState(HostProfileResetValidationStateRequestType paramHostProfileResetValidationStateRequestType) {
    return new JAXBElement(_HostProfileResetValidationState_QNAME, HostProfileResetValidationStateRequestType.class, null, paramHostProfileResetValidationStateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TurnDiskLocatorLedOn_Task")
  public JAXBElement<TurnDiskLocatorLedOnRequestType> createTurnDiskLocatorLedOnTask(TurnDiskLocatorLedOnRequestType paramTurnDiskLocatorLedOnRequestType) {
    return new JAXBElement(_TurnDiskLocatorLedOnTask_QNAME, TurnDiskLocatorLedOnRequestType.class, null, paramTurnDiskLocatorLedOnRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddKeys")
  public JAXBElement<AddKeysRequestType> createAddKeys(AddKeysRequestType paramAddKeysRequestType) {
    return new JAXBElement(_AddKeys_QNAME, AddKeysRequestType.class, null, paramAddKeysRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateLocalDatastore")
  public JAXBElement<CreateLocalDatastoreRequestType> createCreateLocalDatastore(CreateLocalDatastoreRequestType paramCreateLocalDatastoreRequestType) {
    return new JAXBElement(_CreateLocalDatastore_QNAME, CreateLocalDatastoreRequestType.class, null, paramCreateLocalDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoCompatibleHardAffinityHostFault")
  public JAXBElement<NoCompatibleHardAffinityHost> createNoCompatibleHardAffinityHostFault(NoCompatibleHardAffinityHost paramNoCompatibleHardAffinityHost) {
    return new JAXBElement(_NoCompatibleHardAffinityHostFault_QNAME, NoCompatibleHardAffinityHost.class, null, paramNoCompatibleHardAffinityHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveLicense")
  public JAXBElement<RemoveLicenseRequestType> createRemoveLicense(RemoveLicenseRequestType paramRemoveLicenseRequestType) {
    return new JAXBElement(_RemoveLicense_QNAME, RemoveLicenseRequestType.class, null, paramRemoveLicenseRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EsxAgentHostManagerUpdateConfig")
  public JAXBElement<EsxAgentHostManagerUpdateConfigRequestType> createEsxAgentHostManagerUpdateConfig(EsxAgentHostManagerUpdateConfigRequestType paramEsxAgentHostManagerUpdateConfigRequestType) {
    return new JAXBElement(_EsxAgentHostManagerUpdateConfig_QNAME, EsxAgentHostManagerUpdateConfigRequestType.class, null, paramEsxAgentHostManagerUpdateConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisconnectHost_Task")
  public JAXBElement<DisconnectHostRequestType> createDisconnectHostTask(DisconnectHostRequestType paramDisconnectHostRequestType) {
    return new JAXBElement(_DisconnectHostTask_QNAME, DisconnectHostRequestType.class, null, paramDisconnectHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ApplyStorageDrsRecommendation_Task")
  public JAXBElement<ApplyStorageDrsRecommendationRequestType> createApplyStorageDrsRecommendationTask(ApplyStorageDrsRecommendationRequestType paramApplyStorageDrsRecommendationRequestType) {
    return new JAXBElement(_ApplyStorageDrsRecommendationTask_QNAME, ApplyStorageDrsRecommendationRequestType.class, null, paramApplyStorageDrsRecommendationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultInvalidVnicFault")
  public JAXBElement<IscsiFaultInvalidVnic> createIscsiFaultInvalidVnicFault(IscsiFaultInvalidVnic paramIscsiFaultInvalidVnic) {
    return new JAXBElement(_IscsiFaultInvalidVnicFault_QNAME, IscsiFaultInvalidVnic.class, null, paramIscsiFaultInvalidVnic);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryFaultToleranceCompatibility")
  public JAXBElement<QueryFaultToleranceCompatibilityRequestType> createQueryFaultToleranceCompatibility(QueryFaultToleranceCompatibilityRequestType paramQueryFaultToleranceCompatibilityRequestType) {
    return new JAXBElement(_QueryFaultToleranceCompatibility_QNAME, QueryFaultToleranceCompatibilityRequestType.class, null, paramQueryFaultToleranceCompatibilityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryBootDevices")
  public JAXBElement<QueryBootDevicesRequestType> createQueryBootDevices(QueryBootDevicesRequestType paramQueryBootDevicesRequestType) {
    return new JAXBElement(_QueryBootDevices_QNAME, QueryBootDevicesRequestType.class, null, paramQueryBootDevicesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateIpRouteConfig")
  public JAXBElement<UpdateIpRouteConfigRequestType> createUpdateIpRouteConfig(UpdateIpRouteConfigRequestType paramUpdateIpRouteConfigRequestType) {
    return new JAXBElement(_UpdateIpRouteConfig_QNAME, UpdateIpRouteConfigRequestType.class, null, paramUpdateIpRouteConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QuarantineModeFaultFault")
  public JAXBElement<QuarantineModeFault> createQuarantineModeFaultFault(QuarantineModeFault paramQuarantineModeFault) {
    return new JAXBElement(_QuarantineModeFaultFault_QNAME, QuarantineModeFault.class, null, paramQuarantineModeFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListGuestAliases")
  public JAXBElement<ListGuestAliasesRequestType> createListGuestAliases(ListGuestAliasesRequestType paramListGuestAliasesRequestType) {
    return new JAXBElement(_ListGuestAliases_QNAME, ListGuestAliasesRequestType.class, null, paramListGuestAliasesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResetEntityPermissions")
  public JAXBElement<ResetEntityPermissionsRequestType> createResetEntityPermissions(ResetEntityPermissionsRequestType paramResetEntityPermissionsRequestType) {
    return new JAXBElement(_ResetEntityPermissions_QNAME, ResetEntityPermissionsRequestType.class, null, paramResetEntityPermissionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateSecondaryVM_Task")
  public JAXBElement<CreateSecondaryVMRequestType> createCreateSecondaryVMTask(CreateSecondaryVMRequestType paramCreateSecondaryVMRequestType) {
    return new JAXBElement(_CreateSecondaryVMTask_QNAME, CreateSecondaryVMRequestType.class, null, paramCreateSecondaryVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RevertToCurrentSnapshot_Task")
  public JAXBElement<RevertToCurrentSnapshotRequestType> createRevertToCurrentSnapshotTask(RevertToCurrentSnapshotRequestType paramRevertToCurrentSnapshotRequestType) {
    return new JAXBElement(_RevertToCurrentSnapshotTask_QNAME, RevertToCurrentSnapshotRequestType.class, null, paramRevertToCurrentSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateSelfSignedClientCert")
  public JAXBElement<UpdateSelfSignedClientCertRequestType> createUpdateSelfSignedClientCert(UpdateSelfSignedClientCertRequestType paramUpdateSelfSignedClientCertRequestType) {
    return new JAXBElement(_UpdateSelfSignedClientCert_QNAME, UpdateSelfSignedClientCertRequestType.class, null, paramUpdateSelfSignedClientCertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoLicenseServerConfiguredFault")
  public JAXBElement<NoLicenseServerConfigured> createNoLicenseServerConfiguredFault(NoLicenseServerConfigured paramNoLicenseServerConfigured) {
    return new JAXBElement(_NoLicenseServerConfiguredFault_QNAME, NoLicenseServerConfigured.class, null, paramNoLicenseServerConfigured);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "BatchAddStandaloneHosts_Task")
  public JAXBElement<BatchAddStandaloneHostsRequestType> createBatchAddStandaloneHostsTask(BatchAddStandaloneHostsRequestType paramBatchAddStandaloneHostsRequestType) {
    return new JAXBElement(_BatchAddStandaloneHostsTask_QNAME, BatchAddStandaloneHostsRequestType.class, null, paramBatchAddStandaloneHostsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckCustomizationResources")
  public JAXBElement<CheckCustomizationResourcesRequestType> createCheckCustomizationResources(CheckCustomizationResourcesRequestType paramCheckCustomizationResourcesRequestType) {
    return new JAXBElement(_CheckCustomizationResources_QNAME, CheckCustomizationResourcesRequestType.class, null, paramCheckCustomizationResourcesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotAuthenticatedFault")
  public JAXBElement<NotAuthenticated> createNotAuthenticatedFault(NotAuthenticated paramNotAuthenticated) {
    return new JAXBElement(_NotAuthenticatedFault_QNAME, NotAuthenticated.class, null, paramNotAuthenticated);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedHostDisconnectedFault")
  public JAXBElement<EVCAdmissionFailedHostDisconnected> createEVCAdmissionFailedHostDisconnectedFault(EVCAdmissionFailedHostDisconnected paramEVCAdmissionFailedHostDisconnected) {
    return new JAXBElement(_EVCAdmissionFailedHostDisconnectedFault_QNAME, EVCAdmissionFailedHostDisconnected.class, null, paramEVCAdmissionFailedHostDisconnected);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateNvdimmPMemNamespace_Task")
  public JAXBElement<CreateNvdimmPMemNamespaceRequestType> createCreateNvdimmPMemNamespaceTask(CreateNvdimmPMemNamespaceRequestType paramCreateNvdimmPMemNamespaceRequestType) {
    return new JAXBElement(_CreateNvdimmPMemNamespaceTask_QNAME, CreateNvdimmPMemNamespaceRequestType.class, null, paramCreateNvdimmPMemNamespaceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedFault")
  public JAXBElement<EVCAdmissionFailed> createEVCAdmissionFailedFault(EVCAdmissionFailed paramEVCAdmissionFailed) {
    return new JAXBElement(_EVCAdmissionFailedFault_QNAME, EVCAdmissionFailed.class, null, paramEVCAdmissionFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveFailedFault")
  public JAXBElement<RemoveFailed> createRemoveFailedFault(RemoveFailed paramRemoveFailed) {
    return new JAXBElement(_RemoveFailedFault_QNAME, RemoveFailed.class, null, paramRemoveFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveHardwareUptime")
  public JAXBElement<RetrieveHardwareUptimeRequestType> createRetrieveHardwareUptime(RetrieveHardwareUptimeRequestType paramRetrieveHardwareUptimeRequestType) {
    return new JAXBElement(_RetrieveHardwareUptime_QNAME, RetrieveHardwareUptimeRequestType.class, null, paramRetrieveHardwareUptimeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryConnectionInfoViaSpec")
  public JAXBElement<QueryConnectionInfoViaSpecRequestType> createQueryConnectionInfoViaSpec(QueryConnectionInfoViaSpecRequestType paramQueryConnectionInfoViaSpecRequestType) {
    return new JAXBElement(_QueryConnectionInfoViaSpec_QNAME, QueryConnectionInfoViaSpecRequestType.class, null, paramQueryConnectionInfoViaSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DigestNotSupportedFault")
  public JAXBElement<DigestNotSupported> createDigestNotSupportedFault(DigestNotSupported paramDigestNotSupported) {
    return new JAXBElement(_DigestNotSupportedFault_QNAME, DigestNotSupported.class, null, paramDigestNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfInvalidVmNameFault")
  public JAXBElement<OvfInvalidVmName> createOvfInvalidVmNameFault(OvfInvalidVmName paramOvfInvalidVmName) {
    return new JAXBElement(_OvfInvalidVmNameFault_QNAME, OvfInvalidVmName.class, null, paramOvfInvalidVmName);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ApplyEvcModeVM_Task")
  public JAXBElement<ApplyEvcModeVMRequestType> createApplyEvcModeVMTask(ApplyEvcModeVMRequestType paramApplyEvcModeVMRequestType) {
    return new JAXBElement(_ApplyEvcModeVMTask_QNAME, ApplyEvcModeVMRequestType.class, null, paramApplyEvcModeVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchSupersededFault")
  public JAXBElement<PatchSuperseded> createPatchSupersededFault(PatchSuperseded paramPatchSuperseded) {
    return new JAXBElement(_PatchSupersededFault_QNAME, PatchSuperseded.class, null, paramPatchSuperseded);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostCommunicationFault")
  public JAXBElement<HostCommunication> createHostCommunicationFault(HostCommunication paramHostCommunication) {
    return new JAXBElement(_HostCommunicationFault_QNAME, HostCommunication.class, null, paramHostCommunication);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateStoragePod")
  public JAXBElement<CreateStoragePodRequestType> createCreateStoragePod(CreateStoragePodRequestType paramCreateStoragePodRequestType) {
    return new JAXBElement(_CreateStoragePod_QNAME, CreateStoragePodRequestType.class, null, paramCreateStoragePodRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AlreadyConnectedFault")
  public JAXBElement<AlreadyConnected> createAlreadyConnectedFault(AlreadyConnected paramAlreadyConnected) {
    return new JAXBElement(_AlreadyConnectedFault_QNAME, AlreadyConnected.class, null, paramAlreadyConnected);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MigrationFeatureNotSupportedFault")
  public JAXBElement<MigrationFeatureNotSupported> createMigrationFeatureNotSupportedFault(MigrationFeatureNotSupported paramMigrationFeatureNotSupported) {
    return new JAXBElement(_MigrationFeatureNotSupportedFault_QNAME, MigrationFeatureNotSupported.class, null, paramMigrationFeatureNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SwitchIpUnsetFault")
  public JAXBElement<SwitchIpUnset> createSwitchIpUnsetFault(SwitchIpUnset paramSwitchIpUnset) {
    return new JAXBElement(_SwitchIpUnsetFault_QNAME, SwitchIpUnset.class, null, paramSwitchIpUnset);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GetVchaClusterHealth")
  public JAXBElement<GetVchaClusterHealthRequestType> createGetVchaClusterHealth(GetVchaClusterHealthRequestType paramGetVchaClusterHealthRequestType) {
    return new JAXBElement(_GetVchaClusterHealth_QNAME, GetVchaClusterHealthRequestType.class, null, paramGetVchaClusterHealthRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ValidateCredentialsInGuest")
  public JAXBElement<ValidateCredentialsInGuestRequestType> createValidateCredentialsInGuest(ValidateCredentialsInGuestRequestType paramValidateCredentialsInGuestRequestType) {
    return new JAXBElement(_ValidateCredentialsInGuest_QNAME, ValidateCredentialsInGuestRequestType.class, null, paramValidateCredentialsInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VFlashModuleVersionIncompatibleFault")
  public JAXBElement<VFlashModuleVersionIncompatible> createVFlashModuleVersionIncompatibleFault(VFlashModuleVersionIncompatible paramVFlashModuleVersionIncompatible) {
    return new JAXBElement(_VFlashModuleVersionIncompatibleFault_QNAME, VFlashModuleVersionIncompatible.class, null, paramVFlashModuleVersionIncompatible);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateUser")
  public JAXBElement<UpdateUserRequestType> createUpdateUser(UpdateUserRequestType paramUpdateUserRequestType) {
    return new JAXBElement(_UpdateUser_QNAME, UpdateUserRequestType.class, null, paramUpdateUserRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkDefault")
  public JAXBElement<MarkDefaultRequestType> createMarkDefault(MarkDefaultRequestType paramMarkDefaultRequestType) {
    return new JAXBElement(_MarkDefault_QNAME, MarkDefaultRequestType.class, null, paramMarkDefaultRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateCollectorForTasks")
  public JAXBElement<CreateCollectorForTasksRequestType> createCreateCollectorForTasks(CreateCollectorForTasksRequestType paramCreateCollectorForTasksRequestType) {
    return new JAXBElement(_CreateCollectorForTasks_QNAME, CreateCollectorForTasksRequestType.class, null, paramCreateCollectorForTasksRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FetchUserPrivilegeOnEntities")
  public JAXBElement<FetchUserPrivilegeOnEntitiesRequestType> createFetchUserPrivilegeOnEntities(FetchUserPrivilegeOnEntitiesRequestType paramFetchUserPrivilegeOnEntitiesRequestType) {
    return new JAXBElement(_FetchUserPrivilegeOnEntities_QNAME, FetchUserPrivilegeOnEntitiesRequestType.class, null, paramFetchUserPrivilegeOnEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IncorrectHostInformationFault")
  public JAXBElement<IncorrectHostInformation> createIncorrectHostInformationFault(IncorrectHostInformation paramIncorrectHostInformation) {
    return new JAXBElement(_IncorrectHostInformationFault_QNAME, IncorrectHostInformation.class, null, paramIncorrectHostInformation);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "BatchQueryConnectInfo")
  public JAXBElement<BatchQueryConnectInfoRequestType> createBatchQueryConnectInfo(BatchQueryConnectInfoRequestType paramBatchQueryConnectInfoRequestType) {
    return new JAXBElement(_BatchQueryConnectInfo_QNAME, BatchQueryConnectInfoRequestType.class, null, paramBatchQueryConnectInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmPowerOnDisabledFault")
  public JAXBElement<VmPowerOnDisabled> createVmPowerOnDisabledFault(VmPowerOnDisabled paramVmPowerOnDisabled) {
    return new JAXBElement(_VmPowerOnDisabledFault_QNAME, VmPowerOnDisabled.class, null, paramVmPowerOnDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RebootGuest")
  public JAXBElement<RebootGuestRequestType> createRebootGuest(RebootGuestRequestType paramRebootGuestRequestType) {
    return new JAXBElement(_RebootGuest_QNAME, RebootGuestRequestType.class, null, paramRebootGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HttpNfcLeaseComplete")
  public JAXBElement<HttpNfcLeaseCompleteRequestType> createHttpNfcLeaseComplete(HttpNfcLeaseCompleteRequestType paramHttpNfcLeaseCompleteRequestType) {
    return new JAXBElement(_HttpNfcLeaseComplete_QNAME, HttpNfcLeaseCompleteRequestType.class, null, paramHttpNfcLeaseCompleteRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RenameCustomFieldDef")
  public JAXBElement<RenameCustomFieldDefRequestType> createRenameCustomFieldDef(RenameCustomFieldDefRequestType paramRenameCustomFieldDefRequestType) {
    return new JAXBElement(_RenameCustomFieldDef_QNAME, RenameCustomFieldDefRequestType.class, null, paramRenameCustomFieldDefRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddKey")
  public JAXBElement<AddKeyRequestType> createAddKey(AddKeyRequestType paramAddKeyRequestType) {
    return new JAXBElement(_AddKey_QNAME, AddKeyRequestType.class, null, paramAddKeyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnterLockdownMode")
  public JAXBElement<EnterLockdownModeRequestType> createEnterLockdownMode(EnterLockdownModeRequestType paramEnterLockdownModeRequestType) {
    return new JAXBElement(_EnterLockdownMode_QNAME, EnterLockdownModeRequestType.class, null, paramEnterLockdownModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkAsVirtualMachine")
  public JAXBElement<MarkAsVirtualMachineRequestType> createMarkAsVirtualMachine(MarkAsVirtualMachineRequestType paramMarkAsVirtualMachineRequestType) {
    return new JAXBElement(_MarkAsVirtualMachine_QNAME, MarkAsVirtualMachineRequestType.class, null, paramMarkAsVirtualMachineRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisallowedOperationOnFailoverHostFault")
  public JAXBElement<DisallowedOperationOnFailoverHost> createDisallowedOperationOnFailoverHostFault(DisallowedOperationOnFailoverHost paramDisallowedOperationOnFailoverHost) {
    return new JAXBElement(_DisallowedOperationOnFailoverHostFault_QNAME, DisallowedOperationOnFailoverHost.class, null, paramDisallowedOperationOnFailoverHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExitMaintenanceMode_Task")
  public JAXBElement<ExitMaintenanceModeRequestType> createExitMaintenanceModeTask(ExitMaintenanceModeRequestType paramExitMaintenanceModeRequestType) {
    return new JAXBElement(_ExitMaintenanceModeTask_QNAME, ExitMaintenanceModeRequestType.class, null, paramExitMaintenanceModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateScreenshot_Task")
  public JAXBElement<CreateScreenshotRequestType> createCreateScreenshotTask(CreateScreenshotRequestType paramCreateScreenshotRequestType) {
    return new JAXBElement(_CreateScreenshotTask_QNAME, CreateScreenshotRequestType.class, null, paramCreateScreenshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryFirmwareConfigUploadURL")
  public JAXBElement<QueryFirmwareConfigUploadURLRequestType> createQueryFirmwareConfigUploadURL(QueryFirmwareConfigUploadURLRequestType paramQueryFirmwareConfigUploadURLRequestType) {
    return new JAXBElement(_QueryFirmwareConfigUploadURL_QNAME, QueryFirmwareConfigUploadURLRequestType.class, null, paramQueryFirmwareConfigUploadURLRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LicenseRestrictedFault")
  public JAXBElement<LicenseRestricted> createLicenseRestrictedFault(LicenseRestricted paramLicenseRestricted) {
    return new JAXBElement(_LicenseRestrictedFault_QNAME, LicenseRestricted.class, null, paramLicenseRestricted);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateSystemUsers")
  public JAXBElement<UpdateSystemUsersRequestType> createUpdateSystemUsers(UpdateSystemUsersRequestType paramUpdateSystemUsersRequestType) {
    return new JAXBElement(_UpdateSystemUsers_QNAME, UpdateSystemUsersRequestType.class, null, paramUpdateSystemUsersRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsDatacentersCannotShareDatastoreFault")
  public JAXBElement<StorageDrsDatacentersCannotShareDatastore> createStorageDrsDatacentersCannotShareDatastoreFault(StorageDrsDatacentersCannotShareDatastore paramStorageDrsDatacentersCannotShareDatastore) {
    return new JAXBElement(_StorageDrsDatacentersCannotShareDatastoreFault_QNAME, StorageDrsDatacentersCannotShareDatastore.class, null, paramStorageDrsDatacentersCannotShareDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryAvailablePartition")
  public JAXBElement<QueryAvailablePartitionRequestType> createQueryAvailablePartition(QueryAvailablePartitionRequestType paramQueryAvailablePartitionRequestType) {
    return new JAXBElement(_QueryAvailablePartition_QNAME, QueryAvailablePartitionRequestType.class, null, paramQueryAvailablePartitionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FaultToleranceVmNotDasProtectedFault")
  public JAXBElement<FaultToleranceVmNotDasProtected> createFaultToleranceVmNotDasProtectedFault(FaultToleranceVmNotDasProtected paramFaultToleranceVmNotDasProtected) {
    return new JAXBElement(_FaultToleranceVmNotDasProtectedFault_QNAME, FaultToleranceVmNotDasProtected.class, null, paramFaultToleranceVmNotDasProtected);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotComputeFTCompatibleHostsFault")
  public JAXBElement<CannotComputeFTCompatibleHosts> createCannotComputeFTCompatibleHostsFault(CannotComputeFTCompatibleHosts paramCannotComputeFTCompatibleHosts) {
    return new JAXBElement(_CannotComputeFTCompatibleHostsFault_QNAME, CannotComputeFTCompatibleHosts.class, null, paramCannotComputeFTCompatibleHosts);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateSoftwareInternetScsiEnabled")
  public JAXBElement<UpdateSoftwareInternetScsiEnabledRequestType> createUpdateSoftwareInternetScsiEnabled(UpdateSoftwareInternetScsiEnabledRequestType paramUpdateSoftwareInternetScsiEnabledRequestType) {
    return new JAXBElement(_UpdateSoftwareInternetScsiEnabled_QNAME, UpdateSoftwareInternetScsiEnabledRequestType.class, null, paramUpdateSoftwareInternetScsiEnabledRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryMemoryOverhead")
  public JAXBElement<QueryMemoryOverheadRequestType> createQueryMemoryOverhead(QueryMemoryOverheadRequestType paramQueryMemoryOverheadRequestType) {
    return new JAXBElement(_QueryMemoryOverhead_QNAME, QueryMemoryOverheadRequestType.class, null, paramQueryMemoryOverheadRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryComplianceStatus")
  public JAXBElement<QueryComplianceStatusRequestType> createQueryComplianceStatus(QueryComplianceStatusRequestType paramQueryComplianceStatusRequestType) {
    return new JAXBElement(_QueryComplianceStatus_QNAME, QueryComplianceStatusRequestType.class, null, paramQueryComplianceStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteVmfsVolumeState")
  public JAXBElement<DeleteVmfsVolumeStateRequestType> createDeleteVmfsVolumeState(DeleteVmfsVolumeStateRequestType paramDeleteVmfsVolumeStateRequestType) {
    return new JAXBElement(_DeleteVmfsVolumeState_QNAME, DeleteVmfsVolumeStateRequestType.class, null, paramDeleteVmfsVolumeStateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedAttributeFault")
  public JAXBElement<OvfUnsupportedAttribute> createOvfUnsupportedAttributeFault(OvfUnsupportedAttribute paramOvfUnsupportedAttribute) {
    return new JAXBElement(_OvfUnsupportedAttributeFault_QNAME, OvfUnsupportedAttribute.class, null, paramOvfUnsupportedAttribute);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveIndependentDiskFault")
  public JAXBElement<StorageDrsCannotMoveIndependentDisk> createStorageDrsCannotMoveIndependentDiskFault(StorageDrsCannotMoveIndependentDisk paramStorageDrsCannotMoveIndependentDisk) {
    return new JAXBElement(_StorageDrsCannotMoveIndependentDiskFault_QNAME, StorageDrsCannotMoveIndependentDisk.class, null, paramStorageDrsCannotMoveIndependentDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoCompatibleHostFault")
  public JAXBElement<NoCompatibleHost> createNoCompatibleHostFault(NoCompatibleHost paramNoCompatibleHost) {
    return new JAXBElement(_NoCompatibleHostFault_QNAME, NoCompatibleHost.class, null, paramNoCompatibleHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "Login")
  public JAXBElement<LoginRequestType> createLogin(LoginRequestType paramLoginRequestType) {
    return new JAXBElement(_Login_QNAME, LoginRequestType.class, null, paramLoginRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidPropertyValueFault")
  public JAXBElement<InvalidPropertyValue> createInvalidPropertyValueFault(InvalidPropertyValue paramInvalidPropertyValue) {
    return new JAXBElement(_InvalidPropertyValueFault_QNAME, InvalidPropertyValue.class, null, paramInvalidPropertyValue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetDisplayTopology")
  public JAXBElement<SetDisplayTopologyRequestType> createSetDisplayTopology(SetDisplayTopologyRequestType paramSetDisplayTopologyRequestType) {
    return new JAXBElement(_SetDisplayTopology_QNAME, SetDisplayTopologyRequestType.class, null, paramSetDisplayTopologyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryCompatibleHostForNewDvs")
  public JAXBElement<QueryCompatibleHostForNewDvsRequestType> createQueryCompatibleHostForNewDvs(QueryCompatibleHostForNewDvsRequestType paramQueryCompatibleHostForNewDvsRequestType) {
    return new JAXBElement(_QueryCompatibleHostForNewDvs_QNAME, QueryCompatibleHostForNewDvsRequestType.class, null, paramQueryCompatibleHostForNewDvsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfInvalidPackageFault")
  public JAXBElement<OvfInvalidPackage> createOvfInvalidPackageFault(OvfInvalidPackage paramOvfInvalidPackage) {
    return new JAXBElement(_OvfInvalidPackageFault_QNAME, OvfInvalidPackage.class, null, paramOvfInvalidPackage);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnsupportedVimApiVersionFault")
  public JAXBElement<UnsupportedVimApiVersion> createUnsupportedVimApiVersionFault(UnsupportedVimApiVersion paramUnsupportedVimApiVersion) {
    return new JAXBElement(_UnsupportedVimApiVersionFault_QNAME, UnsupportedVimApiVersion.class, null, paramUnsupportedVimApiVersion);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CryptoManagerHostPrepare")
  public JAXBElement<CryptoManagerHostPrepareRequestType> createCryptoManagerHostPrepare(CryptoManagerHostPrepareRequestType paramCryptoManagerHostPrepareRequestType) {
    return new JAXBElement(_CryptoManagerHostPrepare_QNAME, CryptoManagerHostPrepareRequestType.class, null, paramCryptoManagerHostPrepareRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoCompatibleSoftAffinityHostFault")
  public JAXBElement<NoCompatibleSoftAffinityHost> createNoCompatibleSoftAffinityHostFault(NoCompatibleSoftAffinityHost paramNoCompatibleSoftAffinityHost) {
    return new JAXBElement(_NoCompatibleSoftAffinityHostFault_QNAME, NoCompatibleSoftAffinityHost.class, null, paramNoCompatibleSoftAffinityHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotUserConfigurablePropertyFault")
  public JAXBElement<NotUserConfigurableProperty> createNotUserConfigurablePropertyFault(NotUserConfigurableProperty paramNotUserConfigurableProperty) {
    return new JAXBElement(_NotUserConfigurablePropertyFault_QNAME, NotUserConfigurableProperty.class, null, paramNotUserConfigurableProperty);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResolveInstallationErrorsOnHost_Task")
  public JAXBElement<ResolveInstallationErrorsOnHostRequestType> createResolveInstallationErrorsOnHostTask(ResolveInstallationErrorsOnHostRequestType paramResolveInstallationErrorsOnHostRequestType) {
    return new JAXBElement(_ResolveInstallationErrorsOnHostTask_QNAME, ResolveInstallationErrorsOnHostRequestType.class, null, paramResolveInstallationErrorsOnHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InstallServerCertificate")
  public JAXBElement<InstallServerCertificateRequestType> createInstallServerCertificate(InstallServerCertificateRequestType paramInstallServerCertificateRequestType) {
    return new JAXBElement(_InstallServerCertificate_QNAME, InstallServerCertificateRequestType.class, null, paramInstallServerCertificateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeviceHotPlugNotSupportedFault")
  public JAXBElement<DeviceHotPlugNotSupported> createDeviceHotPlugNotSupportedFault(DeviceHotPlugNotSupported paramDeviceHotPlugNotSupported) {
    return new JAXBElement(_DeviceHotPlugNotSupportedFault_QNAME, DeviceHotPlugNotSupported.class, null, paramDeviceHotPlugNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CertMgrRefreshCertificates_Task")
  public JAXBElement<CertMgrRefreshCertificatesRequestType> createCertMgrRefreshCertificatesTask(CertMgrRefreshCertificatesRequestType paramCertMgrRefreshCertificatesRequestType) {
    return new JAXBElement(_CertMgrRefreshCertificatesTask_QNAME, CertMgrRefreshCertificatesRequestType.class, null, paramCertMgrRefreshCertificatesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExecuteHostProfile")
  public JAXBElement<ExecuteHostProfileRequestType> createExecuteHostProfile(ExecuteHostProfileRequestType paramExecuteHostProfileRequestType) {
    return new JAXBElement(_ExecuteHostProfile_QNAME, ExecuteHostProfileRequestType.class, null, paramExecuteHostProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPerfProviderSummary")
  public JAXBElement<QueryPerfProviderSummaryRequestType> createQueryPerfProviderSummary(QueryPerfProviderSummaryRequestType paramQueryPerfProviderSummaryRequestType) {
    return new JAXBElement(_QueryPerfProviderSummary_QNAME, QueryPerfProviderSummaryRequestType.class, null, paramQueryPerfProviderSummaryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableMultipathPath")
  public JAXBElement<DisableMultipathPathRequestType> createDisableMultipathPath(DisableMultipathPathRequestType paramDisableMultipathPathRequestType) {
    return new JAXBElement(_DisableMultipathPath_QNAME, DisableMultipathPathRequestType.class, null, paramDisableMultipathPathRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateDVSLacpGroupConfig_Task")
  public JAXBElement<UpdateDVSLacpGroupConfigRequestType> createUpdateDVSLacpGroupConfigTask(UpdateDVSLacpGroupConfigRequestType paramUpdateDVSLacpGroupConfigRequestType) {
    return new JAXBElement(_UpdateDVSLacpGroupConfigTask_QNAME, UpdateDVSLacpGroupConfigRequestType.class, null, paramUpdateDVSLacpGroupConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateConsoleIpRouteConfig")
  public JAXBElement<UpdateConsoleIpRouteConfigRequestType> createUpdateConsoleIpRouteConfig(UpdateConsoleIpRouteConfigRequestType paramUpdateConsoleIpRouteConfigRequestType) {
    return new JAXBElement(_UpdateConsoleIpRouteConfig_QNAME, UpdateConsoleIpRouteConfigRequestType.class, null, paramUpdateConsoleIpRouteConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddVirtualNic")
  public JAXBElement<AddVirtualNicRequestType> createAddVirtualNic(AddVirtualNicRequestType paramAddVirtualNicRequestType) {
    return new JAXBElement(_AddVirtualNic_QNAME, AddVirtualNicRequestType.class, null, paramAddVirtualNicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LogBundlingFailedFault")
  public JAXBElement<LogBundlingFailed> createLogBundlingFailedFault(LogBundlingFailed paramLogBundlingFailed) {
    return new JAXBElement(_LogBundlingFailedFault_QNAME, LogBundlingFailed.class, null, paramLogBundlingFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmfsAmbiguousMountFault")
  public JAXBElement<VmfsAmbiguousMount> createVmfsAmbiguousMountFault(VmfsAmbiguousMount paramVmfsAmbiguousMount) {
    return new JAXBElement(_VmfsAmbiguousMountFault_QNAME, VmfsAmbiguousMount.class, null, paramVmfsAmbiguousMount);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateHostProfile")
  public JAXBElement<UpdateHostProfileRequestType> createUpdateHostProfile(UpdateHostProfileRequestType paramUpdateHostProfileRequestType) {
    return new JAXBElement(_UpdateHostProfile_QNAME, UpdateHostProfileRequestType.class, null, paramUpdateHostProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MethodFaultFault")
  public JAXBElement<MethodFault> createMethodFaultFault(MethodFault paramMethodFault) {
    return new JAXBElement(_MethodFaultFault_QNAME, MethodFault.class, null, paramMethodFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AssignUserToGroup")
  public JAXBElement<AssignUserToGroupRequestType> createAssignUserToGroup(AssignUserToGroupRequestType paramAssignUserToGroupRequestType) {
    return new JAXBElement(_AssignUserToGroup_QNAME, AssignUserToGroupRequestType.class, null, paramAssignUserToGroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConflictingConfigurationFault")
  public JAXBElement<ConflictingConfiguration> createConflictingConfigurationFault(ConflictingConfiguration paramConflictingConfiguration) {
    return new JAXBElement(_ConflictingConfigurationFault_QNAME, ConflictingConfiguration.class, null, paramConflictingConfiguration);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ScanHostPatchV2_Task")
  public JAXBElement<ScanHostPatchV2RequestType> createScanHostPatchV2Task(ScanHostPatchV2RequestType paramScanHostPatchV2RequestType) {
    return new JAXBElement(_ScanHostPatchV2Task_QNAME, ScanHostPatchV2RequestType.class, null, paramScanHostPatchV2RequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenerateHostProfileTaskList_Task")
  public JAXBElement<GenerateHostProfileTaskListRequestType> createGenerateHostProfileTaskListTask(GenerateHostProfileTaskListRequestType paramGenerateHostProfileTaskListRequestType) {
    return new JAXBElement(_GenerateHostProfileTaskListTask_QNAME, GenerateHostProfileTaskListRequestType.class, null, paramGenerateHostProfileTaskListRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ShrinkDiskFaultFault")
  public JAXBElement<ShrinkDiskFault> createShrinkDiskFaultFault(ShrinkDiskFault paramShrinkDiskFault) {
    return new JAXBElement(_ShrinkDiskFaultFault_QNAME, ShrinkDiskFault.class, null, paramShrinkDiskFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DatastoreEnterMaintenanceMode")
  public JAXBElement<DatastoreEnterMaintenanceModeRequestType> createDatastoreEnterMaintenanceMode(DatastoreEnterMaintenanceModeRequestType paramDatastoreEnterMaintenanceModeRequestType) {
    return new JAXBElement(_DatastoreEnterMaintenanceMode_QNAME, DatastoreEnterMaintenanceModeRequestType.class, null, paramDatastoreEnterMaintenanceModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyView")
  public JAXBElement<DestroyViewRequestType> createDestroyView(DestroyViewRequestType paramDestroyViewRequestType) {
    return new JAXBElement(_DestroyView_QNAME, DestroyViewRequestType.class, null, paramDestroyViewRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CloneFromSnapshotNotSupportedFault")
  public JAXBElement<CloneFromSnapshotNotSupported> createCloneFromSnapshotNotSupportedFault(CloneFromSnapshotNotSupported paramCloneFromSnapshotNotSupported) {
    return new JAXBElement(_CloneFromSnapshotNotSupportedFault_QNAME, CloneFromSnapshotNotSupported.class, null, paramCloneFromSnapshotNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FtIssuesOnHostFault")
  public JAXBElement<FtIssuesOnHost> createFtIssuesOnHostFault(FtIssuesOnHost paramFtIssuesOnHost) {
    return new JAXBElement(_FtIssuesOnHostFault_QNAME, FtIssuesOnHost.class, null, paramFtIssuesOnHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCUnsupportedByHostSoftwareFault")
  public JAXBElement<EVCUnsupportedByHostSoftware> createEVCUnsupportedByHostSoftwareFault(EVCUnsupportedByHostSoftware paramEVCUnsupportedByHostSoftware) {
    return new JAXBElement(_EVCUnsupportedByHostSoftwareFault_QNAME, EVCUnsupportedByHostSoftware.class, null, paramEVCUnsupportedByHostSoftware);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMOnVirtualIntranetFault")
  public JAXBElement<VMOnVirtualIntranet> createVMOnVirtualIntranetFault(VMOnVirtualIntranet paramVMOnVirtualIntranet) {
    return new JAXBElement(_VMOnVirtualIntranetFault_QNAME, VMOnVirtualIntranet.class, null, paramVMOnVirtualIntranet);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RevertVStorageObject_Task")
  public JAXBElement<RevertVStorageObjectRequestType> createRevertVStorageObjectTask(RevertVStorageObjectRequestType paramRevertVStorageObjectRequestType) {
    return new JAXBElement(_RevertVStorageObjectTask_QNAME, RevertVStorageObjectRequestType.class, null, paramRevertVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CryptoManagerHostDisable")
  public JAXBElement<CryptoManagerHostDisableRequestType> createCryptoManagerHostDisable(CryptoManagerHostDisableRequestType paramCryptoManagerHostDisableRequestType) {
    return new JAXBElement(_CryptoManagerHostDisable_QNAME, CryptoManagerHostDisableRequestType.class, null, paramCryptoManagerHostDisableRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultVnicHasNoUplinksFault")
  public JAXBElement<IscsiFaultVnicHasNoUplinks> createIscsiFaultVnicHasNoUplinksFault(IscsiFaultVnicHasNoUplinks paramIscsiFaultVnicHasNoUplinks) {
    return new JAXBElement(_IscsiFaultVnicHasNoUplinksFault_QNAME, IscsiFaultVnicHasNoUplinks.class, null, paramIscsiFaultVnicHasNoUplinks);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FileBackedPortNotSupportedFault")
  public JAXBElement<FileBackedPortNotSupported> createFileBackedPortNotSupportedFault(FileBackedPortNotSupported paramFileBackedPortNotSupported) {
    return new JAXBElement(_FileBackedPortNotSupportedFault_QNAME, FileBackedPortNotSupported.class, null, paramFileBackedPortNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotEnableVmcpForClusterFault")
  public JAXBElement<CannotEnableVmcpForCluster> createCannotEnableVmcpForClusterFault(CannotEnableVmcpForCluster paramCannotEnableVmcpForCluster) {
    return new JAXBElement(_CannotEnableVmcpForClusterFault_QNAME, CannotEnableVmcpForCluster.class, null, paramCannotEnableVmcpForCluster);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidPowerStateFault")
  public JAXBElement<InvalidPowerState> createInvalidPowerStateFault(InvalidPowerState paramInvalidPowerState) {
    return new JAXBElement(_InvalidPowerStateFault_QNAME, InvalidPowerState.class, null, paramInvalidPowerState);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveLicenseLabel")
  public JAXBElement<RemoveLicenseLabelRequestType> createRemoveLicenseLabel(RemoveLicenseLabelRequestType paramRemoveLicenseLabelRequestType) {
    return new JAXBElement(_RemoveLicenseLabel_QNAME, RemoveLicenseLabelRequestType.class, null, paramRemoveLicenseLabelRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDateTime")
  public JAXBElement<QueryDateTimeRequestType> createQueryDateTime(QueryDateTimeRequestType paramQueryDateTimeRequestType) {
    return new JAXBElement(_QueryDateTime_QNAME, QueryDateTimeRequestType.class, null, paramQueryDateTimeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RecommendHostsForVm")
  public JAXBElement<RecommendHostsForVmRequestType> createRecommendHostsForVm(RecommendHostsForVmRequestType paramRecommendHostsForVmRequestType) {
    return new JAXBElement(_RecommendHostsForVm_QNAME, RecommendHostsForVmRequestType.class, null, paramRecommendHostsForVmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplaceSmartCardTrustAnchors")
  public JAXBElement<ReplaceSmartCardTrustAnchorsRequestType> createReplaceSmartCardTrustAnchors(ReplaceSmartCardTrustAnchorsRequestType paramReplaceSmartCardTrustAnchorsRequestType) {
    return new JAXBElement(_ReplaceSmartCardTrustAnchors_QNAME, ReplaceSmartCardTrustAnchorsRequestType.class, null, paramReplaceSmartCardTrustAnchorsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CpuCompatibilityUnknownFault")
  public JAXBElement<CpuCompatibilityUnknown> createCpuCompatibilityUnknownFault(CpuCompatibilityUnknown paramCpuCompatibilityUnknown) {
    return new JAXBElement(_CpuCompatibilityUnknownFault_QNAME, CpuCompatibilityUnknown.class, null, paramCpuCompatibilityUnknown);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryNFSUser")
  public JAXBElement<QueryNFSUserRequestType> createQueryNFSUser(QueryNFSUserRequestType paramQueryNFSUserRequestType) {
    return new JAXBElement(_QueryNFSUser_QNAME, QueryNFSUserRequestType.class, null, paramQueryNFSUserRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VStorageObjectCreateSnapshot_Task")
  public JAXBElement<VStorageObjectCreateSnapshotRequestType> createVStorageObjectCreateSnapshotTask(VStorageObjectCreateSnapshotRequestType paramVStorageObjectCreateSnapshotRequestType) {
    return new JAXBElement(_VStorageObjectCreateSnapshotTask_QNAME, VStorageObjectCreateSnapshotRequestType.class, null, paramVStorageObjectCreateSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedHostForVFlashFault")
  public JAXBElement<NotSupportedHostForVFlash> createNotSupportedHostForVFlashFault(NotSupportedHostForVFlash paramNotSupportedHostForVFlash) {
    return new JAXBElement(_NotSupportedHostForVFlashFault_QNAME, NotSupportedHostForVFlash.class, null, paramNotSupportedHostForVFlash);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPerf")
  public JAXBElement<QueryPerfRequestType> createQueryPerf(QueryPerfRequestType paramQueryPerfRequestType) {
    return new JAXBElement(_QueryPerf_QNAME, QueryPerfRequestType.class, null, paramQueryPerfRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RequestCanceledFault")
  public JAXBElement<RequestCanceled> createRequestCanceledFault(RequestCanceled paramRequestCanceled) {
    return new JAXBElement(_RequestCanceledFault_QNAME, RequestCanceled.class, null, paramRequestCanceled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeviceUnsupportedForVmVersionFault")
  public JAXBElement<DeviceUnsupportedForVmVersion> createDeviceUnsupportedForVmVersionFault(DeviceUnsupportedForVmVersion paramDeviceUnsupportedForVmVersion) {
    return new JAXBElement(_DeviceUnsupportedForVmVersionFault_QNAME, DeviceUnsupportedForVmVersion.class, null, paramDeviceUnsupportedForVmVersion);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CAMServerRefusedConnectionFault")
  public JAXBElement<CAMServerRefusedConnection> createCAMServerRefusedConnectionFault(CAMServerRefusedConnection paramCAMServerRefusedConnection) {
    return new JAXBElement(_CAMServerRefusedConnectionFault_QNAME, CAMServerRefusedConnection.class, null, paramCAMServerRefusedConnection);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteDirectory")
  public JAXBElement<DeleteDirectoryRequestType> createDeleteDirectory(DeleteDirectoryRequestType paramDeleteDirectoryRequestType) {
    return new JAXBElement(_DeleteDirectory_QNAME, DeleteDirectoryRequestType.class, null, paramDeleteDirectoryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AttachTagToVStorageObject")
  public JAXBElement<AttachTagToVStorageObjectRequestType> createAttachTagToVStorageObject(AttachTagToVStorageObjectRequestType paramAttachTagToVStorageObjectRequestType) {
    return new JAXBElement(_AttachTagToVStorageObject_QNAME, AttachTagToVStorageObjectRequestType.class, null, paramAttachTagToVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfPropertyValueFault")
  public JAXBElement<OvfPropertyValue> createOvfPropertyValueFault(OvfPropertyValue paramOvfPropertyValue) {
    return new JAXBElement(_OvfPropertyValueFault_QNAME, OvfPropertyValue.class, null, paramOvfPropertyValue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EightHostLimitViolatedFault")
  public JAXBElement<EightHostLimitViolated> createEightHostLimitViolatedFault(EightHostLimitViolated paramEightHostLimitViolated) {
    return new JAXBElement(_EightHostLimitViolatedFault_QNAME, EightHostLimitViolated.class, null, paramEightHostLimitViolated);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VspanPortConflictFault")
  public JAXBElement<VspanPortConflict> createVspanPortConflictFault(VspanPortConflict paramVspanPortConflict) {
    return new JAXBElement(_VspanPortConflictFault_QNAME, VspanPortConflict.class, null, paramVspanPortConflict);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NumVirtualCpusIncompatibleFault")
  public JAXBElement<NumVirtualCpusIncompatible> createNumVirtualCpusIncompatibleFault(NumVirtualCpusIncompatible paramNumVirtualCpusIncompatible) {
    return new JAXBElement(_NumVirtualCpusIncompatibleFault_QNAME, NumVirtualCpusIncompatible.class, null, paramNumVirtualCpusIncompatible);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryAnswerFileStatus")
  public JAXBElement<QueryAnswerFileStatusRequestType> createQueryAnswerFileStatus(QueryAnswerFileStatusRequestType paramQueryAnswerFileStatusRequestType) {
    return new JAXBElement(_QueryAnswerFileStatus_QNAME, QueryAnswerFileStatusRequestType.class, null, paramQueryAnswerFileStatusRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ToolsImageNotAvailableFault")
  public JAXBElement<ToolsImageNotAvailable> createToolsImageNotAvailableFault(ToolsImageNotAvailable paramToolsImageNotAvailable) {
    return new JAXBElement(_ToolsImageNotAvailableFault_QNAME, ToolsImageNotAvailable.class, null, paramToolsImageNotAvailable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestComponentsOutOfDateFault")
  public JAXBElement<GuestComponentsOutOfDate> createGuestComponentsOutOfDateFault(GuestComponentsOutOfDate paramGuestComponentsOutOfDate) {
    return new JAXBElement(_GuestComponentsOutOfDateFault_QNAME, GuestComponentsOutOfDate.class, null, paramGuestComponentsOutOfDate);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PerformVsanUpgradePreflightCheck")
  public JAXBElement<PerformVsanUpgradePreflightCheckRequestType> createPerformVsanUpgradePreflightCheck(PerformVsanUpgradePreflightCheckRequestType paramPerformVsanUpgradePreflightCheckRequestType) {
    return new JAXBElement(_PerformVsanUpgradePreflightCheck_QNAME, PerformVsanUpgradePreflightCheckRequestType.class, null, paramPerformVsanUpgradePreflightCheckRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ClockSkewFault")
  public JAXBElement<ClockSkew> createClockSkewFault(ClockSkew paramClockSkew) {
    return new JAXBElement(_ClockSkewFault_QNAME, ClockSkew.class, null, paramClockSkew);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetVirtualDiskUuid")
  public JAXBElement<SetVirtualDiskUuidRequestType> createSetVirtualDiskUuid(SetVirtualDiskUuidRequestType paramSetVirtualDiskUuidRequestType) {
    return new JAXBElement(_SetVirtualDiskUuid_QNAME, SetVirtualDiskUuidRequestType.class, null, paramSetVirtualDiskUuidRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoActiveHostInClusterFault")
  public JAXBElement<NoActiveHostInCluster> createNoActiveHostInClusterFault(NoActiveHostInCluster paramNoActiveHostInCluster) {
    return new JAXBElement(_NoActiveHostInClusterFault_QNAME, NoActiveHostInCluster.class, null, paramNoActiveHostInCluster);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RelocateVStorageObject_Task")
  public JAXBElement<RelocateVStorageObjectRequestType> createRelocateVStorageObjectTask(RelocateVStorageObjectRequestType paramRelocateVStorageObjectRequestType) {
    return new JAXBElement(_RelocateVStorageObjectTask_QNAME, RelocateVStorageObjectRequestType.class, null, paramRelocateVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmFaultToleranceTooManyFtVcpusOnHostFault")
  public JAXBElement<VmFaultToleranceTooManyFtVcpusOnHost> createVmFaultToleranceTooManyFtVcpusOnHostFault(VmFaultToleranceTooManyFtVcpusOnHost paramVmFaultToleranceTooManyFtVcpusOnHost) {
    return new JAXBElement(_VmFaultToleranceTooManyFtVcpusOnHostFault_QNAME, VmFaultToleranceTooManyFtVcpusOnHost.class, null, paramVmFaultToleranceTooManyFtVcpusOnHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TurnDiskLocatorLedOff_Task")
  public JAXBElement<TurnDiskLocatorLedOffRequestType> createTurnDiskLocatorLedOffTask(TurnDiskLocatorLedOffRequestType paramTurnDiskLocatorLedOffRequestType) {
    return new JAXBElement(_TurnDiskLocatorLedOffTask_QNAME, TurnDiskLocatorLedOffRequestType.class, null, paramTurnDiskLocatorLedOffRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCModeIllegalByVendorFault")
  public JAXBElement<EVCModeIllegalByVendor> createEVCModeIllegalByVendorFault(EVCModeIllegalByVendor paramEVCModeIllegalByVendor) {
    return new JAXBElement(_EVCModeIllegalByVendorFault_QNAME, EVCModeIllegalByVendor.class, null, paramEVCModeIllegalByVendor);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedCPUFeaturesForModeFault")
  public JAXBElement<EVCAdmissionFailedCPUFeaturesForMode> createEVCAdmissionFailedCPUFeaturesForModeFault(EVCAdmissionFailedCPUFeaturesForMode paramEVCAdmissionFailedCPUFeaturesForMode) {
    return new JAXBElement(_EVCAdmissionFailedCPUFeaturesForModeFault_QNAME, EVCAdmissionFailedCPUFeaturesForMode.class, null, paramEVCAdmissionFailedCPUFeaturesForMode);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "prepareVcha_Task")
  public JAXBElement<PrepareVchaRequestType> createPrepareVchaTask(PrepareVchaRequestType paramPrepareVchaRequestType) {
    return new JAXBElement(_PrepareVchaTask_QNAME, PrepareVchaRequestType.class, null, paramPrepareVchaRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AnswerFileUpdateFailedFault")
  public JAXBElement<AnswerFileUpdateFailed> createAnswerFileUpdateFailedFault(AnswerFileUpdateFailed paramAnswerFileUpdateFailed) {
    return new JAXBElement(_AnswerFileUpdateFailedFault_QNAME, AnswerFileUpdateFailed.class, null, paramAnswerFileUpdateFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddDVPortgroup_Task")
  public JAXBElement<AddDVPortgroupRequestType> createAddDVPortgroupTask(AddDVPortgroupRequestType paramAddDVPortgroupRequestType) {
    return new JAXBElement(_AddDVPortgroupTask_QNAME, AddDVPortgroupRequestType.class, null, paramAddDVPortgroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryStorageArrayTypePolicyOptions")
  public JAXBElement<QueryStorageArrayTypePolicyOptionsRequestType> createQueryStorageArrayTypePolicyOptions(QueryStorageArrayTypePolicyOptionsRequestType paramQueryStorageArrayTypePolicyOptionsRequestType) {
    return new JAXBElement(_QueryStorageArrayTypePolicyOptions_QNAME, QueryStorageArrayTypePolicyOptionsRequestType.class, null, paramQueryStorageArrayTypePolicyOptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedHostFault")
  public JAXBElement<NotSupportedHost> createNotSupportedHostFault(NotSupportedHost paramNotSupportedHost) {
    return new JAXBElement(_NotSupportedHostFault_QNAME, NotSupportedHost.class, null, paramNotSupportedHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidIpmiMacAddressFault")
  public JAXBElement<InvalidIpmiMacAddress> createInvalidIpmiMacAddressFault(InvalidIpmiMacAddress paramInvalidIpmiMacAddress) {
    return new JAXBElement(_InvalidIpmiMacAddressFault_QNAME, InvalidIpmiMacAddress.class, null, paramInvalidIpmiMacAddress);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVmfsUnmapPriority")
  public JAXBElement<UpdateVmfsUnmapPriorityRequestType> createUpdateVmfsUnmapPriority(UpdateVmfsUnmapPriorityRequestType paramUpdateVmfsUnmapPriorityRequestType) {
    return new JAXBElement(_UpdateVmfsUnmapPriority_QNAME, UpdateVmfsUnmapPriorityRequestType.class, null, paramUpdateVmfsUnmapPriorityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedCPUModelFault")
  public JAXBElement<EVCAdmissionFailedCPUModel> createEVCAdmissionFailedCPUModelFault(EVCAdmissionFailedCPUModel paramEVCAdmissionFailedCPUModel) {
    return new JAXBElement(_EVCAdmissionFailedCPUModelFault_QNAME, EVCAdmissionFailedCPUModel.class, null, paramEVCAdmissionFailedCPUModel);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateTemporaryDirectoryInGuest")
  public JAXBElement<CreateTemporaryDirectoryInGuestRequestType> createCreateTemporaryDirectoryInGuest(CreateTemporaryDirectoryInGuestRequestType paramCreateTemporaryDirectoryInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateTemporaryDirectoryInGuest"), CreateTemporaryDirectoryInGuestRequestType.class, null, paramCreateTemporaryDirectoryInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkAsNonSsd_Task")
  public JAXBElement<MarkAsNonSsdRequestType> createMarkAsNonSsdTask(MarkAsNonSsdRequestType paramMarkAsNonSsdRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MarkAsNonSsd_Task"), MarkAsNonSsdRequestType.class, null, paramMarkAsNonSsdRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestRegistryKeyHasSubkeysFault")
  public JAXBElement<GuestRegistryKeyHasSubkeys> createGuestRegistryKeyHasSubkeysFault(GuestRegistryKeyHasSubkeys paramGuestRegistryKeyHasSubkeys) {
    return new JAXBElement(new QName("urn:vim25", "GuestRegistryKeyHasSubkeysFault"), GuestRegistryKeyHasSubkeys.class, null, paramGuestRegistryKeyHasSubkeys);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMotionNotLicensedFault")
  public JAXBElement<VMotionNotLicensed> createVMotionNotLicensedFault(VMotionNotLicensed paramVMotionNotLicensed) {
    return new JAXBElement(new QName("urn:vim25", "VMotionNotLicensedFault"), VMotionNotLicensed.class, null, paramVMotionNotLicensed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NonPersistentDisksNotSupportedFault")
  public JAXBElement<NonPersistentDisksNotSupported> createNonPersistentDisksNotSupportedFault(NonPersistentDisksNotSupported paramNonPersistentDisksNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "NonPersistentDisksNotSupportedFault"), NonPersistentDisksNotSupported.class, null, paramNonPersistentDisksNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveVStorageObject")
  public JAXBElement<RetrieveVStorageObjectRequestType> createRetrieveVStorageObject(RetrieveVStorageObjectRequestType paramRetrieveVStorageObjectRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveVStorageObject"), RetrieveVStorageObjectRequestType.class, null, paramRetrieveVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateChildVM_Task")
  public JAXBElement<CreateChildVMRequestType> createCreateChildVMTask(CreateChildVMRequestType paramCreateChildVMRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateChildVM_Task"), CreateChildVMRequestType.class, null, paramCreateChildVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureVirtualMachineReservation")
  public JAXBElement<ReconfigureVirtualMachineReservationRequestType> createReconfigureVirtualMachineReservation(ReconfigureVirtualMachineReservationRequestType paramReconfigureVirtualMachineReservationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReconfigureVirtualMachineReservation"), ReconfigureVirtualMachineReservationRequestType.class, null, paramReconfigureVirtualMachineReservationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidNetworkResourceFault")
  public JAXBElement<InvalidNetworkResource> createInvalidNetworkResourceFault(InvalidNetworkResource paramInvalidNetworkResource) {
    return new JAXBElement(new QName("urn:vim25", "InvalidNetworkResourceFault"), InvalidNetworkResource.class, null, paramInvalidNetworkResource);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedCPUVendorUnknownFault")
  public JAXBElement<EVCAdmissionFailedCPUVendorUnknown> createEVCAdmissionFailedCPUVendorUnknownFault(EVCAdmissionFailedCPUVendorUnknown paramEVCAdmissionFailedCPUVendorUnknown) {
    return new JAXBElement(new QName("urn:vim25", "EVCAdmissionFailedCPUVendorUnknownFault"), EVCAdmissionFailedCPUVendorUnknown.class, null, paramEVCAdmissionFailedCPUVendorUnknown);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TimedoutFault")
  public JAXBElement<Timedout> createTimedoutFault(Timedout paramTimedout) {
    return new JAXBElement(new QName("urn:vim25", "TimedoutFault"), Timedout.class, null, paramTimedout);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MaintenanceModeFileMoveFault")
  public JAXBElement<MaintenanceModeFileMove> createMaintenanceModeFileMoveFault(MaintenanceModeFileMove paramMaintenanceModeFileMove) {
    return new JAXBElement(new QName("urn:vim25", "MaintenanceModeFileMoveFault"), MaintenanceModeFileMove.class, null, paramMaintenanceModeFileMove);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListCACertificateRevocationLists")
  public JAXBElement<ListCACertificateRevocationListsRequestType> createListCACertificateRevocationLists(ListCACertificateRevocationListsRequestType paramListCACertificateRevocationListsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ListCACertificateRevocationLists"), ListCACertificateRevocationListsRequestType.class, null, paramListCACertificateRevocationListsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedDiskProvisioningFault")
  public JAXBElement<OvfUnsupportedDiskProvisioning> createOvfUnsupportedDiskProvisioningFault(OvfUnsupportedDiskProvisioning paramOvfUnsupportedDiskProvisioning) {
    return new JAXBElement(new QName("urn:vim25", "OvfUnsupportedDiskProvisioningFault"), OvfUnsupportedDiskProvisioning.class, null, paramOvfUnsupportedDiskProvisioning);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostRelocateVStorageObject_Task")
  public JAXBElement<HostRelocateVStorageObjectRequestType> createHostRelocateVStorageObjectTask(HostRelocateVStorageObjectRequestType paramHostRelocateVStorageObjectRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostRelocateVStorageObject_Task"), HostRelocateVStorageObjectRequestType.class, null, paramHostRelocateVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GetPublicKey")
  public JAXBElement<GetPublicKeyRequestType> createGetPublicKey(GetPublicKeyRequestType paramGetPublicKeyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "GetPublicKey"), GetPublicKeyRequestType.class, null, paramGetPublicKeyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResetCounterLevelMapping")
  public JAXBElement<ResetCounterLevelMappingRequestType> createResetCounterLevelMapping(ResetCounterLevelMappingRequestType paramResetCounterLevelMappingRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ResetCounterLevelMapping"), ResetCounterLevelMappingRequestType.class, null, paramResetCounterLevelMappingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedHostForVmcpFault")
  public JAXBElement<NotSupportedHostForVmcp> createNotSupportedHostForVmcpFault(NotSupportedHostForVmcp paramNotSupportedHostForVmcp) {
    return new JAXBElement(new QName("urn:vim25", "NotSupportedHostForVmcpFault"), NotSupportedHostForVmcp.class, null, paramNotSupportedHostForVmcp);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPhysicalVsanDisks")
  public JAXBElement<QueryPhysicalVsanDisksRequestType> createQueryPhysicalVsanDisks(QueryPhysicalVsanDisksRequestType paramQueryPhysicalVsanDisksRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryPhysicalVsanDisks"), QueryPhysicalVsanDisksRequestType.class, null, paramQueryPhysicalVsanDisksRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveServiceConsoleVirtualNic")
  public JAXBElement<RemoveServiceConsoleVirtualNicRequestType> createRemoveServiceConsoleVirtualNic(RemoveServiceConsoleVirtualNicRequestType paramRemoveServiceConsoleVirtualNicRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveServiceConsoleVirtualNic"), RemoveServiceConsoleVirtualNicRequestType.class, null, paramRemoveServiceConsoleVirtualNicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetTaskDescription")
  public JAXBElement<SetTaskDescriptionRequestType> createSetTaskDescription(SetTaskDescriptionRequestType paramSetTaskDescriptionRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SetTaskDescription"), SetTaskDescriptionRequestType.class, null, paramSetTaskDescriptionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableHyperThreading")
  public JAXBElement<DisableHyperThreadingRequestType> createDisableHyperThreading(DisableHyperThreadingRequestType paramDisableHyperThreadingRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DisableHyperThreading"), DisableHyperThreadingRequestType.class, null, paramDisableHyperThreadingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateProfile")
  public JAXBElement<CreateProfileRequestType> createCreateProfile(CreateProfileRequestType paramCreateProfileRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateProfile"), CreateProfileRequestType.class, null, paramCreateProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConvertNamespacePathToUuidPath")
  public JAXBElement<ConvertNamespacePathToUuidPathRequestType> createConvertNamespacePathToUuidPath(ConvertNamespacePathToUuidPathRequestType paramConvertNamespacePathToUuidPathRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ConvertNamespacePathToUuidPath"), ConvertNamespacePathToUuidPathRequestType.class, null, paramConvertNamespacePathToUuidPathRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientHostCpuCapacityFaultFault")
  public JAXBElement<InsufficientHostCpuCapacityFault> createInsufficientHostCpuCapacityFaultFault(InsufficientHostCpuCapacityFault paramInsufficientHostCpuCapacityFault) {
    return new JAXBElement(new QName("urn:vim25", "InsufficientHostCpuCapacityFaultFault"), InsufficientHostCpuCapacityFault.class, null, paramInsufficientHostCpuCapacityFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveInternetScsiStaticTargets")
  public JAXBElement<RemoveInternetScsiStaticTargetsRequestType> createRemoveInternetScsiStaticTargets(RemoveInternetScsiStaticTargetsRequestType paramRemoveInternetScsiStaticTargetsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveInternetScsiStaticTargets"), RemoveInternetScsiStaticTargetsRequestType.class, null, paramRemoveInternetScsiStaticTargetsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostReconcileDatastoreInventory_Task")
  public JAXBElement<HostReconcileDatastoreInventoryRequestType> createHostReconcileDatastoreInventoryTask(HostReconcileDatastoreInventoryRequestType paramHostReconcileDatastoreInventoryRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostReconcileDatastoreInventory_Task"), HostReconcileDatastoreInventoryRequestType.class, null, paramHostReconcileDatastoreInventoryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CloneVStorageObject_Task")
  public JAXBElement<CloneVStorageObjectRequestType> createCloneVStorageObjectTask(CloneVStorageObjectRequestType paramCloneVStorageObjectRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CloneVStorageObject_Task"), CloneVStorageObjectRequestType.class, null, paramCloneVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExportSnapshot")
  public JAXBElement<ExportSnapshotRequestType> createExportSnapshot(ExportSnapshotRequestType paramExportSnapshotRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ExportSnapshot"), ExportSnapshotRequestType.class, null, paramExportSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotDisabledFault")
  public JAXBElement<SnapshotDisabled> createSnapshotDisabledFault(SnapshotDisabled paramSnapshotDisabled) {
    return new JAXBElement(new QName("urn:vim25", "SnapshotDisabledFault"), SnapshotDisabled.class, null, paramSnapshotDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVMotionCompatibilityEx_Task")
  public JAXBElement<QueryVMotionCompatibilityExRequestType> createQueryVMotionCompatibilityExTask(QueryVMotionCompatibilityExRequestType paramQueryVMotionCompatibilityExRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryVMotionCompatibilityEx_Task"), QueryVMotionCompatibilityExRequestType.class, null, paramQueryVMotionCompatibilityExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsUnableToMoveFilesFault")
  public JAXBElement<StorageDrsUnableToMoveFiles> createStorageDrsUnableToMoveFilesFault(StorageDrsUnableToMoveFiles paramStorageDrsUnableToMoveFiles) {
    return new JAXBElement(new QName("urn:vim25", "StorageDrsUnableToMoveFilesFault"), StorageDrsUnableToMoveFiles.class, null, paramStorageDrsUnableToMoveFiles);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconcileDatastoreInventory_Task")
  public JAXBElement<ReconcileDatastoreInventoryRequestType> createReconcileDatastoreInventoryTask(ReconcileDatastoreInventoryRequestType paramReconcileDatastoreInventoryRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReconcileDatastoreInventory_Task"), ReconcileDatastoreInventoryRequestType.class, null, paramReconcileDatastoreInventoryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RuleViolationFault")
  public JAXBElement<RuleViolation> createRuleViolationFault(RuleViolation paramRuleViolation) {
    return new JAXBElement(new QName("urn:vim25", "RuleViolationFault"), RuleViolation.class, null, paramRuleViolation);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateVApp")
  public JAXBElement<CreateVAppRequestType> createCreateVApp(CreateVAppRequestType paramCreateVAppRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateVApp"), CreateVAppRequestType.class, null, paramCreateVAppRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveTemplateFault")
  public JAXBElement<StorageDrsCannotMoveTemplate> createStorageDrsCannotMoveTemplateFault(StorageDrsCannotMoveTemplate paramStorageDrsCannotMoveTemplate) {
    return new JAXBElement(new QName("urn:vim25", "StorageDrsCannotMoveTemplateFault"), StorageDrsCannotMoveTemplate.class, null, paramStorageDrsCannotMoveTemplate);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedAttributeValueFault")
  public JAXBElement<OvfUnsupportedAttributeValue> createOvfUnsupportedAttributeValueFault(OvfUnsupportedAttributeValue paramOvfUnsupportedAttributeValue) {
    return new JAXBElement(new QName("urn:vim25", "OvfUnsupportedAttributeValueFault"), OvfUnsupportedAttributeValue.class, null, paramOvfUnsupportedAttributeValue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveDatastore")
  public JAXBElement<RemoveDatastoreRequestType> createRemoveDatastore(RemoveDatastoreRequestType paramRemoveDatastoreRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveDatastore"), RemoveDatastoreRequestType.class, null, paramRemoveDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InflateDisk_Task")
  public JAXBElement<InflateDiskRequestType> createInflateDiskTask(InflateDiskRequestType paramInflateDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "InflateDisk_Task"), InflateDiskRequestType.class, null, paramInflateDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidClientCertificateFault")
  public JAXBElement<InvalidClientCertificate> createInvalidClientCertificateFault(InvalidClientCertificate paramInvalidClientCertificate) {
    return new JAXBElement(new QName("urn:vim25", "InvalidClientCertificateFault"), InvalidClientCertificate.class, null, paramInvalidClientCertificate);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedCPUModelForModeFault")
  public JAXBElement<EVCAdmissionFailedCPUModelForMode> createEVCAdmissionFailedCPUModelForModeFault(EVCAdmissionFailedCPUModelForMode paramEVCAdmissionFailedCPUModelForMode) {
    return new JAXBElement(new QName("urn:vim25", "EVCAdmissionFailedCPUModelForModeFault"), EVCAdmissionFailedCPUModelForMode.class, null, paramEVCAdmissionFailedCPUModelForMode);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmFaultToleranceConfigIssueWrapperFault")
  public JAXBElement<VmFaultToleranceConfigIssueWrapper> createVmFaultToleranceConfigIssueWrapperFault(VmFaultToleranceConfigIssueWrapper paramVmFaultToleranceConfigIssueWrapper) {
    return new JAXBElement(new QName("urn:vim25", "VmFaultToleranceConfigIssueWrapperFault"), VmFaultToleranceConfigIssueWrapper.class, null, paramVmFaultToleranceConfigIssueWrapper);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RescanVmfs")
  public JAXBElement<RescanVmfsRequestType> createRescanVmfs(RescanVmfsRequestType paramRescanVmfsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RescanVmfs"), RescanVmfsRequestType.class, null, paramRescanVmfsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryIPAllocations")
  public JAXBElement<QueryIPAllocationsRequestType> createQueryIPAllocations(QueryIPAllocationsRequestType paramQueryIPAllocationsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryIPAllocations"), QueryIPAllocationsRequestType.class, null, paramQueryIPAllocationsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidHostNameFault")
  public JAXBElement<InvalidHostName> createInvalidHostNameFault(InvalidHostName paramInvalidHostName) {
    return new JAXBElement(new QName("urn:vim25", "InvalidHostNameFault"), InvalidHostName.class, null, paramInvalidHostName);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FileFaultFault")
  public JAXBElement<FileFault> createFileFaultFault(FileFault paramFileFault) {
    return new JAXBElement(new QName("urn:vim25", "FileFaultFault"), FileFault.class, null, paramFileFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpgradeVM_Task")
  public JAXBElement<UpgradeVMRequestType> createUpgradeVMTask(UpgradeVMRequestType paramUpgradeVMRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpgradeVM_Task"), UpgradeVMRequestType.class, null, paramUpgradeVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoPeerHostFoundFault")
  public JAXBElement<NoPeerHostFound> createNoPeerHostFoundFault(NoPeerHostFound paramNoPeerHostFound) {
    return new JAXBElement(new QName("urn:vim25", "NoPeerHostFoundFault"), NoPeerHostFound.class, null, paramNoPeerHostFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PasswordExpiredFault")
  public JAXBElement<PasswordExpired> createPasswordExpiredFault(PasswordExpired paramPasswordExpired) {
    return new JAXBElement(new QName("urn:vim25", "PasswordExpiredFault"), PasswordExpired.class, null, paramPasswordExpired);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidBmcRoleFault")
  public JAXBElement<InvalidBmcRole> createInvalidBmcRoleFault(InvalidBmcRole paramInvalidBmcRole) {
    return new JAXBElement(new QName("urn:vim25", "InvalidBmcRoleFault"), InvalidBmcRole.class, null, paramInvalidBmcRole);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SwitchNotInUpgradeModeFault")
  public JAXBElement<SwitchNotInUpgradeMode> createSwitchNotInUpgradeModeFault(SwitchNotInUpgradeMode paramSwitchNotInUpgradeMode) {
    return new JAXBElement(new QName("urn:vim25", "SwitchNotInUpgradeModeFault"), SwitchNotInUpgradeMode.class, null, paramSwitchNotInUpgradeMode);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostSetVStorageObjectControlFlags")
  public JAXBElement<HostSetVStorageObjectControlFlagsRequestType> createHostSetVStorageObjectControlFlags(HostSetVStorageObjectControlFlagsRequestType paramHostSetVStorageObjectControlFlagsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostSetVStorageObjectControlFlags"), HostSetVStorageObjectControlFlagsRequestType.class, null, paramHostSetVStorageObjectControlFlagsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FaultToleranceAntiAffinityViolatedFault")
  public JAXBElement<FaultToleranceAntiAffinityViolated> createFaultToleranceAntiAffinityViolatedFault(FaultToleranceAntiAffinityViolated paramFaultToleranceAntiAffinityViolated) {
    return new JAXBElement(new QName("urn:vim25", "FaultToleranceAntiAffinityViolatedFault"), FaultToleranceAntiAffinityViolated.class, null, paramFaultToleranceAntiAffinityViolated);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SuspendVApp_Task")
  public JAXBElement<SuspendVAppRequestType> createSuspendVAppTask(SuspendVAppRequestType paramSuspendVAppRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SuspendVApp_Task"), SuspendVAppRequestType.class, null, paramSuspendVAppRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ChangeFileAttributesInGuest")
  public JAXBElement<ChangeFileAttributesInGuestRequestType> createChangeFileAttributesInGuest(ChangeFileAttributesInGuestRequestType paramChangeFileAttributesInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ChangeFileAttributesInGuest"), ChangeFileAttributesInGuestRequestType.class, null, paramChangeFileAttributesInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "createPassiveNode_Task")
  public JAXBElement<CreatePassiveNodeRequestType> createCreatePassiveNodeTask(CreatePassiveNodeRequestType paramCreatePassiveNodeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "createPassiveNode_Task"), CreatePassiveNodeRequestType.class, null, paramCreatePassiveNodeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindAllByDnsName")
  public JAXBElement<FindAllByDnsNameRequestType> createFindAllByDnsName(FindAllByDnsNameRequestType paramFindAllByDnsNameRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FindAllByDnsName"), FindAllByDnsNameRequestType.class, null, paramFindAllByDnsNameRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateCustomizationSpec")
  public JAXBElement<CreateCustomizationSpecRequestType> createCreateCustomizationSpec(CreateCustomizationSpecRequestType paramCreateCustomizationSpecRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateCustomizationSpec"), CreateCustomizationSpecRequestType.class, null, paramCreateCustomizationSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetField")
  public JAXBElement<SetFieldRequestType> createSetField(SetFieldRequestType paramSetFieldRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SetField"), SetFieldRequestType.class, null, paramSetFieldRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVirtualNic")
  public JAXBElement<UpdateVirtualNicRequestType> createUpdateVirtualNic(UpdateVirtualNicRequestType paramUpdateVirtualNicRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateVirtualNic"), UpdateVirtualNicRequestType.class, null, paramUpdateVirtualNicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExportVApp")
  public JAXBElement<ExportVAppRequestType> createExportVApp(ExportVAppRequestType paramExportVAppRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ExportVApp"), ExportVAppRequestType.class, null, paramExportVAppRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnexpectedFaultFault")
  public JAXBElement<UnexpectedFault> createUnexpectedFaultFault(UnexpectedFault paramUnexpectedFault) {
    return new JAXBElement(new QName("urn:vim25", "UnexpectedFaultFault"), UnexpectedFault.class, null, paramUnexpectedFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReleaseManagedSnapshot")
  public JAXBElement<ReleaseManagedSnapshotRequestType> createReleaseManagedSnapshot(ReleaseManagedSnapshotRequestType paramReleaseManagedSnapshotRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReleaseManagedSnapshot"), ReleaseManagedSnapshotRequestType.class, null, paramReleaseManagedSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryMigrationDependencies")
  public JAXBElement<QueryMigrationDependenciesRequestType> createQueryMigrationDependencies(QueryMigrationDependenciesRequestType paramQueryMigrationDependenciesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryMigrationDependencies"), QueryMigrationDependenciesRequestType.class, null, paramQueryMigrationDependenciesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DiskIsLastRemainingNonSSDFault")
  public JAXBElement<DiskIsLastRemainingNonSSD> createDiskIsLastRemainingNonSSDFault(DiskIsLastRemainingNonSSD paramDiskIsLastRemainingNonSSD) {
    return new JAXBElement(new QName("urn:vim25", "DiskIsLastRemainingNonSSDFault"), DiskIsLastRemainingNonSSD.class, null, paramDiskIsLastRemainingNonSSD);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NumVirtualCpusNotSupportedFault")
  public JAXBElement<NumVirtualCpusNotSupported> createNumVirtualCpusNotSupportedFault(NumVirtualCpusNotSupported paramNumVirtualCpusNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "NumVirtualCpusNotSupportedFault"), NumVirtualCpusNotSupported.class, null, paramNumVirtualCpusNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotChangeVsanNodeUuidFault")
  public JAXBElement<CannotChangeVsanNodeUuid> createCannotChangeVsanNodeUuidFault(CannotChangeVsanNodeUuid paramCannotChangeVsanNodeUuid) {
    return new JAXBElement(new QName("urn:vim25", "CannotChangeVsanNodeUuidFault"), CannotChangeVsanNodeUuid.class, null, paramCannotChangeVsanNodeUuid);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoDiskFoundFault")
  public JAXBElement<NoDiskFound> createNoDiskFoundFault(NoDiskFound paramNoDiskFound) {
    return new JAXBElement(new QName("urn:vim25", "NoDiskFoundFault"), NoDiskFound.class, null, paramNoDiskFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GatewayToHostAuthFaultFault")
  public JAXBElement<GatewayToHostAuthFault> createGatewayToHostAuthFaultFault(GatewayToHostAuthFault paramGatewayToHostAuthFault) {
    return new JAXBElement(new QName("urn:vim25", "GatewayToHostAuthFaultFault"), GatewayToHostAuthFault.class, null, paramGatewayToHostAuthFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteVsanObjects")
  public JAXBElement<DeleteVsanObjectsRequestType> createDeleteVsanObjects(DeleteVsanObjectsRequestType paramDeleteVsanObjectsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DeleteVsanObjects"), DeleteVsanObjectsRequestType.class, null, paramDeleteVsanObjectsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveSnapshot_Task")
  public JAXBElement<RemoveSnapshotRequestType> createRemoveSnapshotTask(RemoveSnapshotRequestType paramRemoveSnapshotRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveSnapshot_Task"), RemoveSnapshotRequestType.class, null, paramRemoveSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MergeDvs_Task")
  public JAXBElement<MergeDvsRequestType> createMergeDvsTask(MergeDvsRequestType paramMergeDvsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MergeDvs_Task"), MergeDvsRequestType.class, null, paramMergeDvsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateHostSubSpecification")
  public JAXBElement<UpdateHostSubSpecificationRequestType> createUpdateHostSubSpecification(UpdateHostSubSpecificationRequestType paramUpdateHostSubSpecificationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateHostSubSpecification"), UpdateHostSubSpecificationRequestType.class, null, paramUpdateHostSubSpecificationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListRegistryValuesInGuest")
  public JAXBElement<ListRegistryValuesInGuestRequestType> createListRegistryValuesInGuest(ListRegistryValuesInGuestRequestType paramListRegistryValuesInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ListRegistryValuesInGuest"), ListRegistryValuesInGuestRequestType.class, null, paramListRegistryValuesInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostImageConfigGetProfile")
  public JAXBElement<HostImageConfigGetProfileRequestType> createHostImageConfigGetProfile(HostImageConfigGetProfileRequestType paramHostImageConfigGetProfileRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostImageConfigGetProfile"), HostImageConfigGetProfileRequestType.class, null, paramHostImageConfigGetProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedSectionFault")
  public JAXBElement<OvfUnsupportedSection> createOvfUnsupportedSectionFault(OvfUnsupportedSection paramOvfUnsupportedSection) {
    return new JAXBElement(new QName("urn:vim25", "OvfUnsupportedSectionFault"), OvfUnsupportedSection.class, null, paramOvfUnsupportedSection);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDescriptions")
  public JAXBElement<QueryDescriptionsRequestType> createQueryDescriptions(QueryDescriptionsRequestType paramQueryDescriptionsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryDescriptions"), QueryDescriptionsRequestType.class, null, paramQueryDescriptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPolicyMetadata")
  public JAXBElement<QueryPolicyMetadataRequestType> createQueryPolicyMetadata(QueryPolicyMetadataRequestType paramQueryPolicyMetadataRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryPolicyMetadata"), QueryPolicyMetadataRequestType.class, null, paramQueryPolicyMetadataRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshDatastore")
  public JAXBElement<RefreshDatastoreRequestType> createRefreshDatastore(RefreshDatastoreRequestType paramRefreshDatastoreRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RefreshDatastore"), RefreshDatastoreRequestType.class, null, paramRefreshDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplicationConfigFaultFault")
  public JAXBElement<ReplicationConfigFault> createReplicationConfigFaultFault(ReplicationConfigFault paramReplicationConfigFault) {
    return new JAXBElement(new QName("urn:vim25", "ReplicationConfigFaultFault"), ReplicationConfigFault.class, null, paramReplicationConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestinationVsanDisabledFault")
  public JAXBElement<DestinationVsanDisabled> createDestinationVsanDisabledFault(DestinationVsanDisabled paramDestinationVsanDisabled) {
    return new JAXBElement(new QName("urn:vim25", "DestinationVsanDisabledFault"), DestinationVsanDisabled.class, null, paramDestinationVsanDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListVStorageObject")
  public JAXBElement<ListVStorageObjectRequestType> createListVStorageObject(ListVStorageObjectRequestType paramListVStorageObjectRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ListVStorageObject"), ListVStorageObjectRequestType.class, null, paramListVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryUnmonitoredHosts")
  public JAXBElement<QueryUnmonitoredHostsRequestType> createQueryUnmonitoredHosts(QueryUnmonitoredHostsRequestType paramQueryUnmonitoredHostsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryUnmonitoredHosts"), QueryUnmonitoredHostsRequestType.class, null, paramQueryUnmonitoredHostsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateLicense")
  public JAXBElement<UpdateLicenseRequestType> createUpdateLicense(UpdateLicenseRequestType paramUpdateLicenseRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateLicense"), UpdateLicenseRequestType.class, null, paramUpdateLicenseRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MissingLinuxCustResourcesFault")
  public JAXBElement<MissingLinuxCustResources> createMissingLinuxCustResourcesFault(MissingLinuxCustResources paramMissingLinuxCustResources) {
    return new JAXBElement(new QName("urn:vim25", "MissingLinuxCustResourcesFault"), MissingLinuxCustResources.class, null, paramMissingLinuxCustResources);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReleaseCredentialsInGuest")
  public JAXBElement<ReleaseCredentialsInGuestRequestType> createReleaseCredentialsInGuest(ReleaseCredentialsInGuestRequestType paramReleaseCredentialsInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReleaseCredentialsInGuest"), ReleaseCredentialsInGuestRequestType.class, null, paramReleaseCredentialsInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveSmartCardTrustAnchorByFingerprint")
  public JAXBElement<RemoveSmartCardTrustAnchorByFingerprintRequestType> createRemoveSmartCardTrustAnchorByFingerprint(RemoveSmartCardTrustAnchorByFingerprintRequestType paramRemoveSmartCardTrustAnchorByFingerprintRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveSmartCardTrustAnchorByFingerprint"), RemoveSmartCardTrustAnchorByFingerprintRequestType.class, null, paramRemoveSmartCardTrustAnchorByFingerprintRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostClearVStorageObjectControlFlags")
  public JAXBElement<HostClearVStorageObjectControlFlagsRequestType> createHostClearVStorageObjectControlFlags(HostClearVStorageObjectControlFlagsRequestType paramHostClearVStorageObjectControlFlagsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostClearVStorageObjectControlFlags"), HostClearVStorageObjectControlFlagsRequestType.class, null, paramHostClearVStorageObjectControlFlagsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAccessFileFault")
  public JAXBElement<CannotAccessFile> createCannotAccessFileFault(CannotAccessFile paramCannotAccessFile) {
    return new JAXBElement(new QName("urn:vim25", "CannotAccessFileFault"), CannotAccessFile.class, null, paramCannotAccessFile);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmConfigIncompatibleForRecordReplayFault")
  public JAXBElement<VmConfigIncompatibleForRecordReplay> createVmConfigIncompatibleForRecordReplayFault(VmConfigIncompatibleForRecordReplay paramVmConfigIncompatibleForRecordReplay) {
    return new JAXBElement(new QName("urn:vim25", "VmConfigIncompatibleForRecordReplayFault"), VmConfigIncompatibleForRecordReplay.class, null, paramVmConfigIncompatibleForRecordReplay);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmFaultToleranceConfigIssueFault")
  public JAXBElement<VmFaultToleranceConfigIssue> createVmFaultToleranceConfigIssueFault(VmFaultToleranceConfigIssue paramVmFaultToleranceConfigIssue) {
    return new JAXBElement(new QName("urn:vim25", "VmFaultToleranceConfigIssueFault"), VmFaultToleranceConfigIssue.class, null, paramVmFaultToleranceConfigIssue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureDVPortgroup_Task")
  public JAXBElement<ReconfigureDVPortgroupRequestType> createReconfigureDVPortgroupTask(ReconfigureDVPortgroupRequestType paramReconfigureDVPortgroupRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReconfigureDVPortgroup_Task"), ReconfigureDVPortgroupRequestType.class, null, paramReconfigureDVPortgroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RawDiskNotSupportedFault")
  public JAXBElement<RawDiskNotSupported> createRawDiskNotSupportedFault(RawDiskNotSupported paramRawDiskNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "RawDiskNotSupportedFault"), RawDiskNotSupported.class, null, paramRawDiskNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ToolsAutoUpgradeNotSupportedFault")
  public JAXBElement<ToolsAutoUpgradeNotSupported> createToolsAutoUpgradeNotSupportedFault(ToolsAutoUpgradeNotSupported paramToolsAutoUpgradeNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "ToolsAutoUpgradeNotSupportedFault"), ToolsAutoUpgradeNotSupported.class, null, paramToolsAutoUpgradeNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnexpectedCustomizationFaultFault")
  public JAXBElement<UnexpectedCustomizationFault> createUnexpectedCustomizationFaultFault(UnexpectedCustomizationFault paramUnexpectedCustomizationFault) {
    return new JAXBElement(new QName("urn:vim25", "UnexpectedCustomizationFaultFault"), UnexpectedCustomizationFault.class, null, paramUnexpectedCustomizationFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FeatureRequirementsNotMetFault")
  public JAXBElement<FeatureRequirementsNotMet> createFeatureRequirementsNotMetFault(FeatureRequirementsNotMet paramFeatureRequirementsNotMet) {
    return new JAXBElement(new QName("urn:vim25", "FeatureRequirementsNotMetFault"), FeatureRequirementsNotMet.class, null, paramFeatureRequirementsNotMet);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindByDatastorePath")
  public JAXBElement<FindByDatastorePathRequestType> createFindByDatastorePath(FindByDatastorePathRequestType paramFindByDatastorePathRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FindByDatastorePath"), FindByDatastorePathRequestType.class, null, paramFindByDatastorePathRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteDatastoreFile_Task")
  public JAXBElement<DeleteDatastoreFileRequestType> createDeleteDatastoreFileTask(DeleteDatastoreFileRequestType paramDeleteDatastoreFileRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DeleteDatastoreFile_Task"), DeleteDatastoreFileRequestType.class, null, paramDeleteDatastoreFileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateChildResourceConfiguration")
  public JAXBElement<UpdateChildResourceConfigurationRequestType> createUpdateChildResourceConfiguration(UpdateChildResourceConfigurationRequestType paramUpdateChildResourceConfigurationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateChildResourceConfiguration"), UpdateChildResourceConfigurationRequestType.class, null, paramUpdateChildResourceConfigurationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnmapVmfsVolumeEx_Task")
  public JAXBElement<UnmapVmfsVolumeExRequestType> createUnmapVmfsVolumeExTask(UnmapVmfsVolumeExRequestType paramUnmapVmfsVolumeExRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UnmapVmfsVolumeEx_Task"), UnmapVmfsVolumeExRequestType.class, null, paramUnmapVmfsVolumeExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryChangedDiskAreas")
  public JAXBElement<QueryChangedDiskAreasRequestType> createQueryChangedDiskAreas(QueryChangedDiskAreasRequestType paramQueryChangedDiskAreasRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryChangedDiskAreas"), QueryChangedDiskAreasRequestType.class, null, paramQueryChangedDiskAreasRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidStateFault")
  public JAXBElement<InvalidState> createInvalidStateFault(InvalidState paramInvalidState) {
    return new JAXBElement(new QName("urn:vim25", "InvalidStateFault"), InvalidState.class, null, paramInvalidState);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfPropertyNetworkFault")
  public JAXBElement<OvfPropertyNetwork> createOvfPropertyNetworkFault(OvfPropertyNetwork paramOvfPropertyNetwork) {
    return new JAXBElement(new QName("urn:vim25", "OvfPropertyNetworkFault"), OvfPropertyNetwork.class, null, paramOvfPropertyNetwork);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfPropertyFault")
  public JAXBElement<OvfProperty> createOvfPropertyFault(OvfProperty paramOvfProperty) {
    return new JAXBElement(new QName("urn:vim25", "OvfPropertyFault"), OvfProperty.class, null, paramOvfProperty);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenerateKey")
  public JAXBElement<GenerateKeyRequestType> createGenerateKey(GenerateKeyRequestType paramGenerateKeyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "GenerateKey"), GenerateKeyRequestType.class, null, paramGenerateKeyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ShrinkVirtualDisk_Task")
  public JAXBElement<ShrinkVirtualDiskRequestType> createShrinkVirtualDiskTask(ShrinkVirtualDiskRequestType paramShrinkVirtualDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ShrinkVirtualDisk_Task"), ShrinkVirtualDiskRequestType.class, null, paramShrinkVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TooManyDisksOnLegacyHostFault")
  public JAXBElement<TooManyDisksOnLegacyHost> createTooManyDisksOnLegacyHostFault(TooManyDisksOnLegacyHost paramTooManyDisksOnLegacyHost) {
    return new JAXBElement(new QName("urn:vim25", "TooManyDisksOnLegacyHostFault"), TooManyDisksOnLegacyHost.class, null, paramTooManyDisksOnLegacyHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ValidateHCIConfiguration")
  public JAXBElement<ValidateHCIConfigurationRequestType> createValidateHCIConfiguration(ValidateHCIConfigurationRequestType paramValidateHCIConfigurationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ValidateHCIConfiguration"), ValidateHCIConfigurationRequestType.class, null, paramValidateHCIConfigurationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultVnicIsLastPathFault")
  public JAXBElement<IscsiFaultVnicIsLastPath> createIscsiFaultVnicIsLastPathFault(IscsiFaultVnicIsLastPath paramIscsiFaultVnicIsLastPath) {
    return new JAXBElement(new QName("urn:vim25", "IscsiFaultVnicIsLastPathFault"), IscsiFaultVnicIsLastPath.class, null, paramIscsiFaultVnicIsLastPath);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TerminateProcessInGuest")
  public JAXBElement<TerminateProcessInGuestRequestType> createTerminateProcessInGuest(TerminateProcessInGuestRequestType paramTerminateProcessInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "TerminateProcessInGuest"), TerminateProcessInGuestRequestType.class, null, paramTerminateProcessInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfInvalidValueFault")
  public JAXBElement<OvfInvalidValue> createOvfInvalidValueFault(OvfInvalidValue paramOvfInvalidValue) {
    return new JAXBElement(new QName("urn:vim25", "OvfInvalidValueFault"), OvfInvalidValue.class, null, paramOvfInvalidValue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostCreateDisk_Task")
  public JAXBElement<HostCreateDiskRequestType> createHostCreateDiskTask(HostCreateDiskRequestType paramHostCreateDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostCreateDisk_Task"), HostCreateDiskRequestType.class, null, paramHostCreateDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LegacyNetworkInterfaceInUseFault")
  public JAXBElement<LegacyNetworkInterfaceInUse> createLegacyNetworkInterfaceInUseFault(LegacyNetworkInterfaceInUse paramLegacyNetworkInterfaceInUse) {
    return new JAXBElement(new QName("urn:vim25", "LegacyNetworkInterfaceInUseFault"), LegacyNetworkInterfaceInUse.class, null, paramLegacyNetworkInterfaceInUse);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnconfiguredPropertyValueFault")
  public JAXBElement<UnconfiguredPropertyValue> createUnconfiguredPropertyValueFault(UnconfiguredPropertyValue paramUnconfiguredPropertyValue) {
    return new JAXBElement(new QName("urn:vim25", "UnconfiguredPropertyValueFault"), UnconfiguredPropertyValue.class, null, paramUnconfiguredPropertyValue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TerminateVM")
  public JAXBElement<TerminateVMRequestType> createTerminateVM(TerminateVMRequestType paramTerminateVMRequestType) {
    return new JAXBElement(new QName("urn:vim25", "TerminateVM"), TerminateVMRequestType.class, null, paramTerminateVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FcoeFaultPnicHasNoPortSetFault")
  public JAXBElement<FcoeFaultPnicHasNoPortSet> createFcoeFaultPnicHasNoPortSetFault(FcoeFaultPnicHasNoPortSet paramFcoeFaultPnicHasNoPortSet) {
    return new JAXBElement(new QName("urn:vim25", "FcoeFaultPnicHasNoPortSetFault"), FcoeFaultPnicHasNoPortSet.class, null, paramFcoeFaultPnicHasNoPortSet);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestOperationsFaultFault")
  public JAXBElement<GuestOperationsFault> createGuestOperationsFaultFault(GuestOperationsFault paramGuestOperationsFault) {
    return new JAXBElement(new QName("urn:vim25", "GuestOperationsFaultFault"), GuestOperationsFault.class, null, paramGuestOperationsFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemovePortGroup")
  public JAXBElement<RemovePortGroupRequestType> createRemovePortGroup(RemovePortGroupRequestType paramRemovePortGroupRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemovePortGroup"), RemovePortGroupRequestType.class, null, paramRemovePortGroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ImportOperationBulkFaultFault")
  public JAXBElement<ImportOperationBulkFault> createImportOperationBulkFaultFault(ImportOperationBulkFault paramImportOperationBulkFault) {
    return new JAXBElement(new QName("urn:vim25", "ImportOperationBulkFaultFault"), ImportOperationBulkFault.class, null, paramImportOperationBulkFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AcquireCimServicesTicket")
  public JAXBElement<AcquireCimServicesTicketRequestType> createAcquireCimServicesTicket(AcquireCimServicesTicketRequestType paramAcquireCimServicesTicketRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AcquireCimServicesTicket"), AcquireCimServicesTicketRequestType.class, null, paramAcquireCimServicesTicketRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExtendVirtualDisk_Task")
  public JAXBElement<ExtendVirtualDiskRequestType> createExtendVirtualDiskTask(ExtendVirtualDiskRequestType paramExtendVirtualDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ExtendVirtualDisk_Task"), ExtendVirtualDiskRequestType.class, null, paramExtendVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryMonitoredEntities")
  public JAXBElement<QueryMonitoredEntitiesRequestType> createQueryMonitoredEntities(QueryMonitoredEntitiesRequestType paramQueryMonitoredEntitiesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryMonitoredEntities"), QueryMonitoredEntitiesRequestType.class, null, paramQueryMonitoredEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResignatureUnresolvedVmfsVolume_Task")
  public JAXBElement<ResignatureUnresolvedVmfsVolumeRequestType> createResignatureUnresolvedVmfsVolumeTask(ResignatureUnresolvedVmfsVolumeRequestType paramResignatureUnresolvedVmfsVolumeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ResignatureUnresolvedVmfsVolume_Task"), ResignatureUnresolvedVmfsVolumeRequestType.class, null, paramResignatureUnresolvedVmfsVolumeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TooManyGuestLogonsFault")
  public JAXBElement<TooManyGuestLogons> createTooManyGuestLogonsFault(TooManyGuestLogons paramTooManyGuestLogons) {
    return new JAXBElement(new QName("urn:vim25", "TooManyGuestLogonsFault"), TooManyGuestLogons.class, null, paramTooManyGuestLogons);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveHostAccessControlEntries")
  public JAXBElement<RetrieveHostAccessControlEntriesRequestType> createRetrieveHostAccessControlEntries(RetrieveHostAccessControlEntriesRequestType paramRetrieveHostAccessControlEntriesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveHostAccessControlEntries"), RetrieveHostAccessControlEntriesRequestType.class, null, paramRetrieveHostAccessControlEntriesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RegisterDisk")
  public JAXBElement<RegisterDiskRequestType> createRegisterDisk(RegisterDiskRequestType paramRegisterDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RegisterDisk"), RegisterDiskRequestType.class, null, paramRegisterDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientStorageSpaceFault")
  public JAXBElement<InsufficientStorageSpace> createInsufficientStorageSpaceFault(InsufficientStorageSpace paramInsufficientStorageSpace) {
    return new JAXBElement(new QName("urn:vim25", "InsufficientStorageSpaceFault"), InsufficientStorageSpace.class, null, paramInsufficientStorageSpace);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DvsReconfigureVmVnicNetworkResourcePool_Task")
  public JAXBElement<DvsReconfigureVmVnicNetworkResourcePoolRequestType> createDvsReconfigureVmVnicNetworkResourcePoolTask(DvsReconfigureVmVnicNetworkResourcePoolRequestType paramDvsReconfigureVmVnicNetworkResourcePoolRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DvsReconfigureVmVnicNetworkResourcePool_Task"), DvsReconfigureVmVnicNetworkResourcePoolRequestType.class, null, paramDvsReconfigureVmVnicNetworkResourcePoolRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QuestionPendingFault")
  public JAXBElement<QuestionPending> createQuestionPendingFault(QuestionPending paramQuestionPending) {
    return new JAXBElement(new QName("urn:vim25", "QuestionPendingFault"), QuestionPending.class, null, paramQuestionPending);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateTemporaryFileInGuest")
  public JAXBElement<CreateTemporaryFileInGuestRequestType> createCreateTemporaryFileInGuest(CreateTemporaryFileInGuestRequestType paramCreateTemporaryFileInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateTemporaryFileInGuest"), CreateTemporaryFileInGuestRequestType.class, null, paramCreateTemporaryFileInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExitLockdownMode")
  public JAXBElement<ExitLockdownModeRequestType> createExitLockdownMode(ExitLockdownModeRequestType paramExitLockdownModeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ExitLockdownMode"), ExitLockdownModeRequestType.class, null, paramExitLockdownModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeviceBackingNotSupportedFault")
  public JAXBElement<DeviceBackingNotSupported> createDeviceBackingNotSupportedFault(DeviceBackingNotSupported paramDeviceBackingNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "DeviceBackingNotSupportedFault"), DeviceBackingNotSupported.class, null, paramDeviceBackingNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReadEnvironmentVariableInGuest")
  public JAXBElement<ReadEnvironmentVariableInGuestRequestType> createReadEnvironmentVariableInGuest(ReadEnvironmentVariableInGuestRequestType paramReadEnvironmentVariableInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReadEnvironmentVariableInGuest"), ReadEnvironmentVariableInGuestRequestType.class, null, paramReadEnvironmentVariableInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmFaultToleranceInvalidFileBackingFault")
  public JAXBElement<VmFaultToleranceInvalidFileBacking> createVmFaultToleranceInvalidFileBackingFault(VmFaultToleranceInvalidFileBacking paramVmFaultToleranceInvalidFileBacking) {
    return new JAXBElement(new QName("urn:vim25", "VmFaultToleranceInvalidFileBackingFault"), VmFaultToleranceInvalidFileBacking.class, null, paramVmFaultToleranceInvalidFileBacking);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VspanPortgroupPromiscChangeFaultFault")
  public JAXBElement<VspanPortgroupPromiscChangeFault> createVspanPortgroupPromiscChangeFaultFault(VspanPortgroupPromiscChangeFault paramVspanPortgroupPromiscChangeFault) {
    return new JAXBElement(new QName("urn:vim25", "VspanPortgroupPromiscChangeFaultFault"), VspanPortgroupPromiscChangeFault.class, null, paramVspanPortgroupPromiscChangeFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveHostCustomizationsForProfile")
  public JAXBElement<RetrieveHostCustomizationsForProfileRequestType> createRetrieveHostCustomizationsForProfile(RetrieveHostCustomizationsForProfileRequestType paramRetrieveHostCustomizationsForProfileRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveHostCustomizationsForProfile"), RetrieveHostCustomizationsForProfileRequestType.class, null, paramRetrieveHostCustomizationsForProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MountVmfsVolume")
  public JAXBElement<MountVmfsVolumeRequestType> createMountVmfsVolume(MountVmfsVolumeRequestType paramMountVmfsVolumeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MountVmfsVolume"), MountVmfsVolumeRequestType.class, null, paramMountVmfsVolumeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotMoveHostWithFaultToleranceVmFault")
  public JAXBElement<CannotMoveHostWithFaultToleranceVm> createCannotMoveHostWithFaultToleranceVmFault(CannotMoveHostWithFaultToleranceVm paramCannotMoveHostWithFaultToleranceVm) {
    return new JAXBElement(new QName("urn:vim25", "CannotMoveHostWithFaultToleranceVmFault"), CannotMoveHostWithFaultToleranceVm.class, null, paramCannotMoveHostWithFaultToleranceVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidLicenseFault")
  public JAXBElement<InvalidLicense> createInvalidLicenseFault(InvalidLicense paramInvalidLicense) {
    return new JAXBElement(new QName("urn:vim25", "InvalidLicenseFault"), InvalidLicense.class, null, paramInvalidLicense);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVStorageObjectPolicy_Task")
  public JAXBElement<UpdateVStorageObjectPolicyRequestType> createUpdateVStorageObjectPolicyTask(UpdateVStorageObjectPolicyRequestType paramUpdateVStorageObjectPolicyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateVStorageObjectPolicy_Task"), UpdateVStorageObjectPolicyRequestType.class, null, paramUpdateVStorageObjectPolicyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RDMNotPreservedFault")
  public JAXBElement<RDMNotPreserved> createRDMNotPreservedFault(RDMNotPreserved paramRDMNotPreserved) {
    return new JAXBElement(new QName("urn:vim25", "RDMNotPreservedFault"), RDMNotPreserved.class, null, paramRDMNotPreserved);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddStandaloneHost_Task")
  public JAXBElement<AddStandaloneHostRequestType> createAddStandaloneHostTask(AddStandaloneHostRequestType paramAddStandaloneHostRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AddStandaloneHost_Task"), AddStandaloneHostRequestType.class, null, paramAddStandaloneHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDiskFormatFault")
  public JAXBElement<InvalidDiskFormat> createInvalidDiskFormatFault(InvalidDiskFormat paramInvalidDiskFormat) {
    return new JAXBElement(new QName("urn:vim25", "InvalidDiskFormatFault"), InvalidDiskFormat.class, null, paramInvalidDiskFormat);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidCAMCertificateFault")
  public JAXBElement<InvalidCAMCertificate> createInvalidCAMCertificateFault(InvalidCAMCertificate paramInvalidCAMCertificate) {
    return new JAXBElement(new QName("urn:vim25", "InvalidCAMCertificateFault"), InvalidCAMCertificate.class, null, paramInvalidCAMCertificate);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchMissingDependenciesFault")
  public JAXBElement<PatchMissingDependencies> createPatchMissingDependenciesFault(PatchMissingDependencies paramPatchMissingDependencies) {
    return new JAXBElement(new QName("urn:vim25", "PatchMissingDependenciesFault"), PatchMissingDependencies.class, null, paramPatchMissingDependencies);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfMissingAttributeFault")
  public JAXBElement<OvfMissingAttribute> createOvfMissingAttributeFault(OvfMissingAttribute paramOvfMissingAttribute) {
    return new JAXBElement(new QName("urn:vim25", "OvfMissingAttributeFault"), OvfMissingAttribute.class, null, paramOvfMissingAttribute);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryAvailableTimeZones")
  public JAXBElement<QueryAvailableTimeZonesRequestType> createQueryAvailableTimeZones(QueryAvailableTimeZonesRequestType paramQueryAvailableTimeZonesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryAvailableTimeZones"), QueryAvailableTimeZonesRequestType.class, null, paramQueryAvailableTimeZonesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExportAnswerFile_Task")
  public JAXBElement<ExportAnswerFileRequestType> createExportAnswerFileTask(ExportAnswerFileRequestType paramExportAnswerFileRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ExportAnswerFile_Task"), ExportAnswerFileRequestType.class, null, paramExportAnswerFileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RegisterHealthUpdateProvider")
  public JAXBElement<RegisterHealthUpdateProviderRequestType> createRegisterHealthUpdateProvider(RegisterHealthUpdateProviderRequestType paramRegisterHealthUpdateProviderRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RegisterHealthUpdateProvider"), RegisterHealthUpdateProviderRequestType.class, null, paramRegisterHealthUpdateProviderRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OverwriteCustomizationSpec")
  public JAXBElement<OverwriteCustomizationSpecRequestType> createOverwriteCustomizationSpec(OverwriteCustomizationSpecRequestType paramOverwriteCustomizationSpecRequestType) {
    return new JAXBElement(new QName("urn:vim25", "OverwriteCustomizationSpec"), OverwriteCustomizationSpecRequestType.class, null, paramOverwriteCustomizationSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPerfCounter")
  public JAXBElement<QueryPerfCounterRequestType> createQueryPerfCounter(QueryPerfCounterRequestType paramQueryPerfCounterRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryPerfCounter"), QueryPerfCounterRequestType.class, null, paramQueryPerfCounterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateConfig")
  public JAXBElement<UpdateConfigRequestType> createUpdateConfig(UpdateConfigRequestType paramUpdateConfigRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateConfig"), UpdateConfigRequestType.class, null, paramUpdateConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CancelWaitForUpdates")
  public JAXBElement<CancelWaitForUpdatesRequestType> createCancelWaitForUpdates(CancelWaitForUpdatesRequestType paramCancelWaitForUpdatesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CancelWaitForUpdates"), CancelWaitForUpdatesRequestType.class, null, paramCancelWaitForUpdatesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostImageConfigGetAcceptance")
  public JAXBElement<HostImageConfigGetAcceptanceRequestType> createHostImageConfigGetAcceptance(HostImageConfigGetAcceptanceRequestType paramHostImageConfigGetAcceptanceRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostImageConfigGetAcceptance"), HostImageConfigGetAcceptanceRequestType.class, null, paramHostImageConfigGetAcceptanceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExtendedFaultFault")
  public JAXBElement<ExtendedFault> createExtendedFaultFault(ExtendedFault paramExtendedFault) {
    return new JAXBElement(new QName("urn:vim25", "ExtendedFaultFault"), ExtendedFault.class, null, paramExtendedFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedElementValueFault")
  public JAXBElement<OvfUnsupportedElementValue> createOvfUnsupportedElementValueFault(OvfUnsupportedElementValue paramOvfUnsupportedElementValue) {
    return new JAXBElement(new QName("urn:vim25", "OvfUnsupportedElementValueFault"), OvfUnsupportedElementValue.class, null, paramOvfUnsupportedElementValue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ImportUnmanagedSnapshot")
  public JAXBElement<ImportUnmanagedSnapshotRequestType> createImportUnmanagedSnapshot(ImportUnmanagedSnapshotRequestType paramImportUnmanagedSnapshotRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ImportUnmanagedSnapshot"), ImportUnmanagedSnapshotRequestType.class, null, paramImportUnmanagedSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryMemoryOverheadEx")
  public JAXBElement<QueryMemoryOverheadExRequestType> createQueryMemoryOverheadEx(QueryMemoryOverheadExRequestType paramQueryMemoryOverheadExRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryMemoryOverheadEx"), QueryMemoryOverheadExRequestType.class, null, paramQueryMemoryOverheadExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoHostSuitableForFtSecondaryFault")
  public JAXBElement<NoHostSuitableForFtSecondary> createNoHostSuitableForFtSecondaryFault(NoHostSuitableForFtSecondary paramNoHostSuitableForFtSecondary) {
    return new JAXBElement(new QName("urn:vim25", "NoHostSuitableForFtSecondaryFault"), NoHostSuitableForFtSecondary.class, null, paramNoHostSuitableForFtSecondary);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteFile")
  public JAXBElement<DeleteFileRequestType> createDeleteFile(DeleteFileRequestType paramDeleteFileRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DeleteFile"), DeleteFileRequestType.class, null, paramDeleteFileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnsharedSwapVMotionNotSupportedFault")
  public JAXBElement<UnsharedSwapVMotionNotSupported> createUnsharedSwapVMotionNotSupportedFault(UnsharedSwapVMotionNotSupported paramUnsharedSwapVMotionNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "UnsharedSwapVMotionNotSupportedFault"), UnsharedSwapVMotionNotSupported.class, null, paramUnsharedSwapVMotionNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "WipeDiskFaultFault")
  public JAXBElement<WipeDiskFault> createWipeDiskFaultFault(WipeDiskFault paramWipeDiskFault) {
    return new JAXBElement(new QName("urn:vim25", "WipeDiskFaultFault"), WipeDiskFault.class, null, paramWipeDiskFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RegisterKmsCluster")
  public JAXBElement<RegisterKmsClusterRequestType> createRegisterKmsCluster(RegisterKmsClusterRequestType paramRegisterKmsClusterRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RegisterKmsCluster"), RegisterKmsClusterRequestType.class, null, paramRegisterKmsClusterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SendNMI")
  public JAXBElement<SendNMIRequestType> createSendNMI(SendNMIRequestType paramSendNMIRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SendNMI"), SendNMIRequestType.class, null, paramSendNMIRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigureStorageDrsForPod_Task")
  public JAXBElement<ConfigureStorageDrsForPodRequestType> createConfigureStorageDrsForPodTask(ConfigureStorageDrsForPodRequestType paramConfigureStorageDrsForPodRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ConfigureStorageDrsForPod_Task"), ConfigureStorageDrsForPodRequestType.class, null, paramConfigureStorageDrsForPodRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StartReplaying_Task")
  public JAXBElement<StartReplayingRequestType> createStartReplayingTask(StartReplayingRequestType paramStartReplayingRequestType) {
    return new JAXBElement(new QName("urn:vim25", "StartReplaying_Task"), StartReplayingRequestType.class, null, paramStartReplayingRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmLimitLicenseFault")
  public JAXBElement<VmLimitLicense> createVmLimitLicenseFault(VmLimitLicense paramVmLimitLicense) {
    return new JAXBElement(new QName("urn:vim25", "VmLimitLicenseFault"), VmLimitLicense.class, null, paramVmLimitLicense);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VFlashCacheHotConfigNotSupportedFault")
  public JAXBElement<VFlashCacheHotConfigNotSupported> createVFlashCacheHotConfigNotSupportedFault(VFlashCacheHotConfigNotSupported paramVFlashCacheHotConfigNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "VFlashCacheHotConfigNotSupportedFault"), VFlashCacheHotConfigNotSupported.class, null, paramVFlashCacheHotConfigNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "Reload")
  public JAXBElement<ReloadRequestType> createReload(ReloadRequestType paramReloadRequestType) {
    return new JAXBElement(new QName("urn:vim25", "Reload"), ReloadRequestType.class, null, paramReloadRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmFaultToleranceTooManyVMsOnHostFault")
  public JAXBElement<VmFaultToleranceTooManyVMsOnHost> createVmFaultToleranceTooManyVMsOnHostFault(VmFaultToleranceTooManyVMsOnHost paramVmFaultToleranceTooManyVMsOnHost) {
    return new JAXBElement(new QName("urn:vim25", "VmFaultToleranceTooManyVMsOnHostFault"), VmFaultToleranceTooManyVMsOnHost.class, null, paramVmFaultToleranceTooManyVMsOnHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryFilterList")
  public JAXBElement<QueryFilterListRequestType> createQueryFilterList(QueryFilterListRequestType paramQueryFilterListRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryFilterList"), QueryFilterListRequestType.class, null, paramQueryFilterListRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfXmlFormatFault")
  public JAXBElement<OvfXmlFormat> createOvfXmlFormatFault(OvfXmlFormat paramOvfXmlFormat) {
    return new JAXBElement(new QName("urn:vim25", "OvfXmlFormatFault"), OvfXmlFormat.class, null, paramOvfXmlFormat);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DrsDisabledOnVmFault")
  public JAXBElement<DrsDisabledOnVm> createDrsDisabledOnVmFault(DrsDisabledOnVm paramDrsDisabledOnVm) {
    return new JAXBElement(new QName("urn:vim25", "DrsDisabledOnVmFault"), DrsDisabledOnVm.class, null, paramDrsDisabledOnVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CopyVirtualDisk_Task")
  public JAXBElement<CopyVirtualDiskRequestType> createCopyVirtualDiskTask(CopyVirtualDiskRequestType paramCopyVirtualDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CopyVirtualDisk_Task"), CopyVirtualDiskRequestType.class, null, paramCopyVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestRegistryValueNotFoundFault")
  public JAXBElement<GuestRegistryValueNotFound> createGuestRegistryValueNotFoundFault(GuestRegistryValueNotFound paramGuestRegistryValueNotFound) {
    return new JAXBElement(new QName("urn:vim25", "GuestRegistryValueNotFoundFault"), GuestRegistryValueNotFound.class, null, paramGuestRegistryValueNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVirtualDiskUuid")
  public JAXBElement<QueryVirtualDiskUuidRequestType> createQueryVirtualDiskUuid(QueryVirtualDiskUuidRequestType paramQueryVirtualDiskUuidRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryVirtualDiskUuid"), QueryVirtualDiskUuidRequestType.class, null, paramQueryVirtualDiskUuidRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "BackupFirmwareConfiguration")
  public JAXBElement<BackupFirmwareConfigurationRequestType> createBackupFirmwareConfiguration(BackupFirmwareConfigurationRequestType paramBackupFirmwareConfigurationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "BackupFirmwareConfiguration"), BackupFirmwareConfigurationRequestType.class, null, paramBackupFirmwareConfigurationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RecommendDatastores")
  public JAXBElement<RecommendDatastoresRequestType> createRecommendDatastores(RecommendDatastoresRequestType paramRecommendDatastoresRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RecommendDatastores"), RecommendDatastoresRequestType.class, null, paramRecommendDatastoresRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoSubjectNameFault")
  public JAXBElement<NoSubjectName> createNoSubjectNameFault(NoSubjectName paramNoSubjectName) {
    return new JAXBElement(new QName("urn:vim25", "NoSubjectNameFault"), NoSubjectName.class, null, paramNoSubjectName);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindAllByUuid")
  public JAXBElement<FindAllByUuidRequestType> createFindAllByUuid(FindAllByUuidRequestType paramFindAllByUuidRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FindAllByUuid"), FindAllByUuidRequestType.class, null, paramFindAllByUuidRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StartService")
  public JAXBElement<StartServiceRequestType> createStartService(StartServiceRequestType paramStartServiceRequestType) {
    return new JAXBElement(new QName("urn:vim25", "StartService"), StartServiceRequestType.class, null, paramStartServiceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfInvalidValueFormatMalformedFault")
  public JAXBElement<OvfInvalidValueFormatMalformed> createOvfInvalidValueFormatMalformedFault(OvfInvalidValueFormatMalformed paramOvfInvalidValueFormatMalformed) {
    return new JAXBElement(new QName("urn:vim25", "OvfInvalidValueFormatMalformedFault"), OvfInvalidValueFormatMalformed.class, null, paramOvfInvalidValueFormatMalformed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableCrypto")
  public JAXBElement<EnableCryptoRequestType> createEnableCrypto(EnableCryptoRequestType paramEnableCryptoRequestType) {
    return new JAXBElement(new QName("urn:vim25", "EnableCrypto"), EnableCryptoRequestType.class, null, paramEnableCryptoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DetachDisk_Task")
  public JAXBElement<DetachDiskRequestType> createDetachDiskTask(DetachDiskRequestType paramDetachDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DetachDisk_Task"), DetachDiskRequestType.class, null, paramDetachDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HasProvider")
  public JAXBElement<HasProviderRequestType> createHasProvider(HasProviderRequestType paramHasProviderRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HasProvider"), HasProviderRequestType.class, null, paramHasProviderRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateFlags")
  public JAXBElement<UpdateFlagsRequestType> createUpdateFlags(UpdateFlagsRequestType paramUpdateFlagsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateFlags"), UpdateFlagsRequestType.class, null, paramUpdateFlagsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdatePerfInterval")
  public JAXBElement<UpdatePerfIntervalRequestType> createUpdatePerfInterval(UpdatePerfIntervalRequestType paramUpdatePerfIntervalRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdatePerfInterval"), UpdatePerfIntervalRequestType.class, null, paramUpdatePerfIntervalRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateProgress")
  public JAXBElement<UpdateProgressRequestType> createUpdateProgress(UpdateProgressRequestType paramUpdateProgressRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateProgress"), UpdateProgressRequestType.class, null, paramUpdateProgressRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveClientCsr")
  public JAXBElement<RetrieveClientCsrRequestType> createRetrieveClientCsr(RetrieveClientCsrRequestType paramRetrieveClientCsrRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveClientCsr"), RetrieveClientCsrRequestType.class, null, paramRetrieveClientCsrRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FaultToleranceCannotEditMemFault")
  public JAXBElement<FaultToleranceCannotEditMem> createFaultToleranceCannotEditMemFault(FaultToleranceCannotEditMem paramFaultToleranceCannotEditMem) {
    return new JAXBElement(new QName("urn:vim25", "FaultToleranceCannotEditMemFault"), FaultToleranceCannotEditMem.class, null, paramFaultToleranceCannotEditMem);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshStorageSystem")
  public JAXBElement<RefreshStorageSystemRequestType> createRefreshStorageSystem(RefreshStorageSystemRequestType paramRefreshStorageSystemRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RefreshStorageSystem"), RefreshStorageSystemRequestType.class, null, paramRefreshStorageSystemRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GatewayNotFoundFault")
  public JAXBElement<GatewayNotFound> createGatewayNotFoundFault(GatewayNotFound paramGatewayNotFound) {
    return new JAXBElement(new QName("urn:vim25", "GatewayNotFoundFault"), GatewayNotFound.class, null, paramGatewayNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMOnConflictDVPortFault")
  public JAXBElement<VMOnConflictDVPort> createVMOnConflictDVPortFault(VMOnConflictDVPort paramVMOnConflictDVPort) {
    return new JAXBElement(new QName("urn:vim25", "VMOnConflictDVPortFault"), VMOnConflictDVPort.class, null, paramVMOnConflictDVPort);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfImportFault")
  public JAXBElement<OvfImport> createOvfImportFault(OvfImport paramOvfImport) {
    return new JAXBElement(new QName("urn:vim25", "OvfImportFault"), OvfImport.class, null, paramOvfImport);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDvsByUuid")
  public JAXBElement<QueryDvsByUuidRequestType> createQueryDvsByUuid(QueryDvsByUuidRequestType paramQueryDvsByUuidRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryDvsByUuid"), QueryDvsByUuidRequestType.class, null, paramQueryDvsByUuidRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConfigurePowerPolicy")
  public JAXBElement<ConfigurePowerPolicyRequestType> createConfigurePowerPolicy(ConfigurePowerPolicyRequestType paramConfigurePowerPolicyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ConfigurePowerPolicy"), ConfigurePowerPolicyRequestType.class, null, paramConfigurePowerPolicyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPerfCounterByLevel")
  public JAXBElement<QueryPerfCounterByLevelRequestType> createQueryPerfCounterByLevel(QueryPerfCounterByLevelRequestType paramQueryPerfCounterByLevelRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryPerfCounterByLevel"), QueryPerfCounterByLevelRequestType.class, null, paramQueryPerfCounterByLevelRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FileNameTooLongFault")
  public JAXBElement<FileNameTooLong> createFileNameTooLongFault(FileNameTooLong paramFileNameTooLong) {
    return new JAXBElement(new QName("urn:vim25", "FileNameTooLongFault"), FileNameTooLong.class, null, paramFileNameTooLong);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotReconfigureVsanWhenHaEnabledFault")
  public JAXBElement<CannotReconfigureVsanWhenHaEnabled> createCannotReconfigureVsanWhenHaEnabledFault(CannotReconfigureVsanWhenHaEnabled paramCannotReconfigureVsanWhenHaEnabled) {
    return new JAXBElement(new QName("urn:vim25", "CannotReconfigureVsanWhenHaEnabledFault"), CannotReconfigureVsanWhenHaEnabled.class, null, paramCannotReconfigureVsanWhenHaEnabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostExtendDisk_Task")
  public JAXBElement<HostExtendDiskRequestType> createHostExtendDiskTask(HostExtendDiskRequestType paramHostExtendDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostExtendDisk_Task"), HostExtendDiskRequestType.class, null, paramHostExtendDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryHealthUpdates")
  public JAXBElement<QueryHealthUpdatesRequestType> createQueryHealthUpdates(QueryHealthUpdatesRequestType paramQueryHealthUpdatesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryHealthUpdates"), QueryHealthUpdatesRequestType.class, null, paramQueryHealthUpdatesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ImpersonateUser")
  public JAXBElement<ImpersonateUserRequestType> createImpersonateUser(ImpersonateUserRequestType paramImpersonateUserRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ImpersonateUser"), ImpersonateUserRequestType.class, null, paramImpersonateUserRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IndependentDiskVMotionNotSupportedFault")
  public JAXBElement<IndependentDiskVMotionNotSupported> createIndependentDiskVMotionNotSupportedFault(IndependentDiskVMotionNotSupported paramIndependentDiskVMotionNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "IndependentDiskVMotionNotSupportedFault"), IndependentDiskVMotionNotSupported.class, null, paramIndependentDiskVMotionNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DetachTagFromVStorageObject")
  public JAXBElement<DetachTagFromVStorageObjectRequestType> createDetachTagFromVStorageObject(DetachTagFromVStorageObjectRequestType paramDetachTagFromVStorageObjectRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DetachTagFromVStorageObject"), DetachTagFromVStorageObjectRequestType.class, null, paramDetachTagFromVStorageObjectRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCModeUnsupportedByHostsFault")
  public JAXBElement<EVCModeUnsupportedByHosts> createEVCModeUnsupportedByHostsFault(EVCModeUnsupportedByHosts paramEVCModeUnsupportedByHosts) {
    return new JAXBElement(new QName("urn:vim25", "EVCModeUnsupportedByHostsFault"), EVCModeUnsupportedByHosts.class, null, paramEVCModeUnsupportedByHosts);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfExportFailedFault")
  public JAXBElement<OvfExportFailed> createOvfExportFailedFault(OvfExportFailed paramOvfExportFailed) {
    return new JAXBElement(new QName("urn:vim25", "OvfExportFailedFault"), OvfExportFailed.class, null, paramOvfExportFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveKmipServerCert")
  public JAXBElement<RetrieveKmipServerCertRequestType> createRetrieveKmipServerCert(RetrieveKmipServerCertRequestType paramRetrieveKmipServerCertRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveKmipServerCert"), RetrieveKmipServerCertRequestType.class, null, paramRetrieveKmipServerCertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryHostConnectionInfo")
  public JAXBElement<QueryHostConnectionInfoRequestType> createQueryHostConnectionInfo(QueryHostConnectionInfoRequestType paramQueryHostConnectionInfoRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryHostConnectionInfo"), QueryHostConnectionInfoRequestType.class, null, paramQueryHostConnectionInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EVCAdmissionFailedHostSoftwareForModeFault")
  public JAXBElement<EVCAdmissionFailedHostSoftwareForMode> createEVCAdmissionFailedHostSoftwareForModeFault(EVCAdmissionFailedHostSoftwareForMode paramEVCAdmissionFailedHostSoftwareForMode) {
    return new JAXBElement(new QName("urn:vim25", "EVCAdmissionFailedHostSoftwareForModeFault"), EVCAdmissionFailedHostSoftwareForMode.class, null, paramEVCAdmissionFailedHostSoftwareForMode);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveProperties")
  public JAXBElement<RetrievePropertiesRequestType> createRetrieveProperties(RetrievePropertiesRequestType paramRetrievePropertiesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveProperties"), RetrievePropertiesRequestType.class, null, paramRetrievePropertiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateBootDevice")
  public JAXBElement<UpdateBootDeviceRequestType> createUpdateBootDevice(UpdateBootDeviceRequestType paramUpdateBootDeviceRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateBootDevice"), UpdateBootDeviceRequestType.class, null, paramUpdateBootDeviceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindByUuid")
  public JAXBElement<FindByUuidRequestType> createFindByUuid(FindByUuidRequestType paramFindByUuidRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FindByUuid"), FindByUuidRequestType.class, null, paramFindByUuidRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsHbrDiskNotMovableFault")
  public JAXBElement<StorageDrsHbrDiskNotMovable> createStorageDrsHbrDiskNotMovableFault(StorageDrsHbrDiskNotMovable paramStorageDrsHbrDiskNotMovable) {
    return new JAXBElement(new QName("urn:vim25", "StorageDrsHbrDiskNotMovableFault"), StorageDrsHbrDiskNotMovable.class, null, paramStorageDrsHbrDiskNotMovable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CustomizeGuest_Task")
  public JAXBElement<CustomizeGuestRequestType> createCustomizeGuestTask(CustomizeGuestRequestType paramCustomizeGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CustomizeGuest_Task"), CustomizeGuestRequestType.class, null, paramCustomizeGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResetCollector")
  public JAXBElement<ResetCollectorRequestType> createResetCollector(ResetCollectorRequestType paramResetCollectorRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ResetCollector"), ResetCollectorRequestType.class, null, paramResetCollectorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryExtensionIpAllocationUsage")
  public JAXBElement<QueryExtensionIpAllocationUsageRequestType> createQueryExtensionIpAllocationUsage(QueryExtensionIpAllocationUsageRequestType paramQueryExtensionIpAllocationUsageRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryExtensionIpAllocationUsage"), QueryExtensionIpAllocationUsageRequestType.class, null, paramQueryExtensionIpAllocationUsageRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FileNotWritableFault")
  public JAXBElement<FileNotWritable> createFileNotWritableFault(FileNotWritable paramFileNotWritable) {
    return new JAXBElement(new QName("urn:vim25", "FileNotWritableFault"), FileNotWritable.class, null, paramFileNotWritable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMotionProtocolIncompatibleFault")
  public JAXBElement<VMotionProtocolIncompatible> createVMotionProtocolIncompatibleFault(VMotionProtocolIncompatible paramVMotionProtocolIncompatible) {
    return new JAXBElement(new QName("urn:vim25", "VMotionProtocolIncompatibleFault"), VMotionProtocolIncompatible.class, null, paramVMotionProtocolIncompatible);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryUnresolvedVmfsVolume")
  public JAXBElement<QueryUnresolvedVmfsVolumeRequestType> createQueryUnresolvedVmfsVolume(QueryUnresolvedVmfsVolumeRequestType paramQueryUnresolvedVmfsVolumeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryUnresolvedVmfsVolume"), QueryUnresolvedVmfsVolumeRequestType.class, null, paramQueryUnresolvedVmfsVolumeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMotionInterfaceIssueFault")
  public JAXBElement<VMotionInterfaceIssue> createVMotionInterfaceIssueFault(VMotionInterfaceIssue paramVMotionInterfaceIssue) {
    return new JAXBElement(new QName("urn:vim25", "VMotionInterfaceIssueFault"), VMotionInterfaceIssue.class, null, paramVMotionInterfaceIssue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SuspendVM_Task")
  public JAXBElement<SuspendVMRequestType> createSuspendVMTask(SuspendVMRequestType paramSuspendVMRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SuspendVM_Task"), SuspendVMRequestType.class, null, paramSuspendVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MethodDisabledFault")
  public JAXBElement<MethodDisabled> createMethodDisabledFault(MethodDisabled paramMethodDisabled) {
    return new JAXBElement(new QName("urn:vim25", "MethodDisabledFault"), MethodDisabled.class, null, paramMethodDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisallowedDiskModeChangeFault")
  public JAXBElement<DisallowedDiskModeChange> createDisallowedDiskModeChangeFault(DisallowedDiskModeChange paramDisallowedDiskModeChange) {
    return new JAXBElement(new QName("urn:vim25", "DisallowedDiskModeChangeFault"), DisallowedDiskModeChange.class, null, paramDisallowedDiskModeChange);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateIpConfig")
  public JAXBElement<UpdateIpConfigRequestType> createUpdateIpConfig(UpdateIpConfigRequestType paramUpdateIpConfigRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateIpConfig"), UpdateIpConfigRequestType.class, null, paramUpdateIpConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidLocaleFault")
  public JAXBElement<InvalidLocale> createInvalidLocaleFault(InvalidLocale paramInvalidLocale) {
    return new JAXBElement(new QName("urn:vim25", "InvalidLocaleFault"), InvalidLocale.class, null, paramInvalidLocale);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VsanDiskFaultFault")
  public JAXBElement<VsanDiskFault> createVsanDiskFaultFault(VsanDiskFault paramVsanDiskFault) {
    return new JAXBElement(new QName("urn:vim25", "VsanDiskFaultFault"), VsanDiskFault.class, null, paramVsanDiskFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteVffsVolumeState")
  public JAXBElement<DeleteVffsVolumeStateRequestType> createDeleteVffsVolumeState(DeleteVffsVolumeStateRequestType paramDeleteVffsVolumeStateRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DeleteVffsVolumeState"), DeleteVffsVolumeStateRequestType.class, null, paramDeleteVffsVolumeStateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisallowedMigrationDeviceAttachedFault")
  public JAXBElement<DisallowedMigrationDeviceAttached> createDisallowedMigrationDeviceAttachedFault(DisallowedMigrationDeviceAttached paramDisallowedMigrationDeviceAttached) {
    return new JAXBElement(new QName("urn:vim25", "DisallowedMigrationDeviceAttachedFault"), DisallowedMigrationDeviceAttached.class, null, paramDisallowedMigrationDeviceAttached);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InventoryHasStandardAloneHostsFault")
  public JAXBElement<InventoryHasStandardAloneHosts> createInventoryHasStandardAloneHostsFault(InventoryHasStandardAloneHosts paramInventoryHasStandardAloneHosts) {
    return new JAXBElement(new QName("urn:vim25", "InventoryHasStandardAloneHostsFault"), InventoryHasStandardAloneHosts.class, null, paramInventoryHasStandardAloneHosts);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IncompatibleDefaultDeviceFault")
  public JAXBElement<IncompatibleDefaultDevice> createIncompatibleDefaultDeviceFault(IncompatibleDefaultDevice paramIncompatibleDefaultDevice) {
    return new JAXBElement(new QName("urn:vim25", "IncompatibleDefaultDeviceFault"), IncompatibleDefaultDevice.class, null, paramIncompatibleDefaultDevice);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AttachVmfsExtent")
  public JAXBElement<AttachVmfsExtentRequestType> createAttachVmfsExtent(AttachVmfsExtentRequestType paramAttachVmfsExtentRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AttachVmfsExtent"), AttachVmfsExtentRequestType.class, null, paramAttachVmfsExtentRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MoveDatastoreFile_Task")
  public JAXBElement<MoveDatastoreFileRequestType> createMoveDatastoreFileTask(MoveDatastoreFileRequestType paramMoveDatastoreFileRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MoveDatastoreFile_Task"), MoveDatastoreFileRequestType.class, null, paramMoveDatastoreFileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDvsCompatibleHostSpec")
  public JAXBElement<QueryDvsCompatibleHostSpecRequestType> createQueryDvsCompatibleHostSpec(QueryDvsCompatibleHostSpecRequestType paramQueryDvsCompatibleHostSpecRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryDvsCompatibleHostSpec"), QueryDvsCompatibleHostSpecRequestType.class, null, paramQueryDvsCompatibleHostSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostRetrieveVStorageObjectMetadata")
  public JAXBElement<HostRetrieveVStorageObjectMetadataRequestType> createHostRetrieveVStorageObjectMetadata(HostRetrieveVStorageObjectMetadataRequestType paramHostRetrieveVStorageObjectMetadataRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostRetrieveVStorageObjectMetadata"), HostRetrieveVStorageObjectMetadataRequestType.class, null, paramHostRetrieveVStorageObjectMetadataRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateNvmeOverRdmaAdapter")
  public JAXBElement<CreateNvmeOverRdmaAdapterRequestType> createCreateNvmeOverRdmaAdapter(CreateNvmeOverRdmaAdapterRequestType paramCreateNvmeOverRdmaAdapterRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateNvmeOverRdmaAdapter"), CreateNvmeOverRdmaAdapterRequestType.class, null, paramCreateNvmeOverRdmaAdapterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AcknowledgeAlarm")
  public JAXBElement<AcknowledgeAlarmRequestType> createAcknowledgeAlarm(AcknowledgeAlarmRequestType paramAcknowledgeAlarmRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AcknowledgeAlarm"), AcknowledgeAlarmRequestType.class, null, paramAcknowledgeAlarmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveAllSnapshots_Task")
  public JAXBElement<RemoveAllSnapshotsRequestType> createRemoveAllSnapshotsTask(RemoveAllSnapshotsRequestType paramRemoveAllSnapshotsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveAllSnapshots_Task"), RemoveAllSnapshotsRequestType.class, null, paramRemoveAllSnapshotsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DVSManagerExportEntity_Task")
  public JAXBElement<DVSManagerExportEntityRequestType> createDVSManagerExportEntityTask(DVSManagerExportEntityRequestType paramDVSManagerExportEntityRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DVSManagerExportEntity_Task"), DVSManagerExportEntityRequestType.class, null, paramDVSManagerExportEntityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddGuestAlias")
  public JAXBElement<AddGuestAliasRequestType> createAddGuestAlias(AddGuestAliasRequestType paramAddGuestAliasRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AddGuestAlias"), AddGuestAliasRequestType.class, null, paramAddGuestAliasRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RDMNotSupportedFault")
  public JAXBElement<RDMNotSupported> createRDMNotSupportedFault(RDMNotSupported paramRDMNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "RDMNotSupportedFault"), RDMNotSupported.class, null, paramRDMNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteCustomizationSpec")
  public JAXBElement<DeleteCustomizationSpecRequestType> createDeleteCustomizationSpec(DeleteCustomizationSpecRequestType paramDeleteCustomizationSpecRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DeleteCustomizationSpec"), DeleteCustomizationSpecRequestType.class, null, paramDeleteCustomizationSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DiscoverNvmeControllers")
  public JAXBElement<DiscoverNvmeControllersRequestType> createDiscoverNvmeControllers(DiscoverNvmeControllersRequestType paramDiscoverNvmeControllersRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DiscoverNvmeControllers"), DiscoverNvmeControllersRequestType.class, null, paramDiscoverNvmeControllersRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostConnectFaultFault")
  public JAXBElement<HostConnectFault> createHostConnectFaultFault(HostConnectFault paramHostConnectFault) {
    return new JAXBElement(new QName("urn:vim25", "HostConnectFaultFault"), HostConnectFault.class, null, paramHostConnectFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidNetworkInTypeFault")
  public JAXBElement<InvalidNetworkInType> createInvalidNetworkInTypeFault(InvalidNetworkInType paramInvalidNetworkInType) {
    return new JAXBElement(new QName("urn:vim25", "InvalidNetworkInTypeFault"), InvalidNetworkInType.class, null, paramInvalidNetworkInType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryPerfComposite")
  public JAXBElement<QueryPerfCompositeRequestType> createQueryPerfComposite(QueryPerfCompositeRequestType paramQueryPerfCompositeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryPerfComposite"), QueryPerfCompositeRequestType.class, null, paramQueryPerfCompositeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ParseDescriptor")
  public JAXBElement<ParseDescriptorRequestType> createParseDescriptor(ParseDescriptorRequestType paramParseDescriptorRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ParseDescriptor"), ParseDescriptorRequestType.class, null, paramParseDescriptorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoVirtualNicFault")
  public JAXBElement<NoVirtualNic> createNoVirtualNicFault(NoVirtualNic paramNoVirtualNic) {
    return new JAXBElement(new QName("urn:vim25", "NoVirtualNicFault"), NoVirtualNic.class, null, paramNoVirtualNic);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "Rename_Task")
  public JAXBElement<RenameRequestType> createRenameTask(RenameRequestType paramRenameRequestType) {
    return new JAXBElement(new QName("urn:vim25", "Rename_Task"), RenameRequestType.class, null, paramRenameRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostRetrieveVStorageObjectMetadataValue")
  public JAXBElement<HostRetrieveVStorageObjectMetadataValueRequestType> createHostRetrieveVStorageObjectMetadataValue(HostRetrieveVStorageObjectMetadataValueRequestType paramHostRetrieveVStorageObjectMetadataValueRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostRetrieveVStorageObjectMetadataValue"), HostRetrieveVStorageObjectMetadataValueRequestType.class, null, paramHostRetrieveVStorageObjectMetadataValueRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AssociateProfile")
  public JAXBElement<AssociateProfileRequestType> createAssociateProfile(AssociateProfileRequestType paramAssociateProfileRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AssociateProfile"), AssociateProfileRequestType.class, null, paramAssociateProfileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddCustomFieldDef")
  public JAXBElement<AddCustomFieldDefRequestType> createAddCustomFieldDef(AddCustomFieldDefRequestType paramAddCustomFieldDefRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AddCustomFieldDef"), AddCustomFieldDefRequestType.class, null, paramAddCustomFieldDefRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ImportVApp")
  public JAXBElement<ImportVAppRequestType> createImportVApp(ImportVAppRequestType paramImportVAppRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ImportVApp"), ImportVAppRequestType.class, null, paramImportVAppRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotCreateFileFault")
  public JAXBElement<CannotCreateFile> createCannotCreateFileFault(CannotCreateFile paramCannotCreateFile) {
    return new JAXBElement(new QName("urn:vim25", "CannotCreateFileFault"), CannotCreateFile.class, null, paramCannotCreateFile);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchInstallFailedFault")
  public JAXBElement<PatchInstallFailed> createPatchInstallFailedFault(PatchInstallFailed paramPatchInstallFailed) {
    return new JAXBElement(new QName("urn:vim25", "PatchInstallFailedFault"), PatchInstallFailed.class, null, paramPatchInstallFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DVSManagerImportEntity_Task")
  public JAXBElement<DVSManagerImportEntityRequestType> createDVSManagerImportEntityTask(DVSManagerImportEntityRequestType paramDVSManagerImportEntityRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DVSManagerImportEntity_Task"), DVSManagerImportEntityRequestType.class, null, paramDVSManagerImportEntityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ChangeLockdownMode")
  public JAXBElement<ChangeLockdownModeRequestType> createChangeLockdownMode(ChangeLockdownModeRequestType paramChangeLockdownModeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ChangeLockdownMode"), ChangeLockdownModeRequestType.class, null, paramChangeLockdownModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsIolbDisabledInternallyFault")
  public JAXBElement<StorageDrsIolbDisabledInternally> createStorageDrsIolbDisabledInternallyFault(StorageDrsIolbDisabledInternally paramStorageDrsIolbDisabledInternally) {
    return new JAXBElement(new QName("urn:vim25", "StorageDrsIolbDisabledInternallyFault"), StorageDrsIolbDisabledInternally.class, null, paramStorageDrsIolbDisabledInternally);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotMoveFaultToleranceVmFault")
  public JAXBElement<CannotMoveFaultToleranceVm> createCannotMoveFaultToleranceVmFault(CannotMoveFaultToleranceVm paramCannotMoveFaultToleranceVm) {
    return new JAXBElement(new QName("urn:vim25", "CannotMoveFaultToleranceVmFault"), CannotMoveFaultToleranceVm.class, null, paramCannotMoveFaultToleranceVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetVStorageObjectControlFlags")
  public JAXBElement<SetVStorageObjectControlFlagsRequestType> createSetVStorageObjectControlFlags(SetVStorageObjectControlFlagsRequestType paramSetVStorageObjectControlFlagsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SetVStorageObjectControlFlags"), SetVStorageObjectControlFlagsRequestType.class, null, paramSetVStorageObjectControlFlagsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FormatVffs")
  public JAXBElement<FormatVffsRequestType> createFormatVffs(FormatVffsRequestType paramFormatVffsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FormatVffs"), FormatVffsRequestType.class, null, paramFormatVffsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DisableSmartCardAuthentication")
  public JAXBElement<DisableSmartCardAuthenticationRequestType> createDisableSmartCardAuthentication(DisableSmartCardAuthenticationRequestType paramDisableSmartCardAuthenticationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DisableSmartCardAuthentication"), DisableSmartCardAuthenticationRequestType.class, null, paramDisableSmartCardAuthenticationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetCollectorPageSize")
  public JAXBElement<SetCollectorPageSizeRequestType> createSetCollectorPageSize(SetCollectorPageSizeRequestType paramSetCollectorPageSizeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SetCollectorPageSize"), SetCollectorPageSizeRequestType.class, null, paramSetCollectorPageSizeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DiskIsNonLocalFault")
  public JAXBElement<DiskIsNonLocal> createDiskIsNonLocalFault(DiskIsNonLocal paramDiskIsNonLocal) {
    return new JAXBElement(new QName("urn:vim25", "DiskIsNonLocalFault"), DiskIsNonLocal.class, null, paramDiskIsNonLocal);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UploadClientCert")
  public JAXBElement<UploadClientCertRequestType> createUploadClientCert(UploadClientCertRequestType paramUploadClientCertRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UploadClientCert"), UploadClientCertRequestType.class, null, paramUploadClientCertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientStorageIopsFault")
  public JAXBElement<InsufficientStorageIops> createInsufficientStorageIopsFault(InsufficientStorageIops paramInsufficientStorageIops) {
    return new JAXBElement(new QName("urn:vim25", "InsufficientStorageIopsFault"), InsufficientStorageIops.class, null, paramInsufficientStorageIops);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateServicePolicy")
  public JAXBElement<UpdateServicePolicyRequestType> createUpdateServicePolicy(UpdateServicePolicyRequestType paramUpdateServicePolicyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateServicePolicy"), UpdateServicePolicyRequestType.class, null, paramUpdateServicePolicyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchIntegrityErrorFault")
  public JAXBElement<PatchIntegrityError> createPatchIntegrityErrorFault(PatchIntegrityError paramPatchIntegrityError) {
    return new JAXBElement(new QName("urn:vim25", "PatchIntegrityErrorFault"), PatchIntegrityError.class, null, paramPatchIntegrityError);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnknownDeviceBackingFault")
  public JAXBElement<OvfUnknownDeviceBacking> createOvfUnknownDeviceBackingFault(OvfUnknownDeviceBacking paramOvfUnknownDeviceBacking) {
    return new JAXBElement(new QName("urn:vim25", "OvfUnknownDeviceBackingFault"), OvfUnknownDeviceBacking.class, null, paramOvfUnknownDeviceBacking);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HttpNfcLeaseAbort")
  public JAXBElement<HttpNfcLeaseAbortRequestType> createHttpNfcLeaseAbort(HttpNfcLeaseAbortRequestType paramHttpNfcLeaseAbortRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HttpNfcLeaseAbort"), HttpNfcLeaseAbortRequestType.class, null, paramHttpNfcLeaseAbortRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryProfileStructure")
  public JAXBElement<QueryProfileStructureRequestType> createQueryProfileStructure(QueryProfileStructureRequestType paramQueryProfileStructureRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryProfileStructure"), QueryProfileStructureRequestType.class, null, paramQueryProfileStructureRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotImplementedFault")
  public JAXBElement<NotImplemented> createNotImplementedFault(NotImplemented paramNotImplemented) {
    return new JAXBElement(new QName("urn:vim25", "NotImplementedFault"), NotImplemented.class, null, paramNotImplemented);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchBinariesNotFoundFault")
  public JAXBElement<PatchBinariesNotFound> createPatchBinariesNotFoundFault(PatchBinariesNotFound paramPatchBinariesNotFound) {
    return new JAXBElement(new QName("urn:vim25", "PatchBinariesNotFoundFault"), PatchBinariesNotFound.class, null, paramPatchBinariesNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplicationVmConfigFaultFault")
  public JAXBElement<ReplicationVmConfigFault> createReplicationVmConfigFaultFault(ReplicationVmConfigFault paramReplicationVmConfigFault) {
    return new JAXBElement(new QName("urn:vim25", "ReplicationVmConfigFaultFault"), ReplicationVmConfigFault.class, null, paramReplicationVmConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RollbackFailureFault")
  public JAXBElement<RollbackFailure> createRollbackFailureFault(RollbackFailure paramRollbackFailure) {
    return new JAXBElement(new QName("urn:vim25", "RollbackFailureFault"), RollbackFailure.class, null, paramRollbackFailure);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ToolsAlreadyUpgradedFault")
  public JAXBElement<ToolsAlreadyUpgraded> createToolsAlreadyUpgradedFault(ToolsAlreadyUpgraded paramToolsAlreadyUpgraded) {
    return new JAXBElement(new QName("urn:vim25", "ToolsAlreadyUpgradedFault"), ToolsAlreadyUpgraded.class, null, paramToolsAlreadyUpgraded);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ToolsUpgradeCancelledFault")
  public JAXBElement<ToolsUpgradeCancelled> createToolsUpgradeCancelledFault(ToolsUpgradeCancelled paramToolsUpgradeCancelled) {
    return new JAXBElement(new QName("urn:vim25", "ToolsUpgradeCancelledFault"), ToolsUpgradeCancelled.class, null, paramToolsUpgradeCancelled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MarkForRemoval")
  public JAXBElement<MarkForRemovalRequestType> createMarkForRemoval(MarkForRemovalRequestType paramMarkForRemovalRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MarkForRemoval"), MarkForRemovalRequestType.class, null, paramMarkForRemovalRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoVcManagedIpConfiguredFault")
  public JAXBElement<NoVcManagedIpConfigured> createNoVcManagedIpConfiguredFault(NoVcManagedIpConfigured paramNoVcManagedIpConfigured) {
    return new JAXBElement(new QName("urn:vim25", "NoVcManagedIpConfiguredFault"), NoVcManagedIpConfigured.class, null, paramNoVcManagedIpConfigured);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateInternetScsiName")
  public JAXBElement<UpdateInternetScsiNameRequestType> createUpdateInternetScsiName(UpdateInternetScsiNameRequestType paramUpdateInternetScsiNameRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateInternetScsiName"), UpdateInternetScsiNameRequestType.class, null, paramUpdateInternetScsiNameRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PutUsbScanCodes")
  public JAXBElement<PutUsbScanCodesRequestType> createPutUsbScanCodes(PutUsbScanCodesRequestType paramPutUsbScanCodesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "PutUsbScanCodes"), PutUsbScanCodesRequestType.class, null, paramPutUsbScanCodesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MethodAlreadyDisabledFaultFault")
  public JAXBElement<MethodAlreadyDisabledFault> createMethodAlreadyDisabledFaultFault(MethodAlreadyDisabledFault paramMethodAlreadyDisabledFault) {
    return new JAXBElement(new QName("urn:vim25", "MethodAlreadyDisabledFaultFault"), MethodAlreadyDisabledFault.class, null, paramMethodAlreadyDisabledFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MemoryHotPlugNotSupportedFault")
  public JAXBElement<MemoryHotPlugNotSupported> createMemoryHotPlugNotSupportedFault(MemoryHotPlugNotSupported paramMemoryHotPlugNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "MemoryHotPlugNotSupportedFault"), MemoryHotPlugNotSupported.class, null, paramMemoryHotPlugNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "WillResetSnapshotDirectoryFault")
  public JAXBElement<WillResetSnapshotDirectory> createWillResetSnapshotDirectoryFault(WillResetSnapshotDirectory paramWillResetSnapshotDirectory) {
    return new JAXBElement(new QName("urn:vim25", "WillResetSnapshotDirectoryFault"), WillResetSnapshotDirectory.class, null, paramWillResetSnapshotDirectory);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveEntityScheduledTask")
  public JAXBElement<RetrieveEntityScheduledTaskRequestType> createRetrieveEntityScheduledTask(RetrieveEntityScheduledTaskRequestType paramRetrieveEntityScheduledTaskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveEntityScheduledTask"), RetrieveEntityScheduledTaskRequestType.class, null, paramRetrieveEntityScheduledTaskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GatewayConnectFaultFault")
  public JAXBElement<GatewayConnectFault> createGatewayConnectFaultFault(GatewayConnectFault paramGatewayConnectFault) {
    return new JAXBElement(new QName("urn:vim25", "GatewayConnectFaultFault"), GatewayConnectFault.class, null, paramGatewayConnectFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InaccessibleVFlashSourceFault")
  public JAXBElement<InaccessibleVFlashSource> createInaccessibleVFlashSourceFault(InaccessibleVFlashSource paramInaccessibleVFlashSource) {
    return new JAXBElement(new QName("urn:vim25", "InaccessibleVFlashSourceFault"), InaccessibleVFlashSource.class, null, paramInaccessibleVFlashSource);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DestroyVffs")
  public JAXBElement<DestroyVffsRequestType> createDestroyVffs(DestroyVffsRequestType paramDestroyVffsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DestroyVffs"), DestroyVffsRequestType.class, null, paramDestroyVffsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateProductLockerLocation_Task")
  public JAXBElement<UpdateProductLockerLocationRequestType> createUpdateProductLockerLocationTask(UpdateProductLockerLocationRequestType paramUpdateProductLockerLocationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateProductLockerLocation_Task"), UpdateProductLockerLocationRequestType.class, null, paramUpdateProductLockerLocationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshNetworkSystem")
  public JAXBElement<RefreshNetworkSystemRequestType> createRefreshNetworkSystem(RefreshNetworkSystemRequestType paramRefreshNetworkSystemRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RefreshNetworkSystem"), RefreshNetworkSystemRequestType.class, null, paramRefreshNetworkSystemRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RunVsanPhysicalDiskDiagnostics")
  public JAXBElement<RunVsanPhysicalDiskDiagnosticsRequestType> createRunVsanPhysicalDiskDiagnostics(RunVsanPhysicalDiskDiagnosticsRequestType paramRunVsanPhysicalDiskDiagnosticsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RunVsanPhysicalDiskDiagnostics"), RunVsanPhysicalDiskDiagnosticsRequestType.class, null, paramRunVsanPhysicalDiskDiagnosticsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfElementInvalidValueFault")
  public JAXBElement<OvfElementInvalidValue> createOvfElementInvalidValueFault(OvfElementInvalidValue paramOvfElementInvalidValue) {
    return new JAXBElement(new QName("urn:vim25", "OvfElementInvalidValueFault"), OvfElementInvalidValue.class, null, paramOvfElementInvalidValue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestRegistryValueFaultFault")
  public JAXBElement<GuestRegistryValueFault> createGuestRegistryValueFaultFault(GuestRegistryValueFault paramGuestRegistryValueFault) {
    return new JAXBElement(new QName("urn:vim25", "GuestRegistryValueFaultFault"), GuestRegistryValueFault.class, null, paramGuestRegistryValueFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfCpuCompatibilityCheckNotSupportedFault")
  public JAXBElement<OvfCpuCompatibilityCheckNotSupported> createOvfCpuCompatibilityCheckNotSupportedFault(OvfCpuCompatibilityCheckNotSupported paramOvfCpuCompatibilityCheckNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "OvfCpuCompatibilityCheckNotSupportedFault"), OvfCpuCompatibilityCheckNotSupported.class, null, paramOvfCpuCompatibilityCheckNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryDvsCheckCompatibility")
  public JAXBElement<QueryDvsCheckCompatibilityRequestType> createQueryDvsCheckCompatibility(QueryDvsCheckCompatibilityRequestType paramQueryDvsCheckCompatibilityRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryDvsCheckCompatibility"), QueryDvsCheckCompatibilityRequestType.class, null, paramQueryDvsCheckCompatibilityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListSmartCardTrustAnchors")
  public JAXBElement<ListSmartCardTrustAnchorsRequestType> createListSmartCardTrustAnchors(ListSmartCardTrustAnchorsRequestType paramListSmartCardTrustAnchorsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ListSmartCardTrustAnchors"), ListSmartCardTrustAnchorsRequestType.class, null, paramListSmartCardTrustAnchorsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateLinkedChildren")
  public JAXBElement<UpdateLinkedChildrenRequestType> createUpdateLinkedChildren(UpdateLinkedChildrenRequestType paramUpdateLinkedChildrenRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateLinkedChildren"), UpdateLinkedChildrenRequestType.class, null, paramUpdateLinkedChildrenRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MountToolsInstaller")
  public JAXBElement<MountToolsInstallerRequestType> createMountToolsInstaller(MountToolsInstallerRequestType paramMountToolsInstallerRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MountToolsInstaller"), MountToolsInstallerRequestType.class, null, paramMountToolsInstallerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MoveIntoFolder_Task")
  public JAXBElement<MoveIntoFolderRequestType> createMoveIntoFolderTask(MoveIntoFolderRequestType paramMoveIntoFolderRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MoveIntoFolder_Task"), MoveIntoFolderRequestType.class, null, paramMoveIntoFolderRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RenameSnapshot")
  public JAXBElement<RenameSnapshotRequestType> createRenameSnapshot(RenameSnapshotRequestType paramRenameSnapshotRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RenameSnapshot"), RenameSnapshotRequestType.class, null, paramRenameSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RebootRequiredFault")
  public JAXBElement<RebootRequired> createRebootRequiredFault(RebootRequired paramRebootRequired) {
    return new JAXBElement(new QName("urn:vim25", "RebootRequiredFault"), RebootRequired.class, null, paramRebootRequired);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotMoveFromNonHomeNotSupportedFault")
  public JAXBElement<SnapshotMoveFromNonHomeNotSupported> createSnapshotMoveFromNonHomeNotSupportedFault(SnapshotMoveFromNonHomeNotSupported paramSnapshotMoveFromNonHomeNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "SnapshotMoveFromNonHomeNotSupportedFault"), SnapshotMoveFromNonHomeNotSupported.class, null, paramSnapshotMoveFromNonHomeNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveKmipServer")
  public JAXBElement<RemoveKmipServerRequestType> createRemoveKmipServer(RemoveKmipServerRequestType paramRemoveKmipServerRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveKmipServer"), RemoveKmipServerRequestType.class, null, paramRemoveKmipServerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DomainNotFoundFault")
  public JAXBElement<DomainNotFound> createDomainNotFoundFault(DomainNotFound paramDomainNotFound) {
    return new JAXBElement(new QName("urn:vim25", "DomainNotFoundFault"), DomainNotFound.class, null, paramDomainNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveCustomFieldDef")
  public JAXBElement<RemoveCustomFieldDefRequestType> createRemoveCustomFieldDef(RemoveCustomFieldDefRequestType paramRemoveCustomFieldDefRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveCustomFieldDef"), RemoveCustomFieldDefRequestType.class, null, paramRemoveCustomFieldDefRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FetchSystemEventLog")
  public JAXBElement<FetchSystemEventLogRequestType> createFetchSystemEventLog(FetchSystemEventLogRequestType paramFetchSystemEventLogRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FetchSystemEventLog"), FetchSystemEventLogRequestType.class, null, paramFetchSystemEventLogRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsCannotMoveManuallyPlacedSwapFileFault")
  public JAXBElement<StorageDrsCannotMoveManuallyPlacedSwapFile> createStorageDrsCannotMoveManuallyPlacedSwapFileFault(StorageDrsCannotMoveManuallyPlacedSwapFile paramStorageDrsCannotMoveManuallyPlacedSwapFile) {
    return new JAXBElement(new QName("urn:vim25", "StorageDrsCannotMoveManuallyPlacedSwapFileFault"), StorageDrsCannotMoveManuallyPlacedSwapFile.class, null, paramStorageDrsCannotMoveManuallyPlacedSwapFile);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VolumeEditorErrorFault")
  public JAXBElement<VolumeEditorError> createVolumeEditorErrorFault(VolumeEditorError paramVolumeEditorError) {
    return new JAXBElement(new QName("urn:vim25", "VolumeEditorErrorFault"), VolumeEditorError.class, null, paramVolumeEditorError);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MissingNetworkIpConfigFault")
  public JAXBElement<MissingNetworkIpConfig> createMissingNetworkIpConfigFault(MissingNetworkIpConfig paramMissingNetworkIpConfig) {
    return new JAXBElement(new QName("urn:vim25", "MissingNetworkIpConfigFault"), MissingNetworkIpConfig.class, null, paramMissingNetworkIpConfig);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageVMotionNotSupportedFault")
  public JAXBElement<StorageVMotionNotSupported> createStorageVMotionNotSupportedFault(StorageVMotionNotSupported paramStorageVMotionNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "StorageVMotionNotSupportedFault"), StorageVMotionNotSupported.class, null, paramStorageVMotionNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResetVM_Task")
  public JAXBElement<ResetVMRequestType> createResetVMTask(ResetVMRequestType paramResetVMRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ResetVM_Task"), ResetVMRequestType.class, null, paramResetVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAccessVmComponentFault")
  public JAXBElement<CannotAccessVmComponent> createCannotAccessVmComponentFault(CannotAccessVmComponent paramCannotAccessVmComponent) {
    return new JAXBElement(new QName("urn:vim25", "CannotAccessVmComponentFault"), CannotAccessVmComponent.class, null, paramCannotAccessVmComponent);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoGuestHeartbeatFault")
  public JAXBElement<NoGuestHeartbeat> createNoGuestHeartbeatFault(NoGuestHeartbeat paramNoGuestHeartbeat) {
    return new JAXBElement(new QName("urn:vim25", "NoGuestHeartbeatFault"), NoGuestHeartbeat.class, null, paramNoGuestHeartbeat);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteFileInGuest")
  public JAXBElement<DeleteFileInGuestRequestType> createDeleteFileInGuest(DeleteFileInGuestRequestType paramDeleteFileInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DeleteFileInGuest"), DeleteFileInGuestRequestType.class, null, paramDeleteFileInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfNoHostNicFault")
  public JAXBElement<OvfNoHostNic> createOvfNoHostNicFault(OvfNoHostNic paramOvfNoHostNic) {
    return new JAXBElement(new QName("urn:vim25", "OvfNoHostNicFault"), OvfNoHostNic.class, null, paramOvfNoHostNic);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AbortCustomization_Task")
  public JAXBElement<AbortCustomizationRequestType> createAbortCustomizationTask(AbortCustomizationRequestType paramAbortCustomizationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AbortCustomization_Task"), AbortCustomizationRequestType.class, null, paramAbortCustomizationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HasPrivilegeOnEntity")
  public JAXBElement<HasPrivilegeOnEntityRequestType> createHasPrivilegeOnEntity(HasPrivilegeOnEntityRequestType paramHasPrivilegeOnEntityRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HasPrivilegeOnEntity"), HasPrivilegeOnEntityRequestType.class, null, paramHasPrivilegeOnEntityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnexpectedElementFault")
  public JAXBElement<OvfUnexpectedElement> createOvfUnexpectedElementFault(OvfUnexpectedElement paramOvfUnexpectedElement) {
    return new JAXBElement(new QName("urn:vim25", "OvfUnexpectedElementFault"), OvfUnexpectedElement.class, null, paramOvfUnexpectedElement);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TooManyHostsFault")
  public JAXBElement<TooManyHosts> createTooManyHostsFault(TooManyHosts paramTooManyHosts) {
    return new JAXBElement(new QName("urn:vim25", "TooManyHostsFault"), TooManyHosts.class, null, paramTooManyHosts);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckForUpdates")
  public JAXBElement<CheckForUpdatesRequestType> createCheckForUpdates(CheckForUpdatesRequestType paramCheckForUpdatesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CheckForUpdates"), CheckForUpdatesRequestType.class, null, paramCheckForUpdatesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateDvsCapability")
  public JAXBElement<UpdateDvsCapabilityRequestType> createUpdateDvsCapability(UpdateDvsCapabilityRequestType paramUpdateDvsCapabilityRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateDvsCapability"), UpdateDvsCapabilityRequestType.class, null, paramUpdateDvsCapabilityRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateDescriptor")
  public JAXBElement<CreateDescriptorRequestType> createCreateDescriptor(CreateDescriptorRequestType paramCreateDescriptorRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateDescriptor"), CreateDescriptorRequestType.class, null, paramCreateDescriptorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "reloadVirtualMachineFromPath_Task")
  public JAXBElement<ReloadVirtualMachineFromPathRequestType> createReloadVirtualMachineFromPathTask(ReloadVirtualMachineFromPathRequestType paramReloadVirtualMachineFromPathRequestType) {
    return new JAXBElement(new QName("urn:vim25", "reloadVirtualMachineFromPath_Task"), ReloadVirtualMachineFromPathRequestType.class, null, paramReloadVirtualMachineFromPathRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryCmmds")
  public JAXBElement<QueryCmmdsRequestType> createQueryCmmds(QueryCmmdsRequestType paramQueryCmmdsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryCmmds"), QueryCmmdsRequestType.class, null, paramQueryCmmdsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LeaveCurrentDomain_Task")
  public JAXBElement<LeaveCurrentDomainRequestType> createLeaveCurrentDomainTask(LeaveCurrentDomainRequestType paramLeaveCurrentDomainRequestType) {
    return new JAXBElement(new QName("urn:vim25", "LeaveCurrentDomain_Task"), LeaveCurrentDomainRequestType.class, null, paramLeaveCurrentDomainRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AcquireCloneTicket")
  public JAXBElement<AcquireCloneTicketRequestType> createAcquireCloneTicket(AcquireCloneTicketRequestType paramAcquireCloneTicketRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AcquireCloneTicket"), AcquireCloneTicketRequestType.class, null, paramAcquireCloneTicketRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidProfileReferenceHostFault")
  public JAXBElement<InvalidProfileReferenceHost> createInvalidProfileReferenceHostFault(InvalidProfileReferenceHost paramInvalidProfileReferenceHost) {
    return new JAXBElement(new QName("urn:vim25", "InvalidProfileReferenceHostFault"), InvalidProfileReferenceHost.class, null, paramInvalidProfileReferenceHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LicenseEntityNotFoundFault")
  public JAXBElement<LicenseEntityNotFound> createLicenseEntityNotFoundFault(LicenseEntityNotFound paramLicenseEntityNotFound) {
    return new JAXBElement(new QName("urn:vim25", "LicenseEntityNotFoundFault"), LicenseEntityNotFound.class, null, paramLicenseEntityNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MismatchedBundleFault")
  public JAXBElement<MismatchedBundle> createMismatchedBundleFault(MismatchedBundle paramMismatchedBundle) {
    return new JAXBElement(new QName("urn:vim25", "MismatchedBundleFault"), MismatchedBundle.class, null, paramMismatchedBundle);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnmountVffsVolume")
  public JAXBElement<UnmountVffsVolumeRequestType> createUnmountVffsVolume(UnmountVffsVolumeRequestType paramUnmountVffsVolumeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UnmountVffsVolume"), UnmountVffsVolumeRequestType.class, null, paramUnmountVffsVolumeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidIpmiLoginInfoFault")
  public JAXBElement<InvalidIpmiLoginInfo> createInvalidIpmiLoginInfoFault(InvalidIpmiLoginInfo paramInvalidIpmiLoginInfo) {
    return new JAXBElement(new QName("urn:vim25", "InvalidIpmiLoginInfoFault"), InvalidIpmiLoginInfo.class, null, paramInvalidIpmiLoginInfo);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateVirtualDisk_Task")
  public JAXBElement<CreateVirtualDiskRequestType> createCreateVirtualDiskTask(CreateVirtualDiskRequestType paramCreateVirtualDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateVirtualDisk_Task"), CreateVirtualDiskRequestType.class, null, paramCreateVirtualDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnregisterAndDestroy_Task")
  public JAXBElement<UnregisterAndDestroyRequestType> createUnregisterAndDestroyTask(UnregisterAndDestroyRequestType paramUnregisterAndDestroyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UnregisterAndDestroy_Task"), UnregisterAndDestroyRequestType.class, null, paramUnregisterAndDestroyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateCluster")
  public JAXBElement<CreateClusterRequestType> createCreateCluster(CreateClusterRequestType paramCreateClusterRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateCluster"), CreateClusterRequestType.class, null, paramCreateClusterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplicationVmInProgressFaultFault")
  public JAXBElement<ReplicationVmInProgressFault> createReplicationVmInProgressFaultFault(ReplicationVmInProgressFault paramReplicationVmInProgressFault) {
    return new JAXBElement(new QName("urn:vim25", "ReplicationVmInProgressFaultFault"), ReplicationVmInProgressFault.class, null, paramReplicationVmInProgressFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateDiskPartitions")
  public JAXBElement<UpdateDiskPartitionsRequestType> createUpdateDiskPartitions(UpdateDiskPartitionsRequestType paramUpdateDiskPartitionsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateDiskPartitions"), UpdateDiskPartitionsRequestType.class, null, paramUpdateDiskPartitionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetScreenResolution")
  public JAXBElement<SetScreenResolutionRequestType> createSetScreenResolution(SetScreenResolutionRequestType paramSetScreenResolutionRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SetScreenResolution"), SetScreenResolutionRequestType.class, null, paramSetScreenResolutionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InaccessibleFTMetadataDatastoreFault")
  public JAXBElement<InaccessibleFTMetadataDatastore> createInaccessibleFTMetadataDatastoreFault(InaccessibleFTMetadataDatastore paramInaccessibleFTMetadataDatastore) {
    return new JAXBElement(new QName("urn:vim25", "InaccessibleFTMetadataDatastoreFault"), InaccessibleFTMetadataDatastore.class, null, paramInaccessibleFTMetadataDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ApplicationQuiesceFaultFault")
  public JAXBElement<ApplicationQuiesceFault> createApplicationQuiesceFaultFault(ApplicationQuiesceFault paramApplicationQuiesceFault) {
    return new JAXBElement(new QName("urn:vim25", "ApplicationQuiesceFaultFault"), ApplicationQuiesceFault.class, null, paramApplicationQuiesceFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MissingBmcSupportFault")
  public JAXBElement<MissingBmcSupport> createMissingBmcSupportFault(MissingBmcSupport paramMissingBmcSupport) {
    return new JAXBElement(new QName("urn:vim25", "MissingBmcSupportFault"), MissingBmcSupport.class, null, paramMissingBmcSupport);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RectifyDvsHost_Task")
  public JAXBElement<RectifyDvsHostRequestType> createRectifyDvsHostTask(RectifyDvsHostRequestType paramRectifyDvsHostRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RectifyDvsHost_Task"), RectifyDvsHostRequestType.class, null, paramRectifyDvsHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotChangeVsanClusterUuidFault")
  public JAXBElement<CannotChangeVsanClusterUuid> createCannotChangeVsanClusterUuidFault(CannotChangeVsanClusterUuid paramCannotChangeVsanClusterUuid) {
    return new JAXBElement(new QName("urn:vim25", "CannotChangeVsanClusterUuidFault"), CannotChangeVsanClusterUuid.class, null, paramCannotChangeVsanClusterUuid);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SSLDisabledFaultFault")
  public JAXBElement<SSLDisabledFault> createSSLDisabledFaultFault(SSLDisabledFault paramSSLDisabledFault) {
    return new JAXBElement(new QName("urn:vim25", "SSLDisabledFaultFault"), SSLDisabledFault.class, null, paramSSLDisabledFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidBundleFault")
  public JAXBElement<InvalidBundle> createInvalidBundleFault(InvalidBundle paramInvalidBundle) {
    return new JAXBElement(new QName("urn:vim25", "InvalidBundleFault"), InvalidBundle.class, null, paramInvalidBundle);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotChangeHaSettingsForFtSecondaryFault")
  public JAXBElement<CannotChangeHaSettingsForFtSecondary> createCannotChangeHaSettingsForFtSecondaryFault(CannotChangeHaSettingsForFtSecondary paramCannotChangeHaSettingsForFtSecondary) {
    return new JAXBElement(new QName("urn:vim25", "CannotChangeHaSettingsForFtSecondaryFault"), CannotChangeHaSettingsForFtSecondary.class, null, paramCannotChangeHaSettingsForFtSecondary);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DvsScopeViolatedFault")
  public JAXBElement<DvsScopeViolated> createDvsScopeViolatedFault(DvsScopeViolated paramDvsScopeViolated) {
    return new JAXBElement(new QName("urn:vim25", "DvsScopeViolatedFault"), DvsScopeViolated.class, null, paramDvsScopeViolated);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExportVm")
  public JAXBElement<ExportVmRequestType> createExportVm(ExportVmRequestType paramExportVmRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ExportVm"), ExportVmRequestType.class, null, paramExportVmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PlaceVm")
  public JAXBElement<PlaceVmRequestType> createPlaceVm(PlaceVmRequestType paramPlaceVmRequestType) {
    return new JAXBElement(new QName("urn:vim25", "PlaceVm"), PlaceVmRequestType.class, null, paramPlaceVmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "installDate")
  public JAXBElement<InstallDateRequestType> createInstallDate(InstallDateRequestType paramInstallDateRequestType) {
    return new JAXBElement(new QName("urn:vim25", "installDate"), InstallDateRequestType.class, null, paramInstallDateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConsumerCallbackFaultFault")
  public JAXBElement<OvfConsumerCallbackFault> createOvfConsumerCallbackFaultFault(OvfConsumerCallbackFault paramOvfConsumerCallbackFault) {
    return new JAXBElement(new QName("urn:vim25", "OvfConsumerCallbackFaultFault"), OvfConsumerCallbackFault.class, null, paramOvfConsumerCallbackFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PowerOnVApp_Task")
  public JAXBElement<PowerOnVAppRequestType> createPowerOnVAppTask(PowerOnVAppRequestType paramPowerOnVAppRequestType) {
    return new JAXBElement(new QName("urn:vim25", "PowerOnVApp_Task"), PowerOnVAppRequestType.class, null, paramPowerOnVAppRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveVirtualSwitch")
  public JAXBElement<RemoveVirtualSwitchRequestType> createRemoveVirtualSwitch(RemoveVirtualSwitchRequestType paramRemoveVirtualSwitchRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveVirtualSwitch"), RemoveVirtualSwitchRequestType.class, null, paramRemoveVirtualSwitchRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RecordReplayDisabledFault")
  public JAXBElement<RecordReplayDisabled> createRecordReplayDisabledFault(RecordReplayDisabled paramRecordReplayDisabled) {
    return new JAXBElement(new QName("urn:vim25", "RecordReplayDisabledFault"), RecordReplayDisabled.class, null, paramRecordReplayDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReadNextEvents")
  public JAXBElement<ReadNextEventsRequestType> createReadNextEvents(ReadNextEventsRequestType paramReadNextEventsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReadNextEvents"), ReadNextEventsRequestType.class, null, paramReadNextEventsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryCandidateNics")
  public JAXBElement<QueryCandidateNicsRequestType> createQueryCandidateNics(QueryCandidateNicsRequestType paramQueryCandidateNicsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryCandidateNics"), QueryCandidateNicsRequestType.class, null, paramQueryCandidateNicsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StartGuestNetwork_Task")
  public JAXBElement<StartGuestNetworkRequestType> createStartGuestNetworkTask(StartGuestNetworkRequestType paramStartGuestNetworkRequestType) {
    return new JAXBElement(new QName("urn:vim25", "StartGuestNetwork_Task"), StartGuestNetworkRequestType.class, null, paramStartGuestNetworkRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostConfigFailedFault")
  public JAXBElement<HostConfigFailed> createHostConfigFailedFault(HostConfigFailed paramHostConfigFailed) {
    return new JAXBElement(new QName("urn:vim25", "HostConfigFailedFault"), HostConfigFailed.class, null, paramHostConfigFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConnectedDeviceFloppyFault")
  public JAXBElement<OvfConnectedDeviceFloppy> createOvfConnectedDeviceFloppyFault(OvfConnectedDeviceFloppy paramOvfConnectedDeviceFloppy) {
    return new JAXBElement(new QName("urn:vim25", "OvfConnectedDeviceFloppyFault"), OvfConnectedDeviceFloppy.class, null, paramOvfConnectedDeviceFloppy);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateScheduledTask")
  public JAXBElement<CreateScheduledTaskRequestType> createCreateScheduledTask(CreateScheduledTaskRequestType paramCreateScheduledTaskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateScheduledTask"), CreateScheduledTaskRequestType.class, null, paramCreateScheduledTaskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureDvs_Task")
  public JAXBElement<ReconfigureDvsRequestType> createReconfigureDvsTask(ReconfigureDvsRequestType paramReconfigureDvsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReconfigureDvs_Task"), ReconfigureDvsRequestType.class, null, paramReconfigureDvsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnSupportedDatastoreForVFlashFault")
  public JAXBElement<UnSupportedDatastoreForVFlash> createUnSupportedDatastoreForVFlashFault(UnSupportedDatastoreForVFlash paramUnSupportedDatastoreForVFlash) {
    return new JAXBElement(new QName("urn:vim25", "UnSupportedDatastoreForVFlashFault"), UnSupportedDatastoreForVFlash.class, null, paramUnSupportedDatastoreForVFlash);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedDeviceBackingOptionFault")
  public JAXBElement<OvfUnsupportedDeviceBackingOption> createOvfUnsupportedDeviceBackingOptionFault(OvfUnsupportedDeviceBackingOption paramOvfUnsupportedDeviceBackingOption) {
    return new JAXBElement(new QName("urn:vim25", "OvfUnsupportedDeviceBackingOptionFault"), OvfUnsupportedDeviceBackingOption.class, null, paramOvfUnsupportedDeviceBackingOption);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplicationFaultFault")
  public JAXBElement<ReplicationFault> createReplicationFaultFault(ReplicationFault paramReplicationFault) {
    return new JAXBElement(new QName("urn:vim25", "ReplicationFaultFault"), ReplicationFault.class, null, paramReplicationFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateInternetScsiAdvancedOptions")
  public JAXBElement<UpdateInternetScsiAdvancedOptionsRequestType> createUpdateInternetScsiAdvancedOptions(UpdateInternetScsiAdvancedOptionsRequestType paramUpdateInternetScsiAdvancedOptionsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateInternetScsiAdvancedOptions"), UpdateInternetScsiAdvancedOptionsRequestType.class, null, paramUpdateInternetScsiAdvancedOptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VspanPortMoveFaultFault")
  public JAXBElement<VspanPortMoveFault> createVspanPortMoveFaultFault(VspanPortMoveFault paramVspanPortMoveFault) {
    return new JAXBElement(new QName("urn:vim25", "VspanPortMoveFaultFault"), VspanPortMoveFault.class, null, paramVspanPortMoveFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostInventoryFullFault")
  public JAXBElement<HostInventoryFull> createHostInventoryFullFault(HostInventoryFull paramHostInventoryFull) {
    return new JAXBElement(new QName("urn:vim25", "HostInventoryFullFault"), HostInventoryFull.class, null, paramHostInventoryFull);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientGraphicsResourcesFaultFault")
  public JAXBElement<InsufficientGraphicsResourcesFault> createInsufficientGraphicsResourcesFaultFault(InsufficientGraphicsResourcesFault paramInsufficientGraphicsResourcesFault) {
    return new JAXBElement(new QName("urn:vim25", "InsufficientGraphicsResourcesFaultFault"), InsufficientGraphicsResourcesFault.class, null, paramInsufficientGraphicsResourcesFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVmfsDatastoreCreateOptions")
  public JAXBElement<QueryVmfsDatastoreCreateOptionsRequestType> createQueryVmfsDatastoreCreateOptions(QueryVmfsDatastoreCreateOptionsRequestType paramQueryVmfsDatastoreCreateOptionsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryVmfsDatastoreCreateOptions"), QueryVmfsDatastoreCreateOptionsRequestType.class, null, paramQueryVmfsDatastoreCreateOptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidFormatFault")
  public JAXBElement<InvalidFormat> createInvalidFormatFault(InvalidFormat paramInvalidFormat) {
    return new JAXBElement(new QName("urn:vim25", "InvalidFormatFault"), InvalidFormat.class, null, paramInvalidFormat);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HttpNfcLeasePullFromUrls_Task")
  public JAXBElement<HttpNfcLeasePullFromUrlsRequestType> createHttpNfcLeasePullFromUrlsTask(HttpNfcLeasePullFromUrlsRequestType paramHttpNfcLeasePullFromUrlsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HttpNfcLeasePullFromUrls_Task"), HttpNfcLeasePullFromUrlsRequestType.class, null, paramHttpNfcLeasePullFromUrlsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotDisableDrsOnClustersWithVAppsFault")
  public JAXBElement<CannotDisableDrsOnClustersWithVApps> createCannotDisableDrsOnClustersWithVAppsFault(CannotDisableDrsOnClustersWithVApps paramCannotDisableDrsOnClustersWithVApps) {
    return new JAXBElement(new QName("urn:vim25", "CannotDisableDrsOnClustersWithVAppsFault"), CannotDisableDrsOnClustersWithVApps.class, null, paramCannotDisableDrsOnClustersWithVApps);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindChild")
  public JAXBElement<FindChildRequestType> createFindChild(FindChildRequestType paramFindChildRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FindChild"), FindChildRequestType.class, null, paramFindChildRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidFolderFault")
  public JAXBElement<InvalidFolder> createInvalidFolderFault(InvalidFolder paramInvalidFolder) {
    return new JAXBElement(new QName("urn:vim25", "InvalidFolderFault"), InvalidFolder.class, null, paramInvalidFolder);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SsdDiskNotAvailableFault")
  public JAXBElement<SsdDiskNotAvailable> createSsdDiskNotAvailableFault(SsdDiskNotAvailable paramSsdDiskNotAvailable) {
    return new JAXBElement(new QName("urn:vim25", "SsdDiskNotAvailableFault"), SsdDiskNotAvailable.class, null, paramSsdDiskNotAvailable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmFaultToleranceIssueFault")
  public JAXBElement<VmFaultToleranceIssue> createVmFaultToleranceIssueFault(VmFaultToleranceIssue paramVmFaultToleranceIssue) {
    return new JAXBElement(new QName("urn:vim25", "VmFaultToleranceIssueFault"), VmFaultToleranceIssue.class, null, paramVmFaultToleranceIssue);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GetSiteInfo")
  public JAXBElement<GetSiteInfoRequestType> createGetSiteInfo(GetSiteInfoRequestType paramGetSiteInfoRequestType) {
    return new JAXBElement(new QName("urn:vim25", "GetSiteInfo"), GetSiteInfoRequestType.class, null, paramGetSiteInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ConnectNvmeController")
  public JAXBElement<ConnectNvmeControllerRequestType> createConnectNvmeController(ConnectNvmeControllerRequestType paramConnectNvmeControllerRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ConnectNvmeController"), ConnectNvmeControllerRequestType.class, null, paramConnectNvmeControllerRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryAvailableSsds")
  public JAXBElement<QueryAvailableSsdsRequestType> createQueryAvailableSsds(QueryAvailableSsdsRequestType paramQueryAvailableSsdsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryAvailableSsds"), QueryAvailableSsdsRequestType.class, null, paramQueryAvailableSsdsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotMoveVmWithDeltaDiskFault")
  public JAXBElement<CannotMoveVmWithDeltaDisk> createCannotMoveVmWithDeltaDiskFault(CannotMoveVmWithDeltaDisk paramCannotMoveVmWithDeltaDisk) {
    return new JAXBElement(new QName("urn:vim25", "CannotMoveVmWithDeltaDiskFault"), CannotMoveVmWithDeltaDisk.class, null, paramCannotMoveVmWithDeltaDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientPerCpuCapacityFault")
  public JAXBElement<InsufficientPerCpuCapacity> createInsufficientPerCpuCapacityFault(InsufficientPerCpuCapacity paramInsufficientPerCpuCapacity) {
    return new JAXBElement(new QName("urn:vim25", "InsufficientPerCpuCapacityFault"), InsufficientPerCpuCapacity.class, null, paramInsufficientPerCpuCapacity);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfDuplicateElementFault")
  public JAXBElement<OvfDuplicateElement> createOvfDuplicateElementFault(OvfDuplicateElement paramOvfDuplicateElement) {
    return new JAXBElement(new QName("urn:vim25", "OvfDuplicateElementFault"), OvfDuplicateElement.class, null, paramOvfDuplicateElement);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddInternetScsiSendTargets")
  public JAXBElement<AddInternetScsiSendTargetsRequestType> createAddInternetScsiSendTargets(AddInternetScsiSendTargetsRequestType paramAddInternetScsiSendTargetsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AddInternetScsiSendTargets"), AddInternetScsiSendTargetsRequestType.class, null, paramAddInternetScsiSendTargetsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NetworkCopyFaultFault")
  public JAXBElement<NetworkCopyFault> createNetworkCopyFaultFault(NetworkCopyFault paramNetworkCopyFault) {
    return new JAXBElement(new QName("urn:vim25", "NetworkCopyFaultFault"), NetworkCopyFault.class, null, paramNetworkCopyFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UnregisterHealthUpdateProvider")
  public JAXBElement<UnregisterHealthUpdateProviderRequestType> createUnregisterHealthUpdateProvider(UnregisterHealthUpdateProviderRequestType paramUnregisterHealthUpdateProviderRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UnregisterHealthUpdateProvider"), UnregisterHealthUpdateProviderRequestType.class, null, paramUnregisterHealthUpdateProviderRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LargeRDMConversionNotSupportedFault")
  public JAXBElement<LargeRDMConversionNotSupported> createLargeRDMConversionNotSupportedFault(LargeRDMConversionNotSupported paramLargeRDMConversionNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "LargeRDMConversionNotSupportedFault"), LargeRDMConversionNotSupported.class, null, paramLargeRDMConversionNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MemorySnapshotOnIndependentDiskFault")
  public JAXBElement<MemorySnapshotOnIndependentDisk> createMemorySnapshotOnIndependentDiskFault(MemorySnapshotOnIndependentDisk paramMemorySnapshotOnIndependentDisk) {
    return new JAXBElement(new QName("urn:vim25", "MemorySnapshotOnIndependentDiskFault"), MemorySnapshotOnIndependentDisk.class, null, paramMemorySnapshotOnIndependentDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConnectedDeviceFault")
  public JAXBElement<OvfConnectedDevice> createOvfConnectedDeviceFault(OvfConnectedDevice paramOvfConnectedDevice) {
    return new JAXBElement(new QName("urn:vim25", "OvfConnectedDeviceFault"), OvfConnectedDevice.class, null, paramOvfConnectedDevice);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LicenseKeyEntityMismatchFault")
  public JAXBElement<LicenseKeyEntityMismatch> createLicenseKeyEntityMismatchFault(LicenseKeyEntityMismatch paramLicenseKeyEntityMismatch) {
    return new JAXBElement(new QName("urn:vim25", "LicenseKeyEntityMismatchFault"), LicenseKeyEntityMismatch.class, null, paramLicenseKeyEntityMismatch);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateIpmi")
  public JAXBElement<UpdateIpmiRequestType> createUpdateIpmi(UpdateIpmiRequestType paramUpdateIpmiRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateIpmi"), UpdateIpmiRequestType.class, null, paramUpdateIpmiRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExtendDisk_Task")
  public JAXBElement<ExtendDiskRequestType> createExtendDiskTask(ExtendDiskRequestType paramExtendDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ExtendDisk_Task"), ExtendDiskRequestType.class, null, paramExtendDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RescanHba")
  public JAXBElement<RescanHbaRequestType> createRescanHba(RescanHbaRequestType paramRescanHbaRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RescanHba"), RescanHbaRequestType.class, null, paramRescanHbaRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnableToExportDiskFault")
  public JAXBElement<OvfUnableToExportDisk> createOvfUnableToExportDiskFault(OvfUnableToExportDisk paramOvfUnableToExportDisk) {
    return new JAXBElement(new QName("urn:vim25", "OvfUnableToExportDiskFault"), OvfUnableToExportDisk.class, null, paramOvfUnableToExportDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveClientCert")
  public JAXBElement<RetrieveClientCertRequestType> createRetrieveClientCert(RetrieveClientCertRequestType paramRetrieveClientCertRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveClientCert"), RetrieveClientCertRequestType.class, null, paramRetrieveClientCertRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TerminateSession")
  public JAXBElement<TerminateSessionRequestType> createTerminateSession(TerminateSessionRequestType paramTerminateSessionRequestType) {
    return new JAXBElement(new QName("urn:vim25", "TerminateSession"), TerminateSessionRequestType.class, null, paramTerminateSessionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidIndexArgumentFault")
  public JAXBElement<InvalidIndexArgument> createInvalidIndexArgumentFault(InvalidIndexArgument paramInvalidIndexArgument) {
    return new JAXBElement(new QName("urn:vim25", "InvalidIndexArgumentFault"), InvalidIndexArgument.class, null, paramInvalidIndexArgument);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AdminNotDisabledFault")
  public JAXBElement<AdminNotDisabled> createAdminNotDisabledFault(AdminNotDisabled paramAdminNotDisabled) {
    return new JAXBElement(new QName("urn:vim25", "AdminNotDisabledFault"), AdminNotDisabled.class, null, paramAdminNotDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureDatacenter_Task")
  public JAXBElement<ReconfigureDatacenterRequestType> createReconfigureDatacenterTask(ReconfigureDatacenterRequestType paramReconfigureDatacenterRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReconfigureDatacenter_Task"), ReconfigureDatacenterRequestType.class, null, paramReconfigureDatacenterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryHostsWithAttachedLun")
  public JAXBElement<QueryHostsWithAttachedLunRequestType> createQueryHostsWithAttachedLun(QueryHostsWithAttachedLunRequestType paramQueryHostsWithAttachedLunRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryHostsWithAttachedLun"), QueryHostsWithAttachedLunRequestType.class, null, paramQueryHostsWithAttachedLunRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeviceControllerNotSupportedFault")
  public JAXBElement<DeviceControllerNotSupported> createDeviceControllerNotSupportedFault(DeviceControllerNotSupported paramDeviceControllerNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "DeviceControllerNotSupportedFault"), DeviceControllerNotSupported.class, null, paramDeviceControllerNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SharedBusControllerNotSupportedFault")
  public JAXBElement<SharedBusControllerNotSupported> createSharedBusControllerNotSupportedFault(SharedBusControllerNotSupported paramSharedBusControllerNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "SharedBusControllerNotSupportedFault"), SharedBusControllerNotSupported.class, null, paramSharedBusControllerNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsRelocateDisabledFault")
  public JAXBElement<StorageDrsRelocateDisabled> createStorageDrsRelocateDisabledFault(StorageDrsRelocateDisabled paramStorageDrsRelocateDisabled) {
    return new JAXBElement(new QName("urn:vim25", "StorageDrsRelocateDisabledFault"), StorageDrsRelocateDisabled.class, null, paramStorageDrsRelocateDisabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MoveInto_Task")
  public JAXBElement<MoveIntoRequestType> createMoveIntoTask(MoveIntoRequestType paramMoveIntoRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MoveInto_Task"), MoveIntoRequestType.class, null, paramMoveIntoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UncommittedUndoableDiskFault")
  public JAXBElement<UncommittedUndoableDisk> createUncommittedUndoableDiskFault(UncommittedUndoableDisk paramUncommittedUndoableDisk) {
    return new JAXBElement(new QName("urn:vim25", "UncommittedUndoableDiskFault"), UncommittedUndoableDisk.class, null, paramUncommittedUndoableDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteDirectoryInGuest")
  public JAXBElement<DeleteDirectoryInGuestRequestType> createDeleteDirectoryInGuest(DeleteDirectoryInGuestRequestType paramDeleteDirectoryInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DeleteDirectoryInGuest"), DeleteDirectoryInGuestRequestType.class, null, paramDeleteDirectoryInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "getVchaConfig")
  public JAXBElement<GetVchaConfigRequestType> createGetVchaConfig(GetVchaConfigRequestType paramGetVchaConfigRequestType) {
    return new JAXBElement(new QName("urn:vim25", "getVchaConfig"), GetVchaConfigRequestType.class, null, paramGetVchaConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "WakeOnLanNotSupportedFault")
  public JAXBElement<WakeOnLanNotSupported> createWakeOnLanNotSupportedFault(WakeOnLanNotSupported paramWakeOnLanNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "WakeOnLanNotSupportedFault"), WakeOnLanNotSupported.class, null, paramWakeOnLanNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DiscoverFcoeHbas")
  public JAXBElement<DiscoverFcoeHbasRequestType> createDiscoverFcoeHbas(DiscoverFcoeHbasRequestType paramDiscoverFcoeHbasRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DiscoverFcoeHbas"), DiscoverFcoeHbasRequestType.class, null, paramDiscoverFcoeHbasRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindExtension")
  public JAXBElement<FindExtensionRequestType> createFindExtension(FindExtensionRequestType paramFindExtensionRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FindExtension"), FindExtensionRequestType.class, null, paramFindExtensionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAccessVmDiskFault")
  public JAXBElement<CannotAccessVmDisk> createCannotAccessVmDiskFault(CannotAccessVmDisk paramCannotAccessVmDisk) {
    return new JAXBElement(new QName("urn:vim25", "CannotAccessVmDiskFault"), CannotAccessVmDisk.class, null, paramCannotAccessVmDisk);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidControllerFault")
  public JAXBElement<InvalidController> createInvalidControllerFault(InvalidController paramInvalidController) {
    return new JAXBElement(new QName("urn:vim25", "InvalidControllerFault"), InvalidController.class, null, paramInvalidController);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshRuntime")
  public JAXBElement<RefreshRuntimeRequestType> createRefreshRuntime(RefreshRuntimeRequestType paramRefreshRuntimeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RefreshRuntime"), RefreshRuntimeRequestType.class, null, paramRefreshRuntimeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestPermissionDeniedFault")
  public JAXBElement<GuestPermissionDenied> createGuestPermissionDeniedFault(GuestPermissionDenied paramGuestPermissionDenied) {
    return new JAXBElement(new QName("urn:vim25", "GuestPermissionDeniedFault"), GuestPermissionDenied.class, null, paramGuestPermissionDenied);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfMappedOsIdFault")
  public JAXBElement<OvfMappedOsId> createOvfMappedOsIdFault(OvfMappedOsId paramOvfMappedOsId) {
    return new JAXBElement(new QName("urn:vim25", "OvfMappedOsIdFault"), OvfMappedOsId.class, null, paramOvfMappedOsId);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MoveFileInGuest")
  public JAXBElement<MoveFileInGuestRequestType> createMoveFileInGuest(MoveFileInGuestRequestType paramMoveFileInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MoveFileInGuest"), MoveFileInGuestRequestType.class, null, paramMoveFileInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CopyDatastoreFile_Task")
  public JAXBElement<CopyDatastoreFileRequestType> createCopyDatastoreFileTask(CopyDatastoreFileRequestType paramCopyDatastoreFileRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CopyDatastoreFile_Task"), CopyDatastoreFileRequestType.class, null, paramCopyDatastoreFileRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EvacuateVsanNode_Task")
  public JAXBElement<EvacuateVsanNodeRequestType> createEvacuateVsanNodeTask(EvacuateVsanNodeRequestType paramEvacuateVsanNodeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "EvacuateVsanNode_Task"), EvacuateVsanNodeRequestType.class, null, paramEvacuateVsanNodeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveUserGroups")
  public JAXBElement<RetrieveUserGroupsRequestType> createRetrieveUserGroups(RetrieveUserGroupsRequestType paramRetrieveUserGroupsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveUserGroups"), RetrieveUserGroupsRequestType.class, null, paramRetrieveUserGroupsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateDVS_Task")
  public JAXBElement<CreateDVSRequestType> createCreateDVSTask(CreateDVSRequestType paramCreateDVSRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateDVS_Task"), CreateDVSRequestType.class, null, paramCreateDVSRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultVnicInUseFault")
  public JAXBElement<IscsiFaultVnicInUse> createIscsiFaultVnicInUseFault(IscsiFaultVnicInUse paramIscsiFaultVnicInUse) {
    return new JAXBElement(new QName("urn:vim25", "IscsiFaultVnicInUseFault"), IscsiFaultVnicInUse.class, null, paramIscsiFaultVnicInUse);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "BlockedByFirewallFault")
  public JAXBElement<BlockedByFirewall> createBlockedByFirewallFault(BlockedByFirewall paramBlockedByFirewall) {
    return new JAXBElement(new QName("urn:vim25", "BlockedByFirewallFault"), BlockedByFirewall.class, null, paramBlockedByFirewall);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryObjectsOnPhysicalVsanDisk")
  public JAXBElement<QueryObjectsOnPhysicalVsanDiskRequestType> createQueryObjectsOnPhysicalVsanDisk(QueryObjectsOnPhysicalVsanDiskRequestType paramQueryObjectsOnPhysicalVsanDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryObjectsOnPhysicalVsanDisk"), QueryObjectsOnPhysicalVsanDiskRequestType.class, null, paramQueryObjectsOnPhysicalVsanDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveVStorageInfrastructureObjectPolicy")
  public JAXBElement<RetrieveVStorageInfrastructureObjectPolicyRequestType> createRetrieveVStorageInfrastructureObjectPolicy(RetrieveVStorageInfrastructureObjectPolicyRequestType paramRetrieveVStorageInfrastructureObjectPolicyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveVStorageInfrastructureObjectPolicy"), RetrieveVStorageInfrastructureObjectPolicyRequestType.class, null, paramRetrieveVStorageInfrastructureObjectPolicyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdatePortGroup")
  public JAXBElement<UpdatePortGroupRequestType> createUpdatePortGroup(UpdatePortGroupRequestType paramUpdatePortGroupRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdatePortGroup"), UpdatePortGroupRequestType.class, null, paramUpdatePortGroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CryptoManagerHostEnable")
  public JAXBElement<CryptoManagerHostEnableRequestType> createCryptoManagerHostEnable(CryptoManagerHostEnableRequestType paramCryptoManagerHostEnableRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CryptoManagerHostEnable"), CryptoManagerHostEnableRequestType.class, null, paramCryptoManagerHostEnableRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SecondaryVmAlreadyEnabledFault")
  public JAXBElement<SecondaryVmAlreadyEnabled> createSecondaryVmAlreadyEnabledFault(SecondaryVmAlreadyEnabled paramSecondaryVmAlreadyEnabled) {
    return new JAXBElement(new QName("urn:vim25", "SecondaryVmAlreadyEnabledFault"), SecondaryVmAlreadyEnabled.class, null, paramSecondaryVmAlreadyEnabled);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CancelRetrievePropertiesEx")
  public JAXBElement<CancelRetrievePropertiesExRequestType> createCancelRetrievePropertiesEx(CancelRetrievePropertiesExRequestType paramCancelRetrievePropertiesExRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CancelRetrievePropertiesEx"), CancelRetrievePropertiesExRequestType.class, null, paramCancelRetrievePropertiesExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostGetVFlashModuleDefaultConfig")
  public JAXBElement<HostGetVFlashModuleDefaultConfigRequestType> createHostGetVFlashModuleDefaultConfig(HostGetVFlashModuleDefaultConfigRequestType paramHostGetVFlashModuleDefaultConfigRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostGetVFlashModuleDefaultConfig"), HostGetVFlashModuleDefaultConfigRequestType.class, null, paramHostGetVFlashModuleDefaultConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateNvdimmNamespace_Task")
  public JAXBElement<CreateNvdimmNamespaceRequestType> createCreateNvdimmNamespaceTask(CreateNvdimmNamespaceRequestType paramCreateNvdimmNamespaceRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateNvdimmNamespace_Task"), CreateNvdimmNamespaceRequestType.class, null, paramCreateNvdimmNamespaceRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RestoreFirmwareConfiguration")
  public JAXBElement<RestoreFirmwareConfigurationRequestType> createRestoreFirmwareConfiguration(RestoreFirmwareConfigurationRequestType paramRestoreFirmwareConfigurationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RestoreFirmwareConfiguration"), RestoreFirmwareConfigurationRequestType.class, null, paramRestoreFirmwareConfigurationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MoveIntoResourcePool")
  public JAXBElement<MoveIntoResourcePoolRequestType> createMoveIntoResourcePool(MoveIntoResourcePoolRequestType paramMoveIntoResourcePoolRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MoveIntoResourcePool"), MoveIntoResourcePoolRequestType.class, null, paramMoveIntoResourcePoolRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnableClusteredVmdkSupport")
  public JAXBElement<EnableClusteredVmdkSupportRequestType> createEnableClusteredVmdkSupport(EnableClusteredVmdkSupportRequestType paramEnableClusteredVmdkSupportRequestType) {
    return new JAXBElement(new QName("urn:vim25", "EnableClusteredVmdkSupport"), EnableClusteredVmdkSupportRequestType.class, null, paramEnableClusteredVmdkSupportRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PowerOffVApp_Task")
  public JAXBElement<PowerOffVAppRequestType> createPowerOffVAppTask(PowerOffVAppRequestType paramPowerOffVAppRequestType) {
    return new JAXBElement(new QName("urn:vim25", "PowerOffVApp_Task"), PowerOffVAppRequestType.class, null, paramPowerOffVAppRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ClearTriggeredAlarms")
  public JAXBElement<ClearTriggeredAlarmsRequestType> createClearTriggeredAlarms(ClearTriggeredAlarmsRequestType paramClearTriggeredAlarmsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ClearTriggeredAlarms"), ClearTriggeredAlarmsRequestType.class, null, paramClearTriggeredAlarmsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryFilterInfoIds")
  public JAXBElement<QueryFilterInfoIdsRequestType> createQueryFilterInfoIds(QueryFilterInfoIdsRequestType paramQueryFilterInfoIdsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryFilterInfoIds"), QueryFilterInfoIdsRequestType.class, null, paramQueryFilterInfoIdsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IscsiFaultVnicHasMultipleUplinksFault")
  public JAXBElement<IscsiFaultVnicHasMultipleUplinks> createIscsiFaultVnicHasMultipleUplinksFault(IscsiFaultVnicHasMultipleUplinks paramIscsiFaultVnicHasMultipleUplinks) {
    return new JAXBElement(new QName("urn:vim25", "IscsiFaultVnicHasMultipleUplinksFault"), IscsiFaultVnicHasMultipleUplinks.class, null, paramIscsiFaultVnicHasMultipleUplinks);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DVPortNotSupportedFault")
  public JAXBElement<DVPortNotSupported> createDVPortNotSupportedFault(DVPortNotSupported paramDVPortNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "DVPortNotSupportedFault"), DVPortNotSupported.class, null, paramDVPortNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveKey")
  public JAXBElement<RemoveKeyRequestType> createRemoveKey(RemoveKeyRequestType paramRemoveKeyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveKey"), RemoveKeyRequestType.class, null, paramRemoveKeyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetEntityPermissions")
  public JAXBElement<SetEntityPermissionsRequestType> createSetEntityPermissions(SetEntityPermissionsRequestType paramSetEntityPermissionsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SetEntityPermissions"), SetEntityPermissionsRequestType.class, null, paramSetEntityPermissionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryLicenseUsage")
  public JAXBElement<QueryLicenseUsageRequestType> createQueryLicenseUsage(QueryLicenseUsageRequestType paramQueryLicenseUsageRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryLicenseUsage"), QueryLicenseUsageRequestType.class, null, paramQueryLicenseUsageRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FaultToleranceCpuIncompatibleFault")
  public JAXBElement<FaultToleranceCpuIncompatible> createFaultToleranceCpuIncompatibleFault(FaultToleranceCpuIncompatible paramFaultToleranceCpuIncompatible) {
    return new JAXBElement(new QName("urn:vim25", "FaultToleranceCpuIncompatibleFault"), FaultToleranceCpuIncompatible.class, null, paramFaultToleranceCpuIncompatible);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ChangeNFSUserPassword")
  public JAXBElement<ChangeNFSUserPasswordRequestType> createChangeNFSUserPassword(ChangeNFSUserPasswordRequestType paramChangeNFSUserPasswordRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ChangeNFSUserPassword"), ChangeNFSUserPasswordRequestType.class, null, paramChangeNFSUserPasswordRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GetCustomizationSpec")
  public JAXBElement<GetCustomizationSpecRequestType> createGetCustomizationSpec(GetCustomizationSpecRequestType paramGetCustomizationSpecRequestType) {
    return new JAXBElement(new QName("urn:vim25", "GetCustomizationSpec"), GetCustomizationSpecRequestType.class, null, paramGetCustomizationSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotCopyNotSupportedFault")
  public JAXBElement<SnapshotCopyNotSupported> createSnapshotCopyNotSupportedFault(SnapshotCopyNotSupported paramSnapshotCopyNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "SnapshotCopyNotSupportedFault"), SnapshotCopyNotSupported.class, null, paramSnapshotCopyNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "BatchAddHostsToCluster_Task")
  public JAXBElement<BatchAddHostsToClusterRequestType> createBatchAddHostsToClusterTask(BatchAddHostsToClusterRequestType paramBatchAddHostsToClusterRequestType) {
    return new JAXBElement(new QName("urn:vim25", "BatchAddHostsToCluster_Task"), BatchAddHostsToClusterRequestType.class, null, paramBatchAddHostsToClusterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryConnectionInfo")
  public JAXBElement<QueryConnectionInfoRequestType> createQueryConnectionInfo(QueryConnectionInfoRequestType paramQueryConnectionInfoRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryConnectionInfo"), QueryConnectionInfoRequestType.class, null, paramQueryConnectionInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmFaultToleranceOpIssuesListFault")
  public JAXBElement<VmFaultToleranceOpIssuesList> createVmFaultToleranceOpIssuesListFault(VmFaultToleranceOpIssuesList paramVmFaultToleranceOpIssuesList) {
    return new JAXBElement(new QName("urn:vim25", "VmFaultToleranceOpIssuesListFault"), VmFaultToleranceOpIssuesList.class, null, paramVmFaultToleranceOpIssuesList);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "WillModifyConfigCpuRequirementsFault")
  public JAXBElement<WillModifyConfigCpuRequirements> createWillModifyConfigCpuRequirementsFault(WillModifyConfigCpuRequirements paramWillModifyConfigCpuRequirements) {
    return new JAXBElement(new QName("urn:vim25", "WillModifyConfigCpuRequirementsFault"), WillModifyConfigCpuRequirements.class, null, paramWillModifyConfigCpuRequirements);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfUnsupportedPackageFault")
  public JAXBElement<OvfUnsupportedPackage> createOvfUnsupportedPackageFault(OvfUnsupportedPackage paramOvfUnsupportedPackage) {
    return new JAXBElement(new QName("urn:vim25", "OvfUnsupportedPackageFault"), OvfUnsupportedPackage.class, null, paramOvfUnsupportedPackage);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostPowerOpFailedFault")
  public JAXBElement<HostPowerOpFailed> createHostPowerOpFailedFault(HostPowerOpFailed paramHostPowerOpFailed) {
    return new JAXBElement(new QName("urn:vim25", "HostPowerOpFailedFault"), HostPowerOpFailed.class, null, paramHostPowerOpFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMotionLinkCapacityLowFault")
  public JAXBElement<VMotionLinkCapacityLow> createVMotionLinkCapacityLowFault(VMotionLinkCapacityLow paramVMotionLinkCapacityLow) {
    return new JAXBElement(new QName("urn:vim25", "VMotionLinkCapacityLowFault"), VMotionLinkCapacityLow.class, null, paramVMotionLinkCapacityLow);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CollectorAddressUnsetFault")
  public JAXBElement<CollectorAddressUnset> createCollectorAddressUnsetFault(CollectorAddressUnset paramCollectorAddressUnset) {
    return new JAXBElement(new QName("urn:vim25", "CollectorAddressUnsetFault"), CollectorAddressUnset.class, null, paramCollectorAddressUnset);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveMonitoredEntities")
  public JAXBElement<RemoveMonitoredEntitiesRequestType> createRemoveMonitoredEntities(RemoveMonitoredEntitiesRequestType paramRemoveMonitoredEntitiesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveMonitoredEntities"), RemoveMonitoredEntitiesRequestType.class, null, paramRemoveMonitoredEntitiesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RevertToSnapshot_Task")
  public JAXBElement<RevertToSnapshotRequestType> createRevertToSnapshotTask(RevertToSnapshotRequestType paramRevertToSnapshotRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RevertToSnapshot_Task"), RevertToSnapshotRequestType.class, null, paramRevertToSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsStaleHmsCollectionFault")
  public JAXBElement<StorageDrsStaleHmsCollection> createStorageDrsStaleHmsCollectionFault(StorageDrsStaleHmsCollection paramStorageDrsStaleHmsCollection) {
    return new JAXBElement(new QName("urn:vim25", "StorageDrsStaleHmsCollectionFault"), StorageDrsStaleHmsCollection.class, null, paramStorageDrsStaleHmsCollection);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidTypeFault")
  public JAXBElement<InvalidType> createInvalidTypeFault(InvalidType paramInvalidType) {
    return new JAXBElement(new QName("urn:vim25", "InvalidTypeFault"), InvalidType.class, null, paramInvalidType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SelectVnicForNicType")
  public JAXBElement<SelectVnicForNicTypeRequestType> createSelectVnicForNicType(SelectVnicForNicTypeRequestType paramSelectVnicForNicTypeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SelectVnicForNicType"), SelectVnicForNicTypeRequestType.class, null, paramSelectVnicForNicTypeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VAppPropertyFaultFault")
  public JAXBElement<VAppPropertyFault> createVAppPropertyFaultFault(VAppPropertyFault paramVAppPropertyFault) {
    return new JAXBElement(new QName("urn:vim25", "VAppPropertyFaultFault"), VAppPropertyFault.class, null, paramVAppPropertyFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ManagedObjectNotFoundFault")
  public JAXBElement<ManagedObjectNotFound> createManagedObjectNotFoundFault(ManagedObjectNotFound paramManagedObjectNotFound) {
    return new JAXBElement(new QName("urn:vim25", "ManagedObjectNotFoundFault"), ManagedObjectNotFound.class, null, paramManagedObjectNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryIoFilterIssues")
  public JAXBElement<QueryIoFilterIssuesRequestType> createQueryIoFilterIssues(QueryIoFilterIssuesRequestType paramQueryIoFilterIssuesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryIoFilterIssues"), QueryIoFilterIssuesRequestType.class, null, paramQueryIoFilterIssuesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckMigrate_Task")
  public JAXBElement<CheckMigrateRequestType> createCheckMigrateTask(CheckMigrateRequestType paramCheckMigrateRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CheckMigrate_Task"), CheckMigrateRequestType.class, null, paramCheckMigrateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VspanSameSessionPortConflictFault")
  public JAXBElement<VspanSameSessionPortConflict> createVspanSameSessionPortConflictFault(VspanSameSessionPortConflict paramVspanSameSessionPortConflict) {
    return new JAXBElement(new QName("urn:vim25", "VspanSameSessionPortConflictFault"), VspanSameSessionPortConflict.class, null, paramVspanSameSessionPortConflict);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HttpFaultFault")
  public JAXBElement<HttpFault> createHttpFaultFault(HttpFault paramHttpFault) {
    return new JAXBElement(new QName("urn:vim25", "HttpFaultFault"), HttpFault.class, null, paramHttpFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CpuIncompatibleFault")
  public JAXBElement<CpuIncompatible> createCpuIncompatibleFault(CpuIncompatible paramCpuIncompatible) {
    return new JAXBElement(new QName("urn:vim25", "CpuIncompatibleFault"), CpuIncompatible.class, null, paramCpuIncompatible);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostVStorageObjectCreateSnapshot_Task")
  public JAXBElement<HostVStorageObjectCreateSnapshotRequestType> createHostVStorageObjectCreateSnapshotTask(HostVStorageObjectCreateSnapshotRequestType paramHostVStorageObjectCreateSnapshotRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostVStorageObjectCreateSnapshot_Task"), HostVStorageObjectCreateSnapshotRequestType.class, null, paramHostVStorageObjectCreateSnapshotRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotFoundFault")
  public JAXBElement<NotFound> createNotFoundFault(NotFound paramNotFound) {
    return new JAXBElement(new QName("urn:vim25", "NotFoundFault"), NotFound.class, null, paramNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostInDomainFault")
  public JAXBElement<HostInDomain> createHostInDomainFault(HostInDomain paramHostInDomain) {
    return new JAXBElement(new QName("urn:vim25", "HostInDomainFault"), HostInDomain.class, null, paramHostInDomain);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateDVSHealthCheckConfig_Task")
  public JAXBElement<UpdateDVSHealthCheckConfigRequestType> createUpdateDVSHealthCheckConfigTask(UpdateDVSHealthCheckConfigRequestType paramUpdateDVSHealthCheckConfigRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateDVSHealthCheckConfig_Task"), UpdateDVSHealthCheckConfigRequestType.class, null, paramUpdateDVSHealthCheckConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpgradeVmLayout")
  public JAXBElement<UpgradeVmLayoutRequestType> createUpgradeVmLayout(UpgradeVmLayoutRequestType paramUpgradeVmLayoutRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpgradeVmLayout"), UpgradeVmLayoutRequestType.class, null, paramUpgradeVmLayoutRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "IpHostnameGeneratorErrorFault")
  public JAXBElement<IpHostnameGeneratorError> createIpHostnameGeneratorErrorFault(IpHostnameGeneratorError paramIpHostnameGeneratorError) {
    return new JAXBElement(new QName("urn:vim25", "IpHostnameGeneratorErrorFault"), IpHostnameGeneratorError.class, null, paramIpHostnameGeneratorError);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GetVsanObjExtAttrs")
  public JAXBElement<GetVsanObjExtAttrsRequestType> createGetVsanObjExtAttrs(GetVsanObjExtAttrsRequestType paramGetVsanObjExtAttrsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "GetVsanObjExtAttrs"), GetVsanObjExtAttrsRequestType.class, null, paramGetVsanObjExtAttrsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidDeviceSpecFault")
  public JAXBElement<InvalidDeviceSpec> createInvalidDeviceSpecFault(InvalidDeviceSpec paramInvalidDeviceSpec) {
    return new JAXBElement(new QName("urn:vim25", "InvalidDeviceSpecFault"), InvalidDeviceSpec.class, null, paramInvalidDeviceSpec);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NotSupportedHostForChecksumFault")
  public JAXBElement<NotSupportedHostForChecksum> createNotSupportedHostForChecksumFault(NotSupportedHostForChecksum paramNotSupportedHostForChecksum) {
    return new JAXBElement(new QName("urn:vim25", "NotSupportedHostForChecksumFault"), NotSupportedHostForChecksum.class, null, paramNotSupportedHostForChecksum);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NetworkDisruptedAndConfigRolledBackFault")
  public JAXBElement<NetworkDisruptedAndConfigRolledBack> createNetworkDisruptedAndConfigRolledBackFault(NetworkDisruptedAndConfigRolledBack paramNetworkDisruptedAndConfigRolledBack) {
    return new JAXBElement(new QName("urn:vim25", "NetworkDisruptedAndConfigRolledBackFault"), NetworkDisruptedAndConfigRolledBack.class, null, paramNetworkDisruptedAndConfigRolledBack);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LicenseExpiredFault")
  public JAXBElement<LicenseExpired> createLicenseExpiredFault(LicenseExpired paramLicenseExpired) {
    return new JAXBElement(new QName("urn:vim25", "LicenseExpiredFault"), LicenseExpired.class, null, paramLicenseExpired);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidGuestLoginFault")
  public JAXBElement<InvalidGuestLogin> createInvalidGuestLoginFault(InvalidGuestLogin paramInvalidGuestLogin) {
    return new JAXBElement(new QName("urn:vim25", "InvalidGuestLoginFault"), InvalidGuestLogin.class, null, paramInvalidGuestLogin);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveSnapshotInfo")
  public JAXBElement<RetrieveSnapshotInfoRequestType> createRetrieveSnapshotInfo(RetrieveSnapshotInfoRequestType paramRetrieveSnapshotInfoRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveSnapshotInfo"), RetrieveSnapshotInfoRequestType.class, null, paramRetrieveSnapshotInfoRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LookupVmOverheadMemory")
  public JAXBElement<LookupVmOverheadMemoryRequestType> createLookupVmOverheadMemory(LookupVmOverheadMemoryRequestType paramLookupVmOverheadMemoryRequestType) {
    return new JAXBElement(new QName("urn:vim25", "LookupVmOverheadMemory"), LookupVmOverheadMemoryRequestType.class, null, paramLookupVmOverheadMemoryRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RewindCollector")
  public JAXBElement<RewindCollectorRequestType> createRewindCollector(RewindCollectorRequestType paramRewindCollectorRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RewindCollector"), RewindCollectorRequestType.class, null, paramRewindCollectorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotDecryptPasswordsFault")
  public JAXBElement<CannotDecryptPasswords> createCannotDecryptPasswordsFault(CannotDecryptPasswords paramCannotDecryptPasswords) {
    return new JAXBElement(new QName("urn:vim25", "CannotDecryptPasswordsFault"), CannotDecryptPasswords.class, null, paramCannotDecryptPasswords);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PatchMetadataInvalidFault")
  public JAXBElement<PatchMetadataInvalid> createPatchMetadataInvalidFault(PatchMetadataInvalid paramPatchMetadataInvalid) {
    return new JAXBElement(new QName("urn:vim25", "PatchMetadataInvalidFault"), PatchMetadataInvalid.class, null, paramPatchMetadataInvalid);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExtendVffs")
  public JAXBElement<ExtendVffsRequestType> createExtendVffs(ExtendVffsRequestType paramExtendVffsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ExtendVffs"), ExtendVffsRequestType.class, null, paramExtendVffsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddPortGroup")
  public JAXBElement<AddPortGroupRequestType> createAddPortGroup(AddPortGroupRequestType paramAddPortGroupRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AddPortGroup"), AddPortGroupRequestType.class, null, paramAddPortGroupRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CloneSession")
  public JAXBElement<CloneSessionRequestType> createCloneSession(CloneSessionRequestType paramCloneSessionRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CloneSession"), CloneSessionRequestType.class, null, paramCloneSessionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidVmConfigFault")
  public JAXBElement<InvalidVmConfig> createInvalidVmConfigFault(InvalidVmConfig paramInvalidVmConfig) {
    return new JAXBElement(new QName("urn:vim25", "InvalidVmConfigFault"), InvalidVmConfig.class, null, paramInvalidVmConfig);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfHostResourceConstraintFault")
  public JAXBElement<OvfHostResourceConstraint> createOvfHostResourceConstraintFault(OvfHostResourceConstraint paramOvfHostResourceConstraint) {
    return new JAXBElement(new QName("urn:vim25", "OvfHostResourceConstraintFault"), OvfHostResourceConstraint.class, null, paramOvfHostResourceConstraint);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MismatchedNetworkPoliciesFault")
  public JAXBElement<MismatchedNetworkPolicies> createMismatchedNetworkPoliciesFault(MismatchedNetworkPolicies paramMismatchedNetworkPolicies) {
    return new JAXBElement(new QName("urn:vim25", "MismatchedNetworkPoliciesFault"), MismatchedNetworkPolicies.class, null, paramMismatchedNetworkPolicies);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostInflateDisk_Task")
  public JAXBElement<HostInflateDiskRequestType> createHostInflateDiskTask(HostInflateDiskRequestType paramHostInflateDiskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HostInflateDisk_Task"), HostInflateDiskRequestType.class, null, paramHostInflateDiskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateObjectScheduledTask")
  public JAXBElement<CreateObjectScheduledTaskRequestType> createCreateObjectScheduledTask(CreateObjectScheduledTaskRequestType paramCreateObjectScheduledTaskRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateObjectScheduledTask"), CreateObjectScheduledTaskRequestType.class, null, paramCreateObjectScheduledTaskRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "NoPermissionOnNasVolumeFault")
  public JAXBElement<NoPermissionOnNasVolume> createNoPermissionOnNasVolumeFault(NoPermissionOnNasVolume paramNoPermissionOnNasVolume) {
    return new JAXBElement(new QName("urn:vim25", "NoPermissionOnNasVolumeFault"), NoPermissionOnNasVolume.class, null, paramNoPermissionOnNasVolume);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DetachScsiLunEx_Task")
  public JAXBElement<DetachScsiLunExRequestType> createDetachScsiLunExTask(DetachScsiLunExRequestType paramDetachScsiLunExRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DetachScsiLunEx_Task"), DetachScsiLunExRequestType.class, null, paramDetachScsiLunExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListKmipServers")
  public JAXBElement<ListKmipServersRequestType> createListKmipServers(ListKmipServersRequestType paramListKmipServersRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ListKmipServers"), ListKmipServersRequestType.class, null, paramListKmipServersRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoveAlarm")
  public JAXBElement<RemoveAlarmRequestType> createRemoveAlarm(RemoveAlarmRequestType paramRemoveAlarmRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RemoveAlarm"), RemoveAlarmRequestType.class, null, paramRemoveAlarmRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVsanObjectUuidsByFilter")
  public JAXBElement<QueryVsanObjectUuidsByFilterRequestType> createQueryVsanObjectUuidsByFilter(QueryVsanObjectUuidsByFilterRequestType paramQueryVsanObjectUuidsByFilterRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryVsanObjectUuidsByFilter"), QueryVsanObjectUuidsByFilterRequestType.class, null, paramQueryVsanObjectUuidsByFilterRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "PowerUpHostFromStandBy_Task")
  public JAXBElement<PowerUpHostFromStandByRequestType> createPowerUpHostFromStandByTask(PowerUpHostFromStandByRequestType paramPowerUpHostFromStandByRequestType) {
    return new JAXBElement(new QName("urn:vim25", "PowerUpHostFromStandBy_Task"), PowerUpHostFromStandByRequestType.class, null, paramPowerUpHostFromStandByRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SelectVnic")
  public JAXBElement<SelectVnicRequestType> createSelectVnic(SelectVnicRequestType paramSelectVnicRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SelectVnic"), SelectVnicRequestType.class, null, paramSelectVnicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotDisconnectHostWithFaultToleranceVmFault")
  public JAXBElement<CannotDisconnectHostWithFaultToleranceVm> createCannotDisconnectHostWithFaultToleranceVmFault(CannotDisconnectHostWithFaultToleranceVm paramCannotDisconnectHostWithFaultToleranceVm) {
    return new JAXBElement(new QName("urn:vim25", "CannotDisconnectHostWithFaultToleranceVmFault"), CannotDisconnectHostWithFaultToleranceVm.class, null, paramCannotDisconnectHostWithFaultToleranceVm);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SSLVerifyFaultFault")
  public JAXBElement<SSLVerifyFault> createSSLVerifyFaultFault(SSLVerifyFault paramSSLVerifyFault) {
    return new JAXBElement(new QName("urn:vim25", "SSLVerifyFaultFault"), SSLVerifyFault.class, null, paramSSLVerifyFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReadOnlyDisksWithLegacyDestinationFault")
  public JAXBElement<ReadOnlyDisksWithLegacyDestination> createReadOnlyDisksWithLegacyDestinationFault(ReadOnlyDisksWithLegacyDestination paramReadOnlyDisksWithLegacyDestination) {
    return new JAXBElement(new QName("urn:vim25", "ReadOnlyDisksWithLegacyDestinationFault"), ReadOnlyDisksWithLegacyDestination.class, null, paramReadOnlyDisksWithLegacyDestination);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "BackupBlobReadFailureFault")
  public JAXBElement<BackupBlobReadFailure> createBackupBlobReadFailureFault(BackupBlobReadFailure paramBackupBlobReadFailure) {
    return new JAXBElement(new QName("urn:vim25", "BackupBlobReadFailureFault"), BackupBlobReadFailure.class, null, paramBackupBlobReadFailure);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ApplyEntitiesConfig_Task")
  public JAXBElement<ApplyEntitiesConfigRequestType> createApplyEntitiesConfigTask(ApplyEntitiesConfigRequestType paramApplyEntitiesConfigRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ApplyEntitiesConfig_Task"), ApplyEntitiesConfigRequestType.class, null, paramApplyEntitiesConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RefreshDVPortState")
  public JAXBElement<RefreshDVPortStateRequestType> createRefreshDVPortState(RefreshDVPortStateRequestType paramRefreshDVPortStateRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RefreshDVPortState"), RefreshDVPortStateRequestType.class, null, paramRefreshDVPortStateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MoveDirectoryInGuest")
  public JAXBElement<MoveDirectoryInGuestRequestType> createMoveDirectoryInGuest(MoveDirectoryInGuestRequestType paramMoveDirectoryInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MoveDirectoryInGuest"), MoveDirectoryInGuestRequestType.class, null, paramMoveDirectoryInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryConfigOptionDescriptor")
  public JAXBElement<QueryConfigOptionDescriptorRequestType> createQueryConfigOptionDescriptor(QueryConfigOptionDescriptorRequestType paramQueryConfigOptionDescriptorRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryConfigOptionDescriptor"), QueryConfigOptionDescriptorRequestType.class, null, paramQueryConfigOptionDescriptorRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GuestRegistryKeyInvalidFault")
  public JAXBElement<GuestRegistryKeyInvalid> createGuestRegistryKeyInvalidFault(GuestRegistryKeyInvalid paramGuestRegistryKeyInvalid) {
    return new JAXBElement(new QName("urn:vim25", "GuestRegistryKeyInvalidFault"), GuestRegistryKeyInvalid.class, null, paramGuestRegistryKeyInvalid);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LinuxVolumeNotCleanFault")
  public JAXBElement<LinuxVolumeNotClean> createLinuxVolumeNotCleanFault(LinuxVolumeNotClean paramLinuxVolumeNotClean) {
    return new JAXBElement(new QName("urn:vim25", "LinuxVolumeNotCleanFault"), LinuxVolumeNotClean.class, null, paramLinuxVolumeNotClean);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LoginBySSPI")
  public JAXBElement<LoginBySSPIRequestType> createLoginBySSPI(LoginBySSPIRequestType paramLoginBySSPIRequestType) {
    return new JAXBElement(new QName("urn:vim25", "LoginBySSPI"), LoginBySSPIRequestType.class, null, paramLoginBySSPIRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MemoryFileFormatNotSupportedByDatastoreFault")
  public JAXBElement<MemoryFileFormatNotSupportedByDatastore> createMemoryFileFormatNotSupportedByDatastoreFault(MemoryFileFormatNotSupportedByDatastore paramMemoryFileFormatNotSupportedByDatastore) {
    return new JAXBElement(new QName("urn:vim25", "MemoryFileFormatNotSupportedByDatastoreFault"), MemoryFileFormatNotSupportedByDatastore.class, null, paramMemoryFileFormatNotSupportedByDatastore);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveVStorageObjectState")
  public JAXBElement<RetrieveVStorageObjectStateRequestType> createRetrieveVStorageObjectState(RetrieveVStorageObjectStateRequestType paramRetrieveVStorageObjectStateRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveVStorageObjectState"), RetrieveVStorageObjectStateRequestType.class, null, paramRetrieveVStorageObjectStateRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VAppConfigFaultFault")
  public JAXBElement<VAppConfigFault> createVAppConfigFaultFault(VAppConfigFault paramVAppConfigFault) {
    return new JAXBElement(new QName("urn:vim25", "VAppConfigFaultFault"), VAppConfigFault.class, null, paramVAppConfigFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "setCustomValue")
  public JAXBElement<SetCustomValueRequestType> createSetCustomValue(SetCustomValueRequestType paramSetCustomValueRequestType) {
    return new JAXBElement(new QName("urn:vim25", "setCustomValue"), SetCustomValueRequestType.class, null, paramSetCustomValueRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateIpRouteTableConfig")
  public JAXBElement<UpdateIpRouteTableConfigRequestType> createUpdateIpRouteTableConfig(UpdateIpRouteTableConfigRequestType paramUpdateIpRouteTableConfigRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateIpRouteTableConfig"), UpdateIpRouteTableConfigRequestType.class, null, paramUpdateIpRouteTableConfigRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfConsumerPowerOnFaultFault")
  public JAXBElement<OvfConsumerPowerOnFault> createOvfConsumerPowerOnFaultFault(OvfConsumerPowerOnFault paramOvfConsumerPowerOnFault) {
    return new JAXBElement(new QName("urn:vim25", "OvfConsumerPowerOnFaultFault"), OvfConsumerPowerOnFault.class, null, paramOvfConsumerPowerOnFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrievePropertiesEx")
  public JAXBElement<RetrievePropertiesExRequestType> createRetrievePropertiesEx(RetrievePropertiesExRequestType paramRetrievePropertiesExRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrievePropertiesEx"), RetrievePropertiesExRequestType.class, null, paramRetrievePropertiesExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindByInventoryPath")
  public JAXBElement<FindByInventoryPathRequestType> createFindByInventoryPath(FindByInventoryPathRequestType paramFindByInventoryPathRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FindByInventoryPath"), FindByInventoryPathRequestType.class, null, paramFindByInventoryPathRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "Destroy_Task")
  public JAXBElement<DestroyRequestType> createDestroyTask(DestroyRequestType paramDestroyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "Destroy_Task"), DestroyRequestType.class, null, paramDestroyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DuplicateVsanNetworkInterfaceFault")
  public JAXBElement<DuplicateVsanNetworkInterface> createDuplicateVsanNetworkInterfaceFault(DuplicateVsanNetworkInterface paramDuplicateVsanNetworkInterface) {
    return new JAXBElement(new QName("urn:vim25", "DuplicateVsanNetworkInterfaceFault"), DuplicateVsanNetworkInterface.class, null, paramDuplicateVsanNetworkInterface);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReadNextTasks")
  public JAXBElement<ReadNextTasksRequestType> createReadNextTasks(ReadNextTasksRequestType paramReadNextTasksRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReadNextTasks"), ReadNextTasksRequestType.class, null, paramReadNextTasksRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateCollectorForEvents")
  public JAXBElement<CreateCollectorForEventsRequestType> createCreateCollectorForEvents(CreateCollectorForEventsRequestType paramCreateCollectorForEventsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateCollectorForEvents"), CreateCollectorForEventsRequestType.class, null, paramCreateCollectorForEventsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAddHostWithFTVmAsStandaloneFault")
  public JAXBElement<CannotAddHostWithFTVmAsStandalone> createCannotAddHostWithFTVmAsStandaloneFault(CannotAddHostWithFTVmAsStandalone paramCannotAddHostWithFTVmAsStandalone) {
    return new JAXBElement(new QName("urn:vim25", "CannotAddHostWithFTVmAsStandaloneFault"), CannotAddHostWithFTVmAsStandalone.class, null, paramCannotAddHostWithFTVmAsStandalone);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VAppNotRunningFault")
  public JAXBElement<VAppNotRunning> createVAppNotRunningFault(VAppNotRunning paramVAppNotRunning) {
    return new JAXBElement(new QName("urn:vim25", "VAppNotRunningFault"), VAppNotRunning.class, null, paramVAppNotRunning);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LicenseSourceUnavailableFault")
  public JAXBElement<LicenseSourceUnavailable> createLicenseSourceUnavailableFault(LicenseSourceUnavailable paramLicenseSourceUnavailable) {
    return new JAXBElement(new QName("urn:vim25", "LicenseSourceUnavailableFault"), LicenseSourceUnavailable.class, null, paramLicenseSourceUnavailable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MakeDirectoryInGuest")
  public JAXBElement<MakeDirectoryInGuestRequestType> createMakeDirectoryInGuest(MakeDirectoryInGuestRequestType paramMakeDirectoryInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MakeDirectoryInGuest"), MakeDirectoryInGuestRequestType.class, null, paramMakeDirectoryInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckClone_Task")
  public JAXBElement<CheckCloneRequestType> createCheckCloneTask(CheckCloneRequestType paramCheckCloneRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CheckClone_Task"), CheckCloneRequestType.class, null, paramCheckCloneRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryIpPools")
  public JAXBElement<QueryIpPoolsRequestType> createQueryIpPools(QueryIpPoolsRequestType paramQueryIpPoolsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryIpPools"), QueryIpPoolsRequestType.class, null, paramQueryIpPoolsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetLicenseEdition")
  public JAXBElement<SetLicenseEditionRequestType> createSetLicenseEdition(SetLicenseEditionRequestType paramSetLicenseEditionRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SetLicenseEdition"), SetLicenseEditionRequestType.class, null, paramSetLicenseEditionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidPrivilegeFault")
  public JAXBElement<InvalidPrivilege> createInvalidPrivilegeFault(InvalidPrivilege paramInvalidPrivilege) {
    return new JAXBElement(new QName("urn:vim25", "InvalidPrivilegeFault"), InvalidPrivilege.class, null, paramInvalidPrivilege);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RestrictedVersionFault")
  public JAXBElement<RestrictedVersion> createRestrictedVersionFault(RestrictedVersion paramRestrictedVersion) {
    return new JAXBElement(new QName("urn:vim25", "RestrictedVersionFault"), RestrictedVersion.class, null, paramRestrictedVersion);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "OvfExportFault")
  public JAXBElement<OvfExport> createOvfExportFault(OvfExport paramOvfExport) {
    return new JAXBElement(new QName("urn:vim25", "OvfExportFault"), OvfExport.class, null, paramOvfExport);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "unregisterVApp_Task")
  public JAXBElement<UnregisterVAppRequestType> createUnregisterVAppTask(UnregisterVAppRequestType paramUnregisterVAppRequestType) {
    return new JAXBElement(new QName("urn:vim25", "unregisterVApp_Task"), UnregisterVAppRequestType.class, null, paramUnregisterVAppRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ClearVStorageObjectControlFlags")
  public JAXBElement<ClearVStorageObjectControlFlagsRequestType> createClearVStorageObjectControlFlags(ClearVStorageObjectControlFlagsRequestType paramClearVStorageObjectControlFlagsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ClearVStorageObjectControlFlags"), ClearVStorageObjectControlFlagsRequestType.class, null, paramClearVStorageObjectControlFlagsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenerateHostConfigTaskSpec_Task")
  public JAXBElement<GenerateHostConfigTaskSpecRequestType> createGenerateHostConfigTaskSpecTask(GenerateHostConfigTaskSpecRequestType paramGenerateHostConfigTaskSpecRequestType) {
    return new JAXBElement(new QName("urn:vim25", "GenerateHostConfigTaskSpec_Task"), GenerateHostConfigTaskSpecRequestType.class, null, paramGenerateHostConfigTaskSpecRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "TooManyDevicesFault")
  public JAXBElement<TooManyDevices> createTooManyDevicesFault(TooManyDevices paramTooManyDevices) {
    return new JAXBElement(new QName("urn:vim25", "TooManyDevicesFault"), TooManyDevices.class, null, paramTooManyDevices);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FileLockedFault")
  public JAXBElement<FileLocked> createFileLockedFault(FileLocked paramFileLocked) {
    return new JAXBElement(new QName("urn:vim25", "FileLockedFault"), FileLocked.class, null, paramFileLocked);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindByDnsName")
  public JAXBElement<FindByDnsNameRequestType> createFindByDnsName(FindByDnsNameRequestType paramFindByDnsNameRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FindByDnsName"), FindByDnsNameRequestType.class, null, paramFindByDnsNameRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SetNFSUser")
  public JAXBElement<SetNFSUserRequestType> createSetNFSUser(SetNFSUserRequestType paramSetNFSUserRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SetNFSUser"), SetNFSUserRequestType.class, null, paramSetNFSUserRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MigrateVM_Task")
  public JAXBElement<MigrateVMRequestType> createMigrateVMTask(MigrateVMRequestType paramMigrateVMRequestType) {
    return new JAXBElement(new QName("urn:vim25", "MigrateVM_Task"), MigrateVMRequestType.class, null, paramMigrateVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DvsOperationBulkFaultFault")
  public JAXBElement<DvsOperationBulkFault> createDvsOperationBulkFaultFault(DvsOperationBulkFault paramDvsOperationBulkFault) {
    return new JAXBElement(new QName("urn:vim25", "DvsOperationBulkFaultFault"), DvsOperationBulkFault.class, null, paramDvsOperationBulkFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SearchDatastore_Task")
  public JAXBElement<SearchDatastoreRequestType> createSearchDatastoreTask(SearchDatastoreRequestType paramSearchDatastoreRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SearchDatastore_Task"), SearchDatastoreRequestType.class, null, paramSearchDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MultipleSnapshotsNotSupportedFault")
  public JAXBElement<MultipleSnapshotsNotSupported> createMultipleSnapshotsNotSupportedFault(MultipleSnapshotsNotSupported paramMultipleSnapshotsNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "MultipleSnapshotsNotSupportedFault"), MultipleSnapshotsNotSupported.class, null, paramMultipleSnapshotsNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SnapshotCloneNotSupportedFault")
  public JAXBElement<SnapshotCloneNotSupported> createSnapshotCloneNotSupportedFault(SnapshotCloneNotSupported paramSnapshotCloneNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "SnapshotCloneNotSupportedFault"), SnapshotCloneNotSupported.class, null, paramSnapshotCloneNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReplicationIncompatibleWithFTFault")
  public JAXBElement<ReplicationIncompatibleWithFT> createReplicationIncompatibleWithFTFault(ReplicationIncompatibleWithFT paramReplicationIncompatibleWithFT) {
    return new JAXBElement(new QName("urn:vim25", "ReplicationIncompatibleWithFTFault"), ReplicationIncompatibleWithFT.class, null, paramReplicationIncompatibleWithFT);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RDMConversionNotSupportedFault")
  public JAXBElement<RDMConversionNotSupported> createRDMConversionNotSupportedFault(RDMConversionNotSupported paramRDMConversionNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "RDMConversionNotSupportedFault"), RDMConversionNotSupported.class, null, paramRDMConversionNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateServiceConsoleVirtualNic")
  public JAXBElement<UpdateServiceConsoleVirtualNicRequestType> createUpdateServiceConsoleVirtualNic(UpdateServiceConsoleVirtualNicRequestType paramUpdateServiceConsoleVirtualNicRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateServiceConsoleVirtualNic"), UpdateServiceConsoleVirtualNicRequestType.class, null, paramUpdateServiceConsoleVirtualNicRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RemoteDeviceNotSupportedFault")
  public JAXBElement<RemoteDeviceNotSupported> createRemoteDeviceNotSupportedFault(RemoteDeviceNotSupported paramRemoteDeviceNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "RemoteDeviceNotSupportedFault"), RemoteDeviceNotSupported.class, null, paramRemoteDeviceNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ReconfigureServiceConsoleReservation")
  public JAXBElement<ReconfigureServiceConsoleReservationRequestType> createReconfigureServiceConsoleReservation(ReconfigureServiceConsoleReservationRequestType paramReconfigureServiceConsoleReservationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ReconfigureServiceConsoleReservation"), ReconfigureServiceConsoleReservationRequestType.class, null, paramReconfigureServiceConsoleReservationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "GenerateClientCsr")
  public JAXBElement<GenerateClientCsrRequestType> createGenerateClientCsr(GenerateClientCsrRequestType paramGenerateClientCsrRequestType) {
    return new JAXBElement(new QName("urn:vim25", "GenerateClientCsr"), GenerateClientCsrRequestType.class, null, paramGenerateClientCsrRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FindAllByIp")
  public JAXBElement<FindAllByIpRequestType> createFindAllByIp(FindAllByIpRequestType paramFindAllByIpRequestType) {
    return new JAXBElement(new QName("urn:vim25", "FindAllByIp"), FindAllByIpRequestType.class, null, paramFindAllByIpRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HttpNfcLeaseGetManifest")
  public JAXBElement<HttpNfcLeaseGetManifestRequestType> createHttpNfcLeaseGetManifest(HttpNfcLeaseGetManifestRequestType paramHttpNfcLeaseGetManifestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "HttpNfcLeaseGetManifest"), HttpNfcLeaseGetManifestRequestType.class, null, paramHttpNfcLeaseGetManifestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListCACertificates")
  public JAXBElement<ListCACertificatesRequestType> createListCACertificates(ListCACertificatesRequestType paramListCACertificatesRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ListCACertificates"), ListCACertificatesRequestType.class, null, paramListCACertificatesRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "SelectActivePartition")
  public JAXBElement<SelectActivePartitionRequestType> createSelectActivePartition(SelectActivePartitionRequestType paramSelectActivePartitionRequestType) {
    return new JAXBElement(new QName("urn:vim25", "SelectActivePartition"), SelectActivePartitionRequestType.class, null, paramSelectActivePartitionRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ApplyRecommendation")
  public JAXBElement<ApplyRecommendationRequestType> createApplyRecommendation(ApplyRecommendationRequestType paramApplyRecommendationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ApplyRecommendation"), ApplyRecommendationRequestType.class, null, paramApplyRecommendationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InvalidNameFault")
  public JAXBElement<InvalidName> createInvalidNameFault(InvalidName paramInvalidName) {
    return new JAXBElement(new QName("urn:vim25", "InvalidNameFault"), InvalidName.class, null, paramInvalidName);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AddHost_Task")
  public JAXBElement<AddHostRequestType> createAddHostTask(AddHostRequestType paramAddHostRequestType) {
    return new JAXBElement(new QName("urn:vim25", "AddHost_Task"), AddHostRequestType.class, null, paramAddHostRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateModuleOptionString")
  public JAXBElement<UpdateModuleOptionStringRequestType> createUpdateModuleOptionString(UpdateModuleOptionStringRequestType paramUpdateModuleOptionStringRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateModuleOptionString"), UpdateModuleOptionStringRequestType.class, null, paramUpdateModuleOptionStringRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EncryptionKeyRequiredFault")
  public JAXBElement<EncryptionKeyRequired> createEncryptionKeyRequiredFault(EncryptionKeyRequired paramEncryptionKeyRequired) {
    return new JAXBElement(new QName("urn:vim25", "EncryptionKeyRequiredFault"), EncryptionKeyRequired.class, null, paramEncryptionKeyRequired);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateClusterEx")
  public JAXBElement<CreateClusterExRequestType> createCreateClusterEx(CreateClusterExRequestType paramCreateClusterExRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateClusterEx"), CreateClusterExRequestType.class, null, paramCreateClusterExRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "FileNotFoundFault")
  public JAXBElement<FileNotFound> createFileNotFoundFault(FileNotFound paramFileNotFound) {
    return new JAXBElement(new QName("urn:vim25", "FileNotFoundFault"), FileNotFound.class, null, paramFileNotFound);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "QueryVmfsDatastoreExtendOptions")
  public JAXBElement<QueryVmfsDatastoreExtendOptionsRequestType> createQueryVmfsDatastoreExtendOptions(QueryVmfsDatastoreExtendOptionsRequestType paramQueryVmfsDatastoreExtendOptionsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "QueryVmfsDatastoreExtendOptions"), QueryVmfsDatastoreExtendOptionsRequestType.class, null, paramQueryVmfsDatastoreExtendOptionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientNetworkCapacityFault")
  public JAXBElement<InsufficientNetworkCapacity> createInsufficientNetworkCapacityFault(InsufficientNetworkCapacity paramInsufficientNetworkCapacity) {
    return new JAXBElement(new QName("urn:vim25", "InsufficientNetworkCapacityFault"), InsufficientNetworkCapacity.class, null, paramInsufficientNetworkCapacity);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "UpdateVStorageInfrastructureObjectPolicy_Task")
  public JAXBElement<UpdateVStorageInfrastructureObjectPolicyRequestType> createUpdateVStorageInfrastructureObjectPolicyTask(UpdateVStorageInfrastructureObjectPolicyRequestType paramUpdateVStorageInfrastructureObjectPolicyRequestType) {
    return new JAXBElement(new QName("urn:vim25", "UpdateVStorageInfrastructureObjectPolicy_Task"), UpdateVStorageInfrastructureObjectPolicyRequestType.class, null, paramUpdateVStorageInfrastructureObjectPolicyRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageDrsHmsUnreachableFault")
  public JAXBElement<StorageDrsHmsUnreachable> createStorageDrsHmsUnreachableFault(StorageDrsHmsUnreachable paramStorageDrsHmsUnreachable) {
    return new JAXBElement(new QName("urn:vim25", "StorageDrsHmsUnreachableFault"), StorageDrsHmsUnreachable.class, null, paramStorageDrsHmsUnreachable);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VMotionLinkDownFault")
  public JAXBElement<VMotionLinkDown> createVMotionLinkDownFault(VMotionLinkDown paramVMotionLinkDown) {
    return new JAXBElement(new QName("urn:vim25", "VMotionLinkDownFault"), VMotionLinkDown.class, null, paramVMotionLinkDown);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "HostNotConnectedFault")
  public JAXBElement<HostNotConnected> createHostNotConnectedFault(HostNotConnected paramHostNotConnected) {
    return new JAXBElement(new QName("urn:vim25", "HostNotConnectedFault"), HostNotConnected.class, null, paramHostNotConnected);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "StorageVmotionIncompatibleFault")
  public JAXBElement<StorageVmotionIncompatible> createStorageVmotionIncompatibleFault(StorageVmotionIncompatible paramStorageVmotionIncompatible) {
    return new JAXBElement(new QName("urn:vim25", "StorageVmotionIncompatibleFault"), StorageVmotionIncompatible.class, null, paramStorageVmotionIncompatible);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "LicenseAssignmentFailedFault")
  public JAXBElement<LicenseAssignmentFailed> createLicenseAssignmentFailedFault(LicenseAssignmentFailed paramLicenseAssignmentFailed) {
    return new JAXBElement(new QName("urn:vim25", "LicenseAssignmentFailedFault"), LicenseAssignmentFailed.class, null, paramLicenseAssignmentFailed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CloneVM_Task")
  public JAXBElement<CloneVMRequestType> createCloneVMTask(CloneVMRequestType paramCloneVMRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CloneVM_Task"), CloneVMRequestType.class, null, paramCloneVMRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VramLimitLicenseFault")
  public JAXBElement<VramLimitLicense> createVramLimitLicenseFault(VramLimitLicense paramVramLimitLicense) {
    return new JAXBElement(new QName("urn:vim25", "VramLimitLicenseFault"), VramLimitLicense.class, null, paramVramLimitLicense);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "VmfsMountFaultFault")
  public JAXBElement<VmfsMountFault> createVmfsMountFaultFault(VmfsMountFault paramVmfsMountFault) {
    return new JAXBElement(new QName("urn:vim25", "VmfsMountFaultFault"), VmfsMountFault.class, null, paramVmfsMountFault);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateFolder")
  public JAXBElement<CreateFolderRequestType> createCreateFolder(CreateFolderRequestType paramCreateFolderRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateFolder"), CreateFolderRequestType.class, null, paramCreateFolderRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ResetGuestInformation")
  public JAXBElement<ResetGuestInformationRequestType> createResetGuestInformation(ResetGuestInformationRequestType paramResetGuestInformationRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ResetGuestInformation"), ResetGuestInformationRequestType.class, null, paramResetGuestInformationRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CheckConfigureEvcMode_Task")
  public JAXBElement<CheckConfigureEvcModeRequestType> createCheckConfigureEvcModeTask(CheckConfigureEvcModeRequestType paramCheckConfigureEvcModeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CheckConfigureEvcMode_Task"), CheckConfigureEvcModeRequestType.class, null, paramCheckConfigureEvcModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotMoveVsanEnabledHostFault")
  public JAXBElement<CannotMoveVsanEnabledHost> createCannotMoveVsanEnabledHostFault(CannotMoveVsanEnabledHost paramCannotMoveVsanEnabledHost) {
    return new JAXBElement(new QName("urn:vim25", "CannotMoveVsanEnabledHostFault"), CannotMoveVsanEnabledHost.class, null, paramCannotMoveVsanEnabledHost);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "EnterMaintenanceMode_Task")
  public JAXBElement<EnterMaintenanceModeRequestType> createEnterMaintenanceModeTask(EnterMaintenanceModeRequestType paramEnterMaintenanceModeRequestType) {
    return new JAXBElement(new QName("urn:vim25", "EnterMaintenanceMode_Task"), EnterMaintenanceModeRequestType.class, null, paramEnterMaintenanceModeRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CreateListViewFromView")
  public JAXBElement<CreateListViewFromViewRequestType> createCreateListViewFromView(CreateListViewFromViewRequestType paramCreateListViewFromViewRequestType) {
    return new JAXBElement(new QName("urn:vim25", "CreateListViewFromView"), CreateListViewFromViewRequestType.class, null, paramCreateListViewFromViewRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CpuHotPlugNotSupportedFault")
  public JAXBElement<CpuHotPlugNotSupported> createCpuHotPlugNotSupportedFault(CpuHotPlugNotSupported paramCpuHotPlugNotSupported) {
    return new JAXBElement(new QName("urn:vim25", "CpuHotPlugNotSupportedFault"), CpuHotPlugNotSupported.class, null, paramCpuHotPlugNotSupported);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "RetrieveRolePermissions")
  public JAXBElement<RetrieveRolePermissionsRequestType> createRetrieveRolePermissions(RetrieveRolePermissionsRequestType paramRetrieveRolePermissionsRequestType) {
    return new JAXBElement(new QName("urn:vim25", "RetrieveRolePermissions"), RetrieveRolePermissionsRequestType.class, null, paramRetrieveRolePermissionsRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "CannotAddHostWithFTVmToDifferentClusterFault")
  public JAXBElement<CannotAddHostWithFTVmToDifferentCluster> createCannotAddHostWithFTVmToDifferentClusterFault(CannotAddHostWithFTVmToDifferentCluster paramCannotAddHostWithFTVmToDifferentCluster) {
    return new JAXBElement(new QName("urn:vim25", "CannotAddHostWithFTVmToDifferentClusterFault"), CannotAddHostWithFTVmToDifferentCluster.class, null, paramCannotAddHostWithFTVmToDifferentCluster);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "MemorySizeNotRecommendedFault")
  public JAXBElement<MemorySizeNotRecommended> createMemorySizeNotRecommendedFault(MemorySizeNotRecommended paramMemorySizeNotRecommended) {
    return new JAXBElement(new QName("urn:vim25", "MemorySizeNotRecommendedFault"), MemorySizeNotRecommended.class, null, paramMemorySizeNotRecommended);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ExtendVmfsDatastore")
  public JAXBElement<ExtendVmfsDatastoreRequestType> createExtendVmfsDatastore(ExtendVmfsDatastoreRequestType paramExtendVmfsDatastoreRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ExtendVmfsDatastore"), ExtendVmfsDatastoreRequestType.class, null, paramExtendVmfsDatastoreRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ModifyListView")
  public JAXBElement<ModifyListViewRequestType> createModifyListView(ModifyListViewRequestType paramModifyListViewRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ModifyListView"), ModifyListViewRequestType.class, null, paramModifyListViewRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "DeleteRegistryKeyInGuest")
  public JAXBElement<DeleteRegistryKeyInGuestRequestType> createDeleteRegistryKeyInGuest(DeleteRegistryKeyInGuestRequestType paramDeleteRegistryKeyInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "DeleteRegistryKeyInGuest"), DeleteRegistryKeyInGuestRequestType.class, null, paramDeleteRegistryKeyInGuestRequestType);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "InsufficientAgentVmsDeployedFault")
  public JAXBElement<InsufficientAgentVmsDeployed> createInsufficientAgentVmsDeployedFault(InsufficientAgentVmsDeployed paramInsufficientAgentVmsDeployed) {
    return new JAXBElement(new QName("urn:vim25", "InsufficientAgentVmsDeployedFault"), InsufficientAgentVmsDeployed.class, null, paramInsufficientAgentVmsDeployed);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "AlreadyExistsFault")
  public JAXBElement<AlreadyExists> createAlreadyExistsFault(AlreadyExists paramAlreadyExists) {
    return new JAXBElement(new QName("urn:vim25", "AlreadyExistsFault"), AlreadyExists.class, null, paramAlreadyExists);
  }
  
  @XmlElementDecl(namespace = "urn:vim25", name = "ListProcessesInGuest")
  public JAXBElement<ListProcessesInGuestRequestType> createListProcessesInGuest(ListProcessesInGuestRequestType paramListProcessesInGuestRequestType) {
    return new JAXBElement(new QName("urn:vim25", "ListProcessesInGuest"), ListProcessesInGuestRequestType.class, null, paramListProcessesInGuestRequestType);
  }
}
